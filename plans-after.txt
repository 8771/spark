[info] Running benchmark: TPCDS Snappy
[info]   Running case: q1
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#157 ASC NULLS FIRST], output=[c_customer_id#157])
[info] +- *(12) Project [c_customer_id#157]
[info]    +- *(12) BroadcastHashJoin [ctr_customer_sk#1844], [c_customer_sk#156], Inner, BuildRight
[info]       :- *(12) Project [ctr_customer_sk#1844]
[info]       :  +- *(12) BroadcastHashJoin [ctr_store_sk#1845], [s_store_sk#670], Inner, BuildRight
[info]       :     :- *(12) Project [ctr_customer_sk#1844, ctr_store_sk#1845]
[info]       :     :  +- *(12) SortMergeJoin [ctr_store_sk#1845], [ctr_store_sk#1845#1852], Inner, (cast(ctr_total_return#1846 as decimal(24,7)) > (CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#1850)
[info]       :     :     :- *(4) Sort [ctr_store_sk#1845 ASC NULLS FIRST], false, 0
[info]       :     :     :  +- Exchange hashpartitioning(ctr_store_sk#1845, 4), true, [id=#770]
[info]       :     :     :     +- *(3) Filter isnotnull(ctr_total_return#1846)
[info]       :     :     :        +- *(3) HashAggregate(keys=[sr_customer_sk#793, sr_store_sk#797], functions=[sum(UnscaledValue(sr_return_amt#801))])
[info]       :     :     :           +- Exchange hashpartitioning(sr_customer_sk#793, sr_store_sk#797, 4), true, [id=#765]
[info]       :     :     :              +- *(2) HashAggregate(keys=[sr_customer_sk#793, sr_store_sk#797], functions=[partial_sum(UnscaledValue(sr_return_amt#801))])
[info]       :     :     :                 +- *(2) Project [sr_customer_sk#793, sr_store_sk#797, sr_return_amt#801]
[info]       :     :     :                    +- *(2) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#331], Inner, BuildRight
[info]       :     :     :                       :- *(2) Project [sr_customer_sk#793, sr_store_sk#797, sr_return_amt#801, sr_returned_date_sk#810]
[info]       :     :     :                       :  +- *(2) Filter ((isnotnull(sr_returned_date_sk#810) AND isnotnull(sr_store_sk#797)) AND isnotnull(sr_customer_sk#793))
[info]       :     :     :                       :     +- *(2) ColumnarToRow
[info]       :     :     :                       :        +- BatchScan[sr_customer_sk#793, sr_store_sk#797, sr_return_amt#801, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_customer_sk:int,sr_store_sk:int,sr_return_amt:decimal(7,2)>
[info]       :     :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#759]
[info]       :     :     :                          +- *(1) Project [d_date_sk#331]
[info]       :     :     :                             +- *(1) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]       :     :     :                                +- *(1) ColumnarToRow
[info]       :     :     :                                   +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :     +- *(9) Sort [ctr_store_sk#1845#1852 ASC NULLS FIRST], false, 0
[info]       :     :        +- Exchange hashpartitioning(ctr_store_sk#1845#1852, 4), true, [id=#891]
[info]       :     :           +- *(8) Filter isnotnull((CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#1850)
[info]       :     :              +- *(8) HashAggregate(keys=[ctr_store_sk#1845], functions=[avg(ctr_total_return#1846)])
[info]       :     :                 +- Exchange hashpartitioning(ctr_store_sk#1845, 4), true, [id=#886]
[info]       :     :                    +- *(7) HashAggregate(keys=[ctr_store_sk#1845], functions=[partial_avg(ctr_total_return#1846)])
[info]       :     :                       +- *(7) HashAggregate(keys=[sr_customer_sk#793, sr_store_sk#797], functions=[sum(UnscaledValue(sr_return_amt#801))])
[info]       :     :                          +- Exchange hashpartitioning(sr_customer_sk#793, sr_store_sk#797, 4), true, [id=#849]
[info]       :     :                             +- *(6) HashAggregate(keys=[sr_customer_sk#793, sr_store_sk#797], functions=[partial_sum(UnscaledValue(sr_return_amt#801))])
[info]       :     :                                +- *(6) Project [sr_customer_sk#793, sr_store_sk#797, sr_return_amt#801]
[info]       :     :                                   +- *(6) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#331], Inner, BuildRight
[info]       :     :                                      :- *(6) Project [sr_customer_sk#793, sr_store_sk#797, sr_return_amt#801, sr_returned_date_sk#810]
[info]       :     :                                      :  +- *(6) Filter (isnotnull(sr_returned_date_sk#810) AND isnotnull(sr_store_sk#797))
[info]       :     :                                      :     +- *(6) ColumnarToRow
[info]       :     :                                      :        +- BatchScan[sr_customer_sk#793, sr_store_sk#797, sr_return_amt#801, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_customer_sk:int,sr_store_sk:int,sr_return_amt:decimal(7,2)>
[info]       :     :                                      +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#759]
[info]       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#812]
[info]       :        +- *(10) Project [s_store_sk#670]
[info]       :           +- *(10) Filter ((isnotnull(s_state#694) AND (s_state#694 = TN)) AND isnotnull(s_store_sk#670))
[info]       :              +- *(10) ColumnarToRow
[info]       :                 +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#821]
[info]          +- *(11) Project [c_customer_sk#156, c_customer_id#157]
[info]             +- *(11) Filter isnotnull(c_customer_sk#156)
[info]                +- *(11) ColumnarToRow
[info]                   +- BatchScan[c_customer_sk#156, c_customer_id#157] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 570 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q1                                                  571            571           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q2
[info] == Physical Plan ==
[info] *(16) Sort [d_week_seq1#1993 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(d_week_seq1#1993 ASC NULLS FIRST, 4), true, [id=#1312]
[info]    +- *(15) Project [d_week_seq1#1993, round(CheckOverflow((promote_precision(sun_sales1#1994) / promote_precision(sun_sales2#2002)), DecimalType(37,20), true), 2) AS round((sun_sales1 / sun_sales2), 2)#2090, round(CheckOverflow((promote_precision(mon_sales1#1995) / promote_precision(mon_sales2#2003)), DecimalType(37,20), true), 2) AS round((mon_sales1 / mon_sales2), 2)#2091, round(CheckOverflow((promote_precision(tue_sales1#1996) / promote_precision(tue_sales2#2004)), DecimalType(37,20), true), 2) AS round((tue_sales1 / tue_sales2), 2)#2092, round(CheckOverflow((promote_precision(wed_sales1#1997) / promote_precision(wed_sales2#2005)), DecimalType(37,20), true), 2) AS round((wed_sales1 / wed_sales2), 2)#2093, round(CheckOverflow((promote_precision(thu_sales1#1998) / promote_precision(thu_sales2#2006)), DecimalType(37,20), true), 2) AS round((thu_sales1 / thu_sales2), 2)#2094, round(CheckOverflow((promote_precision(fri_sales1#1999) / promote_precision(fri_sales2#2007)), DecimalType(37,20), true), 2) AS round((fri_sales1 / fri_sales2), 2)#2095, round(CheckOverflow((promote_precision(sat_sales1#2000) / promote_precision(sat_sales2#2008)), DecimalType(37,20), true), 2) AS round((sat_sales1 / sat_sales2), 2)#2096]
[info]       +- *(15) SortMergeJoin [d_week_seq1#1993], [(d_week_seq2#2001 - 53)], Inner
[info]          :- *(7) Sort [d_week_seq1#1993 ASC NULLS FIRST], false, 0
[info]          :  +- Exchange hashpartitioning(d_week_seq1#1993, 4), true, [id=#1154]
[info]          :     +- *(6) Project [d_week_seq#335 AS d_week_seq1#1993, sun_sales#2013 AS sun_sales1#1994, mon_sales#2014 AS mon_sales1#1995, tue_sales#2015 AS tue_sales1#1996, wed_sales#2016 AS wed_sales1#1997, thu_sales#2017 AS thu_sales1#1998, fri_sales#2018 AS fri_sales1#1999, sat_sales#2019 AS sat_sales1#2000]
[info]          :        +- *(6) BroadcastHashJoin [d_week_seq#335], [d_week_seq#2038], Inner, BuildRight
[info]          :           :- *(6) HashAggregate(keys=[d_week_seq#335], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN sales_price#2010 ELSE null END))])
[info]          :           :  +- Exchange hashpartitioning(d_week_seq#335, 4), true, [id=#1141]
[info]          :           :     +- *(4) HashAggregate(keys=[d_week_seq#335], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN sales_price#2010 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN sales_price#2010 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN sales_price#2010 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN sales_price#2010 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN sales_price#2010 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN sales_price#2010 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN sales_price#2010 ELSE null END))])
[info]          :           :        +- *(4) Project [sales_price#2010, d_week_seq#335, d_day_name#345]
[info]          :           :           +- *(4) BroadcastHashJoin [sold_date_sk#2009], [d_date_sk#331], Inner, BuildRight
[info]          :           :              :- Union
[info]          :           :              :  :- *(1) Project [ws_sold_date_sk#1054 AS sold_date_sk#2009, ws_ext_sales_price#1043 AS sales_price#2010]
[info]          :           :              :  :  +- *(1) Filter isnotnull(ws_sold_date_sk#1054)
[info]          :           :              :  :     +- *(1) ColumnarToRow
[info]          :           :              :  :        +- BatchScan[ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_ext_sales_price:decimal(7,2)>
[info]          :           :              :  +- *(2) Project [cs_sold_date_sk#911 AS sold_date_sk#2011, cs_ext_sales_price#900 AS sales_price#2012]
[info]          :           :              :     +- *(2) Filter isnotnull(cs_sold_date_sk#911)
[info]          :           :              :        +- *(2) ColumnarToRow
[info]          :           :              :           +- BatchScan[cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ext_sales_price:decimal(7,2)>
[info]          :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#1135]
[info]          :           :                 +- *(3) Project [d_date_sk#331, d_week_seq#335, d_day_name#345]
[info]          :           :                    +- *(3) Filter (isnotnull(d_date_sk#331) AND isnotnull(d_week_seq#335))
[info]          :           :                       +- *(3) ColumnarToRow
[info]          :           :                          +- BatchScan[d_date_sk#331, d_week_seq#335, d_day_name#345] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
[info]          :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#1149]
[info]          :              +- *(5) Project [d_week_seq#2038]
[info]          :                 +- *(5) Filter ((isnotnull(d_year#2040) AND (d_year#2040 = 2001)) AND isnotnull(d_week_seq#2038))
[info]          :                    +- *(5) ColumnarToRow
[info]          :                       +- BatchScan[d_week_seq#2038, d_year#2040] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_week_seq:int,d_year:int>
[info]          +- *(14) Sort [(d_week_seq2#2001 - 53) ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning((d_week_seq2#2001 - 53), 4), true, [id=#1304]
[info]                +- *(13) Project [d_week_seq#335 AS d_week_seq2#2001, sun_sales#2013 AS sun_sales2#2002, mon_sales#2014 AS mon_sales2#2003, tue_sales#2015 AS tue_sales2#2004, wed_sales#2016 AS wed_sales2#2005, thu_sales#2017 AS thu_sales2#2006, fri_sales#2018 AS fri_sales2#2007, sat_sales#2019 AS sat_sales2#2008]
[info]                   +- *(13) BroadcastHashJoin [d_week_seq#335], [d_week_seq#2066], Inner, BuildRight
[info]                      :- *(13) HashAggregate(keys=[d_week_seq#335], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN sales_price#2010 ELSE null END))])
[info]                      :  +- ReusedExchange [d_week_seq#335, sum#2144L, sum#2145L, sum#2146L, sum#2147L, sum#2148L, sum#2149L, sum#2150L], Exchange hashpartitioning(d_week_seq#335, 4), true, [id=#1141]
[info]                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#1190]
[info]                         +- *(12) Project [d_week_seq#2066]
[info]                            +- *(12) Filter ((isnotnull(d_year#2068) AND (d_year#2068 = 2002)) AND isnotnull(d_week_seq#2066))
[info]                               +- *(12) ColumnarToRow
[info]                                  +- BatchScan[d_week_seq#2066, d_year#2068] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_week_seq:int,d_year:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 457 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q2                                                  457            457           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q3
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[d_year#337 ASC NULLS FIRST,sum_agg#2182 DESC NULLS LAST,brand_id#2180 ASC NULLS FIRST], output=[d_year#337,brand_id#2180,brand#2181,sum_agg#2182])
[info] +- *(4) HashAggregate(keys=[d_year#337, i_brand#504, i_brand_id#503], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]    +- Exchange hashpartitioning(d_year#337, i_brand#504, i_brand_id#503, 4), true, [id=#1420]
[info]       +- *(3) HashAggregate(keys=[d_year#337, i_brand#504, i_brand_id#503], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          +- *(3) Project [d_year#337, ss_ext_sales_price#1178, i_brand_id#503, i_brand#504]
[info]             +- *(3) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :- *(3) Project [d_year#337, ss_item_sk#1165, ss_ext_sales_price#1178]
[info]                :  +- *(3) BroadcastHashJoin [d_date_sk#331], [ss_sold_date_sk#1186], Inner, BuildLeft
[info]                :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#1401]
[info]                :     :  +- *(1) Project [d_date_sk#331, d_year#337]
[info]                :     :     +- *(1) Filter ((isnotnull(d_moy#339) AND (d_moy#339 = 11)) AND isnotnull(d_date_sk#331))
[info]                :     :        +- *(1) ColumnarToRow
[info]                :     :           +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     +- *(3) Project [ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                :        +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165))
[info]                :           +- *(3) ColumnarToRow
[info]                :              +- BatchScan[ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#1414]
[info]                   +- *(2) Project [i_item_sk#496, i_brand_id#503, i_brand#504]
[info]                      +- *(2) Filter ((isnotnull(i_manufact_id#509) AND (i_manufact_id#509 = 128)) AND isnotnull(i_item_sk#496))
[info]                         +- *(2) ColumnarToRow
[info]                            +- BatchScan[i_item_sk#496, i_brand_id#503, i_brand#504, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manufact_id:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 170 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q3                                                  170            170           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q4
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[customer_id#2357 ASC NULLS FIRST,customer_first_name#2358 ASC NULLS FIRST,customer_last_name#2359 ASC NULLS FIRST,customer_preferred_cust_flag#2360 ASC NULLS FIRST,customer_birth_country#2361 ASC NULLS FIRST,customer_login#2362 ASC NULLS FIRST,customer_email_address#2363 ASC NULLS FIRST], output=[customer_id#2357,customer_first_name#2358,customer_last_name#2359,customer_preferred_cust_flag#2360,customer_birth_country#2361,customer_login#2362,customer_email_address#2363])
[info] +- *(35) Project [customer_id#2357, customer_first_name#2358, customer_last_name#2359, customer_preferred_cust_flag#2360, customer_birth_country#2361, customer_login#2362, customer_email_address#2363]
[info]    +- *(35) SortMergeJoin [customer_id#2309], [customer_id#2397], Inner, (CASE WHEN (year_total#2375 > 0.000000) THEN CheckOverflow((promote_precision(year_total#2385) / promote_precision(year_total#2375)), DecimalType(38,14), true) ELSE null END > CASE WHEN (year_total#2395 > 0.000000) THEN CheckOverflow((promote_precision(year_total#2405) / promote_precision(year_total#2395)), DecimalType(38,14), true) ELSE null END)
[info]       :- *(29) Project [customer_id#2309, customer_id#2357, customer_first_name#2358, customer_last_name#2359, customer_preferred_cust_flag#2360, customer_birth_country#2361, customer_login#2362, customer_email_address#2363, year_total#2375, year_total#2385, year_total#2395]
[info]       :  +- *(29) SortMergeJoin [customer_id#2309], [customer_id#2387], Inner
[info]       :     :- *(23) Project [customer_id#2309, customer_id#2357, customer_first_name#2358, customer_last_name#2359, customer_preferred_cust_flag#2360, customer_birth_country#2361, customer_login#2362, customer_email_address#2363, year_total#2375, year_total#2385]
[info]       :     :  +- *(23) SortMergeJoin [customer_id#2309], [customer_id#2377], Inner, (CASE WHEN (year_total#2375 > 0.000000) THEN CheckOverflow((promote_precision(year_total#2385) / promote_precision(year_total#2375)), DecimalType(38,14), true) ELSE null END > CASE WHEN (year_total#2317 > 0.000000) THEN CheckOverflow((promote_precision(year_total#2365) / promote_precision(year_total#2317)), DecimalType(38,14), true) ELSE null END)
[info]       :     :     :- *(17) Project [customer_id#2309, year_total#2317, customer_id#2357, customer_first_name#2358, customer_last_name#2359, customer_preferred_cust_flag#2360, customer_birth_country#2361, customer_login#2362, customer_email_address#2363, year_total#2365, year_total#2375]
[info]       :     :     :  +- *(17) SortMergeJoin [customer_id#2309], [customer_id#2367], Inner
[info]       :     :     :     :- *(11) SortMergeJoin [customer_id#2309], [customer_id#2357], Inner
[info]       :     :     :     :  :- *(5) Sort [customer_id#2309 ASC NULLS FIRST], false, 0
[info]       :     :     :     :  :  +- Exchange hashpartitioning(customer_id#2309, 4), true, [id=#2105]
[info]       :     :     :     :  :     +- Union
[info]       :     :     :     :  :        :- *(4) Filter (isnotnull(year_total#2317) AND (year_total#2317 > 0.000000))
[info]       :     :     :     :  :        :  +- *(4) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#1179 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#1178 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :     :     :  :        :     +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#2099]
[info]       :     :     :     :  :        :        +- *(3) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#1179 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#1178 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :     :     :  :        :           +- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, d_year#337]
[info]       :     :     :     :  :        :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :     :     :  :        :                 :- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :     :     :  :        :                 :  +- *(3) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :     :     :  :        :                 :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2080]
[info]       :     :     :     :  :        :                 :     :  +- *(1) Project [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172]
[info]       :     :     :     :  :        :                 :     :     +- *(1) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_customer_id#157))
[info]       :     :     :     :  :        :                 :     :        +- *(1) ColumnarToRow
[info]       :     :     :     :  :        :                 :     :           +- BatchScan[c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
[info]       :     :     :     :  :        :                 :     +- *(3) Project [ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :     :     :  :        :                 :        +- *(3) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :     :     :  :        :                 :           +- *(3) ColumnarToRow
[info]       :     :     :     :  :        :                 :              +- BatchScan[ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext...
[info]       :     :     :     :  :        :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2093]
[info]       :     :     :     :  :        :                    +- *(2) Project [d_date_sk#331, d_year#337]
[info]       :     :     :     :  :        :                       +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]       :     :     :     :  :        :                          +- *(2) ColumnarToRow
[info]       :     :     :     :  :        :                             +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :     :     :  :        :- LocalTableScan <empty>, [customer_id#2319, year_total#2327]
[info]       :     :     :     :  :        +- LocalTableScan <empty>, [customer_id#2329, year_total#2337]
[info]       :     :     :     :  +- *(10) Sort [customer_id#2357 ASC NULLS FIRST], false, 0
[info]       :     :     :     :     +- Exchange hashpartitioning(customer_id#2357, 4), true, [id=#2388]
[info]       :     :     :     :        +- Union
[info]       :     :     :     :           :- *(9) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#1179 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#1178 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :     :     :           :  +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#2341]
[info]       :     :     :     :           :     +- *(8) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#1179 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#1178 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :     :     :           :        +- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, d_year#337]
[info]       :     :     :     :           :           +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :     :     :           :              :- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :     :     :           :              :  +- *(8) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :     :     :           :              :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2080]
[info]       :     :     :     :           :              :     +- *(8) Project [ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :     :     :           :              :        +- *(8) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :     :     :           :              :           +- *(8) ColumnarToRow
[info]       :     :     :     :           :              :              +- BatchScan[ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext...
[info]       :     :     :     :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2128]
[info]       :     :     :     :           :                 +- *(7) Project [d_date_sk#331, d_year#337]
[info]       :     :     :     :           :                    +- *(7) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND isnotnull(d_date_sk#331))
[info]       :     :     :     :           :                       +- *(7) ColumnarToRow
[info]       :     :     :     :           :                          +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :     :     :           :- LocalTableScan <empty>, [customer_id#2319, customer_first_name#2320, customer_last_name#2321, customer_preferred_cust_flag#2322, customer_birth_country#2323, customer_login#2324, customer_email_address#2325, year_total#2327]
[info]       :     :     :     :           +- LocalTableScan <empty>, [customer_id#2329, customer_first_name#2330, customer_last_name#2331, customer_preferred_cust_flag#2332, customer_birth_country#2333, customer_login#2334, customer_email_address#2335, year_total#2337]
[info]       :     :     :     +- *(16) Sort [customer_id#2367 ASC NULLS FIRST], false, 0
[info]       :     :     :        +- Exchange hashpartitioning(customer_id#2367, 4), true, [id=#2449]
[info]       :     :     :           +- Union
[info]       :     :     :              :- LocalTableScan <empty>, [customer_id#2367, year_total#2375]
[info]       :     :     :              :- *(15) Filter (isnotnull(year_total#2327) AND (year_total#2327 > 0.000000))
[info]       :     :     :              :  +- *(15) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#902 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#901 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#899 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#900 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :     :              :     +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#2422]
[info]       :     :     :              :        +- *(14) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#902 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#901 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#899 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#900 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :     :              :           +- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, d_year#337]
[info]       :     :     :              :              +- *(14) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :     :     :              :                 :- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, cs_sold_date_sk#911]
[info]       :     :     :              :                 :  +- *(14) BroadcastHashJoin [c_customer_sk#156], [cs_bill_customer_sk#880], Inner, BuildLeft
[info]       :     :     :              :                 :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2080]
[info]       :     :     :              :                 :     +- *(14) Project [cs_bill_customer_sk#880, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, cs_sold_date_sk#911]
[info]       :     :     :              :                 :        +- *(14) Filter (isnotnull(cs_bill_customer_sk#880) AND isnotnull(cs_sold_date_sk#911))
[info]       :     :     :              :                 :           +- *(14) ColumnarToRow
[info]       :     :     :              :                 :              +- BatchScan[cs_bill_customer_sk#880, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),c...
[info]       :     :     :              :                 +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2093]
[info]       :     :     :              +- LocalTableScan <empty>, [customer_id#2329, year_total#2337]
[info]       :     :     +- *(22) Sort [customer_id#2377 ASC NULLS FIRST], false, 0
[info]       :     :        +- Exchange hashpartitioning(customer_id#2377, 4), true, [id=#2532]
[info]       :     :           +- Union
[info]       :     :              :- LocalTableScan <empty>, [customer_id#2377, year_total#2385]
[info]       :     :              :- *(21) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#902 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#901 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#899 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#900 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :              :  +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#2506]
[info]       :     :              :     +- *(20) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#902 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#901 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#899 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#900 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :              :        +- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, d_year#337]
[info]       :     :              :           +- *(20) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :     :              :              :- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, cs_sold_date_sk#911]
[info]       :     :              :              :  +- *(20) BroadcastHashJoin [c_customer_sk#156], [cs_bill_customer_sk#880], Inner, BuildLeft
[info]       :     :              :              :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2080]
[info]       :     :              :              :     +- *(20) Project [cs_bill_customer_sk#880, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, cs_sold_date_sk#911]
[info]       :     :              :              :        +- *(20) Filter (isnotnull(cs_bill_customer_sk#880) AND isnotnull(cs_sold_date_sk#911))
[info]       :     :              :              :           +- *(20) ColumnarToRow
[info]       :     :              :              :              +- BatchScan[cs_bill_customer_sk#880, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),c...
[info]       :     :              :              +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2128]
[info]       :     :              +- LocalTableScan <empty>, [customer_id#2329, year_total#2337]
[info]       :     +- *(28) Sort [customer_id#2387 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(customer_id#2387, 4), true, [id=#2603]
[info]       :           +- Union
[info]       :              :- LocalTableScan <empty>, [customer_id#2387, year_total#2395]
[info]       :              :- LocalTableScan <empty>, [customer_id#2319, year_total#2327]
[info]       :              +- *(27) Filter (isnotnull(year_total#2337) AND (year_total#2337 > 0.000000))
[info]       :                 +- *(27) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1044 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1043 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :                    +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#2576]
[info]       :                       +- *(26) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1044 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1043 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :                          +- *(26) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, d_year#337]
[info]       :                             +- *(26) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                                :- *(26) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]       :                                :  +- *(26) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]       :                                :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2080]
[info]       :                                :     +- *(26) Project [ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]       :                                :        +- *(26) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]       :                                :           +- *(26) ColumnarToRow
[info]       :                                :              +- BatchScan[ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),w...
[info]       :                                +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2093]
[info]       +- *(34) Sort [customer_id#2397 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(customer_id#2397, 4), true, [id=#2675]
[info]             +- Union
[info]                :- LocalTableScan <empty>, [customer_id#2397, year_total#2405]
[info]                :- LocalTableScan <empty>, [customer_id#2319, year_total#2327]
[info]                +- *(33) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1044 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1043 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]                   +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#2649]
[info]                      +- *(32) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1044 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1043 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]                         +- *(32) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, d_year#337]
[info]                            +- *(32) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(32) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]                               :  +- *(32) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]                               :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2080]
[info]                               :     +- *(32) Project [ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]                               :        +- *(32) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]                               :           +- *(32) ColumnarToRow
[info]                               :              +- BatchScan[ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),w...
[info]                               +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2128]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1631 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q4                                                 1631           1631           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q5
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#2800 ASC NULLS FIRST,id#2801 ASC NULLS FIRST], output=[channel#2800,id#2801,sales#2731,returns#2732,profit#2733])
[info] +- *(24) HashAggregate(keys=[channel#2800, id#2801, spark_grouping_id#2797], functions=[sum(sales#2746), sum(returns#2748), sum(profit#2724)])
[info]    +- Exchange hashpartitioning(channel#2800, id#2801, spark_grouping_id#2797, 4), true, [id=#3222]
[info]       +- *(23) HashAggregate(keys=[channel#2800, id#2801, spark_grouping_id#2797], functions=[partial_sum(sales#2746), partial_sum(returns#2748), partial_sum(profit#2724)])
[info]          +- *(23) Expand [List(sales#2746, returns#2748, profit#2724, channel#2798, id#2799, 0), List(sales#2746, returns#2748, profit#2724, channel#2798, null, 1), List(sales#2746, returns#2748, profit#2724, null, null, 3)], [sales#2746, returns#2748, profit#2724, channel#2800, id#2801, spark_grouping_id#2797]
[info]             +- Union
[info]                :- *(6) HashAggregate(keys=[s_store_id#671], functions=[sum(UnscaledValue(sales_price#2736)), sum(UnscaledValue(return_amt#2738)), sum(UnscaledValue(profit#2737)), sum(UnscaledValue(net_loss#2739))])
[info]                :  +- Exchange hashpartitioning(s_store_id#671, 4), true, [id=#3065]
[info]                :     +- *(5) HashAggregate(keys=[s_store_id#671], functions=[partial_sum(UnscaledValue(sales_price#2736)), partial_sum(UnscaledValue(return_amt#2738)), partial_sum(UnscaledValue(profit#2737)), partial_sum(UnscaledValue(net_loss#2739))])
[info]                :        +- *(5) Project [sales_price#2736, profit#2737, return_amt#2738, net_loss#2739, s_store_id#671]
[info]                :           +- *(5) BroadcastHashJoin [store_sk#2734], [s_store_sk#670], Inner, BuildRight
[info]                :              :- *(5) Project [store_sk#2734, sales_price#2736, profit#2737, return_amt#2738, net_loss#2739]
[info]                :              :  +- *(5) BroadcastHashJoin [date_sk#2735], [d_date_sk#331], Inner, BuildRight
[info]                :              :     :- Union
[info]                :              :     :  :- *(1) Project [ss_store_sk#1170 AS store_sk#2734, ss_sold_date_sk#1186 AS date_sk#2735, ss_ext_sales_price#1178 AS sales_price#2736, ss_net_profit#1185 AS profit#2737, 0.00 AS return_amt#2738, 0.00 AS net_loss#2739]
[info]                :              :     :  :  +- *(1) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]                :              :     :  :     +- *(1) ColumnarToRow
[info]                :              :     :  :        +- BatchScan[ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>
[info]                :              :     :  +- *(2) Project [sr_store_sk#797 AS store_sk#2740, sr_returned_date_sk#810 AS date_sk#2741, 0.00 AS sales_price#2742, 0.00 AS profit#2743, sr_return_amt#801 AS return_amt#2744, sr_net_loss#809 AS net_loss#2745]
[info]                :              :     :     +- *(2) Filter (isnotnull(sr_returned_date_sk#810) AND isnotnull(sr_store_sk#797))
[info]                :              :     :        +- *(2) ColumnarToRow
[info]                :              :     :           +- BatchScan[sr_store_sk#797, sr_return_amt#801, sr_net_loss#809, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
[info]                :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3050]
[info]                :              :        +- *(3) Project [d_date_sk#331]
[info]                :              :           +- *(3) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 11192)) AND (d_date#333 <= 11206)) AND isnotnull(d_date_sk#331))
[info]                :              :              +- *(3) ColumnarToRow
[info]                :              :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3059]
[info]                :                 +- *(4) Project [s_store_sk#670, s_store_id#671]
[info]                :                    +- *(4) Filter isnotnull(s_store_sk#670)
[info]                :                       +- *(4) ColumnarToRow
[info]                :                          +- BatchScan[s_store_sk#670, s_store_id#671] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string>
[info]                :- *(12) HashAggregate(keys=[cp_catalog_page_id#1], functions=[sum(UnscaledValue(sales_price#2752)), sum(UnscaledValue(return_amt#2754)), sum(UnscaledValue(profit#2753)), sum(UnscaledValue(net_loss#2755))])
[info]                :  +- Exchange hashpartitioning(cp_catalog_page_id#1, 4), true, [id=#3193]
[info]                :     +- *(11) HashAggregate(keys=[cp_catalog_page_id#1], functions=[partial_sum(UnscaledValue(sales_price#2752)), partial_sum(UnscaledValue(return_amt#2754)), partial_sum(UnscaledValue(profit#2753)), partial_sum(UnscaledValue(net_loss#2755))])
[info]                :        +- *(11) Project [sales_price#2752, profit#2753, return_amt#2754, net_loss#2755, cp_catalog_page_id#1]
[info]                :           +- *(11) BroadcastHashJoin [page_sk#2750], [cp_catalog_page_sk#0], Inner, BuildRight
[info]                :              :- *(11) Project [page_sk#2750, sales_price#2752, profit#2753, return_amt#2754, net_loss#2755]
[info]                :              :  +- *(11) BroadcastHashJoin [date_sk#2751], [d_date_sk#331], Inner, BuildRight
[info]                :              :     :- Union
[info]                :              :     :  :- *(7) Project [cs_catalog_page_sk#889 AS page_sk#2750, cs_sold_date_sk#911 AS date_sk#2751, cs_ext_sales_price#900 AS sales_price#2752, cs_net_profit#910 AS profit#2753, 0.00 AS return_amt#2754, 0.00 AS net_loss#2755]
[info]                :              :     :  :  +- *(7) Filter (isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_catalog_page_sk#889))
[info]                :              :     :  :     +- *(7) ColumnarToRow
[info]                :              :     :  :        +- BatchScan[cs_catalog_page_sk#889, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_catalog_page_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>
[info]                :              :     :  +- *(8) Project [cr_catalog_page_sk#52 AS page_sk#2756, cr_returned_date_sk#67 AS date_sk#2757, 0.00 AS sales_price#2758, 0.00 AS profit#2759, cr_return_amount#58 AS return_amt#2760, cr_net_loss#66 AS net_loss#2761]
[info]                :              :     :     +- *(8) Filter (isnotnull(cr_returned_date_sk#67) AND isnotnull(cr_catalog_page_sk#52))
[info]                :              :     :        +- *(8) ColumnarToRow
[info]                :              :     :           +- BatchScan[cr_catalog_page_sk#52, cr_return_amount#58, cr_net_loss#66, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_catalog_page_sk:int,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
[info]                :              :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3050]
[info]                :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3095]
[info]                :                 +- *(10) Project [cp_catalog_page_sk#0, cp_catalog_page_id#1]
[info]                :                    +- *(10) Filter isnotnull(cp_catalog_page_sk#0)
[info]                :                       +- *(10) ColumnarToRow
[info]                :                          +- BatchScan[cp_catalog_page_sk#0, cp_catalog_page_id#1] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_page], ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>
[info]                +- *(22) HashAggregate(keys=[web_site_id#1367], functions=[sum(UnscaledValue(sales_price#2768)), sum(UnscaledValue(return_amt#2770)), sum(UnscaledValue(profit#2769)), sum(UnscaledValue(net_loss#2771))])
[info]                   +- Exchange hashpartitioning(web_site_id#1367, 4), true, [id=#3213]
[info]                      +- *(21) HashAggregate(keys=[web_site_id#1367], functions=[partial_sum(UnscaledValue(sales_price#2768)), partial_sum(UnscaledValue(return_amt#2770)), partial_sum(UnscaledValue(profit#2769)), partial_sum(UnscaledValue(net_loss#2771))])
[info]                         +- *(21) Project [sales_price#2768, profit#2769, return_amt#2770, net_loss#2771, web_site_id#1367]
[info]                            +- *(21) BroadcastHashJoin [wsr_web_site_sk#2766], [web_site_sk#1366], Inner, BuildRight
[info]                               :- *(21) Project [wsr_web_site_sk#2766, sales_price#2768, profit#2769, return_amt#2770, net_loss#2771]
[info]                               :  +- *(21) BroadcastHashJoin [date_sk#2767], [d_date_sk#331], Inner, BuildRight
[info]                               :     :- Union
[info]                               :     :  :- *(13) Project [ws_web_site_sk#1033 AS wsr_web_site_sk#2766, ws_sold_date_sk#1054 AS date_sk#2767, ws_ext_sales_price#1043 AS sales_price#2768, ws_net_profit#1053 AS profit#2769, 0.00 AS return_amt#2770, 0.00 AS net_loss#2771]
[info]                               :     :  :  +- *(13) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_web_site_sk#1033))
[info]                               :     :  :     +- *(13) ColumnarToRow
[info]                               :     :  :        +- BatchScan[ws_web_site_sk#1033, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_web_site_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>
[info]                               :     :  +- *(18) Project [ws_web_site_sk#1033 AS wsr_web_site_sk#2772, wr_returned_date_sk#1286 AS date_sk#2773, 0.00 AS sales_price#2774, 0.00 AS profit#2775, wr_return_amt#1277 AS return_amt#2776, wr_net_loss#1285 AS net_loss#2777]
[info]                               :     :     +- *(18) SortMergeJoin [wr_item_sk#1264, wr_order_number#1275L], [ws_item_sk#1023, ws_order_number#1037L], Inner
[info]                               :     :        :- *(15) Sort [wr_item_sk#1264 ASC NULLS FIRST, wr_order_number#1275L ASC NULLS FIRST], false, 0
[info]                               :     :        :  +- Exchange hashpartitioning(wr_item_sk#1264, wr_order_number#1275L, 4), true, [id=#3115]
[info]                               :     :        :     +- *(14) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286]
[info]                               :     :        :        +- *(14) Filter isnotnull(wr_returned_date_sk#1286)
[info]                               :     :        :           +- *(14) ColumnarToRow
[info]                               :     :        :              +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
[info]                               :     :        +- *(17) Sort [ws_item_sk#1023 ASC NULLS FIRST, ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]                               :     :           +- Exchange hashpartitioning(ws_item_sk#1023, ws_order_number#1037L, 4), true, [id=#3125]
[info]                               :     :              +- *(16) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_order_number#1037L]
[info]                               :     :                 +- *(16) Filter ((isnotnull(ws_item_sk#1023) AND isnotnull(ws_order_number#1037L)) AND isnotnull(ws_web_site_sk#1033))
[info]                               :     :                    +- *(16) ColumnarToRow
[info]                               :     :                       +- BatchScan[ws_item_sk#1023, ws_web_site_sk#1033, ws_order_number#1037L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_order_number:bigint>
[info]                               :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3050]
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3149]
[info]                                  +- *(20) Project [web_site_sk#1366, web_site_id#1367]
[info]                                     +- *(20) Filter isnotnull(web_site_sk#1366)
[info]                                        +- *(20) ColumnarToRow
[info]                                           +- BatchScan[web_site_sk#1366, web_site_id#1367] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_site], ReadSchema: struct<web_site_sk:int,web_site_id:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 611 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q5                                                  612            612           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q6
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[cnt#2906L ASC NULLS FIRST], output=[state#2905,cnt#2906L])
[info] +- *(13) Project [state#2905, cnt#2906L]
[info]    +- *(13) Filter (count(1)#2912L >= 10)
[info]       +- *(13) HashAggregate(keys=[ca_state#241], functions=[count(1)])
[info]          +- Exchange hashpartitioning(ca_state#241, 4), true, [id=#3535]
[info]             +- *(12) HashAggregate(keys=[ca_state#241], functions=[partial_count(1)])
[info]                +- *(12) Project [ca_state#241]
[info]                   +- *(12) SortMergeJoin [ss_item_sk#1165], [i_item_sk#496], Inner
[info]                      :- *(8) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                      :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#3504]
[info]                      :     +- *(7) Project [ca_state#241, ss_item_sk#1165]
[info]                      :        +- *(7) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                      :           :- *(7) Project [ca_state#241, ss_item_sk#1165, ss_sold_date_sk#1186]
[info]                      :           :  +- *(7) SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner
[info]                      :           :     :- *(3) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                      :           :     :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#3477]
[info]                      :           :     :     +- *(2) Project [ca_state#241, c_customer_sk#156]
[info]                      :           :     :        +- *(2) BroadcastHashJoin [ca_address_sk#233], [c_current_addr_sk#160], Inner, BuildLeft
[info]                      :           :     :           :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3468]
[info]                      :           :     :           :  +- *(1) Project [ca_address_sk#233, ca_state#241]
[info]                      :           :     :           :     +- *(1) Filter isnotnull(ca_address_sk#233)
[info]                      :           :     :           :        +- *(1) ColumnarToRow
[info]                      :           :     :           :           +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                      :           :     :           +- *(2) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]                      :           :     :              +- *(2) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_customer_sk#156))
[info]                      :           :     :                 +- *(2) ColumnarToRow
[info]                      :           :     :                    +- BatchScan[c_customer_sk#156, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
[info]                      :           :     +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                      :           :        +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#3487]
[info]                      :           :           +- *(4) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                      :           :              +- *(4) Filter ((isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_item_sk#1165))
[info]                      :           :                 +- *(4) ColumnarToRow
[info]                      :           :                    +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int>
[info]                      :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3499]
[info]                      :              +- *(6) Project [d_date_sk#331]
[info]                      :                 +- *(6) Filter ((isnotnull(d_month_seq#334) AND isnotnull(d_date_sk#331)) AND (d_month_seq#334 = Subquery scalar-subquery#2903, [id=#3369]))
[info]                      :                    :  +- Subquery scalar-subquery#2903, [id=#3369]
[info]                      :                    :     +- *(1) HashAggregate(keys=[d_month_seq#334], functions=[])
[info]                      :                    :        +- *(1) HashAggregate(keys=[d_month_seq#334], functions=[])
[info]                      :                    :           +- *(1) Project [d_month_seq#334]
[info]                      :                    :              +- *(1) Filter (((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2000)) AND (d_moy#339 = 1))
[info]                      :                    :                 +- *(1) ColumnarToRow
[info]                      :                    :                    +- BatchScan[d_month_seq#334, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>
[info]                      :                    +- *(6) ColumnarToRow
[info]                      :                       +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                      +- *(11) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]                         +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#3526]
[info]                            +- *(10) Project [i_item_sk#496]
[info]                               +- *(10) Filter (cast(i_current_price#501 as decimal(14,7)) > CheckOverflow((1.200000 * promote_precision(avg(i_current_price)#2910)), DecimalType(14,7), true))
[info]                                  +- *(10) BroadcastHashJoin [i_category#508], [i_category#508#2916], LeftOuter, BuildRight
[info]                                     :- *(10) Project [i_item_sk#496, i_current_price#501, i_category#508]
[info]                                     :  +- *(10) Filter (isnotnull(i_current_price#501) AND isnotnull(i_item_sk#496))
[info]                                     :     +- *(10) ColumnarToRow
[info]                                     :        +- BatchScan[i_item_sk#496, i_current_price#501, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_category:string>
[info]                                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true])), [id=#3520]
[info]                                        +- *(9) HashAggregate(keys=[i_category#508], functions=[avg(UnscaledValue(i_current_price#501))])
[info]                                           +- *(9) HashAggregate(keys=[i_category#508], functions=[partial_avg(UnscaledValue(i_current_price#501))])
[info]                                              +- *(9) Project [i_current_price#501, i_category#508]
[info]                                                 +- *(9) Filter isnotnull(i_category#508)
[info]                                                    +- *(9) ColumnarToRow
[info]                                                       +- BatchScan[i_current_price#501, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_current_price:decimal(7,2),i_category:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 318 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q6                                                  319            319           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST], output=[i_item_id#497,agg1#2955,agg2#2956,agg3#2957,agg4#2958])
[info] +- *(6) HashAggregate(keys=[i_item_id#497], functions=[avg(cast(ss_quantity#1173 as bigint)), avg(UnscaledValue(ss_list_price#1175)), avg(UnscaledValue(ss_coupon_amt#1182)), avg(UnscaledValue(ss_sales_price#1176))])
[info]    +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#3716]
[info]       +- *(5) HashAggregate(keys=[i_item_id#497], functions=[partial_avg(cast(ss_quantity#1173 as bigint)), partial_avg(UnscaledValue(ss_list_price#1175)), partial_avg(UnscaledValue(ss_coupon_amt#1182)), partial_avg(UnscaledValue(ss_sales_price#1176))])
[info]          +- *(5) Project [ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, i_item_id#497]
[info]             +- *(5) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]                :- *(5) Project [ss_promo_sk#1171, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, i_item_id#497]
[info]                :  +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :     :- *(5) Project [ss_item_sk#1165, ss_promo_sk#1171, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182]
[info]                :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :- *(5) Project [ss_item_sk#1165, ss_promo_sk#1171, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                :     :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]                :     :     :     :- *(5) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_promo_sk#1171, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                :     :     :     :  +- *(5) Filter (((isnotnull(ss_cdemo_sk#1167) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_promo_sk#1171))
[info]                :     :     :     :     +- *(5) ColumnarToRow
[info]                :     :     :     :        +- BatchScan[ss_item_sk#1165, ss_cdemo_sk#1167, ss_promo_sk#1171, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_promo_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),...
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3683]
[info]                :     :     :        +- *(1) Project [cd_demo_sk#290]
[info]                :     :     :           +- *(1) Filter ((((((isnotnull(cd_education_status#293) AND isnotnull(cd_marital_status#292)) AND isnotnull(cd_gender#291)) AND (cd_gender#291 = M)) AND (cd_marital_status#292 = S)) AND (cd_education_status#293 = College)) AND isnotnull(cd_demo_sk#290))
[info]                :     :     :              +- *(1) ColumnarToRow
[info]                :     :     :                 +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3692]
[info]                :     :        +- *(2) Project [d_date_sk#331]
[info]                :     :           +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                :     :              +- *(2) ColumnarToRow
[info]                :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3701]
[info]                :        +- *(3) Project [i_item_sk#496, i_item_id#497]
[info]                :           +- *(3) Filter isnotnull(i_item_sk#496)
[info]                :              +- *(3) ColumnarToRow
[info]                :                 +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3710]
[info]                   +- *(4) Project [p_promo_sk#589]
[info]                      +- *(4) Filter (((p_channel_email#598 = N) OR (p_channel_event#603 = N)) AND isnotnull(p_promo_sk#589))
[info]                         +- *(4) ColumnarToRow
[info]                            +- BatchScan[p_promo_sk#589, p_channel_email#598, p_channel_event#603] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 197 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q7                                                  198            198           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q8
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[s_store_name#675 ASC NULLS FIRST], output=[s_store_name#675,sum(ss_net_profit)#3034])
[info] +- *(8) HashAggregate(keys=[s_store_name#675], functions=[sum(UnscaledValue(ss_net_profit#1185))])
[info]    +- Exchange hashpartitioning(s_store_name#675, 4), true, [id=#3970]
[info]       +- *(7) HashAggregate(keys=[s_store_name#675], functions=[partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]          +- *(7) Project [ss_net_profit#1185, s_store_name#675]
[info]             +- *(7) BroadcastHashJoin [substring(s_zip#695, 1, 2)], [substring(ca_zip#3024, 1, 2)], Inner, BuildRight
[info]                :- *(7) Project [ss_net_profit#1185, s_store_name#675, s_zip#695]
[info]                :  +- *(7) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :     :- *(7) Project [ss_store_sk#1170, ss_net_profit#1185]
[info]                :     :  +- *(7) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :- *(7) Project [ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                :     :     :  +- *(7) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]                :     :     :     +- *(7) ColumnarToRow
[info]                :     :     :        +- BatchScan[ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_net_profit:decimal(7,2)>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3921]
[info]                :     :        +- *(1) Project [d_date_sk#331]
[info]                :     :           +- *(1) Filter ((((isnotnull(d_qoy#341) AND isnotnull(d_year#337)) AND (d_qoy#341 = 2)) AND (d_year#337 = 1998)) AND isnotnull(d_date_sk#331))
[info]                :     :              +- *(1) ColumnarToRow
[info]                :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3930]
[info]                :        +- *(2) Project [s_store_sk#670, s_store_name#675, s_zip#695]
[info]                :           +- *(2) Filter (isnotnull(s_store_sk#670) AND isnotnull(s_zip#695))
[info]                :              +- *(2) ColumnarToRow
[info]                :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_zip:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(substring(input[0, string, true], 1, 2))), [id=#3964]
[info]                   +- *(6) HashAggregate(keys=[ca_zip#3024], functions=[])
[info]                      +- *(6) HashAggregate(keys=[ca_zip#3024], functions=[])
[info]                         +- *(6) Project [substring(ca_zip#242, 1, 5) AS ca_zip#3024]
[info]                            +- SortMergeJoin [coalesce(substring(ca_zip#242, 1, 5), ), isnull(substring(ca_zip#242, 1, 5))], [coalesce(ca_zip#3025, ), isnull(ca_zip#3025)], LeftSemi
[info]                               :- *(3) Sort [coalesce(substring(ca_zip#242, 1, 5), ) ASC NULLS FIRST, isnull(substring(ca_zip#242, 1, 5)) ASC NULLS FIRST], false, 0
[info]                               :  +- *(3) Filter (substring(ca_zip#242, 1, 5) INSET (56910,69952,63792,39371,74351,11101,25003,97189,57834,73134,62377,51200,32754,22752,86379,14171,91110,40162,98569,28709,13394,66162,25733,25782,26065,18383,51949,87343,50298,83849,33786,64528,23470,67030,46136,25280,46820,77721,99076,18426,31880,17871,98235,45748,49156,18652,72013,51622,43848,78567,41248,13695,44165,67853,54917,53179,64034,10567,71791,68908,55565,59402,64147,85816,57855,61547,27700,68100,28810,58263,15723,83933,51103,58058,90578,82276,81096,81426,96451,77556,38607,76638,18906,62971,57047,48425,35576,11928,30625,83444,73520,51650,57647,60099,30122,94983,24128,10445,41368,26233,26859,21756,24676,19849,36420,38193,58470,39127,13595,87501,24317,15455,69399,98025,81019,48033,11376,39516,67875,92712,14867,38122,29741,42961,30469,51211,56458,15559,16021,33123,33282,33515,72823,54601,76698,56240,72175,60279,20004,68806,72325,28488,43933,50412,45200,22246,78668,79777,96765,67301,73273,49448,82636,23932,47305,29839,39192,18799,61265,37125,58943,64457,88424,24610,84935,89360,68893,30431,28898,10336,90257,59166,46081,26105,96888,36634,86284,35258,39972,22927,73241,53268,24206,27385,99543,31671,14663,30903,39861,24996,63089,88086,83921,21076,67897,66708,45721,60576,25103,52867,30450,36233,30010,96576,73171,56571,56575,64544,13955,78451,43285,18119,16725,83041,76107,79994,54364,35942,56691,19769,63435,34102,18845,22744,13354,75691,45549,23968,31387,83144,13375,15765,28577,88190,19736,73650,37930,25989,83926,94898,51798,39736,22437,55253,38415,71256,18376,42029,25858,44438,19515,38935,51649,71954,15882,18767,63193,25486,49130,37126,40604,34425,17043,12305,11634,26653,94167,36446,10516,67473,66864,72425,63981,18842,22461,42666,47770,69035,70372,28587,45266,15371,15798,45375,90225,16807,31016,68014,21337,19505,50016,10144,84093,21286,19430,34322,91068,94945,72305,24671,58048,65084,28545,21195,20548,22245,77191,96976,48583,76231,15734,61810,11356,68621,68786,98359,41367,26689,69913,76614,68101,88885,50308,79077,18270,28915,29178,53672,62878,10390,14922,68341,56529,41766,68309,56616,15126,61860,97789,11489,45692,41918,72151,72550,27156,36495,70738,17879,53535,17920,68880,78890,35850,14089,58078,65164,27068,26231,13376,57665,32213,77610,87816,21309,15146,86198,91137,55307,67467,40558,94627,82136,22351,89091,20260,23006,91393,47537,62496,98294,18840,71286,81312,31029,70466,35458,14060,22685,28286,25631,19512,40081,63837,14328,35474,22152,76232,51061,86057,17183) AND isnotnull(substring(ca_zip#242, 1, 5)))
[info]                               :     +- *(3) ColumnarToRow
[info]                               :        +- BatchScan[ca_zip#242] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_zip:string>
[info]                               +- *(5) Sort [coalesce(ca_zip#3025, ) ASC NULLS FIRST, isnull(ca_zip#3025) ASC NULLS FIRST], false, 0
[info]                                  +- *(5) Project [ca_zip#3025]
[info]                                     +- *(5) Filter (count(1)#3030L > 10)
[info]                                        +- *(5) HashAggregate(keys=[ca_zip#242], functions=[count(1)])
[info]                                           +- *(5) HashAggregate(keys=[ca_zip#242], functions=[partial_count(1)])
[info]                                              +- *(5) Project [ca_zip#242]
[info]                                                 +- *(5) BroadcastHashJoin [ca_address_sk#233], [c_current_addr_sk#160], Inner, BuildLeft
[info]                                                    :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3944]
[info]                                                    :  +- *(4) Project [ca_address_sk#233, ca_zip#242]
[info]                                                    :     +- *(4) Filter isnotnull(ca_address_sk#233)
[info]                                                    :        +- *(4) ColumnarToRow
[info]                                                    :           +- BatchScan[ca_address_sk#233, ca_zip#242] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_zip:string>
[info]                                                    +- *(5) Project [c_current_addr_sk#160]
[info]                                                       +- *(5) Filter ((isnotnull(c_preferred_cust_flag#166) AND (c_preferred_cust_flag#166 = Y)) AND isnotnull(c_current_addr_sk#160))
[info]                                                          +- *(5) ColumnarToRow
[info]                                                             +- BatchScan[c_current_addr_sk#160, c_preferred_cust_flag#166] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_current_addr_sk:int,c_preferred_cust_flag:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 296 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q8                                                  297            297           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q9
[info] == Physical Plan ==
[info] *(1) Project [CASE WHEN (Subquery scalar-subquery#3117, [id=#4014] > 62316685) THEN Subquery scalar-subquery#3118, [id=#4047] ELSE Subquery scalar-subquery#3119, [id=#4080] END AS bucket1#3120, CASE WHEN (Subquery scalar-subquery#3121, [id=#4113] > 19045798) THEN Subquery scalar-subquery#3122, [id=#4146] ELSE Subquery scalar-subquery#3123, [id=#4179] END AS bucket2#3124, CASE WHEN (Subquery scalar-subquery#3125, [id=#4212] > 365541424) THEN Subquery scalar-subquery#3126, [id=#4245] ELSE Subquery scalar-subquery#3127, [id=#4278] END AS bucket3#3128, CASE WHEN (Subquery scalar-subquery#3129, [id=#4311] > 216357808) THEN Subquery scalar-subquery#3130, [id=#4344] ELSE Subquery scalar-subquery#3131, [id=#4377] END AS bucket4#3132, CASE WHEN (Subquery scalar-subquery#3133, [id=#4410] > 184483884) THEN Subquery scalar-subquery#3134, [id=#4443] ELSE Subquery scalar-subquery#3135, [id=#4476] END AS bucket5#3136]
[info] :  :- Subquery scalar-subquery#3117, [id=#4014]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[count(1)])
[info] :  :     +- Exchange SinglePartition, true, [id=#4010]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :           +- *(1) Project
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 1)) AND (ss_quantity#1173 <= 20))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int>
[info] :  :- Subquery scalar-subquery#3118, [id=#4047]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4043]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :           +- *(1) Project [ss_ext_discount_amt#1177]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 1)) AND (ss_quantity#1173 <= 20))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_ext_discount_amt#1177] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3119, [id=#4080]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4076]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :           +- *(1) Project [ss_net_paid#1183]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 1)) AND (ss_quantity#1173 <= 20))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_net_paid:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3121, [id=#4113]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[count(1)])
[info] :  :     +- Exchange SinglePartition, true, [id=#4109]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :           +- *(1) Project
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 21)) AND (ss_quantity#1173 <= 40))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int>
[info] :  :- Subquery scalar-subquery#3122, [id=#4146]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4142]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :           +- *(1) Project [ss_ext_discount_amt#1177]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 21)) AND (ss_quantity#1173 <= 40))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_ext_discount_amt#1177] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3123, [id=#4179]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4175]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :           +- *(1) Project [ss_net_paid#1183]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 21)) AND (ss_quantity#1173 <= 40))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_net_paid:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3125, [id=#4212]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[count(1)])
[info] :  :     +- Exchange SinglePartition, true, [id=#4208]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :           +- *(1) Project
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 41)) AND (ss_quantity#1173 <= 60))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int>
[info] :  :- Subquery scalar-subquery#3126, [id=#4245]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4241]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :           +- *(1) Project [ss_ext_discount_amt#1177]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 41)) AND (ss_quantity#1173 <= 60))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_ext_discount_amt#1177] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3127, [id=#4278]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4274]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :           +- *(1) Project [ss_net_paid#1183]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 41)) AND (ss_quantity#1173 <= 60))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_net_paid:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3129, [id=#4311]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[count(1)])
[info] :  :     +- Exchange SinglePartition, true, [id=#4307]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :           +- *(1) Project
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 61)) AND (ss_quantity#1173 <= 80))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int>
[info] :  :- Subquery scalar-subquery#3130, [id=#4344]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4340]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :           +- *(1) Project [ss_ext_discount_amt#1177]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 61)) AND (ss_quantity#1173 <= 80))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_ext_discount_amt#1177] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3131, [id=#4377]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4373]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :           +- *(1) Project [ss_net_paid#1183]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 61)) AND (ss_quantity#1173 <= 80))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_net_paid:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3133, [id=#4410]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[count(1)])
[info] :  :     +- Exchange SinglePartition, true, [id=#4406]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :           +- *(1) Project
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 81)) AND (ss_quantity#1173 <= 100))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int>
[info] :  :- Subquery scalar-subquery#3134, [id=#4443]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4439]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :           +- *(1) Project [ss_ext_discount_amt#1177]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 81)) AND (ss_quantity#1173 <= 100))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_ext_discount_amt#1177] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2)>
[info] :  +- Subquery scalar-subquery#3135, [id=#4476]
[info] :     +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_net_paid#1183))])
[info] :        +- Exchange SinglePartition, true, [id=#4472]
[info] :           +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_net_paid#1183))])
[info] :              +- *(1) Project [ss_net_paid#1183]
[info] :                 +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 81)) AND (ss_quantity#1173 <= 100))
[info] :                    +- *(1) ColumnarToRow
[info] :                       +- BatchScan[ss_quantity#1173, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_net_paid:decimal(7,2)>
[info] +- *(1) Filter (isnotnull(r_reason_sk#1475) AND (r_reason_sk#1475 = 1))
[info]    +- *(1) ColumnarToRow
[info]       +- BatchScan[r_reason_sk#1475] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/reason], ReadSchema: struct<r_reason_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 833 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q9                                                  833            833           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q10
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[cd_gender#291 ASC NULLS FIRST,cd_marital_status#292 ASC NULLS FIRST,cd_education_status#293 ASC NULLS FIRST,cd_purchase_estimate#294 ASC NULLS FIRST,cd_credit_rating#295 ASC NULLS FIRST,cd_dep_count#296 ASC NULLS FIRST,cd_dep_employed_count#297 ASC NULLS FIRST,cd_dep_college_count#298 ASC NULLS FIRST], output=[cd_gender#291,cd_marital_status#292,cd_education_status#293,cnt1#3335L,cd_purchase_estimate#294,cnt2#3336L,cd_credit_rating#295,cnt3#3337L,cd_dep_count#296,cnt4#3338L,cd_dep_employed_count#297,cnt5#3339L,cd_dep_college_count#298,cnt6#3340L])
[info] +- *(15) HashAggregate(keys=[cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[count(1)])
[info]    +- Exchange hashpartitioning(cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298, 4), true, [id=#5094]
[info]       +- *(14) HashAggregate(keys=[cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[partial_count(1)])
[info]          +- *(14) Project [cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]             +- *(14) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]                :- *(14) Project [c_current_cdemo_sk#158]
[info]                :  +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                :     :- *(14) Project [c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :  +- *(14) Filter (exists#3366 OR exists#3367)
[info]                :     :     +- SortMergeJoin [c_customer_sk#156], [cs_ship_customer_sk#884], ExistenceJoin(exists#3367)
[info]                :     :        :- SortMergeJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], ExistenceJoin(exists#3366)
[info]                :     :        :  :- SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], LeftSemi
[info]                :     :        :  :  :- *(2) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                :     :        :  :  :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#4952]
[info]                :     :        :  :  :     +- *(1) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :        :  :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_current_cdemo_sk#158))
[info]                :     :        :  :  :           +- *(1) ColumnarToRow
[info]                :     :        :  :  :              +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
[info]                :     :        :  :  +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                :     :        :  :     +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#4970]
[info]                :     :        :  :        +- *(4) Project [ss_customer_sk#1166]
[info]                :     :        :  :           +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :        :  :              :- *(4) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                :     :        :  :              :  +- *(4) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :     :        :  :              :     +- *(4) ColumnarToRow
[info]                :     :        :  :              :        +- BatchScan[ss_sold_time_sk#1164, ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_sales_price#1176, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_ext_tax#1181, ss_coupon_amt#1182, ss_net_paid#1183, ss_net_paid_inc_tax#1184, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_a...
[info]                :     :        :  :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#4965]
[info]                :     :        :  :                 +- *(3) Project [d_date_sk#331]
[info]                :     :        :  :                    +- *(3) Filter (((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2002)) AND (d_moy#339 >= 1)) AND (d_moy#339 <= 4)) AND isnotnull(d_date_sk#331))
[info]                :     :        :  :                       +- *(3) ColumnarToRow
[info]                :     :        :  :                          +- BatchScan[d_date_sk#331, d_date_id#332, d_date#333, d_month_seq#334, d_week_seq#335, d_quarter_seq#336, d_year#337, d_dow#338, d_moy#339, d_dom#340, d_qoy#341, d_fy_year#342, d_fy_quarter_seq#343, d_fy_week_seq#344, d_day_name#345, d_quarter_name#346, d_holiday#347, d_weekend#348, d_following_holiday#349, d_first_dom#350, d_last_dom#351, d_same_day_ly#352, d_same_day_lq#353, d_current_day#354, ... 4 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:in...
[info]                :     :        :  +- *(8) Sort [ws_bill_customer_sk#1024 ASC NULLS FIRST], false, 0
[info]                :     :        :     +- Exchange hashpartitioning(ws_bill_customer_sk#1024, 4), true, [id=#5062]
[info]                :     :        :        +- *(7) Project [ws_bill_customer_sk#1024]
[info]                :     :        :           +- *(7) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :        :              :- *(7) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                :     :        :              :  +- *(7) Filter isnotnull(ws_sold_date_sk#1054)
[info]                :     :        :              :     +- *(7) ColumnarToRow
[info]                :     :        :              :        +- BatchScan[ws_sold_time_sk#1021, ws_ship_date_sk#1022, ws_item_sk#1023, ws_bill_customer_sk#1024, ws_bill_cdemo_sk#1025, ws_bill_hdemo_sk#1026, ws_bill_addr_sk#1027, ws_ship_customer_sk#1028, ws_ship_cdemo_sk#1029, ws_ship_hdemo_sk#1030, ws_ship_addr_sk#1031, ws_web_page_sk#1032, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_promo_sk#1036, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_list_price#1040, ws_sales_price#1041, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cde...
[info]                :     :        :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#4965]
[info]                :     :        +- *(11) Sort [cs_ship_customer_sk#884 ASC NULLS FIRST], false, 0
[info]                :     :           +- Exchange hashpartitioning(cs_ship_customer_sk#884, 4), true, [id=#5080]
[info]                :     :              +- *(10) Project [cs_ship_customer_sk#884]
[info]                :     :                 +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :                    :- *(10) Project [cs_ship_customer_sk#884, cs_sold_date_sk#911]
[info]                :     :                    :  +- *(10) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :                    :     +- *(10) ColumnarToRow
[info]                :     :                    :        +- BatchScan[cs_sold_time_sk#878, cs_ship_date_sk#879, cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_bill_addr_sk#883, cs_ship_customer_sk#884, cs_ship_cdemo_sk#885, cs_ship_hdemo_sk#886, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_catalog_page_sk#889, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_list_price#897, cs_sales_price#898, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bi...
[info]                :     :                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#4965]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5021]
[info]                :        +- *(12) Project [ca_address_sk#233]
[info]                :           +- *(12) Filter (ca_county#240 IN (Rush County,Toole County,Jefferson County,Dona Ana County,La Porte County) AND isnotnull(ca_address_sk#233))
[info]                :              +- *(12) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_county#240] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_county:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5030]
[info]                   +- *(13) Project [cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]                      +- *(13) Filter isnotnull(cd_demo_sk#290)
[info]                         +- *(13) ColumnarToRow
[info]                            +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_pur...
[info] 
[info] 
[info]   Stopped after 1 iterations, 370 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q10                                                 370            370           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q11
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[customer_preferred_cust_flag#3463 ASC NULLS FIRST], output=[customer_preferred_cust_flag#3463])
[info] +- *(23) Project [customer_preferred_cust_flag#3463]
[info]    +- *(23) SortMergeJoin [customer_id#3432], [customer_id#3480], Inner, (CASE WHEN (year_total#3478 > 0.00) THEN CheckOverflow((promote_precision(year_total#3488) / promote_precision(year_total#3478)), DecimalType(38,20), true) ELSE null END > CASE WHEN (year_total#3440 > 0.00) THEN CheckOverflow((promote_precision(year_total#3468) / promote_precision(year_total#3440)), DecimalType(38,20), true) ELSE null END)
[info]       :- *(17) Project [customer_id#3432, year_total#3440, customer_preferred_cust_flag#3463, year_total#3468, year_total#3478]
[info]       :  +- *(17) SortMergeJoin [customer_id#3432], [customer_id#3470], Inner
[info]       :     :- *(11) Project [customer_id#3432, year_total#3440, customer_preferred_cust_flag#3463, year_total#3468]
[info]       :     :  +- *(11) SortMergeJoin [customer_id#3432], [customer_id#3460], Inner
[info]       :     :     :- *(5) Sort [customer_id#3432 ASC NULLS FIRST], false, 0
[info]       :     :     :  +- Exchange hashpartitioning(customer_id#3432, 4), true, [id=#5547]
[info]       :     :     :     +- Union
[info]       :     :     :        :- *(4) Filter (isnotnull(year_total#3440) AND (year_total#3440 > 0.00))
[info]       :     :     :        :  +- *(4) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :     :        :     +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, 4), true, [id=#5541]
[info]       :     :     :        :        +- *(3) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :     :        :           +- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, d_year#337]
[info]       :     :     :        :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :     :        :                 :- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :     :        :                 :  +- *(3) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :     :        :                 :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5522]
[info]       :     :     :        :                 :     :  +- *(1) Project [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172]
[info]       :     :     :        :                 :     :     +- *(1) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_customer_id#157))
[info]       :     :     :        :                 :     :        +- *(1) ColumnarToRow
[info]       :     :     :        :                 :     :           +- BatchScan[c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
[info]       :     :     :        :                 :     +- *(3) Project [ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :     :        :                 :        +- *(3) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :     :        :                 :           +- *(3) ColumnarToRow
[info]       :     :     :        :                 :              +- BatchScan[ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:decimal(7,2)>
[info]       :     :     :        :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5535]
[info]       :     :     :        :                    +- *(2) Project [d_date_sk#331, d_year#337]
[info]       :     :     :        :                       +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]       :     :     :        :                          +- *(2) ColumnarToRow
[info]       :     :     :        :                             +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :     :        +- LocalTableScan <empty>, [customer_id#3442, year_total#3450]
[info]       :     :     +- *(10) Sort [customer_id#3460 ASC NULLS FIRST], false, 0
[info]       :     :        +- Exchange hashpartitioning(customer_id#3460, 4), true, [id=#5754]
[info]       :     :           +- Union
[info]       :     :              :- *(9) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :              :  +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, 4), true, [id=#5707]
[info]       :     :              :     +- *(8) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :              :        +- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, d_year#337]
[info]       :     :              :           +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :              :              :- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :              :              :  +- *(8) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :              :              :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5522]
[info]       :     :              :              :     +- *(8) Project [ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :              :              :        +- *(8) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :              :              :           +- *(8) ColumnarToRow
[info]       :     :              :              :              +- BatchScan[ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:decimal(7,2)>
[info]       :     :              :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5570]
[info]       :     :              :                 +- *(7) Project [d_date_sk#331, d_year#337]
[info]       :     :              :                    +- *(7) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND isnotnull(d_date_sk#331))
[info]       :     :              :                       +- *(7) ColumnarToRow
[info]       :     :              :                          +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :              +- LocalTableScan <empty>, [customer_id#3442, customer_preferred_cust_flag#3445, year_total#3450]
[info]       :     +- *(16) Sort [customer_id#3470 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(customer_id#3470, 4), true, [id=#5795]
[info]       :           +- Union
[info]       :              :- LocalTableScan <empty>, [customer_id#3470, year_total#3478]
[info]       :              +- *(15) Filter (isnotnull(year_total#3450) AND (year_total#3450 > 0.00))
[info]       :                 +- *(15) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :                    +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#5789]
[info]       :                       +- *(14) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :                          +- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, d_year#337]
[info]       :                             +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                                :- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]       :                                :  +- *(14) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]       :                                :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5522]
[info]       :                                :     +- *(14) Project [ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]       :                                :        +- *(14) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]       :                                :           +- *(14) ColumnarToRow
[info]       :                                :              +- BatchScan[ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_price:decimal(7,2)>
[info]       :                                +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5535]
[info]       +- *(22) Sort [customer_id#3480 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(customer_id#3480, 4), true, [id=#5897]
[info]             +- Union
[info]                :- LocalTableScan <empty>, [customer_id#3480, year_total#3488]
[info]                +- *(21) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]                   +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#5871]
[info]                      +- *(20) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]                         +- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, d_year#337]
[info]                            +- *(20) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]                               :  +- *(20) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]                               :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5522]
[info]                               :     +- *(20) Project [ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]                               :        +- *(20) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]                               :           +- *(20) ColumnarToRow
[info]                               :              +- BatchScan[ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_price:decimal(7,2)>
[info]                               +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5570]
[info] 
[info] 
[info]   Stopped after 1 iterations, 793 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q11                                                 793            793           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q12
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_category#508 ASC NULLS FIRST,i_class#506 ASC NULLS FIRST,i_item_id#497 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST,revenueratio#3606 ASC NULLS FIRST], output=[i_item_desc#500,i_category#508,i_class#506,i_current_price#501,itemrevenue#3605,revenueratio#3606])
[info] +- *(6) Project [i_item_desc#500, i_category#508, i_class#506, i_current_price#501, itemrevenue#3605, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#3611) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#3613)), DecimalType(38,17), true) AS revenueratio#3606, i_item_id#497]
[info]    +- Window [sum(_w1#3612) windowspecdefinition(i_class#506, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#3613], [i_class#506]
[info]       +- *(5) Sort [i_class#506 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_class#506, 4), true, [id=#6039]
[info]             +- *(4) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, 4), true, [id=#6035]
[info]                   +- *(3) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                      +- *(3) Project [ws_ext_sales_price#1043, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                         +- *(3) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                            :- *(3) Project [ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :  +- *(3) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                            :     :- *(3) Project [ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                            :     :  +- *(3) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                            :     :     +- *(3) ColumnarToRow
[info]                            :     :        +- BatchScan[ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#6020]
[info]                            :        +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :           +- *(1) Filter (i_category#508 IN (Sports,Books,Home) AND isnotnull(i_item_sk#496))
[info]                            :              +- *(1) ColumnarToRow
[info]                            :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#6029]
[info]                               +- *(2) Project [d_date_sk#331]
[info]                                  +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10644)) AND (d_date#333 <= 10674)) AND isnotnull(d_date_sk#331))
[info]                                     +- *(2) ColumnarToRow
[info]                                        +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 170 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q12                                                 170            170           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q13
[info] == Physical Plan ==
[info] *(7) HashAggregate(keys=[], functions=[avg(cast(ss_quantity#1173 as bigint)), avg(UnscaledValue(ss_ext_sales_price#1178)), avg(UnscaledValue(ss_ext_wholesale_cost#1179)), sum(UnscaledValue(ss_ext_wholesale_cost#1179))])
[info] +- Exchange SinglePartition, true, [id=#6252]
[info]    +- *(6) HashAggregate(keys=[], functions=[partial_avg(cast(ss_quantity#1173 as bigint)), partial_avg(UnscaledValue(ss_ext_sales_price#1178)), partial_avg(UnscaledValue(ss_ext_wholesale_cost#1179)), partial_sum(UnscaledValue(ss_ext_wholesale_cost#1179))])
[info]       +- *(6) Project [ss_quantity#1173, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179]
[info]          +- *(6) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight, (((((((cd_marital_status#292 = M) AND (cd_education_status#293 = Advanced Degree)) AND (ss_sales_price#1176 >= 100.00)) AND (ss_sales_price#1176 <= 150.00)) AND (hd_dep_count#451 = 3)) OR (((((cd_marital_status#292 = S) AND (cd_education_status#293 = College)) AND (ss_sales_price#1176 >= 50.00)) AND (ss_sales_price#1176 <= 100.00)) AND (hd_dep_count#451 = 1))) OR (((((cd_marital_status#292 = W) AND (cd_education_status#293 = 2 yr Degree)) AND (ss_sales_price#1176 >= 150.00)) AND (ss_sales_price#1176 <= 200.00)) AND (hd_dep_count#451 = 1)))
[info]             :- *(6) Project [ss_hdemo_sk#1168, ss_quantity#1173, ss_sales_price#1176, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, cd_marital_status#292, cd_education_status#293]
[info]             :  +- *(6) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]             :     :- *(6) Project [ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_quantity#1173, ss_sales_price#1176, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179]
[info]             :     :  +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :     :     :- *(6) Project [ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_quantity#1173, ss_sales_price#1176, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_sold_date_sk#1186]
[info]             :     :     :  +- *(6) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight, ((((ca_state#241 IN (TX,OH) AND (ss_net_profit#1185 >= 100.00)) AND (ss_net_profit#1185 <= 200.00)) OR ((ca_state#241 IN (OR,NM,KY) AND (ss_net_profit#1185 >= 150.00)) AND (ss_net_profit#1185 <= 300.00))) OR ((ca_state#241 IN (VA,TX,MS) AND (ss_net_profit#1185 >= 50.00)) AND (ss_net_profit#1185 <= 250.00)))
[info]             :     :     :     :- *(6) Project [ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_quantity#1173, ss_sales_price#1176, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]             :     :     :     :  +- *(6) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]             :     :     :     :     :- *(6) Project [ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]             :     :     :     :     :  +- *(6) Filter ((((isnotnull(ss_store_sk#1170) AND isnotnull(ss_addr_sk#1169)) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_cdemo_sk#1167)) AND isnotnull(ss_hdemo_sk#1168))
[info]             :     :     :     :     :     +- *(6) ColumnarToRow
[info]             :     :     :     :     :        +- BatchScan[ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_pr...
[info]             :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#6210]
[info]             :     :     :     :        +- *(1) Project [s_store_sk#670]
[info]             :     :     :     :           +- *(1) Filter isnotnull(s_store_sk#670)
[info]             :     :     :     :              +- *(1) ColumnarToRow
[info]             :     :     :     :                 +- BatchScan[s_store_sk#670] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int>
[info]             :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#6219]
[info]             :     :     :        +- *(2) Project [ca_address_sk#233, ca_state#241]
[info]             :     :     :           +- *(2) Filter ((isnotnull(ca_country#243) AND (ca_country#243 = United States)) AND isnotnull(ca_address_sk#233))
[info]             :     :     :              +- *(2) ColumnarToRow
[info]             :     :     :                 +- BatchScan[ca_address_sk#233, ca_state#241, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
[info]             :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#6228]
[info]             :     :        +- *(3) Project [d_date_sk#331]
[info]             :     :           +- *(3) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]             :     :              +- *(3) ColumnarToRow
[info]             :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#6237]
[info]             :        +- *(4) Project [cd_demo_sk#290, cd_marital_status#292, cd_education_status#293]
[info]             :           +- *(4) Filter isnotnull(cd_demo_sk#290)
[info]             :              +- *(4) ColumnarToRow
[info]             :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
[info]             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#6246]
[info]                +- *(5) Project [hd_demo_sk#448, hd_dep_count#451]
[info]                   +- *(5) Filter isnotnull(hd_demo_sk#448)
[info]                      +- *(5) ColumnarToRow
[info]                         +- BatchScan[hd_demo_sk#448, hd_dep_count#451] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 249 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q13                                                 249            249           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q14a
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#3859 ASC NULLS FIRST,i_brand_id#3860 ASC NULLS FIRST,i_class_id#3861 ASC NULLS FIRST,i_category_id#3862 ASC NULLS FIRST], output=[channel#3859,i_brand_id#3860,i_class_id#3861,i_category_id#3862,sum(sales)#3849,sum(number_sales)#3850L])
[info] +- *(119) HashAggregate(keys=[channel#3859, i_brand_id#3860, i_class_id#3861, i_category_id#3862, spark_grouping_id#3854], functions=[sum(sales#3793), sum(number_sales#3794L)])
[info]    +- Exchange hashpartitioning(channel#3859, i_brand_id#3860, i_class_id#3861, i_category_id#3862, spark_grouping_id#3854, 4), true, [id=#11371]
[info]       +- *(118) HashAggregate(keys=[channel#3859, i_brand_id#3860, i_class_id#3861, i_category_id#3862, spark_grouping_id#3854], functions=[partial_sum(sales#3793), partial_sum(number_sales#3794L)])
[info]          +- *(118) Expand [List(sales#3793, number_sales#3794L, channel#3792, i_brand_id#503, i_class_id#505, i_category_id#507, 0), List(sales#3793, number_sales#3794L, channel#3792, i_brand_id#503, i_class_id#505, null, 1), List(sales#3793, number_sales#3794L, channel#3792, i_brand_id#503, null, null, 3), List(sales#3793, number_sales#3794L, channel#3792, null, null, null, 7), List(sales#3793, number_sales#3794L, null, null, null, null, 15)], [sales#3793, number_sales#3794L, channel#3859, i_brand_id#3860, i_class_id#3861, i_category_id#3862, spark_grouping_id#3854]
[info]             +- Union
[info]                :- *(39) Project [sales#3793, number_sales#3794L, channel#3792, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :  +- *(39) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#3828) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#3828 as decimal(32,6)) > cast(Subquery scalar-subquery#3795, [id=#10042] as decimal(32,6))))
[info]                :     :  +- Subquery scalar-subquery#3795, [id=#10042]
[info]                :     :     +- *(8) HashAggregate(keys=[], functions=[avg(CheckOverflow((promote_precision(cast(cast(quantity#3810 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#3811 as decimal(12,2)))), DecimalType(18,2), true))])
[info]                :     :        +- Exchange SinglePartition, true, [id=#10038]
[info]                :     :           +- *(7) HashAggregate(keys=[], functions=[partial_avg(CheckOverflow((promote_precision(cast(cast(quantity#3810 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#3811 as decimal(12,2)))), DecimalType(18,2), true))])
[info]                :     :              +- Union
[info]                :     :                 :- *(2) Project [ss_quantity#1173 AS quantity#3810, ss_list_price#1175 AS list_price#3811]
[info]                :     :                 :  +- *(2) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :                 :     :- *(2) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]                :     :                 :     :  +- *(2) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :     :                 :     :     +- *(2) ColumnarToRow
[info]                :     :                 :     :        +- BatchScan[ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>
[info]                :     :                 :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8818]
[info]                :     :                 :- *(4) Project [cs_quantity#895 AS quantity#3812, cs_list_price#897 AS list_price#3813]
[info]                :     :                 :  +- *(4) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :                 :     :- *(4) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]                :     :                 :     :  +- *(4) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :                 :     :     +- *(4) ColumnarToRow
[info]                :     :                 :     :        +- BatchScan[cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>
[info]                :     :                 :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8818]
[info]                :     :                 +- *(6) Project [ws_quantity#1038 AS quantity#3814, ws_list_price#1040 AS list_price#3815]
[info]                :     :                    +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :                       :- *(6) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]                :     :                       :  +- *(6) Filter isnotnull(ws_sold_date_sk#1054)
[info]                :     :                       :     +- *(6) ColumnarToRow
[info]                :     :                       :        +- BatchScan[ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>
[info]                :     :                       +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8818]
[info]                :     +- *(39) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]                :        +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#9991]
[info]                :           +- *(38) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]                :              +- *(38) Project [ss_quantity#1173, ss_list_price#1175, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                 +- *(38) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :                    :- *(38) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :  +- *(38) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :                    :     :- SortMergeJoin [ss_item_sk#1165], [ss_item_sk#3809], LeftSemi
[info]                :                    :     :  :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                :                    :     :  :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#8789]
[info]                :                    :     :  :     +- *(1) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]                :                    :     :  :        +- *(1) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                :                    :     :  :           +- *(1) ColumnarToRow
[info]                :                    :     :  :              +- BatchScan[ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>
[info]                :                    :     :  +- *(18) Sort [ss_item_sk#3809 ASC NULLS FIRST], false, 0
[info]                :                    :     :     +- Exchange hashpartitioning(ss_item_sk#3809, 4), true, [id=#9720]
[info]                :                    :     :        +- *(17) Project [i_item_sk#496 AS ss_item_sk#3809]
[info]                :                    :     :           +- *(17) BroadcastHashJoin [i_brand_id#503, i_class_id#505, i_category_id#507], [brand_id#3806, class_id#3807, category_id#3808], Inner, BuildLeft
[info]                :                    :     :              :- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, true], input[2, int, true], input[3, int, true])), [id=#8798]
[info]                :                    :     :              :  +- *(3) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :              :     +- *(3) Filter ((isnotnull(i_category_id#507) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505))
[info]                :                    :     :              :        +- *(3) ColumnarToRow
[info]                :                    :     :              :           +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]                :                    :     :              +- *(17) HashAggregate(keys=[brand_id#3806, class_id#3807, category_id#3808], functions=[])
[info]                :                    :     :                 +- *(17) HashAggregate(keys=[brand_id#3806, class_id#3807, category_id#3808], functions=[])
[info]                :                    :     :                    +- *(17) HashAggregate(keys=[brand_id#3806, class_id#3807, category_id#3808], functions=[])
[info]                :                    :     :                       +- Exchange hashpartitioning(brand_id#3806, class_id#3807, category_id#3808, 4), true, [id=#9671]
[info]                :                    :     :                          +- *(16) HashAggregate(keys=[brand_id#3806, class_id#3807, category_id#3808], functions=[])
[info]                :                    :     :                             +- SortMergeJoin [coalesce(brand_id#3806, 0), isnull(brand_id#3806), coalesce(class_id#3807, 0), isnull(class_id#3807), coalesce(category_id#3808, 0), isnull(category_id#3808)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]                :                    :     :                                :- SortMergeJoin [coalesce(brand_id#3806, 0), isnull(brand_id#3806), coalesce(class_id#3807, 0), isnull(class_id#3807), coalesce(category_id#3808, 0), isnull(category_id#3808)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]                :                    :     :                                :  :- *(7) Sort [coalesce(brand_id#3806, 0) ASC NULLS FIRST, isnull(brand_id#3806) ASC NULLS FIRST, coalesce(class_id#3807, 0) ASC NULLS FIRST, isnull(class_id#3807) ASC NULLS FIRST, coalesce(category_id#3808, 0) ASC NULLS FIRST, isnull(category_id#3808) ASC NULLS FIRST], false, 0
[info]                :                    :     :                                :  :  +- Exchange hashpartitioning(coalesce(brand_id#3806, 0), isnull(brand_id#3806), coalesce(class_id#3807, 0), isnull(class_id#3807), coalesce(category_id#3808, 0), isnull(category_id#3808), 4), true, [id=#8823]
[info]                :                    :     :                                :  :     +- *(6) Project [i_brand_id#503 AS brand_id#3806, i_class_id#505 AS class_id#3807, i_category_id#507 AS category_id#3808]
[info]                :                    :     :                                :  :        +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :                    :     :                                :  :           :- *(6) Project [ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :                                :  :           :  +- *(6) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :                    :     :                                :  :           :     :- *(6) Project [ss_item_sk#1165, ss_sold_date_sk#1186]
[info]                :                    :     :                                :  :           :     :  +- *(6) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                :                    :     :                                :  :           :     :     +- *(6) ColumnarToRow
[info]                :                    :     :                                :  :           :     :        +- BatchScan[ss_item_sk#1165, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int>
[info]                :                    :     :                                :  :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8809]
[info]                :                    :     :                                :  :           :        +- *(4) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :                                :  :           :           +- *(4) Filter (((isnotnull(i_item_sk#496) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505)) AND isnotnull(i_category_id#507))
[info]                :                    :     :                                :  :           :              +- *(4) ColumnarToRow
[info]                :                    :     :                                :  :           :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]                :                    :     :                                :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8818]
[info]                :                    :     :                                :  :              +- *(5) Project [d_date_sk#331]
[info]                :                    :     :                                :  :                 +- *(5) Filter (((isnotnull(d_year#337) AND (d_year#337 >= 1999)) AND (d_year#337 <= 2001)) AND isnotnull(d_date_sk#331))
[info]                :                    :     :                                :  :                    +- *(5) ColumnarToRow
[info]                :                    :     :                                :  :                       +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                :                    :     :                                :  +- *(11) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]                :                    :     :                                :     +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#9595]
[info]                :                    :     :                                :        +- *(10) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :                                :           +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :                    :     :                                :              :- *(10) Project [cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :                                :              :  +- *(10) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                :                    :     :                                :              :     :- *(10) Project [cs_item_sk#892, cs_sold_date_sk#911]
[info]                :                    :     :                                :              :     :  +- *(10) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]                :                    :     :                                :              :     :     +- *(10) ColumnarToRow
[info]                :                    :     :                                :              :     :        +- BatchScan[cs_item_sk#892, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int>
[info]                :                    :     :                                :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8836]
[info]                :                    :     :                                :              :        +- *(8) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :                                :              :           +- *(8) Filter isnotnull(i_item_sk#496)
[info]                :                    :     :                                :              :              +- *(8) ColumnarToRow
[info]                :                    :     :                                :              :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]                :                    :     :                                :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8818]
[info]                :                    :     :                                +- *(15) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]                :                    :     :                                   +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#9625]
[info]                :                    :     :                                      +- *(14) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :                                         +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :                    :     :                                            :- *(14) Project [ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :                                            :  +- *(14) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                :                    :     :                                            :     :- *(14) Project [ws_item_sk#1023, ws_sold_date_sk#1054]
[info]                :                    :     :                                            :     :  +- *(14) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                :                    :     :                                            :     :     +- *(14) ColumnarToRow
[info]                :                    :     :                                            :     :        +- BatchScan[ws_item_sk#1023, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int>
[info]                :                    :     :                                            :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8836]
[info]                :                    :     :                                            +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8818]
[info]                :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#9964]
[info]                :                    :        +- SortMergeJoin [i_item_sk#496], [ss_item_sk#3809], LeftSemi
[info]                :                    :           :- *(20) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]                :                    :           :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#8905]
[info]                :                    :           :     +- *(19) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :           :        +- *(19) Filter isnotnull(i_item_sk#496)
[info]                :                    :           :           +- *(19) ColumnarToRow
[info]                :                    :           :              +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]                :                    :           +- *(36) Sort [ss_item_sk#3809 ASC NULLS FIRST], false, 0
[info]                :                    :              +- ReusedExchange [ss_item_sk#3809], Exchange hashpartitioning(ss_item_sk#3809, 4), true, [id=#9720]
[info]                :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#9024]
[info]                :                       +- *(37) Project [d_date_sk#331]
[info]                :                          +- *(37) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2001)) AND (d_moy#339 = 11)) AND isnotnull(d_date_sk#331))
[info]                :                             +- *(37) ColumnarToRow
[info]                :                                +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :- *(78) Project [sales#3798, number_sales#3799L, channel#3797, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :  +- *(78) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#3831) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#3831 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#3795, [id=#10042] as decimal(32,6))))
[info]                :     :  +- ReusedSubquery Subquery scalar-subquery#3795, [id=#10042]
[info]                :     +- *(78) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]                :        +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#10518]
[info]                :           +- *(77) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]                :              +- *(77) Project [cs_quantity#895, cs_list_price#897, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                 +- *(77) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :                    :- *(77) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :  +- *(77) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                :                    :     :- SortMergeJoin [cs_item_sk#892], [ss_item_sk#3809], LeftSemi
[info]                :                    :     :  :- *(41) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                :                    :     :  :  +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#9041]
[info]                :                    :     :  :     +- *(40) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]                :                    :     :  :        +- *(40) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]                :                    :     :  :           +- *(40) ColumnarToRow
[info]                :                    :     :  :              +- BatchScan[cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>
[info]                :                    :     :  +- *(57) Sort [ss_item_sk#3809 ASC NULLS FIRST], false, 0
[info]                :                    :     :     +- ReusedExchange [ss_item_sk#3809], Exchange hashpartitioning(ss_item_sk#3809, 4), true, [id=#9720]
[info]                :                    :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#9964]
[info]                :                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#9024]
[info]                +- *(117) Project [sales#3803, number_sales#3804L, channel#3802, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                   +- *(117) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#3834) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#3834 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#3795, [id=#10042] as decimal(32,6))))
[info]                      :  +- ReusedSubquery Subquery scalar-subquery#3795, [id=#10042]
[info]                      +- *(117) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]                         +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#11200]
[info]                            +- *(116) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]                               +- *(116) Project [ws_quantity#1038, ws_list_price#1040, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                                  +- *(116) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                                     :- *(116) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                                     :  +- *(116) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                                     :     :- SortMergeJoin [ws_item_sk#1023], [ss_item_sk#3809], LeftSemi
[info]                                     :     :  :- *(80) Sort [ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]                                     :     :  :  +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#9293]
[info]                                     :     :  :     +- *(79) Project [ws_item_sk#1023, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]                                     :     :  :        +- *(79) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                                     :     :  :           +- *(79) ColumnarToRow
[info]                                     :     :  :              +- BatchScan[ws_item_sk#1023, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>
[info]                                     :     :  +- *(96) Sort [ss_item_sk#3809 ASC NULLS FIRST], false, 0
[info]                                     :     :     +- ReusedExchange [ss_item_sk#3809], Exchange hashpartitioning(ss_item_sk#3809, 4), true, [id=#9720]
[info]                                     :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#9964]
[info]                                     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#9024]
[info] 
[info] 
[info]   Stopped after 1 iterations, 2538 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q14a                                               2538           2538           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q14b
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#4206 ASC NULLS FIRST,i_brand_id#503 ASC NULLS FIRST,i_class_id#505 ASC NULLS FIRST,i_category_id#507 ASC NULLS FIRST], output=[channel#4206,i_brand_id#503,i_class_id#505,i_category_id#507,sales#4207,number_sales#4208L,channel#4212,i_brand_id#4246,i_class_id#4248,i_category_id#4250,sales#4213,number_sales#4214L])
[info] +- *(79) SortMergeJoin [i_brand_id#503, i_class_id#505, i_category_id#507], [i_brand_id#4246, i_class_id#4248, i_category_id#4250], Inner
[info]    :- *(39) Sort [i_brand_id#503 ASC NULLS FIRST, i_class_id#505 ASC NULLS FIRST, i_category_id#507 ASC NULLS FIRST], false, 0
[info]    :  +- *(39) Project [channel#4206, i_brand_id#503, i_class_id#505, i_category_id#507, sales#4207, number_sales#4208L]
[info]    :     +- *(39) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#4235) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#4235 as decimal(32,6)) > cast(Subquery scalar-subquery#4209, [id=#14113] as decimal(32,6))))
[info]    :        :  +- Subquery scalar-subquery#4209, [id=#14113]
[info]    :        :     +- *(8) HashAggregate(keys=[], functions=[avg(CheckOverflow((promote_precision(cast(cast(quantity#4220 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#4221 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :        :        +- Exchange SinglePartition, true, [id=#14109]
[info]    :        :           +- *(7) HashAggregate(keys=[], functions=[partial_avg(CheckOverflow((promote_precision(cast(cast(quantity#4220 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#4221 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :        :              +- Union
[info]    :        :                 :- *(2) Project [ss_quantity#1173 AS quantity#4220, ss_list_price#1175 AS list_price#4221]
[info]    :        :                 :  +- *(2) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :        :                 :     :- *(2) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]    :        :                 :     :  +- *(2) Filter isnotnull(ss_sold_date_sk#1186)
[info]    :        :                 :     :     +- *(2) ColumnarToRow
[info]    :        :                 :     :        +- BatchScan[ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>
[info]    :        :                 :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13136]
[info]    :        :                 :- *(4) Project [cs_quantity#895 AS quantity#4222, cs_list_price#897 AS list_price#4223]
[info]    :        :                 :  +- *(4) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :        :                 :     :- *(4) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]    :        :                 :     :  +- *(4) Filter isnotnull(cs_sold_date_sk#911)
[info]    :        :                 :     :     +- *(4) ColumnarToRow
[info]    :        :                 :     :        +- BatchScan[cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>
[info]    :        :                 :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13136]
[info]    :        :                 +- *(6) Project [ws_quantity#1038 AS quantity#4224, ws_list_price#1040 AS list_price#4225]
[info]    :        :                    +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]    :        :                       :- *(6) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]    :        :                       :  +- *(6) Filter isnotnull(ws_sold_date_sk#1054)
[info]    :        :                       :     +- *(6) ColumnarToRow
[info]    :        :                       :        +- BatchScan[ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>
[info]    :        :                       +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13136]
[info]    :        +- *(39) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]    :           +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#14062]
[info]    :              +- *(38) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]    :                 +- *(38) Project [ss_quantity#1173, ss_list_price#1175, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                    +- *(38) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :                       :- *(38) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :  +- *(38) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :- SortMergeJoin [ss_item_sk#1165], [ss_item_sk#4219], LeftSemi
[info]    :                       :     :  :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]    :                       :     :  :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#13107]
[info]    :                       :     :  :     +- *(1) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]    :                       :     :  :        +- *(1) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]    :                       :     :  :           +- *(1) ColumnarToRow
[info]    :                       :     :  :              +- BatchScan[ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>
[info]    :                       :     :  +- *(18) Sort [ss_item_sk#4219 ASC NULLS FIRST], false, 0
[info]    :                       :     :     +- Exchange hashpartitioning(ss_item_sk#4219, 4), true, [id=#13783]
[info]    :                       :     :        +- *(17) Project [i_item_sk#496 AS ss_item_sk#4219]
[info]    :                       :     :           +- *(17) BroadcastHashJoin [i_brand_id#503, i_class_id#505, i_category_id#507], [brand_id#4216, class_id#4217, category_id#4218], Inner, BuildLeft
[info]    :                       :     :              :- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, true], input[2, int, true], input[3, int, true])), [id=#13116]
[info]    :                       :     :              :  +- *(3) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :              :     +- *(3) Filter ((isnotnull(i_category_id#507) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505))
[info]    :                       :     :              :        +- *(3) ColumnarToRow
[info]    :                       :     :              :           +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :     :              +- *(17) HashAggregate(keys=[brand_id#4216, class_id#4217, category_id#4218], functions=[])
[info]    :                       :     :                 +- *(17) HashAggregate(keys=[brand_id#4216, class_id#4217, category_id#4218], functions=[])
[info]    :                       :     :                    +- *(17) HashAggregate(keys=[brand_id#4216, class_id#4217, category_id#4218], functions=[])
[info]    :                       :     :                       +- Exchange hashpartitioning(brand_id#4216, class_id#4217, category_id#4218, 4), true, [id=#13734]
[info]    :                       :     :                          +- *(16) HashAggregate(keys=[brand_id#4216, class_id#4217, category_id#4218], functions=[])
[info]    :                       :     :                             +- SortMergeJoin [coalesce(brand_id#4216, 0), isnull(brand_id#4216), coalesce(class_id#4217, 0), isnull(class_id#4217), coalesce(category_id#4218, 0), isnull(category_id#4218)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]    :                       :     :                                :- SortMergeJoin [coalesce(brand_id#4216, 0), isnull(brand_id#4216), coalesce(class_id#4217, 0), isnull(class_id#4217), coalesce(category_id#4218, 0), isnull(category_id#4218)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]    :                       :     :                                :  :- *(7) Sort [coalesce(brand_id#4216, 0) ASC NULLS FIRST, isnull(brand_id#4216) ASC NULLS FIRST, coalesce(class_id#4217, 0) ASC NULLS FIRST, isnull(class_id#4217) ASC NULLS FIRST, coalesce(category_id#4218, 0) ASC NULLS FIRST, isnull(category_id#4218) ASC NULLS FIRST], false, 0
[info]    :                       :     :                                :  :  +- Exchange hashpartitioning(coalesce(brand_id#4216, 0), isnull(brand_id#4216), coalesce(class_id#4217, 0), isnull(class_id#4217), coalesce(category_id#4218, 0), isnull(category_id#4218), 4), true, [id=#13141]
[info]    :                       :     :                                :  :     +- *(6) Project [i_brand_id#503 AS brand_id#4216, i_class_id#505 AS class_id#4217, i_category_id#507 AS category_id#4218]
[info]    :                       :     :                                :  :        +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :                       :     :                                :  :           :- *(6) Project [ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :  :           :  +- *(6) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :                                :  :           :     :- *(6) Project [ss_item_sk#1165, ss_sold_date_sk#1186]
[info]    :                       :     :                                :  :           :     :  +- *(6) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]    :                       :     :                                :  :           :     :     +- *(6) ColumnarToRow
[info]    :                       :     :                                :  :           :     :        +- BatchScan[ss_item_sk#1165, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int>
[info]    :                       :     :                                :  :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13127]
[info]    :                       :     :                                :  :           :        +- *(4) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :  :           :           +- *(4) Filter (((isnotnull(i_item_sk#496) AND isnotnull(i_category_id#507)) AND isnotnull(i_class_id#505)) AND isnotnull(i_brand_id#503))
[info]    :                       :     :                                :  :           :              +- *(4) ColumnarToRow
[info]    :                       :     :                                :  :           :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :     :                                :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13136]
[info]    :                       :     :                                :  :              +- *(5) Project [d_date_sk#331]
[info]    :                       :     :                                :  :                 +- *(5) Filter (((isnotnull(d_year#337) AND (d_year#337 >= 1999)) AND (d_year#337 <= 2001)) AND isnotnull(d_date_sk#331))
[info]    :                       :     :                                :  :                    +- *(5) ColumnarToRow
[info]    :                       :     :                                :  :                       +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]    :                       :     :                                :  +- *(11) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]    :                       :     :                                :     +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#13658]
[info]    :                       :     :                                :        +- *(10) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :           +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :                       :     :                                :              :- *(10) Project [cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :              :  +- *(10) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :                                :              :     :- *(10) Project [cs_item_sk#892, cs_sold_date_sk#911]
[info]    :                       :     :                                :              :     :  +- *(10) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]    :                       :     :                                :              :     :     +- *(10) ColumnarToRow
[info]    :                       :     :                                :              :     :        +- BatchScan[cs_item_sk#892, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int>
[info]    :                       :     :                                :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13154]
[info]    :                       :     :                                :              :        +- *(8) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :              :           +- *(8) Filter isnotnull(i_item_sk#496)
[info]    :                       :     :                                :              :              +- *(8) ColumnarToRow
[info]    :                       :     :                                :              :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :     :                                :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13136]
[info]    :                       :     :                                +- *(15) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]    :                       :     :                                   +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#13688]
[info]    :                       :     :                                      +- *(14) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                         +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]    :                       :     :                                            :- *(14) Project [ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                            :  +- *(14) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :                                            :     :- *(14) Project [ws_item_sk#1023, ws_sold_date_sk#1054]
[info]    :                       :     :                                            :     :  +- *(14) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]    :                       :     :                                            :     :     +- *(14) ColumnarToRow
[info]    :                       :     :                                            :     :        +- BatchScan[ws_item_sk#1023, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int>
[info]    :                       :     :                                            :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13154]
[info]    :                       :     :                                            +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13136]
[info]    :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#14027]
[info]    :                       :        +- SortMergeJoin [i_item_sk#496], [ss_item_sk#4219], LeftSemi
[info]    :                       :           :- *(20) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]    :                       :           :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#13223]
[info]    :                       :           :     +- *(19) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :           :        +- *(19) Filter (((isnotnull(i_item_sk#496) AND isnotnull(i_brand_id#503)) AND isnotnull(i_category_id#507)) AND isnotnull(i_class_id#505))
[info]    :                       :           :           +- *(19) ColumnarToRow
[info]    :                       :           :              +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :           +- *(36) Sort [ss_item_sk#4219 ASC NULLS FIRST], false, 0
[info]    :                       :              +- ReusedExchange [ss_item_sk#4219], Exchange hashpartitioning(ss_item_sk#4219, 4), true, [id=#13783]
[info]    :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13342]
[info]    :                          +- *(37) Project [d_date_sk#331]
[info]    :                             +- *(37) Filter ((isnotnull(d_week_seq#335) AND isnotnull(d_date_sk#331)) AND (d_week_seq#335 = Subquery scalar-subquery#4205, [id=#12334]))
[info]    :                                :  +- Subquery scalar-subquery#4205, [id=#12334]
[info]    :                                :     +- *(1) Project [d_week_seq#335]
[info]    :                                :        +- *(1) Filter (((((isnotnull(d_dom#340) AND isnotnull(d_year#337)) AND isnotnull(d_moy#339)) AND (d_year#337 = 2000)) AND (d_moy#339 = 12)) AND (d_dom#340 = 11))
[info]    :                                :           +- *(1) ColumnarToRow
[info]    :                                :              +- BatchScan[d_week_seq#335, d_year#337, d_moy#339, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>
[info]    :                                +- *(37) ColumnarToRow
[info]    :                                   +- BatchScan[d_date_sk#331, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
[info]    +- *(78) Sort [i_brand_id#4246 ASC NULLS FIRST, i_class_id#4248 ASC NULLS FIRST, i_category_id#4250 ASC NULLS FIRST], false, 0
[info]       +- *(78) Project [channel#4212, i_brand_id#4246, i_class_id#4248, i_category_id#4250, sales#4213, number_sales#4214L]
[info]          +- *(78) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#4238) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#4238 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#4209, [id=#14113] as decimal(32,6))))
[info]             :  +- ReusedSubquery Subquery scalar-subquery#4209, [id=#14113]
[info]             +- *(78) HashAggregate(keys=[i_brand_id#4246, i_class_id#4248, i_category_id#4250], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]                +- Exchange hashpartitioning(i_brand_id#4246, i_class_id#4248, i_category_id#4250, 4), true, [id=#14619]
[info]                   +- *(77) HashAggregate(keys=[i_brand_id#4246, i_class_id#4248, i_category_id#4250], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]                      +- *(77) Project [ss_quantity#1173, ss_list_price#1175, i_brand_id#4246, i_class_id#4248, i_category_id#4250]
[info]                         +- *(77) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                            :- *(77) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186, i_brand_id#4246, i_class_id#4248, i_category_id#4250]
[info]                            :  +- *(77) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#4239], Inner, BuildRight
[info]                            :     :- SortMergeJoin [ss_item_sk#1165], [ss_item_sk#4219], LeftSemi
[info]                            :     :  :- *(41) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                            :     :  :  +- ReusedExchange [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186], Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#13107]
[info]                            :     :  +- *(57) Sort [ss_item_sk#4219 ASC NULLS FIRST], false, 0
[info]                            :     :     +- ReusedExchange [ss_item_sk#4219], Exchange hashpartitioning(ss_item_sk#4219, 4), true, [id=#13783]
[info]                            :     +- ReusedExchange [i_item_sk#4239, i_brand_id#4246, i_class_id#4248, i_category_id#4250], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#14027]
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13596]
[info]                               +- *(76) Project [d_date_sk#331]
[info]                                  +- *(76) Filter ((isnotnull(d_week_seq#335) AND isnotnull(d_date_sk#331)) AND (d_week_seq#335 = Subquery scalar-subquery#4211, [id=#12537]))
[info]                                     :  +- Subquery scalar-subquery#4211, [id=#12537]
[info]                                     :     +- *(1) Project [d_week_seq#335]
[info]                                     :        +- *(1) Filter (((((isnotnull(d_dom#340) AND isnotnull(d_year#337)) AND isnotnull(d_moy#339)) AND (d_year#337 = 1999)) AND (d_moy#339 = 12)) AND (d_dom#340 = 11))
[info]                                     :           +- *(1) ColumnarToRow
[info]                                     :              +- BatchScan[d_week_seq#335, d_year#337, d_moy#339, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>
[info]                                     +- *(76) ColumnarToRow
[info]                                        +- BatchScan[d_date_sk#331, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 1715 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q14b                                               1716           1716           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q15
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ca_zip#242 ASC NULLS FIRST], output=[ca_zip#242,sum(cs_sales_price)#4443])
[info] +- *(5) HashAggregate(keys=[ca_zip#242], functions=[sum(UnscaledValue(cs_sales_price#898))])
[info]    +- Exchange hashpartitioning(ca_zip#242, 4), true, [id=#14974]
[info]       +- *(4) HashAggregate(keys=[ca_zip#242], functions=[partial_sum(UnscaledValue(cs_sales_price#898))])
[info]          +- *(4) Project [cs_sales_price#898, ca_zip#242]
[info]             +- *(4) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :- *(4) Project [cs_sales_price#898, cs_sold_date_sk#911, ca_zip#242]
[info]                :  +- *(4) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight, ((substring(ca_zip#242, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR ca_state#241 IN (CA,WA,GA)) OR (cs_sales_price#898 > 500.00))
[info]                :     :- *(4) Project [cs_sales_price#898, cs_sold_date_sk#911, c_current_addr_sk#160]
[info]                :     :  +- *(4) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]                :     :     :- *(4) Project [cs_bill_customer_sk#880, cs_sales_price#898, cs_sold_date_sk#911]
[info]                :     :     :  +- *(4) Filter (isnotnull(cs_bill_customer_sk#880) AND isnotnull(cs_sold_date_sk#911))
[info]                :     :     :     +- *(4) ColumnarToRow
[info]                :     :     :        +- BatchScan[cs_bill_customer_sk#880, cs_sales_price#898, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_sales_price:decimal(7,2)>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#14950]
[info]                :     :        +- *(1) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]                :     :           +- *(1) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]                :     :              +- *(1) ColumnarToRow
[info]                :     :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#14959]
[info]                :        +- *(2) Project [ca_address_sk#233, ca_state#241, ca_zip#242]
[info]                :           +- *(2) Filter isnotnull(ca_address_sk#233)
[info]                :              +- *(2) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_state#241, ca_zip#242] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#14968]
[info]                   +- *(3) Project [d_date_sk#331]
[info]                      +- *(3) Filter ((((isnotnull(d_qoy#341) AND isnotnull(d_year#337)) AND (d_qoy#341 = 2)) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]                         +- *(3) ColumnarToRow
[info]                            +- BatchScan[d_date_sk#331, d_year#337, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 129 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q15                                                 129            129           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q16
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[order count #4476L ASC NULLS FIRST], output=[order count #4476L,total shipping cost #4477,total net profit #4478])
[info] +- *(10) HashAggregate(keys=[], functions=[sum(UnscaledValue(cs_ext_ship_cost#905)), sum(UnscaledValue(cs_net_profit#910)), count(distinct cs_order_number#894L)])
[info]    +- Exchange SinglePartition, true, [id=#15200]
[info]       +- *(9) HashAggregate(keys=[], functions=[merge_sum(UnscaledValue(cs_ext_ship_cost#905)), merge_sum(UnscaledValue(cs_net_profit#910)), partial_count(distinct cs_order_number#894L)])
[info]          +- *(9) HashAggregate(keys=[cs_order_number#894L], functions=[merge_sum(UnscaledValue(cs_ext_ship_cost#905)), merge_sum(UnscaledValue(cs_net_profit#910))])
[info]             +- *(9) HashAggregate(keys=[cs_order_number#894L], functions=[partial_sum(UnscaledValue(cs_ext_ship_cost#905)), partial_sum(UnscaledValue(cs_net_profit#910))])
[info]                +- *(9) Project [cs_order_number#894L, cs_ext_ship_cost#905, cs_net_profit#910]
[info]                   +- *(9) BroadcastHashJoin [cs_call_center_sk#888], [cc_call_center_sk#1492], Inner, BuildRight
[info]                      :- *(9) Project [cs_call_center_sk#888, cs_order_number#894L, cs_ext_ship_cost#905, cs_net_profit#910]
[info]                      :  +- *(9) BroadcastHashJoin [cs_ship_addr_sk#887], [ca_address_sk#233], Inner, BuildRight
[info]                      :     :- *(9) Project [cs_ship_addr_sk#887, cs_call_center_sk#888, cs_order_number#894L, cs_ext_ship_cost#905, cs_net_profit#910]
[info]                      :     :  +- *(9) BroadcastHashJoin [cs_ship_date_sk#879], [d_date_sk#331], Inner, BuildRight
[info]                      :     :     :- *(9) BroadcastHashJoin [cs_order_number#894L], [cr_order_number#56L], LeftAnti, BuildRight
[info]                      :     :     :  :- *(9) Project [cs_ship_date_sk#879, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_order_number#894L, cs_ext_ship_cost#905, cs_net_profit#910]
[info]                      :     :     :  :  +- SortMergeJoin [cs_order_number#894L], [cs_order_number#894L#4501L], LeftSemi, NOT (cs_warehouse_sk#891 = cs_warehouse_sk#891#4495)
[info]                      :     :     :  :     :- *(2) Sort [cs_order_number#894L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :     :  +- Exchange hashpartitioning(cs_order_number#894L, 4), true, [id=#15147]
[info]                      :     :     :  :     :     +- *(1) Project [cs_ship_date_sk#879, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_warehouse_sk#891, cs_order_number#894L, cs_ext_ship_cost#905, cs_net_profit#910]
[info]                      :     :     :  :     :        +- *(1) Filter ((isnotnull(cs_ship_date_sk#879) AND isnotnull(cs_ship_addr_sk#887)) AND isnotnull(cs_call_center_sk#888))
[info]                      :     :     :  :     :           +- *(1) ColumnarToRow
[info]                      :     :     :  :     :              +- BatchScan[cs_ship_date_sk#879, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_warehouse_sk#891, cs_order_number#894L, cs_ext_ship_cost#905, cs_net_profit#910] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ship_date_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_warehouse_sk:int,cs_order...
[info]                      :     :     :  :     +- *(4) Sort [cs_order_number#894L#4501L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :        +- Exchange hashpartitioning(cs_order_number#894L#4501L, 4), true, [id=#15155]
[info]                      :     :     :  :           +- *(3) Project [cs_warehouse_sk#891 AS cs_warehouse_sk#891#4495, cs_order_number#894L AS cs_order_number#894L#4501L]
[info]                      :     :     :  :              +- *(3) ColumnarToRow
[info]                      :     :     :  :                 +- BatchScan[cs_sold_time_sk#878, cs_ship_date_sk#879, cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_bill_addr_sk#883, cs_ship_customer_sk#884, cs_ship_cdemo_sk#885, cs_ship_hdemo_sk#886, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_catalog_page_sk#889, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_list_price#897, cs_sales_price#898, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bi...
[info]                      :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true])), [id=#15166]
[info]                      :     :     :     +- *(5) Project [cr_order_number#56L]
[info]                      :     :     :        +- *(5) ColumnarToRow
[info]                      :     :     :           +- BatchScan[cr_returned_time_sk#41, cr_item_sk#42, cr_refunded_customer_sk#43, cr_refunded_cdemo_sk#44, cr_refunded_hdemo_sk#45, cr_refunded_addr_sk#46, cr_returning_customer_sk#47, cr_returning_cdemo_sk#48, cr_returning_hdemo_sk#49, cr_returning_addr_sk#50, cr_call_center_sk#51, cr_catalog_page_sk#52, cr_ship_mode_sk#53, cr_warehouse_sk#54, cr_reason_sk#55, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58, cr_return_tax#59, cr_return_amt_inc_tax#60, cr_fee#61, cr_return_ship_cost#62, cr_refunded_cash#63, cr_reversed_charge#64, ... 3 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_returned_time_sk:int,cr_item_sk:int,cr_refunded_customer_sk:int,cr_refunded_cdemo_sk:in...
[info]                      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15174]
[info]                      :     :        +- *(6) Project [d_date_sk#331]
[info]                      :     :           +- *(6) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 11719)) AND (d_date#333 <= 11779)) AND isnotnull(d_date_sk#331))
[info]                      :     :              +- *(6) ColumnarToRow
[info]                      :     :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15183]
[info]                      :        +- *(7) Project [ca_address_sk#233]
[info]                      :           +- *(7) Filter ((isnotnull(ca_state#241) AND (ca_state#241 = GA)) AND isnotnull(ca_address_sk#233))
[info]                      :              +- *(7) ColumnarToRow
[info]                      :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15192]
[info]                         +- *(8) Project [cc_call_center_sk#1492]
[info]                            +- *(8) Filter ((isnotnull(cc_county#1517) AND (cc_county#1517 = Williamson County)) AND isnotnull(cc_call_center_sk#1492))
[info]                               +- *(8) ColumnarToRow
[info]                                  +- BatchScan[cc_call_center_sk#1492, cc_county#1517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/call_center], ReadSchema: struct<cc_call_center_sk:int,cc_county:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 223 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q16                                                 223            223           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q17
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST,s_state#694 ASC NULLS FIRST], output=[i_item_id#497,i_item_desc#500,s_state#694,store_sales_quantitycount#4788L,store_sales_quantityave#4789,store_sales_quantitystdev#4790,store_sales_quantitycov#4791,as_store_returns_quantitycount#4792L,as_store_returns_quantityave#4793,as_store_returns_quantitystdev#4794,store_returns_quantitycov#4795,catalog_sales_quantitycount#4796L,catalog_sales_quantityave#4797,catalog_sales_quantitystdev#4798,catalog_sales_quantitycov#4799])
[info] +- *(15) HashAggregate(keys=[i_item_id#497, i_item_desc#500, s_state#694], functions=[count(ss_quantity#1173), avg(cast(ss_quantity#1173 as bigint)), stddev_samp(cast(ss_quantity#1173 as double)), count(sr_return_quantity#800), avg(cast(sr_return_quantity#800 as bigint)), stddev_samp(cast(sr_return_quantity#800 as double)), count(cs_quantity#895), avg(cast(cs_quantity#895 as bigint)), stddev_samp(cast(cs_quantity#895 as double))])
[info]    +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, s_state#694, 4), true, [id=#15555]
[info]       +- *(14) HashAggregate(keys=[i_item_id#497, i_item_desc#500, s_state#694], functions=[partial_count(ss_quantity#1173), partial_avg(cast(ss_quantity#1173 as bigint)), partial_stddev_samp(cast(ss_quantity#1173 as double)), partial_count(sr_return_quantity#800), partial_avg(cast(sr_return_quantity#800 as bigint)), partial_stddev_samp(cast(sr_return_quantity#800 as double)), partial_count(cs_quantity#895), partial_avg(cast(cs_quantity#895 as bigint)), partial_stddev_samp(cast(cs_quantity#895 as double))])
[info]          +- *(14) Project [ss_quantity#1173, sr_return_quantity#800, cs_quantity#895, s_state#694, i_item_id#497, i_item_desc#500]
[info]             +- *(14) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :- *(14) Project [ss_item_sk#1165, ss_quantity#1173, sr_return_quantity#800, cs_quantity#895, s_state#694]
[info]                :  +- *(14) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, sr_return_quantity#800, cs_quantity#895]
[info]                :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#4828], Inner, BuildRight
[info]                :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, sr_return_quantity#800, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :  +- *(14) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#4800], Inner, BuildRight
[info]                :     :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, sr_return_quantity#800, sr_returned_date_sk#810, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :     :  +- *(14) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sold_date_sk#1186, sr_return_quantity#800, sr_returned_date_sk#810, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :     :     :  +- *(14) SortMergeJoin [sr_customer_sk#793, sr_item_sk#792], [cs_bill_customer_sk#880, cs_item_sk#892], Inner
[info]                :     :     :     :     :     :- *(6) Sort [sr_customer_sk#793 ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :  +- Exchange hashpartitioning(sr_customer_sk#793, sr_item_sk#792, 4), true, [id=#15452]
[info]                :     :     :     :     :     :     +- *(5) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sold_date_sk#1186, sr_item_sk#792, sr_customer_sk#793, sr_return_quantity#800, sr_returned_date_sk#810]
[info]                :     :     :     :     :     :        +- *(5) SortMergeJoin [ss_customer_sk#1166, ss_item_sk#1165, ss_ticket_number#1172L], [sr_customer_sk#793, sr_item_sk#792, sr_ticket_number#799L], Inner
[info]                :     :     :     :     :     :           :- *(2) Sort [ss_customer_sk#1166 ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :           :  +- Exchange hashpartitioning(ss_customer_sk#1166, ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#15434]
[info]                :     :     :     :     :     :           :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_quantity#1173, ss_sold_date_sk#1186]
[info]                :     :     :     :     :     :           :        +- *(1) Filter ((((isnotnull(ss_item_sk#1165) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]                :     :     :     :     :     :           :           +- *(1) ColumnarToRow
[info]                :     :     :     :     :     :           :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_quantity#1173, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_quantity:int>
[info]                :     :     :     :     :     :           +- *(4) Sort [sr_customer_sk#793 ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :              +- Exchange hashpartitioning(sr_customer_sk#793, sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#15444]
[info]                :     :     :     :     :     :                 +- *(3) Project [sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_return_quantity#800, sr_returned_date_sk#810]
[info]                :     :     :     :     :     :                    +- *(3) Filter (((isnotnull(sr_customer_sk#793) AND isnotnull(sr_ticket_number#799L)) AND isnotnull(sr_item_sk#792)) AND isnotnull(sr_returned_date_sk#810))
[info]                :     :     :     :     :     :                       +- *(3) ColumnarToRow
[info]                :     :     :     :     :     :                          +- BatchScan[sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_return_quantity#800, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint,sr_return_quantity:int>
[info]                :     :     :     :     :     +- *(8) Sort [cs_bill_customer_sk#880 ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :        +- Exchange hashpartitioning(cs_bill_customer_sk#880, cs_item_sk#892, 4), true, [id=#15462]
[info]                :     :     :     :     :           +- *(7) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :     :     :              +- *(7) Filter ((isnotnull(cs_item_sk#892) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911))
[info]                :     :     :     :     :                 +- *(7) ColumnarToRow
[info]                :     :     :     :     :                    +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int>
[info]                :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15474]
[info]                :     :     :     :        +- *(9) Project [d_date_sk#331]
[info]                :     :     :     :           +- *(9) Filter ((isnotnull(d_quarter_name#346) AND (d_quarter_name#346 = 2001Q1)) AND isnotnull(d_date_sk#331))
[info]                :     :     :     :              +- *(9) ColumnarToRow
[info]                :     :     :     :                 +- BatchScan[d_date_sk#331, d_quarter_name#346] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_quarter_name:string>
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15483]
[info]                :     :     :        +- *(10) Project [d_date_sk#4800]
[info]                :     :     :           +- *(10) Filter (d_quarter_name#4815 IN (2001Q1,2001Q2,2001Q3) AND isnotnull(d_date_sk#4800))
[info]                :     :     :              +- *(10) ColumnarToRow
[info]                :     :     :                 +- BatchScan[d_date_sk#4800, d_quarter_name#4815] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_quarter_name:string>
[info]                :     :     +- ReusedExchange [d_date_sk#4828], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15483]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15501]
[info]                :        +- *(12) Project [s_store_sk#670, s_state#694]
[info]                :           +- *(12) Filter isnotnull(s_store_sk#670)
[info]                :              +- *(12) ColumnarToRow
[info]                :                 +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15510]
[info]                   +- *(13) Project [i_item_sk#496, i_item_id#497, i_item_desc#500]
[info]                      +- *(13) Filter isnotnull(i_item_sk#496)
[info]                         +- *(13) ColumnarToRow
[info]                            +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 288 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q17                                                 289            289           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q18
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ca_country#5202 ASC NULLS FIRST,ca_state#5203 ASC NULLS FIRST,ca_county#5204 ASC NULLS FIRST,i_item_id#5201 ASC NULLS FIRST], output=[i_item_id#5201,ca_country#5202,ca_state#5203,ca_county#5204,agg1#5173,agg2#5174,agg3#5175,agg4#5176,agg5#5177,agg6#5178,agg7#5179])
[info] +- *(8) HashAggregate(keys=[i_item_id#5201, ca_country#5202, ca_state#5203, ca_county#5204, spark_grouping_id#5196], functions=[avg(cast(cs_quantity#895 as decimal(12,2))), avg(cast(cs_list_price#897 as decimal(12,2))), avg(cast(cs_coupon_amt#904 as decimal(12,2))), avg(cast(cs_sales_price#898 as decimal(12,2))), avg(cast(cs_net_profit#910 as decimal(12,2))), avg(cast(c_birth_year#169 as decimal(12,2))), avg(cast(cd_dep_count#296 as decimal(12,2)))])
[info]    +- Exchange hashpartitioning(i_item_id#5201, ca_country#5202, ca_state#5203, ca_county#5204, spark_grouping_id#5196, 4), true, [id=#15811]
[info]       +- *(7) HashAggregate(keys=[i_item_id#5201, ca_country#5202, ca_state#5203, ca_county#5204, spark_grouping_id#5196], functions=[partial_avg(cast(cs_quantity#895 as decimal(12,2))), partial_avg(cast(cs_list_price#897 as decimal(12,2))), partial_avg(cast(cs_coupon_amt#904 as decimal(12,2))), partial_avg(cast(cs_sales_price#898 as decimal(12,2))), partial_avg(cast(cs_net_profit#910 as decimal(12,2))), partial_avg(cast(c_birth_year#169 as decimal(12,2))), partial_avg(cast(cd_dep_count#296 as decimal(12,2)))])
[info]          +- *(7) Expand [List(cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, i_item_id#497, ca_country#243, ca_state#241, ca_county#240, 0), List(cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, i_item_id#497, ca_country#243, ca_state#241, null, 1), List(cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, i_item_id#497, ca_country#243, null, null, 3), List(cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, i_item_id#497, null, null, null, 7), List(cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, null, null, null, null, 15)], [cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, i_item_id#5201, ca_country#5202, ca_state#5203, ca_county#5204, spark_grouping_id#5196]
[info]             +- *(7) Project [cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, i_item_id#497, ca_country#243, ca_state#241, ca_county#240]
[info]                +- *(7) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                   :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, ca_county#240, ca_state#241, ca_country#243]
[info]                   :  +- *(7) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                   :     :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_birth_year#169, ca_county#240, ca_state#241, ca_country#243]
[info]                   :     :  +- *(7) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                   :     :     :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_addr_sk#160, c_birth_year#169]
[info]                   :     :     :  +- *(7) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#5180], Inner, BuildRight
[info]                   :     :     :     :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]                   :     :     :     :  +- *(7) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]                   :     :     :     :     :- *(7) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296]
[info]                   :     :     :     :     :  +- *(7) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]                   :     :     :     :     :     :- *(7) Project [cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911]
[info]                   :     :     :     :     :     :  +- *(7) Filter (((isnotnull(cs_bill_cdemo_sk#881) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_item_sk#892))
[info]                   :     :     :     :     :     :     +- *(7) ColumnarToRow
[info]                   :     :     :     :     :     :        +- BatchScan[cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...
[info]                   :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15759]
[info]                   :     :     :     :     :        +- *(1) Project [cd_demo_sk#290, cd_dep_count#296]
[info]                   :     :     :     :     :           +- *(1) Filter ((((isnotnull(cd_gender#291) AND isnotnull(cd_education_status#293)) AND (cd_gender#291 = F)) AND (cd_education_status#293 = Unknown)) AND isnotnull(cd_demo_sk#290))
[info]                   :     :     :     :     :              +- *(1) ColumnarToRow
[info]                   :     :     :     :     :                 +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_education_status#293, cd_dep_count#296] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_education_status:string,cd_dep_count:int>
[info]                   :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15768]
[info]                   :     :     :     :        +- *(2) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]                   :     :     :     :           +- *(2) Filter (((c_birth_month#168 IN (1,6,8,9,12,2) AND isnotnull(c_customer_sk#156)) AND isnotnull(c_current_cdemo_sk#158)) AND isnotnull(c_current_addr_sk#160))
[info]                   :     :     :     :              +- *(2) ColumnarToRow
[info]                   :     :     :     :                 +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_month#168, c_birth_year#169] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int,c_birth_month:int,c_birth_y...
[info]                   :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15777]
[info]                   :     :     :        +- *(3) Project [cd_demo_sk#5180]
[info]                   :     :     :           +- *(3) Filter isnotnull(cd_demo_sk#5180)
[info]                   :     :     :              +- *(3) ColumnarToRow
[info]                   :     :     :                 +- BatchScan[cd_demo_sk#5180] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int>
[info]                   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15786]
[info]                   :     :        +- *(4) Project [ca_address_sk#233, ca_county#240, ca_state#241, ca_country#243]
[info]                   :     :           +- *(4) Filter (ca_state#241 IN (MS,IN,ND,OK,NM,VA) AND isnotnull(ca_address_sk#233))
[info]                   :     :              +- *(4) ColumnarToRow
[info]                   :     :                 +- BatchScan[ca_address_sk#233, ca_county#240, ca_state#241, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string,ca_country:string>
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15795]
[info]                   :        +- *(5) Project [d_date_sk#331]
[info]                   :           +- *(5) Filter ((isnotnull(d_year#337) AND (d_year#337 = 1998)) AND isnotnull(d_date_sk#331))
[info]                   :              +- *(5) ColumnarToRow
[info]                   :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15804]
[info]                      +- *(6) Project [i_item_sk#496, i_item_id#497]
[info]                         +- *(6) Filter isnotnull(i_item_sk#496)
[info]                            +- *(6) ColumnarToRow
[info]                               +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 310 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q18                                                 311            311           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q19
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ext_price#5292 DESC NULLS LAST,brand#5291 ASC NULLS FIRST,brand_id#5290 ASC NULLS FIRST,i_manufact_id#509 ASC NULLS FIRST,i_manufact#510 ASC NULLS FIRST], output=[brand_id#5290,brand#5291,i_manufact_id#509,i_manufact#510,ext_price#5292])
[info] +- *(7) HashAggregate(keys=[i_brand#504, i_brand_id#503, i_manufact_id#509, i_manufact#510], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]    +- Exchange hashpartitioning(i_brand#504, i_brand_id#503, i_manufact_id#509, i_manufact#510, 4), true, [id=#16025]
[info]       +- *(6) HashAggregate(keys=[i_brand#504, i_brand_id#503, i_manufact_id#509, i_manufact#510], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          +- *(6) Project [ss_ext_sales_price#1178, i_brand_id#503, i_brand#504, i_manufact_id#509, i_manufact#510]
[info]             +- *(6) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight, NOT (substring(ca_zip#242, 1, 5) = substring(s_zip#695, 1, 5))
[info]                :- *(6) Project [ss_store_sk#1170, ss_ext_sales_price#1178, i_brand_id#503, i_brand#504, i_manufact_id#509, i_manufact#510, ca_zip#242]
[info]                :  +- *(6) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                :     :- *(6) Project [ss_store_sk#1170, ss_ext_sales_price#1178, i_brand_id#503, i_brand#504, i_manufact_id#509, i_manufact#510, c_current_addr_sk#160]
[info]                :     :  +- *(6) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                :     :     :- *(6) Project [ss_customer_sk#1166, ss_store_sk#1170, ss_ext_sales_price#1178, i_brand_id#503, i_brand#504, i_manufact_id#509, i_manufact#510]
[info]                :     :     :  +- *(6) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :     :     :     :- *(6) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ext_sales_price#1178]
[info]                :     :     :     :  +- *(6) BroadcastHashJoin [d_date_sk#331], [ss_sold_date_sk#1186], Inner, BuildLeft
[info]                :     :     :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15979]
[info]                :     :     :     :     :  +- *(1) Project [d_date_sk#331]
[info]                :     :     :     :     :     +- *(1) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 11)) AND (d_year#337 = 1998)) AND isnotnull(d_date_sk#331))
[info]                :     :     :     :     :        +- *(1) ColumnarToRow
[info]                :     :     :     :     :           +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     :     :     :     +- *(6) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                :     :     :     :        +- *(6) Filter (((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_store_sk#1170))
[info]                :     :     :     :           +- *(6) ColumnarToRow
[info]                :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15992]
[info]                :     :     :        +- *(2) Project [i_item_sk#496, i_brand_id#503, i_brand#504, i_manufact_id#509, i_manufact#510]
[info]                :     :     :           +- *(2) Filter ((isnotnull(i_manager_id#516) AND (i_manager_id#516 = 8)) AND isnotnull(i_item_sk#496))
[info]                :     :     :              +- *(2) ColumnarToRow
[info]                :     :     :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_brand#504, i_manufact_id#509, i_manufact#510, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manufact_id:int,i_manufact:string,i_manager_...
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16001]
[info]                :     :        +- *(3) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]                :     :           +- *(3) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]                :     :              +- *(3) ColumnarToRow
[info]                :     :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16010]
[info]                :        +- *(4) Project [ca_address_sk#233, ca_zip#242]
[info]                :           +- *(4) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_zip#242))
[info]                :              +- *(4) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_zip#242] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_zip:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16019]
[info]                   +- *(5) Project [s_store_sk#670, s_zip#695]
[info]                      +- *(5) Filter (isnotnull(s_zip#695) AND isnotnull(s_store_sk#670))
[info]                         +- *(5) ColumnarToRow
[info]                            +- BatchScan[s_store_sk#670, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_zip:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 210 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q19                                                 210            210           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q20
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_category#508 ASC NULLS FIRST,i_class#506 ASC NULLS FIRST,i_item_id#497 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST,revenueratio#5343 ASC NULLS FIRST], output=[i_item_desc#500,i_category#508,i_class#506,i_current_price#501,itemrevenue#5342,revenueratio#5343])
[info] +- *(6) Project [i_item_desc#500, i_category#508, i_class#506, i_current_price#501, itemrevenue#5342, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#5348) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#5350)), DecimalType(38,17), true) AS revenueratio#5343, i_item_id#497]
[info]    +- Window [sum(_w1#5349) windowspecdefinition(i_class#506, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#5350], [i_class#506]
[info]       +- *(5) Sort [i_class#506 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_class#506, 4), true, [id=#16155]
[info]             +- *(4) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[sum(UnscaledValue(cs_ext_sales_price#900))])
[info]                +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, 4), true, [id=#16151]
[info]                   +- *(3) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900))])
[info]                      +- *(3) Project [cs_ext_sales_price#900, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                         +- *(3) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                            :- *(3) Project [cs_ext_sales_price#900, cs_sold_date_sk#911, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :  +- *(3) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                            :     :- *(3) Project [cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]                            :     :  +- *(3) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]                            :     :     +- *(3) ColumnarToRow
[info]                            :     :        +- BatchScan[cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16136]
[info]                            :        +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :           +- *(1) Filter (i_category#508 IN (Sports,Books,Home) AND isnotnull(i_item_sk#496))
[info]                            :              +- *(1) ColumnarToRow
[info]                            :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16145]
[info]                               +- *(2) Project [d_date_sk#331]
[info]                                  +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10644)) AND (d_date#333 <= 10674)) AND isnotnull(d_date_sk#331))
[info]                                     +- *(2) ColumnarToRow
[info]                                        +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 129 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q20                                                 130            130           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q21
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#1623 ASC NULLS FIRST,i_item_id#497 ASC NULLS FIRST], output=[w_warehouse_name#1623,i_item_id#497,inv_before#5379L,inv_after#5380L])
[info] +- *(5) Filter ((CASE WHEN (inv_before#5379L > 0) THEN (cast(inv_after#5380L as double) / cast(inv_before#5379L as double)) ELSE null END >= 0.666667) AND (CASE WHEN (inv_before#5379L > 0) THEN (cast(inv_after#5380L as double) / cast(inv_before#5379L as double)) ELSE null END <= 1.5))
[info]    +- *(5) HashAggregate(keys=[w_warehouse_name#1623, i_item_id#497], functions=[sum(cast(CASE WHEN (d_date#333 < 11027) THEN inv_quantity_on_hand#475 ELSE 0 END as bigint)), sum(cast(CASE WHEN (d_date#333 >= 11027) THEN inv_quantity_on_hand#475 ELSE 0 END as bigint))])
[info]       +- Exchange hashpartitioning(w_warehouse_name#1623, i_item_id#497, 4), true, [id=#16309]
[info]          +- *(4) HashAggregate(keys=[w_warehouse_name#1623, i_item_id#497], functions=[partial_sum(cast(CASE WHEN (d_date#333 < 11027) THEN inv_quantity_on_hand#475 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (d_date#333 >= 11027) THEN inv_quantity_on_hand#475 ELSE 0 END as bigint))])
[info]             +- *(4) Project [inv_quantity_on_hand#475, w_warehouse_name#1623, i_item_id#497, d_date#333]
[info]                +- *(4) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]                   :- *(4) Project [inv_quantity_on_hand#475, inv_date_sk#476, w_warehouse_name#1623, i_item_id#497]
[info]                   :  +- *(4) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#496], Inner, BuildRight
[info]                   :     :- *(4) Project [inv_item_sk#473, inv_quantity_on_hand#475, inv_date_sk#476, w_warehouse_name#1623]
[info]                   :     :  +- *(4) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#1621], Inner, BuildRight
[info]                   :     :     :- *(4) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]                   :     :     :  +- *(4) Filter ((isnotnull(inv_warehouse_sk#474) AND isnotnull(inv_item_sk#473)) AND isnotnull(inv_date_sk#476))
[info]                   :     :     :     +- *(4) ColumnarToRow
[info]                   :     :     :        +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]                   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16285]
[info]                   :     :        +- *(1) Project [w_warehouse_sk#1621, w_warehouse_name#1623]
[info]                   :     :           +- *(1) Filter isnotnull(w_warehouse_sk#1621)
[info]                   :     :              +- *(1) ColumnarToRow
[info]                   :     :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16294]
[info]                   :        +- *(2) Project [i_item_sk#496, i_item_id#497]
[info]                   :           +- *(2) Filter (((isnotnull(i_current_price#501) AND (i_current_price#501 >= 0.99)) AND (i_current_price#501 <= 1.49)) AND isnotnull(i_item_sk#496))
[info]                   :              +- *(2) ColumnarToRow
[info]                   :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_current_price#501] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_current_price:decimal(7,2)>
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16303]
[info]                      +- *(3) Project [d_date_sk#331, d_date#333]
[info]                         +- *(3) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10997)) AND (d_date#333 <= 11057)) AND isnotnull(d_date_sk#331))
[info]                            +- *(3) ColumnarToRow
[info]                               +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 164 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q21                                                 165            165           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q22
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[qoh#5420 ASC NULLS FIRST,i_product_name#5427 ASC NULLS FIRST,i_brand#5428 ASC NULLS FIRST,i_class#5429 ASC NULLS FIRST,i_category#5430 ASC NULLS FIRST], output=[i_product_name#5427,i_brand#5428,i_class#5429,i_category#5430,qoh#5420])
[info] +- *(5) HashAggregate(keys=[i_product_name#5427, i_brand#5428, i_class#5429, i_category#5430, spark_grouping_id#5422], functions=[avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]    +- Exchange hashpartitioning(i_product_name#5427, i_brand#5428, i_class#5429, i_category#5430, spark_grouping_id#5422, 4), true, [id=#16461]
[info]       +- *(4) HashAggregate(keys=[i_product_name#5427, i_brand#5428, i_class#5429, i_category#5430, spark_grouping_id#5422], functions=[partial_avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]          +- *(4) Expand [List(inv_quantity_on_hand#475, i_product_name#517, i_brand#504, i_class#506, i_category#508, 0), List(inv_quantity_on_hand#475, i_product_name#517, i_brand#504, i_class#506, null, 1), List(inv_quantity_on_hand#475, i_product_name#517, i_brand#504, null, null, 3), List(inv_quantity_on_hand#475, i_product_name#517, null, null, null, 7), List(inv_quantity_on_hand#475, null, null, null, null, 15)], [inv_quantity_on_hand#475, i_product_name#5427, i_brand#5428, i_class#5429, i_category#5430, spark_grouping_id#5422]
[info]             +- *(4) Project [inv_quantity_on_hand#475, i_product_name#517, i_brand#504, i_class#506, i_category#508]
[info]                +- *(4) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#1621], Inner, BuildRight
[info]                   :- *(4) Project [inv_warehouse_sk#474, inv_quantity_on_hand#475, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]                   :  +- *(4) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#496], Inner, BuildRight
[info]                   :     :- *(4) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475]
[info]                   :     :  +- *(4) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]                   :     :     :- *(4) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]                   :     :     :  +- *(4) Filter ((isnotnull(inv_date_sk#476) AND isnotnull(inv_item_sk#473)) AND isnotnull(inv_warehouse_sk#474))
[info]                   :     :     :     +- *(4) ColumnarToRow
[info]                   :     :     :        +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]                   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16436]
[info]                   :     :        +- *(1) Project [d_date_sk#331]
[info]                   :     :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                   :     :              +- *(1) ColumnarToRow
[info]                   :     :                 +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16445]
[info]                   :        +- *(2) Project [i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]                   :           +- *(2) Filter isnotnull(i_item_sk#496)
[info]                   :              +- *(2) ColumnarToRow
[info]                   :                 +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16454]
[info]                      +- *(3) Project [w_warehouse_sk#1621]
[info]                         +- *(3) Filter isnotnull(w_warehouse_sk#1621)
[info]                            +- *(3) ColumnarToRow
[info]                               +- BatchScan[w_warehouse_sk#1621] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 163 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q22                                                 164            164           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q23a
[info] == Physical Plan ==
[info] CollectLimit 100
[info] +- *(30) HashAggregate(keys=[], functions=[sum(sales#5501)])
[info]    +- Exchange SinglePartition, true, [id=#17774]
[info]       +- *(29) HashAggregate(keys=[], functions=[partial_sum(sales#5501)])
[info]          +- Union
[info]             :- *(14) Project [CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true) AS sales#5501]
[info]             :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :     :- *(14) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]             :     :  +- SortMergeJoin [cs_bill_customer_sk#880], [c_customer_sk#156], LeftSemi
[info]             :     :     :- *(9) Sort [cs_bill_customer_sk#880 ASC NULLS FIRST], false, 0
[info]             :     :     :  +- Exchange hashpartitioning(cs_bill_customer_sk#880, 4), true, [id=#17257]
[info]             :     :     :     +- *(8) Project [cs_bill_customer_sk#880, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]             :     :     :        +- SortMergeJoin [cs_item_sk#892], [item_sk#5506], LeftSemi
[info]             :     :     :           :- *(2) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]             :     :     :           :  +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#17215]
[info]             :     :     :           :     +- *(1) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]             :     :     :           :        +- *(1) Filter isnotnull(cs_sold_date_sk#911)
[info]             :     :     :           :           +- *(1) ColumnarToRow
[info]             :     :     :           :              +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>
[info]             :     :     :           +- *(7) Sort [item_sk#5506 ASC NULLS FIRST], false, 0
[info]             :     :     :              +- Exchange hashpartitioning(item_sk#5506, 4), true, [id=#17249]
[info]             :     :     :                 +- *(6) Project [item_sk#5506]
[info]             :     :     :                    +- *(6) Filter (count(1)#5516L > 4)
[info]             :     :     :                       +- *(6) HashAggregate(keys=[substring(i_item_desc#500, 1, 30)#5598, i_item_sk#496, d_date#333], functions=[count(1)])
[info]             :     :     :                          +- Exchange hashpartitioning(substring(i_item_desc#500, 1, 30)#5598, i_item_sk#496, d_date#333, 4), true, [id=#17243]
[info]             :     :     :                             +- *(5) HashAggregate(keys=[substring(i_item_desc#500, 1, 30) AS substring(i_item_desc#500, 1, 30)#5598, i_item_sk#496, d_date#333], functions=[partial_count(1)])
[info]             :     :     :                                +- *(5) Project [d_date#333, i_item_sk#496, i_item_desc#500]
[info]             :     :     :                                   +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :     :     :                                      :- *(5) Project [ss_item_sk#1165, d_date#333]
[info]             :     :     :                                      :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :     :     :                                      :     :- *(5) Project [ss_item_sk#1165, ss_sold_date_sk#1186]
[info]             :     :     :                                      :     :  +- *(5) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165))
[info]             :     :     :                                      :     :     +- *(5) ColumnarToRow
[info]             :     :     :                                      :     :        +- BatchScan[ss_item_sk#1165, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int>
[info]             :     :     :                                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#17228]
[info]             :     :     :                                      :        +- *(3) Project [d_date_sk#331, d_date#333]
[info]             :     :     :                                      :           +- *(3) Filter (d_year#337 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#331))
[info]             :     :     :                                      :              +- *(3) ColumnarToRow
[info]             :     :     :                                      :                 +- BatchScan[d_date_sk#331, d_date#333, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>
[info]             :     :     :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#17237]
[info]             :     :     :                                         +- *(4) Project [i_item_sk#496, i_item_desc#500]
[info]             :     :     :                                            +- *(4) Filter isnotnull(i_item_sk#496)
[info]             :     :     :                                               +- *(4) ColumnarToRow
[info]             :     :     :                                                  +- BatchScan[i_item_sk#496, i_item_desc#500] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
[info]             :     :     +- *(12) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]             :     :        +- *(12) Project [c_customer_sk#156]
[info]             :     :           +- *(12) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5524) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5524 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(Subquery scalar-subquery#5512, [id=#17469] as decimal(32,6)))), DecimalType(38,8), true)))
[info]             :     :              :  +- Subquery scalar-subquery#5512, [id=#17469]
[info]             :     :              :     +- *(5) HashAggregate(keys=[], functions=[max(csales#5509)])
[info]             :     :              :        +- Exchange SinglePartition, true, [id=#17465]
[info]             :     :              :           +- *(4) HashAggregate(keys=[], functions=[partial_max(csales#5509)])
[info]             :     :              :              +- *(4) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]             :     :              :                 +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#17415]
[info]             :     :              :                    +- *(3) HashAggregate(keys=[c_customer_sk#156], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]             :     :              :                       +- *(3) Project [ss_quantity#1173, ss_sales_price#1176, c_customer_sk#156]
[info]             :     :              :                          +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :     :              :                             :- *(3) Project [ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186, c_customer_sk#156]
[info]             :     :              :                             :  +- *(3) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]             :     :              :                             :     :- *(3) Project [ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]             :     :              :                             :     :  +- *(3) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]             :     :              :                             :     :     +- *(3) ColumnarToRow
[info]             :     :              :                             :     :        +- BatchScan[ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
[info]             :     :              :                             :     +- ReusedExchange [c_customer_sk#156], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#17270]
[info]             :     :              :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16854]
[info]             :     :              :                                +- *(2) Project [d_date_sk#331]
[info]             :     :              :                                   +- *(2) Filter (d_year#337 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#331))
[info]             :     :              :                                      +- *(2) ColumnarToRow
[info]             :     :              :                                         +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]             :     :              +- *(12) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]             :     :                 +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#17276]
[info]             :     :                    +- *(11) HashAggregate(keys=[c_customer_sk#156], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]             :     :                       +- *(11) Project [ss_quantity#1173, ss_sales_price#1176, c_customer_sk#156]
[info]             :     :                          +- *(11) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]             :     :                             :- *(11) Project [ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176]
[info]             :     :                             :  +- *(11) Filter isnotnull(ss_customer_sk#1166)
[info]             :     :                             :     +- *(11) ColumnarToRow
[info]             :     :                             :        +- BatchScan[ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
[info]             :     :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#17270]
[info]             :     :                                +- *(10) Project [c_customer_sk#156]
[info]             :     :                                   +- *(10) Filter isnotnull(c_customer_sk#156)
[info]             :     :                                      +- *(10) ColumnarToRow
[info]             :     :                                         +- BatchScan[c_customer_sk#156] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int>
[info]             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#17291]
[info]             :        +- *(13) Project [d_date_sk#331]
[info]             :           +- *(13) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2000)) AND (d_moy#339 = 2)) AND isnotnull(d_date_sk#331))
[info]             :              +- *(13) ColumnarToRow
[info]             :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             +- *(28) Project [CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true) AS sales#5504]
[info]                +- *(28) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                   :- *(28) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]                   :  +- SortMergeJoin [ws_bill_customer_sk#1024], [c_customer_sk#156], LeftSemi
[info]                   :     :- *(23) Sort [ws_bill_customer_sk#1024 ASC NULLS FIRST], false, 0
[info]                   :     :  +- Exchange hashpartitioning(ws_bill_customer_sk#1024, 4), true, [id=#17608]
[info]                   :     :     +- *(22) Project [ws_bill_customer_sk#1024, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]                   :     :        +- SortMergeJoin [ws_item_sk#1023], [item_sk#5506], LeftSemi
[info]                   :     :           :- *(16) Sort [ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]                   :     :           :  +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#17301]
[info]                   :     :           :     +- *(15) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]                   :     :           :        +- *(15) Filter isnotnull(ws_sold_date_sk#1054)
[info]                   :     :           :           +- *(15) ColumnarToRow
[info]                   :     :           :              +- BatchScan[ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>
[info]                   :     :           +- *(21) Sort [item_sk#5506 ASC NULLS FIRST], false, 0
[info]                   :     :              +- ReusedExchange [item_sk#5506], Exchange hashpartitioning(item_sk#5506, 4), true, [id=#17249]
[info]                   :     +- *(26) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                   :        +- *(26) Project [c_customer_sk#156]
[info]                   :           +- *(26) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5538) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5538 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(ReusedSubquery Subquery scalar-subquery#5512, [id=#17469] as decimal(32,6)))), DecimalType(38,8), true)))
[info]                   :              :  +- ReusedSubquery Subquery scalar-subquery#5512, [id=#17469]
[info]                   :              +- *(26) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]                   :                 +- ReusedExchange [c_customer_sk#156, sum#5607], Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#17276]
[info]                   +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#17291]
[info] 
[info] 
[info]   Stopped after 1 iterations, 792 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q23a                                                793            793           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q23b
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_last_name#165 ASC NULLS FIRST,c_first_name#164 ASC NULLS FIRST,sales#5686 ASC NULLS FIRST], output=[c_last_name#165,c_first_name#164,sales#5686])
[info] +- Union
[info]    :- *(21) HashAggregate(keys=[c_last_name#165, c_first_name#164], functions=[sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :  +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, 4), true, [id=#20051]
[info]    :     +- *(20) HashAggregate(keys=[c_last_name#165, c_first_name#164], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :        +- *(20) Project [cs_quantity#895, cs_list_price#897, c_first_name#164, c_last_name#165]
[info]    :           +- *(20) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :              :- *(20) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911, c_first_name#164, c_last_name#165]
[info]    :              :  +- *(20) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]    :              :     :- SortMergeJoin [cs_bill_customer_sk#880], [c_customer_sk#156], LeftSemi
[info]    :              :     :  :- *(9) Sort [cs_bill_customer_sk#880 ASC NULLS FIRST], false, 0
[info]    :              :     :  :  +- Exchange hashpartitioning(cs_bill_customer_sk#880, 4), true, [id=#19036]
[info]    :              :     :  :     +- *(8) Project [cs_bill_customer_sk#880, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]    :              :     :  :        +- SortMergeJoin [cs_item_sk#892], [item_sk#5691], LeftSemi
[info]    :              :     :  :           :- *(2) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]    :              :     :  :           :  +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#18994]
[info]    :              :     :  :           :     +- *(1) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]    :              :     :  :           :        +- *(1) Filter (isnotnull(cs_bill_customer_sk#880) AND isnotnull(cs_sold_date_sk#911))
[info]    :              :     :  :           :           +- *(1) ColumnarToRow
[info]    :              :     :  :           :              +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>
[info]    :              :     :  :           +- *(7) Sort [item_sk#5691 ASC NULLS FIRST], false, 0
[info]    :              :     :  :              +- Exchange hashpartitioning(item_sk#5691, 4), true, [id=#19028]
[info]    :              :     :  :                 +- *(6) Project [item_sk#5691]
[info]    :              :     :  :                    +- *(6) Filter (count(1)#5701L > 4)
[info]    :              :     :  :                       +- *(6) HashAggregate(keys=[substring(i_item_desc#500, 1, 30)#5796, i_item_sk#496, d_date#333], functions=[count(1)])
[info]    :              :     :  :                          +- Exchange hashpartitioning(substring(i_item_desc#500, 1, 30)#5796, i_item_sk#496, d_date#333, 4), true, [id=#19022]
[info]    :              :     :  :                             +- *(5) HashAggregate(keys=[substring(i_item_desc#500, 1, 30) AS substring(i_item_desc#500, 1, 30)#5796, i_item_sk#496, d_date#333], functions=[partial_count(1)])
[info]    :              :     :  :                                +- *(5) Project [d_date#333, i_item_sk#496, i_item_desc#500]
[info]    :              :     :  :                                   +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :              :     :  :                                      :- *(5) Project [ss_item_sk#1165, d_date#333]
[info]    :              :     :  :                                      :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :  :                                      :     :- *(5) Project [ss_item_sk#1165, ss_sold_date_sk#1186]
[info]    :              :     :  :                                      :     :  +- *(5) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165))
[info]    :              :     :  :                                      :     :     +- *(5) ColumnarToRow
[info]    :              :     :  :                                      :     :        +- BatchScan[ss_item_sk#1165, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int>
[info]    :              :     :  :                                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#19007]
[info]    :              :     :  :                                      :        +- *(3) Project [d_date_sk#331, d_date#333]
[info]    :              :     :  :                                      :           +- *(3) Filter (d_year#337 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#331))
[info]    :              :     :  :                                      :              +- *(3) ColumnarToRow
[info]    :              :     :  :                                      :                 +- BatchScan[d_date_sk#331, d_date#333, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>
[info]    :              :     :  :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#19016]
[info]    :              :     :  :                                         +- *(4) Project [i_item_sk#496, i_item_desc#500]
[info]    :              :     :  :                                            +- *(4) Filter isnotnull(i_item_sk#496)
[info]    :              :     :  :                                               +- *(4) ColumnarToRow
[info]    :              :     :  :                                                  +- BatchScan[i_item_sk#496, i_item_desc#500] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
[info]    :              :     :  +- *(12) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]    :              :     :     +- *(12) Project [c_customer_sk#156]
[info]    :              :     :        +- *(12) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5709) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5709 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(Subquery scalar-subquery#5697, [id=#19327] as decimal(32,6)))), DecimalType(38,8), true)))
[info]    :              :     :           :  +- Subquery scalar-subquery#5697, [id=#19327]
[info]    :              :     :           :     +- *(5) HashAggregate(keys=[], functions=[max(csales#5694)])
[info]    :              :     :           :        +- Exchange SinglePartition, true, [id=#19323]
[info]    :              :     :           :           +- *(4) HashAggregate(keys=[], functions=[partial_max(csales#5694)])
[info]    :              :     :           :              +- *(4) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :              :     :           :                 +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#19273]
[info]    :              :     :           :                    +- *(3) HashAggregate(keys=[c_customer_sk#156], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :              :     :           :                       +- *(3) Project [ss_quantity#1173, ss_sales_price#1176, c_customer_sk#156]
[info]    :              :     :           :                          +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :           :                             :- *(3) Project [ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186, c_customer_sk#156]
[info]    :              :     :           :                             :  +- *(3) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]    :              :     :           :                             :     :- *(3) Project [ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]    :              :     :           :                             :     :  +- *(3) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]    :              :     :           :                             :     :     +- *(3) ColumnarToRow
[info]    :              :     :           :                             :     :        +- BatchScan[ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
[info]    :              :     :           :                             :     +- ReusedExchange [c_customer_sk#156], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#19049]
[info]    :              :     :           :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#18284]
[info]    :              :     :           :                                +- *(2) Project [d_date_sk#331]
[info]    :              :     :           :                                   +- *(2) Filter (d_year#337 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#331))
[info]    :              :     :           :                                      +- *(2) ColumnarToRow
[info]    :              :     :           :                                         +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]    :              :     :           +- *(12) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :              :     :              +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#19055]
[info]    :              :     :                 +- *(11) HashAggregate(keys=[c_customer_sk#156], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :              :     :                    +- *(11) Project [ss_quantity#1173, ss_sales_price#1176, c_customer_sk#156]
[info]    :              :     :                       +- *(11) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]    :              :     :                          :- *(11) Project [ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176]
[info]    :              :     :                          :  +- *(11) Filter isnotnull(ss_customer_sk#1166)
[info]    :              :     :                          :     +- *(11) ColumnarToRow
[info]    :              :     :                          :        +- BatchScan[ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
[info]    :              :     :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#19049]
[info]    :              :     :                             +- *(10) Project [c_customer_sk#156]
[info]    :              :     :                                +- *(10) Filter isnotnull(c_customer_sk#156)
[info]    :              :     :                                   +- *(10) ColumnarToRow
[info]    :              :     :                                      +- BatchScan[c_customer_sk#156] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int>
[info]    :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20043]
[info]    :              :        +- SortMergeJoin [c_customer_sk#156], [c_customer_sk#156#5792], LeftSemi
[info]    :              :           :- *(14) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]    :              :           :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#19069]
[info]    :              :           :     +- *(13) Project [c_customer_sk#156, c_first_name#164, c_last_name#165]
[info]    :              :           :        +- *(13) Filter isnotnull(c_customer_sk#156)
[info]    :              :           :           +- *(13) ColumnarToRow
[info]    :              :           :              +- BatchScan[c_customer_sk#156, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
[info]    :              :           +- *(18) Sort [c_customer_sk#156#5792 ASC NULLS FIRST], false, 0
[info]    :              :              +- Exchange hashpartitioning(c_customer_sk#156#5792, 4), true, [id=#20038]
[info]    :              :                 +- *(17) Project [c_customer_sk#156 AS c_customer_sk#156#5792]
[info]    :              :                    +- *(17) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5709) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5709 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(ReusedSubquery Subquery scalar-subquery#5697, [id=#19327] as decimal(32,6)))), DecimalType(38,8), true)))
[info]    :              :                       :  +- ReusedSubquery Subquery scalar-subquery#5697, [id=#19327]
[info]    :              :                       +- *(17) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :              :                          +- ReusedExchange [c_customer_sk#156, sum#5800], Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#19055]
[info]    :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#19108]
[info]    :                 +- *(19) Project [d_date_sk#331]
[info]    :                    +- *(19) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2000)) AND (d_moy#339 = 2)) AND isnotnull(d_date_sk#331))
[info]    :                       +- *(19) ColumnarToRow
[info]    :                          +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]    +- *(42) HashAggregate(keys=[c_last_name#165, c_first_name#164], functions=[sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))])
[info]       +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, 4), true, [id=#20068]
[info]          +- *(41) HashAggregate(keys=[c_last_name#165, c_first_name#164], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))])
[info]             +- *(41) Project [ws_quantity#1038, ws_list_price#1040, c_first_name#164, c_last_name#165]
[info]                +- *(41) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                   :- *(41) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054, c_first_name#164, c_last_name#165]
[info]                   :  +- *(41) BroadcastHashJoin [ws_bill_customer_sk#1024], [c_customer_sk#156], Inner, BuildRight
[info]                   :     :- SortMergeJoin [ws_bill_customer_sk#1024], [c_customer_sk#156], LeftSemi
[info]                   :     :  :- *(30) Sort [ws_bill_customer_sk#1024 ASC NULLS FIRST], false, 0
[info]                   :     :  :  +- Exchange hashpartitioning(ws_bill_customer_sk#1024, 4), true, [id=#19625]
[info]                   :     :  :     +- *(29) Project [ws_bill_customer_sk#1024, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]                   :     :  :        +- SortMergeJoin [ws_item_sk#1023], [item_sk#5691], LeftSemi
[info]                   :     :  :           :- *(23) Sort [ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]                   :     :  :           :  +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#19123]
[info]                   :     :  :           :     +- *(22) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]                   :     :  :           :        +- *(22) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]                   :     :  :           :           +- *(22) ColumnarToRow
[info]                   :     :  :           :              +- BatchScan[ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>
[info]                   :     :  :           +- *(28) Sort [item_sk#5691 ASC NULLS FIRST], false, 0
[info]                   :     :  :              +- ReusedExchange [item_sk#5691], Exchange hashpartitioning(item_sk#5691, 4), true, [id=#19028]
[info]                   :     :  +- *(33) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                   :     :     +- *(33) Project [c_customer_sk#156]
[info]                   :     :        +- *(33) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5723) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5723 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(ReusedSubquery Subquery scalar-subquery#5697, [id=#19327] as decimal(32,6)))), DecimalType(38,8), true)))
[info]                   :     :           :  +- ReusedSubquery Subquery scalar-subquery#5697, [id=#19327]
[info]                   :     :           +- *(33) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]                   :     :              +- ReusedExchange [c_customer_sk#156, sum#5807], Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#19055]
[info]                   :     +- ReusedExchange [c_customer_sk#156, c_first_name#164, c_last_name#165], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#19450]
[info]                   +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#19108]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1125 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q23b                                               1126           1126           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q24a
[info] == Physical Plan ==
[info] *(11) Project [c_last_name#165, c_first_name#164, s_store_name#675, paid#5870]
[info] +- *(11) Filter (isnotnull(sum(netpaid#5872)#5880) AND (cast(sum(netpaid#5872)#5880 as decimal(33,8)) > cast(Subquery scalar-subquery#5871, [id=#20792] as decimal(33,8))))
[info]    :  +- Subquery scalar-subquery#5871, [id=#20792]
[info]    :     +- *(11) HashAggregate(keys=[], functions=[avg(netpaid#5872)])
[info]    :        +- Exchange SinglePartition, true, [id=#20788]
[info]    :           +- *(10) HashAggregate(keys=[], functions=[partial_avg(netpaid#5872)])
[info]    :              +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]    :                 +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511, 4), true, [id=#20705]
[info]    :                    +- *(9) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]    :                       +- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, ca_state#241]
[info]    :                          +- *(9) BroadcastHashJoin [c_birth_country#170, s_zip#695], [upper(ca_country#243), ca_zip#242], Inner, BuildRight
[info]    :                             :- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]    :                             :  +- *(9) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]    :                             :     :- *(9) Project [ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]    :                             :     :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :                             :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695]
[info]    :                             :     :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]    :                             :     :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_net_paid#1183]
[info]    :                             :     :     :     :  +- *(9) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]    :                             :     :     :     :     :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]    :                             :     :     :     :     :  +- ReusedExchange [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183], Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#20511]
[info]    :                             :     :     :     :     +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]    :                             :     :     :     :        +- ReusedExchange [sr_item_sk#792, sr_ticket_number#799L], Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#20521]
[info]    :                             :     :     :     +- ReusedExchange [s_store_sk#670, s_store_name#675, s_state#694, s_zip#695], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20533]
[info]    :                             :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20393]
[info]    :                             :     :        +- *(6) Project [i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]    :                             :     :           +- *(6) Filter isnotnull(i_item_sk#496)
[info]    :                             :     :              +- *(6) ColumnarToRow
[info]    :                             :     :                 +- BatchScan[i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
[info]    :                             :     +- ReusedExchange [c_customer_sk#156, c_first_name#164, c_last_name#165, c_birth_country#170], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20551]
[info]    :                             +- ReusedExchange [ca_state#241, ca_zip#242, ca_country#243], BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, true]), input[1, string, true])), [id=#20560]
[info]    +- *(11) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675], functions=[sum(netpaid#5872)])
[info]       +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, 4), true, [id=#20571]
[info]          +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675], functions=[partial_sum(netpaid#5872)])
[info]             +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]                +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511, 4), true, [id=#20566]
[info]                   +- *(9) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]                      +- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, ca_state#241]
[info]                         +- *(9) BroadcastHashJoin [c_birth_country#170, s_zip#695], [upper(ca_country#243), ca_zip#242], Inner, BuildRight
[info]                            :- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]                            :  +- *(9) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                            :     :- *(9) Project [ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]                            :     :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                            :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695]
[info]                            :     :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                            :     :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_net_paid#1183]
[info]                            :     :     :     :  +- *(9) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]                            :     :     :     :     :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                            :     :     :     :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#20511]
[info]                            :     :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183]
[info]                            :     :     :     :     :        +- *(1) Filter (((isnotnull(ss_ticket_number#1172L) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_customer_sk#1166))
[info]                            :     :     :     :     :           +- *(1) ColumnarToRow
[info]                            :     :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_paid:deci...
[info]                            :     :     :     :     +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                            :     :     :     :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#20521]
[info]                            :     :     :     :           +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]                            :     :     :     :              +- *(3) Filter (isnotnull(sr_ticket_number#799L) AND isnotnull(sr_item_sk#792))
[info]                            :     :     :     :                 +- *(3) ColumnarToRow
[info]                            :     :     :     :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]                            :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20533]
[info]                            :     :     :        +- *(5) Project [s_store_sk#670, s_store_name#675, s_state#694, s_zip#695]
[info]                            :     :     :           +- *(5) Filter (((isnotnull(s_market_id#680) AND (s_market_id#680 = 8)) AND isnotnull(s_store_sk#670)) AND isnotnull(s_zip#695))
[info]                            :     :     :              +- *(5) ColumnarToRow
[info]                            :     :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_market_id#680, s_state#694, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
[info]                            :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20542]
[info]                            :     :        +- *(6) Project [i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]                            :     :           +- *(6) Filter ((isnotnull(i_color#513) AND (i_color#513 = pale)) AND isnotnull(i_item_sk#496))
[info]                            :     :              +- *(6) ColumnarToRow
[info]                            :     :                 +- BatchScan[i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
[info]                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20551]
[info]                            :        +- *(7) Project [c_customer_sk#156, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]                            :           +- *(7) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_birth_country#170))
[info]                            :              +- *(7) ColumnarToRow
[info]                            :                 +- BatchScan[c_customer_sk#156, c_first_name#164, c_last_name#165, c_birth_country#170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string,c_birth_country:string>
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, true]), input[1, string, true])), [id=#20560]
[info]                               +- *(8) Project [ca_state#241, ca_zip#242, ca_country#243]
[info]                                  +- *(8) Filter isnotnull(ca_zip#242)
[info]                                     +- *(8) ColumnarToRow
[info]                                        +- BatchScan[ca_state#241, ca_zip#242, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_state:string,ca_zip:string,ca_country:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 621 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q24a                                                621            621           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q24b
[info] == Physical Plan ==
[info] *(11) Project [c_last_name#165, c_first_name#164, s_store_name#675, paid#5968]
[info] +- *(11) Filter (isnotnull(sum(netpaid#5970)#5978) AND (cast(sum(netpaid#5970)#5978 as decimal(33,8)) > cast(Subquery scalar-subquery#5969, [id=#21514] as decimal(33,8))))
[info]    :  +- Subquery scalar-subquery#5969, [id=#21514]
[info]    :     +- *(11) HashAggregate(keys=[], functions=[avg(netpaid#5970)])
[info]    :        +- Exchange SinglePartition, true, [id=#21510]
[info]    :           +- *(10) HashAggregate(keys=[], functions=[partial_avg(netpaid#5970)])
[info]    :              +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]    :                 +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511, 4), true, [id=#21427]
[info]    :                    +- *(9) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]    :                       +- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, ca_state#241]
[info]    :                          +- *(9) BroadcastHashJoin [c_birth_country#170, s_zip#695], [upper(ca_country#243), ca_zip#242], Inner, BuildRight
[info]    :                             :- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]    :                             :  +- *(9) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]    :                             :     :- *(9) Project [ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]    :                             :     :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :                             :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695]
[info]    :                             :     :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]    :                             :     :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_net_paid#1183]
[info]    :                             :     :     :     :  +- *(9) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]    :                             :     :     :     :     :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]    :                             :     :     :     :     :  +- ReusedExchange [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183], Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#21233]
[info]    :                             :     :     :     :     +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]    :                             :     :     :     :        +- ReusedExchange [sr_item_sk#792, sr_ticket_number#799L], Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#21243]
[info]    :                             :     :     :     +- ReusedExchange [s_store_sk#670, s_store_name#675, s_state#694, s_zip#695], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21255]
[info]    :                             :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21115]
[info]    :                             :     :        +- *(6) Project [i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]    :                             :     :           +- *(6) Filter isnotnull(i_item_sk#496)
[info]    :                             :     :              +- *(6) ColumnarToRow
[info]    :                             :     :                 +- BatchScan[i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
[info]    :                             :     +- ReusedExchange [c_customer_sk#156, c_first_name#164, c_last_name#165, c_birth_country#170], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21273]
[info]    :                             +- ReusedExchange [ca_state#241, ca_zip#242, ca_country#243], BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, true]), input[1, string, true])), [id=#21282]
[info]    +- *(11) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675], functions=[sum(netpaid#5970)])
[info]       +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, 4), true, [id=#21293]
[info]          +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675], functions=[partial_sum(netpaid#5970)])
[info]             +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]                +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511, 4), true, [id=#21288]
[info]                   +- *(9) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]                      +- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, ca_state#241]
[info]                         +- *(9) BroadcastHashJoin [c_birth_country#170, s_zip#695], [upper(ca_country#243), ca_zip#242], Inner, BuildRight
[info]                            :- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]                            :  +- *(9) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                            :     :- *(9) Project [ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]                            :     :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                            :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695]
[info]                            :     :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                            :     :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_net_paid#1183]
[info]                            :     :     :     :  +- *(9) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]                            :     :     :     :     :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                            :     :     :     :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#21233]
[info]                            :     :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183]
[info]                            :     :     :     :     :        +- *(1) Filter (((isnotnull(ss_ticket_number#1172L) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_customer_sk#1166))
[info]                            :     :     :     :     :           +- *(1) ColumnarToRow
[info]                            :     :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_paid:deci...
[info]                            :     :     :     :     +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                            :     :     :     :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#21243]
[info]                            :     :     :     :           +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]                            :     :     :     :              +- *(3) Filter (isnotnull(sr_ticket_number#799L) AND isnotnull(sr_item_sk#792))
[info]                            :     :     :     :                 +- *(3) ColumnarToRow
[info]                            :     :     :     :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]                            :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21255]
[info]                            :     :     :        +- *(5) Project [s_store_sk#670, s_store_name#675, s_state#694, s_zip#695]
[info]                            :     :     :           +- *(5) Filter (((isnotnull(s_market_id#680) AND (s_market_id#680 = 8)) AND isnotnull(s_store_sk#670)) AND isnotnull(s_zip#695))
[info]                            :     :     :              +- *(5) ColumnarToRow
[info]                            :     :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_market_id#680, s_state#694, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
[info]                            :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21264]
[info]                            :     :        +- *(6) Project [i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]                            :     :           +- *(6) Filter ((isnotnull(i_color#513) AND (i_color#513 = chiffon)) AND isnotnull(i_item_sk#496))
[info]                            :     :              +- *(6) ColumnarToRow
[info]                            :     :                 +- BatchScan[i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
[info]                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21273]
[info]                            :        +- *(7) Project [c_customer_sk#156, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]                            :           +- *(7) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_birth_country#170))
[info]                            :              +- *(7) ColumnarToRow
[info]                            :                 +- BatchScan[c_customer_sk#156, c_first_name#164, c_last_name#165, c_birth_country#170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string,c_birth_country:string>
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, true]), input[1, string, true])), [id=#21282]
[info]                               +- *(8) Project [ca_state#241, ca_zip#242, ca_country#243]
[info]                                  +- *(8) Filter isnotnull(ca_zip#242)
[info]                                     +- *(8) ColumnarToRow
[info]                                        +- BatchScan[ca_state#241, ca_zip#242, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_state:string,ca_zip:string,ca_country:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 509 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q24b                                                510            510           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q25
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST,s_store_id#671 ASC NULLS FIRST,s_store_name#675 ASC NULLS FIRST], output=[i_item_id#497,i_item_desc#500,s_store_id#671,s_store_name#675,store_sales_profit#6123,store_returns_loss#6124,catalog_sales_profit#6125])
[info] +- *(15) HashAggregate(keys=[i_item_id#497, i_item_desc#500, s_store_id#671, s_store_name#675], functions=[sum(UnscaledValue(ss_net_profit#1185)), sum(UnscaledValue(sr_net_loss#809)), sum(UnscaledValue(cs_net_profit#910))])
[info]    +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, s_store_id#671, s_store_name#675, 4), true, [id=#21868]
[info]       +- *(14) HashAggregate(keys=[i_item_id#497, i_item_desc#500, s_store_id#671, s_store_name#675], functions=[partial_sum(UnscaledValue(ss_net_profit#1185)), partial_sum(UnscaledValue(sr_net_loss#809)), partial_sum(UnscaledValue(cs_net_profit#910))])
[info]          +- *(14) Project [ss_net_profit#1185, sr_net_loss#809, cs_net_profit#910, s_store_id#671, s_store_name#675, i_item_id#497, i_item_desc#500]
[info]             +- *(14) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :- *(14) Project [ss_item_sk#1165, ss_net_profit#1185, sr_net_loss#809, cs_net_profit#910, s_store_id#671, s_store_name#675]
[info]                :  +- *(14) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_net_profit#1185, sr_net_loss#809, cs_net_profit#910]
[info]                :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#6154], Inner, BuildRight
[info]                :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_net_profit#1185, sr_net_loss#809, cs_net_profit#910, cs_sold_date_sk#911]
[info]                :     :     :  +- *(14) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#6126], Inner, BuildRight
[info]                :     :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_net_profit#1185, sr_net_loss#809, sr_returned_date_sk#810, cs_net_profit#910, cs_sold_date_sk#911]
[info]                :     :     :     :  +- *(14) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186, sr_net_loss#809, sr_returned_date_sk#810, cs_net_profit#910, cs_sold_date_sk#911]
[info]                :     :     :     :     :  +- *(14) SortMergeJoin [sr_customer_sk#793, sr_item_sk#792], [cs_bill_customer_sk#880, cs_item_sk#892], Inner
[info]                :     :     :     :     :     :- *(6) Sort [sr_customer_sk#793 ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :  +- Exchange hashpartitioning(sr_customer_sk#793, sr_item_sk#792, 4), true, [id=#21765]
[info]                :     :     :     :     :     :     +- *(5) Project [ss_item_sk#1165, ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186, sr_item_sk#792, sr_customer_sk#793, sr_net_loss#809, sr_returned_date_sk#810]
[info]                :     :     :     :     :     :        +- *(5) SortMergeJoin [ss_customer_sk#1166, ss_item_sk#1165, ss_ticket_number#1172L], [sr_customer_sk#793, sr_item_sk#792, sr_ticket_number#799L], Inner
[info]                :     :     :     :     :     :           :- *(2) Sort [ss_customer_sk#1166 ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :           :  +- Exchange hashpartitioning(ss_customer_sk#1166, ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#21747]
[info]                :     :     :     :     :     :           :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                :     :     :     :     :     :           :        +- *(1) Filter ((((isnotnull(ss_item_sk#1165) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]                :     :     :     :     :     :           :           +- *(1) ColumnarToRow
[info]                :     :     :     :     :     :           :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_profit:de...
[info]                :     :     :     :     :     :           +- *(4) Sort [sr_customer_sk#793 ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :              +- Exchange hashpartitioning(sr_customer_sk#793, sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#21757]
[info]                :     :     :     :     :     :                 +- *(3) Project [sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_net_loss#809, sr_returned_date_sk#810]
[info]                :     :     :     :     :     :                    +- *(3) Filter (((isnotnull(sr_customer_sk#793) AND isnotnull(sr_ticket_number#799L)) AND isnotnull(sr_item_sk#792)) AND isnotnull(sr_returned_date_sk#810))
[info]                :     :     :     :     :     :                       +- *(3) ColumnarToRow
[info]                :     :     :     :     :     :                          +- BatchScan[sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_net_loss#809, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint,sr_net_loss:decimal(7,2)>
[info]                :     :     :     :     :     +- *(8) Sort [cs_bill_customer_sk#880 ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :        +- Exchange hashpartitioning(cs_bill_customer_sk#880, cs_item_sk#892, 4), true, [id=#21775]
[info]                :     :     :     :     :           +- *(7) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_net_profit#910, cs_sold_date_sk#911]
[info]                :     :     :     :     :              +- *(7) Filter ((isnotnull(cs_item_sk#892) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911))
[info]                :     :     :     :     :                 +- *(7) ColumnarToRow
[info]                :     :     :     :     :                    +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_net_profit:decimal(7,2)>
[info]                :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21787]
[info]                :     :     :     :        +- *(9) Project [d_date_sk#331]
[info]                :     :     :     :           +- *(9) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 4)) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]                :     :     :     :              +- *(9) ColumnarToRow
[info]                :     :     :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21796]
[info]                :     :     :        +- *(10) Project [d_date_sk#6126]
[info]                :     :     :           +- *(10) Filter (((((isnotnull(d_year#6132) AND isnotnull(d_moy#6134)) AND (d_moy#6134 >= 4)) AND (d_moy#6134 <= 10)) AND (d_year#6132 = 2001)) AND isnotnull(d_date_sk#6126))
[info]                :     :     :              +- *(10) ColumnarToRow
[info]                :     :     :                 +- BatchScan[d_date_sk#6126, d_year#6132, d_moy#6134] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     :     +- ReusedExchange [d_date_sk#6154], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21796]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21814]
[info]                :        +- *(12) Project [s_store_sk#670, s_store_id#671, s_store_name#675]
[info]                :           +- *(12) Filter isnotnull(s_store_sk#670)
[info]                :              +- *(12) ColumnarToRow
[info]                :                 +- BatchScan[s_store_sk#670, s_store_id#671, s_store_name#675] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21823]
[info]                   +- *(13) Project [i_item_sk#496, i_item_id#497, i_item_desc#500]
[info]                      +- *(13) Filter isnotnull(i_item_sk#496)
[info]                         +- *(13) ColumnarToRow
[info]                            +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 287 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q25                                                 287            287           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q26
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST], output=[i_item_id#497,agg1#6249,agg2#6250,agg3#6251,agg4#6252])
[info] +- *(6) HashAggregate(keys=[i_item_id#497], functions=[avg(cast(cs_quantity#895 as bigint)), avg(UnscaledValue(cs_list_price#897)), avg(UnscaledValue(cs_coupon_amt#904)), avg(UnscaledValue(cs_sales_price#898))])
[info]    +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#22047]
[info]       +- *(5) HashAggregate(keys=[i_item_id#497], functions=[partial_avg(cast(cs_quantity#895 as bigint)), partial_avg(UnscaledValue(cs_list_price#897)), partial_avg(UnscaledValue(cs_coupon_amt#904)), partial_avg(UnscaledValue(cs_sales_price#898))])
[info]          +- *(5) Project [cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, i_item_id#497]
[info]             +- *(5) BroadcastHashJoin [cs_promo_sk#893], [p_promo_sk#589], Inner, BuildRight
[info]                :- *(5) Project [cs_promo_sk#893, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, i_item_id#497]
[info]                :  +- *(5) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                :     :- *(5) Project [cs_item_sk#892, cs_promo_sk#893, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904]
[info]                :     :  +- *(5) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :- *(5) Project [cs_item_sk#892, cs_promo_sk#893, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_sold_date_sk#911]
[info]                :     :     :  +- *(5) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]                :     :     :     :- *(5) Project [cs_bill_cdemo_sk#881, cs_item_sk#892, cs_promo_sk#893, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_sold_date_sk#911]
[info]                :     :     :     :  +- *(5) Filter (((isnotnull(cs_bill_cdemo_sk#881) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_promo_sk#893))
[info]                :     :     :     :     +- *(5) ColumnarToRow
[info]                :     :     :     :        +- BatchScan[cs_bill_cdemo_sk#881, cs_item_sk#892, cs_promo_sk#893, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_cdemo_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_quantity:int,cs_list_price:decimal(...
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22014]
[info]                :     :     :        +- *(1) Project [cd_demo_sk#290]
[info]                :     :     :           +- *(1) Filter ((((((isnotnull(cd_education_status#293) AND isnotnull(cd_marital_status#292)) AND isnotnull(cd_gender#291)) AND (cd_gender#291 = M)) AND (cd_marital_status#292 = S)) AND (cd_education_status#293 = College)) AND isnotnull(cd_demo_sk#290))
[info]                :     :     :              +- *(1) ColumnarToRow
[info]                :     :     :                 +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22023]
[info]                :     :        +- *(2) Project [d_date_sk#331]
[info]                :     :           +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                :     :              +- *(2) ColumnarToRow
[info]                :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22032]
[info]                :        +- *(3) Project [i_item_sk#496, i_item_id#497]
[info]                :           +- *(3) Filter isnotnull(i_item_sk#496)
[info]                :              +- *(3) ColumnarToRow
[info]                :                 +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22041]
[info]                   +- *(4) Project [p_promo_sk#589]
[info]                      +- *(4) Filter (((p_channel_email#598 = N) OR (p_channel_event#603 = N)) AND isnotnull(p_promo_sk#589))
[info]                         +- *(4) ColumnarToRow
[info]                            +- BatchScan[p_promo_sk#589, p_channel_email#598, p_channel_event#603] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 168 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q26                                                 169            169           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q27
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#6335 ASC NULLS FIRST,s_state#6336 ASC NULLS FIRST], output=[i_item_id#6335,s_state#6336,g_state#6323,agg1#6324,agg2#6325,agg3#6326,agg4#6327])
[info] +- *(6) HashAggregate(keys=[i_item_id#6335, s_state#6336, spark_grouping_id#6332], functions=[avg(cast(ss_quantity#1173 as bigint)), avg(UnscaledValue(ss_list_price#1175)), avg(UnscaledValue(ss_coupon_amt#1182)), avg(UnscaledValue(ss_sales_price#1176))])
[info]    +- Exchange hashpartitioning(i_item_id#6335, s_state#6336, spark_grouping_id#6332, 4), true, [id=#22233]
[info]       +- *(5) HashAggregate(keys=[i_item_id#6335, s_state#6336, spark_grouping_id#6332], functions=[partial_avg(cast(ss_quantity#1173 as bigint)), partial_avg(UnscaledValue(ss_list_price#1175)), partial_avg(UnscaledValue(ss_coupon_amt#1182)), partial_avg(UnscaledValue(ss_sales_price#1176))])
[info]          +- *(5) Expand [List(ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, i_item_id#497, s_state#694, 0), List(ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, i_item_id#497, null, 1), List(ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, null, null, 3)], [ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, i_item_id#6335, s_state#6336, spark_grouping_id#6332]
[info]             +- *(5) Project [ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, i_item_id#497, s_state#694]
[info]                +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                   :- *(5) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, s_state#694]
[info]                   :  +- *(5) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                   :     :- *(5) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182]
[info]                   :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                   :     :     :- *(5) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                   :     :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]                   :     :     :     :- *(5) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                   :     :     :     :  +- *(5) Filter (((isnotnull(ss_cdemo_sk#1167) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165))
[info]                   :     :     :     :     +- *(5) ColumnarToRow
[info]                   :     :     :     :        +- BatchScan[ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),...
[info]                   :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22199]
[info]                   :     :     :        +- *(1) Project [cd_demo_sk#290]
[info]                   :     :     :           +- *(1) Filter ((((((isnotnull(cd_education_status#293) AND isnotnull(cd_marital_status#292)) AND isnotnull(cd_gender#291)) AND (cd_gender#291 = M)) AND (cd_marital_status#292 = S)) AND (cd_education_status#293 = College)) AND isnotnull(cd_demo_sk#290))
[info]                   :     :     :              +- *(1) ColumnarToRow
[info]                   :     :     :                 +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
[info]                   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22208]
[info]                   :     :        +- *(2) Project [d_date_sk#331]
[info]                   :     :           +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND isnotnull(d_date_sk#331))
[info]                   :     :              +- *(2) ColumnarToRow
[info]                   :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22217]
[info]                   :        +- *(3) Project [s_store_sk#670, s_state#694]
[info]                   :           +- *(3) Filter ((isnotnull(s_state#694) AND (s_state#694 = TN)) AND isnotnull(s_store_sk#670))
[info]                   :              +- *(3) ColumnarToRow
[info]                   :                 +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22226]
[info]                      +- *(4) Project [i_item_sk#496, i_item_id#497]
[info]                         +- *(4) Filter isnotnull(i_item_sk#496)
[info]                            +- *(4) ColumnarToRow
[info]                               +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 229 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q27                                                 230            230           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q28
[info] == Physical Plan ==
[info] CollectLimit 100
[info] +- BroadcastNestedLoopJoin BuildRight, Inner
[info]    :- BroadcastNestedLoopJoin BuildRight, Inner
[info]    :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info]    :  :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info]    :  :  :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info]    :  :  :  :  :- *(3) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#1175)), count(ss_list_price#1175), count(distinct ss_list_price#1175)])
[info]    :  :  :  :  :  +- Exchange SinglePartition, true, [id=#22514]
[info]    :  :  :  :  :     +- *(2) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175), partial_count(distinct ss_list_price#1175)])
[info]    :  :  :  :  :        +- *(2) HashAggregate(keys=[ss_list_price#1175], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175)])
[info]    :  :  :  :  :           +- Exchange hashpartitioning(ss_list_price#1175, 4), true, [id=#22509]
[info]    :  :  :  :  :              +- *(1) HashAggregate(keys=[ss_list_price#1175], functions=[partial_avg(UnscaledValue(ss_list_price#1175)), partial_count(ss_list_price#1175)])
[info]    :  :  :  :  :                 +- *(1) Project [ss_list_price#1175]
[info]    :  :  :  :  :                    +- *(1) Filter (((((((ss_list_price#1175 >= 8.00) AND (cast(ss_list_price#1175 as decimal(12,2)) <= 18.00)) OR ((ss_coupon_amt#1182 >= 459.00) AND (cast(ss_coupon_amt#1182 as decimal(12,2)) <= 1459.00))) OR ((ss_wholesale_cost#1174 >= 57.00) AND (cast(ss_wholesale_cost#1174 as decimal(12,2)) <= 77.00))) AND isnotnull(ss_quantity#1173)) AND (ss_quantity#1173 >= 0)) AND (ss_quantity#1173 <= 5))
[info]    :  :  :  :  :                       +- *(1) ColumnarToRow
[info]    :  :  :  :  :                          +- BatchScan[ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
[info]    :  :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#22533]
[info]    :  :  :  :     +- *(6) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#1175)), count(ss_list_price#1175), count(distinct ss_list_price#1175)])
[info]    :  :  :  :        +- Exchange SinglePartition, true, [id=#22529]
[info]    :  :  :  :           +- *(5) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175), partial_count(distinct ss_list_price#1175)])
[info]    :  :  :  :              +- *(5) HashAggregate(keys=[ss_list_price#1175], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175)])
[info]    :  :  :  :                 +- Exchange hashpartitioning(ss_list_price#1175, 4), true, [id=#22524]
[info]    :  :  :  :                    +- *(4) HashAggregate(keys=[ss_list_price#1175], functions=[partial_avg(UnscaledValue(ss_list_price#1175)), partial_count(ss_list_price#1175)])
[info]    :  :  :  :                       +- *(4) Project [ss_list_price#1175]
[info]    :  :  :  :                          +- *(4) Filter (((((((ss_list_price#1175 >= 90.00) AND (cast(ss_list_price#1175 as decimal(12,2)) <= 100.00)) OR ((ss_coupon_amt#1182 >= 2323.00) AND (cast(ss_coupon_amt#1182 as decimal(12,2)) <= 3323.00))) OR ((ss_wholesale_cost#1174 >= 31.00) AND (cast(ss_wholesale_cost#1174 as decimal(12,2)) <= 51.00))) AND isnotnull(ss_quantity#1173)) AND (ss_quantity#1173 >= 6)) AND (ss_quantity#1173 <= 10))
[info]    :  :  :  :                             +- *(4) ColumnarToRow
[info]    :  :  :  :                                +- BatchScan[ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
[info]    :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#22550]
[info]    :  :  :     +- *(9) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#1175)), count(ss_list_price#1175), count(distinct ss_list_price#1175)])
[info]    :  :  :        +- Exchange SinglePartition, true, [id=#22546]
[info]    :  :  :           +- *(8) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175), partial_count(distinct ss_list_price#1175)])
[info]    :  :  :              +- *(8) HashAggregate(keys=[ss_list_price#1175], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175)])
[info]    :  :  :                 +- Exchange hashpartitioning(ss_list_price#1175, 4), true, [id=#22541]
[info]    :  :  :                    +- *(7) HashAggregate(keys=[ss_list_price#1175], functions=[partial_avg(UnscaledValue(ss_list_price#1175)), partial_count(ss_list_price#1175)])
[info]    :  :  :                       +- *(7) Project [ss_list_price#1175]
[info]    :  :  :                          +- *(7) Filter (((((((ss_list_price#1175 >= 142.00) AND (cast(ss_list_price#1175 as decimal(12,2)) <= 152.00)) OR ((ss_coupon_amt#1182 >= 12214.00) AND (cast(ss_coupon_amt#1182 as decimal(12,2)) <= 13214.00))) OR ((ss_wholesale_cost#1174 >= 79.00) AND (cast(ss_wholesale_cost#1174 as decimal(12,2)) <= 99.00))) AND isnotnull(ss_quantity#1173)) AND (ss_quantity#1173 >= 11)) AND (ss_quantity#1173 <= 15))
[info]    :  :  :                             +- *(7) ColumnarToRow
[info]    :  :  :                                +- BatchScan[ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
[info]    :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#22567]
[info]    :  :     +- *(12) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#1175)), count(ss_list_price#1175), count(distinct ss_list_price#1175)])
[info]    :  :        +- Exchange SinglePartition, true, [id=#22563]
[info]    :  :           +- *(11) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175), partial_count(distinct ss_list_price#1175)])
[info]    :  :              +- *(11) HashAggregate(keys=[ss_list_price#1175], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175)])
[info]    :  :                 +- Exchange hashpartitioning(ss_list_price#1175, 4), true, [id=#22558]
[info]    :  :                    +- *(10) HashAggregate(keys=[ss_list_price#1175], functions=[partial_avg(UnscaledValue(ss_list_price#1175)), partial_count(ss_list_price#1175)])
[info]    :  :                       +- *(10) Project [ss_list_price#1175]
[info]    :  :                          +- *(10) Filter (((((((ss_list_price#1175 >= 135.00) AND (cast(ss_list_price#1175 as decimal(12,2)) <= 145.00)) OR ((ss_coupon_amt#1182 >= 6071.00) AND (cast(ss_coupon_amt#1182 as decimal(12,2)) <= 7071.00))) OR ((ss_wholesale_cost#1174 >= 38.00) AND (cast(ss_wholesale_cost#1174 as decimal(12,2)) <= 58.00))) AND isnotnull(ss_quantity#1173)) AND (ss_quantity#1173 >= 16)) AND (ss_quantity#1173 <= 20))
[info]    :  :                             +- *(10) ColumnarToRow
[info]    :  :                                +- BatchScan[ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
[info]    :  +- BroadcastExchange IdentityBroadcastMode, [id=#22584]
[info]    :     +- *(15) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#1175)), count(ss_list_price#1175), count(distinct ss_list_price#1175)])
[info]    :        +- Exchange SinglePartition, true, [id=#22580]
[info]    :           +- *(14) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175), partial_count(distinct ss_list_price#1175)])
[info]    :              +- *(14) HashAggregate(keys=[ss_list_price#1175], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175)])
[info]    :                 +- Exchange hashpartitioning(ss_list_price#1175, 4), true, [id=#22575]
[info]    :                    +- *(13) HashAggregate(keys=[ss_list_price#1175], functions=[partial_avg(UnscaledValue(ss_list_price#1175)), partial_count(ss_list_price#1175)])
[info]    :                       +- *(13) Project [ss_list_price#1175]
[info]    :                          +- *(13) Filter (((((((ss_list_price#1175 >= 122.00) AND (cast(ss_list_price#1175 as decimal(12,2)) <= 132.00)) OR ((ss_coupon_amt#1182 >= 836.00) AND (cast(ss_coupon_amt#1182 as decimal(12,2)) <= 1836.00))) OR ((ss_wholesale_cost#1174 >= 17.00) AND (cast(ss_wholesale_cost#1174 as decimal(12,2)) <= 37.00))) AND isnotnull(ss_quantity#1173)) AND (ss_quantity#1173 >= 21)) AND (ss_quantity#1173 <= 25))
[info]    :                             +- *(13) ColumnarToRow
[info]    :                                +- BatchScan[ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
[info]    +- BroadcastExchange IdentityBroadcastMode, [id=#22601]
[info]       +- *(18) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#1175)), count(ss_list_price#1175), count(distinct ss_list_price#1175)])
[info]          +- Exchange SinglePartition, true, [id=#22597]
[info]             +- *(17) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175), partial_count(distinct ss_list_price#1175)])
[info]                +- *(17) HashAggregate(keys=[ss_list_price#1175], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175)])
[info]                   +- Exchange hashpartitioning(ss_list_price#1175, 4), true, [id=#22592]
[info]                      +- *(16) HashAggregate(keys=[ss_list_price#1175], functions=[partial_avg(UnscaledValue(ss_list_price#1175)), partial_count(ss_list_price#1175)])
[info]                         +- *(16) Project [ss_list_price#1175]
[info]                            +- *(16) Filter (((((((ss_list_price#1175 >= 154.00) AND (cast(ss_list_price#1175 as decimal(12,2)) <= 164.00)) OR ((ss_coupon_amt#1182 >= 7326.00) AND (cast(ss_coupon_amt#1182 as decimal(12,2)) <= 8326.00))) OR ((ss_wholesale_cost#1174 >= 7.00) AND (cast(ss_wholesale_cost#1174 as decimal(12,2)) <= 27.00))) AND isnotnull(ss_quantity#1173)) AND (ss_quantity#1173 >= 26)) AND (ss_quantity#1173 <= 30))
[info]                               +- *(16) ColumnarToRow
[info]                                  +- BatchScan[ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
[info] 
[info] 
[info]   Stopped after 1 iterations, 236 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q28                                                 236            236           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q29
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST,s_store_id#671 ASC NULLS FIRST,s_store_name#675 ASC NULLS FIRST], output=[i_item_id#497,i_item_desc#500,s_store_id#671,s_store_name#675,store_sales_quantity#6713L,store_returns_quantity#6714L,catalog_sales_quantity#6715L])
[info] +- *(15) HashAggregate(keys=[i_item_id#497, i_item_desc#500, s_store_id#671, s_store_name#675], functions=[sum(cast(ss_quantity#1173 as bigint)), sum(cast(sr_return_quantity#800 as bigint)), sum(cast(cs_quantity#895 as bigint))])
[info]    +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, s_store_id#671, s_store_name#675, 4), true, [id=#23023]
[info]       +- *(14) HashAggregate(keys=[i_item_id#497, i_item_desc#500, s_store_id#671, s_store_name#675], functions=[partial_sum(cast(ss_quantity#1173 as bigint)), partial_sum(cast(sr_return_quantity#800 as bigint)), partial_sum(cast(cs_quantity#895 as bigint))])
[info]          +- *(14) Project [ss_quantity#1173, sr_return_quantity#800, cs_quantity#895, s_store_id#671, s_store_name#675, i_item_id#497, i_item_desc#500]
[info]             +- *(14) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :- *(14) Project [ss_item_sk#1165, ss_quantity#1173, sr_return_quantity#800, cs_quantity#895, s_store_id#671, s_store_name#675]
[info]                :  +- *(14) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, sr_return_quantity#800, cs_quantity#895]
[info]                :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#6744], Inner, BuildRight
[info]                :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, sr_return_quantity#800, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :  +- *(14) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#6716], Inner, BuildRight
[info]                :     :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, sr_return_quantity#800, sr_returned_date_sk#810, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :     :  +- *(14) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sold_date_sk#1186, sr_return_quantity#800, sr_returned_date_sk#810, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :     :     :  +- *(14) SortMergeJoin [sr_customer_sk#793, sr_item_sk#792], [cs_bill_customer_sk#880, cs_item_sk#892], Inner
[info]                :     :     :     :     :     :- *(6) Sort [sr_customer_sk#793 ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :  +- Exchange hashpartitioning(sr_customer_sk#793, sr_item_sk#792, 4), true, [id=#22959]
[info]                :     :     :     :     :     :     +- *(5) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sold_date_sk#1186, sr_item_sk#792, sr_customer_sk#793, sr_return_quantity#800, sr_returned_date_sk#810]
[info]                :     :     :     :     :     :        +- *(5) SortMergeJoin [ss_customer_sk#1166, ss_item_sk#1165, ss_ticket_number#1172L], [sr_customer_sk#793, sr_item_sk#792, sr_ticket_number#799L], Inner
[info]                :     :     :     :     :     :           :- *(2) Sort [ss_customer_sk#1166 ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :           :  +- Exchange hashpartitioning(ss_customer_sk#1166, ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#22941]
[info]                :     :     :     :     :     :           :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_quantity#1173, ss_sold_date_sk#1186]
[info]                :     :     :     :     :     :           :        +- *(1) Filter ((((isnotnull(ss_item_sk#1165) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]                :     :     :     :     :     :           :           +- *(1) ColumnarToRow
[info]                :     :     :     :     :     :           :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_quantity#1173, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_quantity:int>
[info]                :     :     :     :     :     :           +- *(4) Sort [sr_customer_sk#793 ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :              +- Exchange hashpartitioning(sr_customer_sk#793, sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#22951]
[info]                :     :     :     :     :     :                 +- *(3) Project [sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_return_quantity#800, sr_returned_date_sk#810]
[info]                :     :     :     :     :     :                    +- *(3) Filter (((isnotnull(sr_customer_sk#793) AND isnotnull(sr_ticket_number#799L)) AND isnotnull(sr_item_sk#792)) AND isnotnull(sr_returned_date_sk#810))
[info]                :     :     :     :     :     :                       +- *(3) ColumnarToRow
[info]                :     :     :     :     :     :                          +- BatchScan[sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_return_quantity#800, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint,sr_return_quantity:int>
[info]                :     :     :     :     :     +- *(8) Sort [cs_bill_customer_sk#880 ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :        +- Exchange hashpartitioning(cs_bill_customer_sk#880, cs_item_sk#892, 4), true, [id=#22969]
[info]                :     :     :     :     :           +- *(7) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :     :     :              +- *(7) Filter ((isnotnull(cs_item_sk#892) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911))
[info]                :     :     :     :     :                 +- *(7) ColumnarToRow
[info]                :     :     :     :     :                    +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int>
[info]                :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22981]
[info]                :     :     :     :        +- *(9) Project [d_date_sk#331]
[info]                :     :     :     :           +- *(9) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 9)) AND (d_year#337 = 1999)) AND isnotnull(d_date_sk#331))
[info]                :     :     :     :              +- *(9) ColumnarToRow
[info]                :     :     :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22990]
[info]                :     :     :        +- *(10) Project [d_date_sk#6716]
[info]                :     :     :           +- *(10) Filter (((((isnotnull(d_year#6722) AND isnotnull(d_moy#6724)) AND (d_moy#6724 >= 9)) AND (d_moy#6724 <= 12)) AND (d_year#6722 = 1999)) AND isnotnull(d_date_sk#6716))
[info]                :     :     :              +- *(10) ColumnarToRow
[info]                :     :     :                 +- BatchScan[d_date_sk#6716, d_year#6722, d_moy#6724] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22999]
[info]                :     :        +- *(11) Project [d_date_sk#6744]
[info]                :     :           +- *(11) Filter (d_year#6750 IN (1999,2000,2001) AND isnotnull(d_date_sk#6744))
[info]                :     :              +- *(11) ColumnarToRow
[info]                :     :                 +- BatchScan[d_date_sk#6744, d_year#6750] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23008]
[info]                :        +- *(12) Project [s_store_sk#670, s_store_id#671, s_store_name#675]
[info]                :           +- *(12) Filter isnotnull(s_store_sk#670)
[info]                :              +- *(12) ColumnarToRow
[info]                :                 +- BatchScan[s_store_sk#670, s_store_id#671, s_store_name#675] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23017]
[info]                   +- *(13) Project [i_item_sk#496, i_item_id#497, i_item_desc#500]
[info]                      +- *(13) Filter isnotnull(i_item_sk#496)
[info]                         +- *(13) ColumnarToRow
[info]                            +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 269 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q29                                                 270            270           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q30
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#157 ASC NULLS FIRST,c_salutation#163 ASC NULLS FIRST,c_first_name#164 ASC NULLS FIRST,c_last_name#165 ASC NULLS FIRST,c_preferred_cust_flag#166 ASC NULLS FIRST,c_birth_day#167 ASC NULLS FIRST,c_birth_month#168 ASC NULLS FIRST,c_birth_year#169 ASC NULLS FIRST,c_birth_country#170 ASC NULLS FIRST,c_login#171 ASC NULLS FIRST,c_email_address#172 ASC NULLS FIRST,c_last_review_date#173 ASC NULLS FIRST,ctr_total_return#6848 ASC NULLS FIRST], output=[c_customer_id#157,c_salutation#163,c_first_name#164,c_last_name#165,c_preferred_cust_flag#166,c_birth_day#167,c_birth_month#168,c_birth_year#169,c_birth_country#170,c_login#171,c_email_address#172,c_last_review_date#173,ctr_total_return#6848])
[info] +- *(14) Project [c_customer_id#157, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_day#167, c_birth_month#168, c_birth_year#169, c_birth_country#170, c_login#171, c_email_address#172, c_last_review_date#173, ctr_total_return#6848]
[info]    +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]       :- *(14) Project [ctr_total_return#6848, c_customer_id#157, c_current_addr_sk#160, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_day#167, c_birth_month#168, c_birth_year#169, c_birth_country#170, c_login#171, c_email_address#172, c_last_review_date#173]
[info]       :  +- *(14) BroadcastHashJoin [ctr_customer_sk#6846], [c_customer_sk#156], Inner, BuildRight
[info]       :     :- *(14) Project [ctr_customer_sk#6846, ctr_total_return#6848]
[info]       :     :  +- *(14) SortMergeJoin [ctr_state#6847], [ctr_state#6847#6866], Inner, (cast(ctr_total_return#6848 as decimal(24,7)) > (CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#6852)
[info]       :     :     :- *(5) Sort [ctr_state#6847 ASC NULLS FIRST], false, 0
[info]       :     :     :  +- Exchange hashpartitioning(ctr_state#6847, 4), true, [id=#23337]
[info]       :     :     :     +- *(4) Filter isnotnull(ctr_total_return#6848)
[info]       :     :     :        +- *(4) HashAggregate(keys=[wr_returning_customer_sk#1269, ca_state#241], functions=[sum(UnscaledValue(wr_return_amt#1277))])
[info]       :     :     :           +- Exchange hashpartitioning(wr_returning_customer_sk#1269, ca_state#241, 4), true, [id=#23332]
[info]       :     :     :              +- *(3) HashAggregate(keys=[wr_returning_customer_sk#1269, ca_state#241], functions=[partial_sum(UnscaledValue(wr_return_amt#1277))])
[info]       :     :     :                 +- *(3) Project [wr_returning_customer_sk#1269, wr_return_amt#1277, ca_state#241]
[info]       :     :     :                    +- *(3) BroadcastHashJoin [wr_returning_addr_sk#1272], [ca_address_sk#233], Inner, BuildRight
[info]       :     :     :                       :- *(3) Project [wr_returning_customer_sk#1269, wr_returning_addr_sk#1272, wr_return_amt#1277]
[info]       :     :     :                       :  +- *(3) BroadcastHashJoin [wr_returned_date_sk#1286], [d_date_sk#331], Inner, BuildRight
[info]       :     :     :                       :     :- *(3) Project [wr_returning_customer_sk#1269, wr_returning_addr_sk#1272, wr_return_amt#1277, wr_returned_date_sk#1286]
[info]       :     :     :                       :     :  +- *(3) Filter ((isnotnull(wr_returned_date_sk#1286) AND isnotnull(wr_returning_addr_sk#1272)) AND isnotnull(wr_returning_customer_sk#1269))
[info]       :     :     :                       :     :     +- *(3) ColumnarToRow
[info]       :     :     :                       :     :        +- BatchScan[wr_returning_customer_sk#1269, wr_returning_addr_sk#1272, wr_return_amt#1277, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>
[info]       :     :     :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23317]
[info]       :     :     :                       :        +- *(1) Project [d_date_sk#331]
[info]       :     :     :                       :           +- *(1) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND isnotnull(d_date_sk#331))
[info]       :     :     :                       :              +- *(1) ColumnarToRow
[info]       :     :     :                       :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23326]
[info]       :     :     :                          +- *(2) Project [ca_address_sk#233, ca_state#241]
[info]       :     :     :                             +- *(2) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_state#241))
[info]       :     :     :                                +- *(2) ColumnarToRow
[info]       :     :     :                                   +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]       :     :     +- *(11) Sort [ctr_state#6847#6866 ASC NULLS FIRST], false, 0
[info]       :     :        +- Exchange hashpartitioning(ctr_state#6847#6866, 4), true, [id=#23495]
[info]       :     :           +- *(10) Filter isnotnull((CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#6852)
[info]       :     :              +- *(10) HashAggregate(keys=[ctr_state#6847], functions=[avg(ctr_total_return#6848)])
[info]       :     :                 +- Exchange hashpartitioning(ctr_state#6847, 4), true, [id=#23490]
[info]       :     :                    +- *(9) HashAggregate(keys=[ctr_state#6847], functions=[partial_avg(ctr_total_return#6848)])
[info]       :     :                       +- *(9) HashAggregate(keys=[wr_returning_customer_sk#1269, ca_state#241], functions=[sum(UnscaledValue(wr_return_amt#1277))])
[info]       :     :                          +- Exchange hashpartitioning(wr_returning_customer_sk#1269, ca_state#241, 4), true, [id=#23443]
[info]       :     :                             +- *(8) HashAggregate(keys=[wr_returning_customer_sk#1269, ca_state#241], functions=[partial_sum(UnscaledValue(wr_return_amt#1277))])
[info]       :     :                                +- *(8) Project [wr_returning_customer_sk#1269, wr_return_amt#1277, ca_state#241]
[info]       :     :                                   +- *(8) BroadcastHashJoin [wr_returning_addr_sk#1272], [ca_address_sk#233], Inner, BuildRight
[info]       :     :                                      :- *(8) Project [wr_returning_customer_sk#1269, wr_returning_addr_sk#1272, wr_return_amt#1277]
[info]       :     :                                      :  +- *(8) BroadcastHashJoin [wr_returned_date_sk#1286], [d_date_sk#331], Inner, BuildRight
[info]       :     :                                      :     :- *(8) Project [wr_returning_customer_sk#1269, wr_returning_addr_sk#1272, wr_return_amt#1277, wr_returned_date_sk#1286]
[info]       :     :                                      :     :  +- *(8) Filter (isnotnull(wr_returned_date_sk#1286) AND isnotnull(wr_returning_addr_sk#1272))
[info]       :     :                                      :     :     +- *(8) ColumnarToRow
[info]       :     :                                      :     :        +- BatchScan[wr_returning_customer_sk#1269, wr_returning_addr_sk#1272, wr_return_amt#1277, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>
[info]       :     :                                      :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23317]
[info]       :     :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23360]
[info]       :     :                                         +- *(7) Project [ca_address_sk#233, ca_state#241]
[info]       :     :                                            +- *(7) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_state#241))
[info]       :     :                                               +- *(7) ColumnarToRow
[info]       :     :                                                  +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23388]
[info]       :        +- *(12) Project [c_customer_sk#156, c_customer_id#157, c_current_addr_sk#160, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_day#167, c_birth_month#168, c_birth_year#169, c_birth_country#170, c_login#171, c_email_address#172, c_last_review_date#173]
[info]       :           +- *(12) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]       :              +- *(12) ColumnarToRow
[info]       :                 +- BatchScan[c_customer_sk#156, c_customer_id#157, c_current_addr_sk#160, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_day#167, c_birth_month#168, c_birth_year#169, c_birth_country#170, c_login#171, c_email_address#172, c_last_review_date#173] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_n...
[info]       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23397]
[info]          +- *(13) Project [ca_address_sk#233]
[info]             +- *(13) Filter ((isnotnull(ca_state#241) AND (ca_state#241 = GA)) AND isnotnull(ca_address_sk#233))
[info]                +- *(13) ColumnarToRow
[info]                   +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 368 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q30                                                 368            368           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q31
[info] == Physical Plan ==
[info] *(36) Sort [ca_county#240 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(ca_county#240 ASC NULLS FIRST, 4), true, [id=#24629]
[info]    +- *(35) Project [ca_county#240, d_year#337, CheckOverflow((promote_precision(web_sales#7625) / promote_precision(web_sales#7372)), DecimalType(37,20), true) AS web_q1_q2_increase#7367, CheckOverflow((promote_precision(store_sales#7379) / promote_precision(store_sales#7371)), DecimalType(37,20), true) AS store_q1_q2_increase#7368, CheckOverflow((promote_precision(web_sales#7721) / promote_precision(web_sales#7625)), DecimalType(37,20), true) AS web_q2_q3_increase#7369, CheckOverflow((promote_precision(store_sales#7475) / promote_precision(store_sales#7379)), DecimalType(37,20), true) AS store_q2_q3_increase#7370]
[info]       +- *(35) SortMergeJoin [ca_county#7619], [ca_county#7811], Inner, (CASE WHEN (web_sales#7625 > 0.00) THEN CheckOverflow((promote_precision(web_sales#7721) / promote_precision(web_sales#7625)), DecimalType(37,20), true) ELSE null END > CASE WHEN (store_sales#7379 > 0.00) THEN CheckOverflow((promote_precision(store_sales#7475) / promote_precision(store_sales#7379)), DecimalType(37,20), true) ELSE null END)
[info]          :- *(29) Project [ca_county#240, d_year#337, store_sales#7371, store_sales#7379, store_sales#7475, ca_county#7619, web_sales#7372, web_sales#7625]
[info]          :  +- *(29) SortMergeJoin [ca_county#7619], [ca_county#7715], Inner, (CASE WHEN (web_sales#7372 > 0.00) THEN CheckOverflow((promote_precision(web_sales#7625) / promote_precision(web_sales#7372)), DecimalType(37,20), true) ELSE null END > CASE WHEN (store_sales#7371 > 0.00) THEN CheckOverflow((promote_precision(store_sales#7379) / promote_precision(store_sales#7371)), DecimalType(37,20), true) ELSE null END)
[info]          :     :- *(23) SortMergeJoin [ca_county#240], [ca_county#7619], Inner
[info]          :     :  :- *(17) Project [ca_county#240, d_year#337, store_sales#7371, store_sales#7379, store_sales#7475]
[info]          :     :  :  +- *(17) SortMergeJoin [ca_county#7469], [ca_county#7565], Inner
[info]          :     :  :     :- *(11) SortMergeJoin [ca_county#240], [ca_county#7469], Inner
[info]          :     :  :     :  :- *(5) Sort [ca_county#240 ASC NULLS FIRST], false, 0
[info]          :     :  :     :  :  +- Exchange hashpartitioning(ca_county#240, 4), true, [id=#24082]
[info]          :     :  :     :  :     +- *(4) HashAggregate(keys=[ca_county#240, d_qoy#341, d_year#337], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          :     :  :     :  :        +- Exchange hashpartitioning(ca_county#240, d_qoy#341, d_year#337, 4), true, [id=#24078]
[info]          :     :  :     :  :           +- *(3) HashAggregate(keys=[ca_county#240, d_qoy#341, d_year#337], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          :     :  :     :  :              +- *(3) Project [ss_ext_sales_price#1178, d_year#337, d_qoy#341, ca_county#240]
[info]          :     :  :     :  :                 +- *(3) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]          :     :  :     :  :                    :- *(3) Project [ss_addr_sk#1169, ss_ext_sales_price#1178, d_year#337, d_qoy#341]
[info]          :     :  :     :  :                    :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]          :     :  :     :  :                    :     :- *(3) Project [ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]          :     :  :     :  :                    :     :  +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_addr_sk#1169))
[info]          :     :  :     :  :                    :     :     +- *(3) ColumnarToRow
[info]          :     :  :     :  :                    :     :        +- BatchScan[ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]          :     :  :     :  :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24063]
[info]          :     :  :     :  :                    :        +- *(1) Project [d_date_sk#331, d_year#337, d_qoy#341]
[info]          :     :  :     :  :                    :           +- *(1) Filter ((((isnotnull(d_qoy#341) AND isnotnull(d_year#337)) AND (d_qoy#341 = 1)) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]          :     :  :     :  :                    :              +- *(1) ColumnarToRow
[info]          :     :  :     :  :                    :                 +- BatchScan[d_date_sk#331, d_year#337, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info]          :     :  :     :  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24072]
[info]          :     :  :     :  :                       +- *(2) Project [ca_address_sk#233, ca_county#240]
[info]          :     :  :     :  :                          +- *(2) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_county#240))
[info]          :     :  :     :  :                             +- *(2) ColumnarToRow
[info]          :     :  :     :  :                                +- BatchScan[ca_address_sk#233, ca_county#240] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_county:string>
[info]          :     :  :     :  +- *(10) Sort [ca_county#7469 ASC NULLS FIRST], false, 0
[info]          :     :  :     :     +- Exchange hashpartitioning(ca_county#7469, 4), true, [id=#24357]
[info]          :     :  :     :        +- *(9) HashAggregate(keys=[ca_county#7469, d_qoy#7431, d_year#7427], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          :     :  :     :           +- Exchange hashpartitioning(ca_county#7469, d_qoy#7431, d_year#7427, 4), true, [id=#24311]
[info]          :     :  :     :              +- *(8) HashAggregate(keys=[ca_county#7469, d_qoy#7431, d_year#7427], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          :     :  :     :                 +- *(8) Project [ss_ext_sales_price#1178, d_year#7427, d_qoy#7431, ca_county#7469]
[info]          :     :  :     :                    +- *(8) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#7462], Inner, BuildRight
[info]          :     :  :     :                       :- *(8) Project [ss_addr_sk#1169, ss_ext_sales_price#1178, d_year#7427, d_qoy#7431]
[info]          :     :  :     :                       :  +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#7421], Inner, BuildRight
[info]          :     :  :     :                       :     :- *(8) Project [ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]          :     :  :     :                       :     :  +- *(8) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_addr_sk#1169))
[info]          :     :  :     :                       :     :     +- *(8) ColumnarToRow
[info]          :     :  :     :                       :     :        +- BatchScan[ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]          :     :  :     :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24096]
[info]          :     :  :     :                       :        +- *(6) Project [d_date_sk#7421, d_year#7427, d_qoy#7431]
[info]          :     :  :     :                       :           +- *(6) Filter ((((isnotnull(d_qoy#7431) AND isnotnull(d_year#7427)) AND (d_qoy#7431 = 2)) AND (d_year#7427 = 2000)) AND isnotnull(d_date_sk#7421))
[info]          :     :  :     :                       :              +- *(6) ColumnarToRow
[info]          :     :  :     :                       :                 +- BatchScan[d_date_sk#7421, d_year#7427, d_qoy#7431] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info]          :     :  :     :                       +- ReusedExchange [ca_address_sk#7462, ca_county#7469], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24072]
[info]          :     :  :     +- *(16) Sort [ca_county#7565 ASC NULLS FIRST], false, 0
[info]          :     :  :        +- Exchange hashpartitioning(ca_county#7565, 4), true, [id=#24412]
[info]          :     :  :           +- *(15) HashAggregate(keys=[ca_county#7565, d_qoy#7527, d_year#7523], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          :     :  :              +- Exchange hashpartitioning(ca_county#7565, d_qoy#7527, d_year#7523, 4), true, [id=#24387]
[info]          :     :  :                 +- *(14) HashAggregate(keys=[ca_county#7565, d_qoy#7527, d_year#7523], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          :     :  :                    +- *(14) Project [ss_ext_sales_price#1178, d_year#7523, d_qoy#7527, ca_county#7565]
[info]          :     :  :                       +- *(14) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#7558], Inner, BuildRight
[info]          :     :  :                          :- *(14) Project [ss_addr_sk#1169, ss_ext_sales_price#1178, d_year#7523, d_qoy#7527]
[info]          :     :  :                          :  +- *(14) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#7517], Inner, BuildRight
[info]          :     :  :                          :     :- *(14) Project [ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]          :     :  :                          :     :  +- *(14) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_addr_sk#1169))
[info]          :     :  :                          :     :     +- *(14) ColumnarToRow
[info]          :     :  :                          :     :        +- BatchScan[ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]          :     :  :                          :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24132]
[info]          :     :  :                          :        +- *(12) Project [d_date_sk#7517, d_year#7523, d_qoy#7527]
[info]          :     :  :                          :           +- *(12) Filter ((((isnotnull(d_qoy#7527) AND isnotnull(d_year#7523)) AND (d_qoy#7527 = 3)) AND (d_year#7523 = 2000)) AND isnotnull(d_date_sk#7517))
[info]          :     :  :                          :              +- *(12) ColumnarToRow
[info]          :     :  :                          :                 +- BatchScan[d_date_sk#7517, d_year#7523, d_qoy#7527] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info]          :     :  :                          +- ReusedExchange [ca_address_sk#7558, ca_county#7565], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24072]
[info]          :     :  +- *(22) Sort [ca_county#7619 ASC NULLS FIRST], false, 0
[info]          :     :     +- Exchange hashpartitioning(ca_county#7619, 4), true, [id=#24484]
[info]          :     :        +- *(21) HashAggregate(keys=[ca_county#7619, d_qoy#7581, d_year#7577], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]          :     :           +- Exchange hashpartitioning(ca_county#7619, d_qoy#7581, d_year#7577, 4), true, [id=#24459]
[info]          :     :              +- *(20) HashAggregate(keys=[ca_county#7619, d_qoy#7581, d_year#7577], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]          :     :                 +- *(20) Project [ws_ext_sales_price#1043, d_year#7577, d_qoy#7581, ca_county#7619]
[info]          :     :                    +- *(20) BroadcastHashJoin [ws_bill_addr_sk#1027], [ca_address_sk#7612], Inner, BuildRight
[info]          :     :                       :- *(20) Project [ws_bill_addr_sk#1027, ws_ext_sales_price#1043, d_year#7577, d_qoy#7581]
[info]          :     :                       :  +- *(20) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#7571], Inner, BuildRight
[info]          :     :                       :     :- *(20) Project [ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]          :     :                       :     :  +- *(20) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_addr_sk#1027))
[info]          :     :                       :     :     +- *(20) ColumnarToRow
[info]          :     :                       :     :        +- BatchScan[ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]          :     :                       :     +- ReusedExchange [d_date_sk#7571, d_year#7577, d_qoy#7581], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24063]
[info]          :     :                       +- ReusedExchange [ca_address_sk#7612, ca_county#7619], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24072]
[info]          :     +- *(28) Sort [ca_county#7715 ASC NULLS FIRST], false, 0
[info]          :        +- Exchange hashpartitioning(ca_county#7715, 4), true, [id=#24543]
[info]          :           +- *(27) HashAggregate(keys=[ca_county#7715, d_qoy#7677, d_year#7673], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]          :              +- Exchange hashpartitioning(ca_county#7715, d_qoy#7677, d_year#7673, 4), true, [id=#24518]
[info]          :                 +- *(26) HashAggregate(keys=[ca_county#7715, d_qoy#7677, d_year#7673], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]          :                    +- *(26) Project [ws_ext_sales_price#1043, d_year#7673, d_qoy#7677, ca_county#7715]
[info]          :                       +- *(26) BroadcastHashJoin [ws_bill_addr_sk#1027], [ca_address_sk#7708], Inner, BuildRight
[info]          :                          :- *(26) Project [ws_bill_addr_sk#1027, ws_ext_sales_price#1043, d_year#7673, d_qoy#7677]
[info]          :                          :  +- *(26) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#7667], Inner, BuildRight
[info]          :                          :     :- *(26) Project [ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]          :                          :     :  +- *(26) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_addr_sk#1027))
[info]          :                          :     :     +- *(26) ColumnarToRow
[info]          :                          :     :        +- BatchScan[ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]          :                          :     +- ReusedExchange [d_date_sk#7667, d_year#7673, d_qoy#7677], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24096]
[info]          :                          +- ReusedExchange [ca_address_sk#7708, ca_county#7715], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24072]
[info]          +- *(34) Sort [ca_county#7811 ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning(ca_county#7811, 4), true, [id=#24615]
[info]                +- *(33) HashAggregate(keys=[ca_county#7811, d_qoy#7773, d_year#7769], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                   +- Exchange hashpartitioning(ca_county#7811, d_qoy#7773, d_year#7769, 4), true, [id=#24590]
[info]                      +- *(32) HashAggregate(keys=[ca_county#7811, d_qoy#7773, d_year#7769], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                         +- *(32) Project [ws_ext_sales_price#1043, d_year#7769, d_qoy#7773, ca_county#7811]
[info]                            +- *(32) BroadcastHashJoin [ws_bill_addr_sk#1027], [ca_address_sk#7804], Inner, BuildRight
[info]                               :- *(32) Project [ws_bill_addr_sk#1027, ws_ext_sales_price#1043, d_year#7769, d_qoy#7773]
[info]                               :  +- *(32) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#7763], Inner, BuildRight
[info]                               :     :- *(32) Project [ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                               :     :  +- *(32) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_addr_sk#1027))
[info]                               :     :     +- *(32) ColumnarToRow
[info]                               :     :        +- BatchScan[ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                               :     +- ReusedExchange [d_date_sk#7763, d_year#7769, d_qoy#7773], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24132]
[info]                               +- ReusedExchange [ca_address_sk#7804, ca_county#7811], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24072]
[info] 
[info] 
[info]   Stopped after 1 iterations, 633 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q31                                                 634            634           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q32
[info] == Physical Plan ==
[info] CollectLimit 100
[info] +- *(9) Project [1 AS excess discount amount #7906]
[info]    +- *(9) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :- *(9) Project [cs_sold_date_sk#911]
[info]       :  +- *(9) SortMergeJoin [i_item_sk#496], [cs_item_sk#892#7910], Inner, (cast(cs_ext_discount_amt#899 as decimal(14,7)) > (CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(cs_ext_discount_amt) AS DECIMAL(11,6)))#7908)
[info]       :     :- *(3) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#24791]
[info]       :     :     +- *(2) Project [cs_ext_discount_amt#899, cs_sold_date_sk#911, i_item_sk#496]
[info]       :     :        +- *(2) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]       :     :           :- *(2) Project [cs_item_sk#892, cs_ext_discount_amt#899, cs_sold_date_sk#911]
[info]       :     :           :  +- *(2) Filter ((isnotnull(cs_item_sk#892) AND isnotnull(cs_ext_discount_amt#899)) AND isnotnull(cs_sold_date_sk#911))
[info]       :     :           :     +- *(2) ColumnarToRow
[info]       :     :           :        +- BatchScan[cs_item_sk#892, cs_ext_discount_amt#899, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_ext_discount_amt:decimal(7,2)>
[info]       :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24786]
[info]       :     :              +- *(1) Project [i_item_sk#496]
[info]       :     :                 +- *(1) Filter ((isnotnull(i_manufact_id#509) AND (i_manufact_id#509 = 977)) AND isnotnull(i_item_sk#496))
[info]       :     :                    +- *(1) ColumnarToRow
[info]       :     :                       +- BatchScan[i_item_sk#496, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>
[info]       :     +- *(7) Sort [cs_item_sk#892#7910 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(cs_item_sk#892#7910, 4), true, [id=#24816]
[info]       :           +- *(6) Filter isnotnull((CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(cs_ext_discount_amt) AS DECIMAL(11,6)))#7908)
[info]       :              +- *(6) HashAggregate(keys=[cs_item_sk#892], functions=[avg(UnscaledValue(cs_ext_discount_amt#899))])
[info]       :                 +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#24811]
[info]       :                    +- *(5) HashAggregate(keys=[cs_item_sk#892], functions=[partial_avg(UnscaledValue(cs_ext_discount_amt#899))])
[info]       :                       +- *(5) Project [cs_item_sk#892, cs_ext_discount_amt#899]
[info]       :                          +- *(5) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :                             :- *(5) Project [cs_item_sk#892, cs_ext_discount_amt#899, cs_sold_date_sk#911]
[info]       :                             :  +- *(5) Filter (isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_item_sk#892))
[info]       :                             :     +- *(5) ColumnarToRow
[info]       :                             :        +- BatchScan[cs_item_sk#892, cs_ext_discount_amt#899, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_ext_discount_amt:decimal(7,2)>
[info]       :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24805]
[info]       :                                +- *(4) Project [d_date_sk#331]
[info]       :                                   +- *(4) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10983)) AND (d_date#333 <= 11073)) AND isnotnull(d_date_sk#331))
[info]       :                                      +- *(4) ColumnarToRow
[info]       :                                         +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]       +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24805]
[info] 
[info] 
[info]   Stopped after 1 iterations, 200 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q32                                                 200            200           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q33
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[total_sales#7947 ASC NULLS FIRST], output=[i_manufact_id#509,total_sales#7947])
[info] +- *(20) HashAggregate(keys=[i_manufact_id#509], functions=[sum(total_sales#7949)])
[info]    +- Exchange hashpartitioning(i_manufact_id#509, 4), true, [id=#25620]
[info]       +- *(19) HashAggregate(keys=[i_manufact_id#509], functions=[partial_sum(total_sales#7949)])
[info]          +- Union
[info]             :- *(6) HashAggregate(keys=[i_manufact_id#509], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             :  +- Exchange hashpartitioning(i_manufact_id#509, 4), true, [id=#25284]
[info]             :     +- *(5) HashAggregate(keys=[i_manufact_id#509], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             :        +- *(5) Project [ss_ext_sales_price#1178, i_manufact_id#509]
[info]             :           +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :              :- *(5) Project [ss_item_sk#1165, ss_ext_sales_price#1178]
[info]             :              :  +- *(5) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]             :              :     :- *(5) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178]
[info]             :              :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :              :     :     :- *(5) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]             :              :     :     :  +- *(5) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_addr_sk#1169)) AND isnotnull(ss_item_sk#1165))
[info]             :              :     :     :     +- *(5) ColumnarToRow
[info]             :              :     :     :        +- BatchScan[ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]             :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25252]
[info]             :              :     :        +- *(1) Project [d_date_sk#331]
[info]             :              :     :           +- *(1) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 1998)) AND (d_moy#339 = 5)) AND isnotnull(d_date_sk#331))
[info]             :              :     :              +- *(1) ColumnarToRow
[info]             :              :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25261]
[info]             :              :        +- *(2) Project [ca_address_sk#233]
[info]             :              :           +- *(2) Filter ((isnotnull(ca_gmt_offset#244) AND (ca_gmt_offset#244 = -5.00)) AND isnotnull(ca_address_sk#233))
[info]             :              :              +- *(2) ColumnarToRow
[info]             :              :                 +- BatchScan[ca_address_sk#233, ca_gmt_offset#244] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
[info]             :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25278]
[info]             :                 +- *(4) BroadcastHashJoin [i_manufact_id#509], [i_manufact_id#509#8004], LeftSemi, BuildRight
[info]             :                    :- *(4) Project [i_item_sk#496, i_manufact_id#509]
[info]             :                    :  +- *(4) Filter isnotnull(i_item_sk#496)
[info]             :                    :     +- *(4) ColumnarToRow
[info]             :                    :        +- BatchScan[i_item_sk#496, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>
[info]             :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25274]
[info]             :                       +- *(3) Project [i_manufact_id#509 AS i_manufact_id#509#8004]
[info]             :                          +- *(3) Filter (isnotnull(i_category#508) AND (i_category#508 = Electronics))
[info]             :                             +- *(3) ColumnarToRow
[info]             :                                +- BatchScan[i_category#508, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_category:string,i_manufact_id:int>
[info]             :- *(12) HashAggregate(keys=[i_manufact_id#509], functions=[sum(UnscaledValue(cs_ext_sales_price#900))])
[info]             :  +- Exchange hashpartitioning(i_manufact_id#509, 4), true, [id=#25476]
[info]             :     +- *(11) HashAggregate(keys=[i_manufact_id#509], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900))])
[info]             :        +- *(11) Project [cs_ext_sales_price#900, i_manufact_id#509]
[info]             :           +- *(11) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]             :              :- *(11) Project [cs_item_sk#892, cs_ext_sales_price#900]
[info]             :              :  +- *(11) BroadcastHashJoin [cs_bill_addr_sk#883], [ca_address_sk#233], Inner, BuildRight
[info]             :              :     :- *(11) Project [cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900]
[info]             :              :     :  +- *(11) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :              :     :     :- *(11) Project [cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]             :              :     :     :  +- *(11) Filter ((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_bill_addr_sk#883)) AND isnotnull(cs_item_sk#892))
[info]             :              :     :     :     +- *(11) ColumnarToRow
[info]             :              :     :     :        +- BatchScan[cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]             :              :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25252]
[info]             :              :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25261]
[info]             :              +- ReusedExchange [i_item_sk#496, i_manufact_id#509], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25278]
[info]             +- *(18) HashAggregate(keys=[i_manufact_id#509], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                +- Exchange hashpartitioning(i_manufact_id#509, 4), true, [id=#25586]
[info]                   +- *(17) HashAggregate(keys=[i_manufact_id#509], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                      +- *(17) Project [ws_ext_sales_price#1043, i_manufact_id#509]
[info]                         +- *(17) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                            :- *(17) Project [ws_item_sk#1023, ws_ext_sales_price#1043]
[info]                            :  +- *(17) BroadcastHashJoin [ws_bill_addr_sk#1027], [ca_address_sk#233], Inner, BuildRight
[info]                            :     :- *(17) Project [ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043]
[info]                            :     :  +- *(17) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                            :     :     :- *(17) Project [ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                            :     :     :  +- *(17) Filter ((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_addr_sk#1027)) AND isnotnull(ws_item_sk#1023))
[info]                            :     :     :     +- *(17) ColumnarToRow
[info]                            :     :     :        +- BatchScan[ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                            :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25252]
[info]                            :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25261]
[info]                            +- ReusedExchange [i_item_sk#496, i_manufact_id#509], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25278]
[info] 
[info] 
[info]   Stopped after 1 iterations, 464 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q33                                                 464            464           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q34
[info] == Physical Plan ==
[info] *(7) Sort [c_last_name#165 ASC NULLS FIRST, c_first_name#164 ASC NULLS FIRST, c_salutation#163 ASC NULLS FIRST, c_preferred_cust_flag#166 DESC NULLS LAST], true, 0
[info] +- Exchange rangepartitioning(c_last_name#165 ASC NULLS FIRST, c_first_name#164 ASC NULLS FIRST, c_salutation#163 ASC NULLS FIRST, c_preferred_cust_flag#166 DESC NULLS LAST, 4), true, [id=#25814]
[info]    +- *(6) Project [c_last_name#165, c_first_name#164, c_salutation#163, c_preferred_cust_flag#166, ss_ticket_number#1172L, cnt#8029L]
[info]       +- *(6) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]          :- *(6) Filter ((cnt#8029L >= 15) AND (cnt#8029L <= 20))
[info]          :  +- *(6) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166], functions=[count(1)])
[info]          :     +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_customer_sk#1166, 4), true, [id=#25800]
[info]          :        +- *(4) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166], functions=[partial_count(1)])
[info]          :           +- *(4) Project [ss_customer_sk#1166, ss_ticket_number#1172L]
[info]          :              +- *(4) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]          :                 :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_ticket_number#1172L]
[info]          :                 :  +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]          :                 :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L]
[info]          :                 :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]          :                 :     :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186]
[info]          :                 :     :     :  +- *(4) Filter (((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_customer_sk#1166))
[info]          :                 :     :     :     +- *(4) ColumnarToRow
[info]          :                 :     :     :        +- BatchScan[ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_hdemo_sk:int,ss_store_sk:int,ss_ticket_number:bigint>
[info]          :                 :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25776]
[info]          :                 :     :        +- *(1) Project [d_date_sk#331]
[info]          :                 :     :           +- *(1) Filter (((((d_dom#340 >= 1) AND (d_dom#340 <= 3)) OR ((d_dom#340 >= 25) AND (d_dom#340 <= 28))) AND d_year#337 IN (1999,2000,2001)) AND isnotnull(d_date_sk#331))
[info]          :                 :     :              +- *(1) ColumnarToRow
[info]          :                 :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_dom:int>
[info]          :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25785]
[info]          :                 :        +- *(2) Project [s_store_sk#670]
[info]          :                 :           +- *(2) Filter ((isnotnull(s_county#693) AND (s_county#693 = Williamson County)) AND isnotnull(s_store_sk#670))
[info]          :                 :              +- *(2) ColumnarToRow
[info]          :                 :                 +- BatchScan[s_store_sk#670, s_county#693] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_county:string>
[info]          :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25794]
[info]          :                    +- *(3) Project [hd_demo_sk#448]
[info]          :                       +- *(3) Filter (((((CASE WHEN (hd_vehicle_count#452 > 0) THEN (cast(hd_dep_count#451 as double) / cast(hd_vehicle_count#452 as double)) ELSE null END > 1.2) AND isnotnull(hd_vehicle_count#452)) AND ((hd_buy_potential#450 = >10000) OR (hd_buy_potential#450 = unknown))) AND (hd_vehicle_count#452 > 0)) AND isnotnull(hd_demo_sk#448))
[info]          :                          +- *(3) ColumnarToRow
[info]          :                             +- BatchScan[hd_demo_sk#448, hd_buy_potential#450, hd_dep_count#451, hd_vehicle_count#452] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string,hd_dep_count:int,hd_vehicle_count:int>
[info]          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25809]
[info]             +- *(5) Project [c_customer_sk#156, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166]
[info]                +- *(5) Filter isnotnull(c_customer_sk#156)
[info]                   +- *(5) ColumnarToRow
[info]                      +- BatchScan[c_customer_sk#156, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_c...
[info] 
[info] 
[info]   Stopped after 1 iterations, 182 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q34                                                 183            183           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q35
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ca_state#241 ASC NULLS FIRST,cd_gender#291 ASC NULLS FIRST,cd_marital_status#292 ASC NULLS FIRST,aggOrder#8139 ASC NULLS FIRST,cd_dep_employed_count#297 ASC NULLS FIRST,cd_dep_college_count#298 ASC NULLS FIRST], output=[ca_state#241,cd_gender#291,cd_marital_status#292,cnt1#8112L,min(cd_dep_count)#8127,max(cd_dep_count)#8128,avg(cd_dep_count)#8129,cd_dep_employed_count#297,cnt2#8113L,min(cd_dep_employed_count)#8130,max(cd_dep_employed_count)#8131,avg(cd_dep_employed_count)#8132,cd_dep_college_count#298,cnt3#8114L,min(cd_dep_college_count)#8133,max(cd_dep_college_count)#8134,avg(cd_dep_college_count)#8135])
[info] +- *(15) HashAggregate(keys=[ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[count(1), min(cd_dep_count#296), max(cd_dep_count#296), avg(cast(cd_dep_count#296 as bigint)), min(cd_dep_employed_count#297), max(cd_dep_employed_count#297), avg(cast(cd_dep_employed_count#297 as bigint)), min(cd_dep_college_count#298), max(cd_dep_college_count#298), avg(cast(cd_dep_college_count#298 as bigint))])
[info]    +- Exchange hashpartitioning(ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298, 4), true, [id=#26206]
[info]       +- *(14) HashAggregate(keys=[ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[partial_count(1), partial_min(cd_dep_count#296), partial_max(cd_dep_count#296), partial_avg(cast(cd_dep_count#296 as bigint)), partial_min(cd_dep_employed_count#297), partial_max(cd_dep_employed_count#297), partial_avg(cast(cd_dep_employed_count#297 as bigint)), partial_min(cd_dep_college_count#298), partial_max(cd_dep_college_count#298), partial_avg(cast(cd_dep_college_count#298 as bigint))])
[info]          +- *(14) Project [ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]             +- *(14) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]                :- *(14) Project [c_current_cdemo_sk#158, ca_state#241]
[info]                :  +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                :     :- *(14) Project [c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :  +- *(14) Filter (exists#8170 OR exists#8171)
[info]                :     :     +- SortMergeJoin [c_customer_sk#156], [cs_ship_customer_sk#884], ExistenceJoin(exists#8171)
[info]                :     :        :- SortMergeJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], ExistenceJoin(exists#8170)
[info]                :     :        :  :- SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], LeftSemi
[info]                :     :        :  :  :- *(2) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                :     :        :  :  :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#26064]
[info]                :     :        :  :  :     +- *(1) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :        :  :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_current_cdemo_sk#158))
[info]                :     :        :  :  :           +- *(1) ColumnarToRow
[info]                :     :        :  :  :              +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
[info]                :     :        :  :  +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                :     :        :  :     +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#26082]
[info]                :     :        :  :        +- *(4) Project [ss_customer_sk#1166]
[info]                :     :        :  :           +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :        :  :              :- *(4) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                :     :        :  :              :  +- *(4) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :     :        :  :              :     +- *(4) ColumnarToRow
[info]                :     :        :  :              :        +- BatchScan[ss_sold_time_sk#1164, ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_sales_price#1176, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_ext_tax#1181, ss_coupon_amt#1182, ss_net_paid#1183, ss_net_paid_inc_tax#1184, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_a...
[info]                :     :        :  :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26077]
[info]                :     :        :  :                 +- *(3) Project [d_date_sk#331]
[info]                :     :        :  :                    +- *(3) Filter ((((isnotnull(d_year#337) AND isnotnull(d_qoy#341)) AND (d_year#337 = 2002)) AND (d_qoy#341 < 4)) AND isnotnull(d_date_sk#331))
[info]                :     :        :  :                       +- *(3) ColumnarToRow
[info]                :     :        :  :                          +- BatchScan[d_date_sk#331, d_date_id#332, d_date#333, d_month_seq#334, d_week_seq#335, d_quarter_seq#336, d_year#337, d_dow#338, d_moy#339, d_dom#340, d_qoy#341, d_fy_year#342, d_fy_quarter_seq#343, d_fy_week_seq#344, d_day_name#345, d_quarter_name#346, d_holiday#347, d_weekend#348, d_following_holiday#349, d_first_dom#350, d_last_dom#351, d_same_day_ly#352, d_same_day_lq#353, d_current_day#354, ... 4 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:in...
[info]                :     :        :  +- *(8) Sort [ws_bill_customer_sk#1024 ASC NULLS FIRST], false, 0
[info]                :     :        :     +- Exchange hashpartitioning(ws_bill_customer_sk#1024, 4), true, [id=#26174]
[info]                :     :        :        +- *(7) Project [ws_bill_customer_sk#1024]
[info]                :     :        :           +- *(7) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :        :              :- *(7) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                :     :        :              :  +- *(7) Filter isnotnull(ws_sold_date_sk#1054)
[info]                :     :        :              :     +- *(7) ColumnarToRow
[info]                :     :        :              :        +- BatchScan[ws_sold_time_sk#1021, ws_ship_date_sk#1022, ws_item_sk#1023, ws_bill_customer_sk#1024, ws_bill_cdemo_sk#1025, ws_bill_hdemo_sk#1026, ws_bill_addr_sk#1027, ws_ship_customer_sk#1028, ws_ship_cdemo_sk#1029, ws_ship_hdemo_sk#1030, ws_ship_addr_sk#1031, ws_web_page_sk#1032, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_promo_sk#1036, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_list_price#1040, ws_sales_price#1041, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cde...
[info]                :     :        :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26077]
[info]                :     :        +- *(11) Sort [cs_ship_customer_sk#884 ASC NULLS FIRST], false, 0
[info]                :     :           +- Exchange hashpartitioning(cs_ship_customer_sk#884, 4), true, [id=#26192]
[info]                :     :              +- *(10) Project [cs_ship_customer_sk#884]
[info]                :     :                 +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :                    :- *(10) Project [cs_ship_customer_sk#884, cs_sold_date_sk#911]
[info]                :     :                    :  +- *(10) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :                    :     +- *(10) ColumnarToRow
[info]                :     :                    :        +- BatchScan[cs_sold_time_sk#878, cs_ship_date_sk#879, cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_bill_addr_sk#883, cs_ship_customer_sk#884, cs_ship_cdemo_sk#885, cs_ship_hdemo_sk#886, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_catalog_page_sk#889, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_list_price#897, cs_sales_price#898, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bi...
[info]                :     :                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26077]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26133]
[info]                :        +- *(12) Project [ca_address_sk#233, ca_state#241]
[info]                :           +- *(12) Filter isnotnull(ca_address_sk#233)
[info]                :              +- *(12) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26142]
[info]                   +- *(13) Project [cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]                      +- *(13) Filter isnotnull(cd_demo_sk#290)
[info]                         +- *(13) ColumnarToRow
[info]                            +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_dep_count:int,cd_dep_employed_...
[info] 
[info] 
[info]   Stopped after 1 iterations, 293 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q35                                                 294            294           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q36
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#8245 DESC NULLS LAST,CASE WHEN (cast(lochierarchy#8245 as int) = 0) THEN i_category#8256 END ASC NULLS FIRST,rank_within_parent#8246 ASC NULLS FIRST], output=[gross_margin#8244,i_category#8256,i_class#8257,lochierarchy#8245,rank_within_parent#8246])
[info] +- *(7) Project [gross_margin#8244, i_category#8256, i_class#8257, lochierarchy#8245, rank_within_parent#8246]
[info]    +- Window [rank(_w3#8272) windowspecdefinition(_w1#8270, _w2#8271, _w3#8272 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#8246], [_w1#8270, _w2#8271], [_w3#8272 ASC NULLS FIRST]
[info]       +- *(6) Sort [_w1#8270 ASC NULLS FIRST, _w2#8271 ASC NULLS FIRST, _w3#8272 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(_w1#8270, _w2#8271, 4), true, [id=#26378]
[info]             +- *(5) HashAggregate(keys=[i_category#8256, i_class#8257, spark_grouping_id#8253], functions=[sum(UnscaledValue(ss_net_profit#1185)), sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                +- Exchange hashpartitioning(i_category#8256, i_class#8257, spark_grouping_id#8253, 4), true, [id=#26374]
[info]                   +- *(4) HashAggregate(keys=[i_category#8256, i_class#8257, spark_grouping_id#8253], functions=[partial_sum(UnscaledValue(ss_net_profit#1185)), partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                      +- *(4) Expand [List(ss_ext_sales_price#1178, ss_net_profit#1185, i_category#508, i_class#506, 0), List(ss_ext_sales_price#1178, ss_net_profit#1185, i_category#508, null, 1), List(ss_ext_sales_price#1178, ss_net_profit#1185, null, null, 3)], [ss_ext_sales_price#1178, ss_net_profit#1185, i_category#8256, i_class#8257, spark_grouping_id#8253]
[info]                         +- *(4) Project [ss_ext_sales_price#1178, ss_net_profit#1185, i_category#508, i_class#506]
[info]                            +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :- *(4) Project [ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, i_class#506, i_category#508]
[info]                               :  +- *(4) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                               :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185]
[info]                               :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                               :     :     :  +- *(4) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_store_sk#1170))
[info]                               :     :     :     +- *(4) ColumnarToRow
[info]                               :     :     :        +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>
[info]                               :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26349]
[info]                               :     :        +- *(1) Project [d_date_sk#331]
[info]                               :     :           +- *(1) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]                               :     :              +- *(1) ColumnarToRow
[info]                               :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26358]
[info]                               :        +- *(2) Project [i_item_sk#496, i_class#506, i_category#508]
[info]                               :           +- *(2) Filter isnotnull(i_item_sk#496)
[info]                               :              +- *(2) ColumnarToRow
[info]                               :                 +- BatchScan[i_item_sk#496, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26367]
[info]                                  +- *(3) Project [s_store_sk#670]
[info]                                     +- *(3) Filter ((isnotnull(s_state#694) AND (s_state#694 = TN)) AND isnotnull(s_store_sk#670))
[info]                                        +- *(3) ColumnarToRow
[info]                                           +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 177 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q36                                                 178            178           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q37
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST], output=[i_item_id#497,i_item_desc#500,i_current_price#501])
[info] +- *(8) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_current_price#501], functions=[])
[info]    +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_current_price#501, 4), true, [id=#26542]
[info]       +- *(7) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_current_price#501], functions=[])
[info]          +- *(7) Project [i_item_id#497, i_item_desc#500, i_current_price#501]
[info]             +- *(7) SortMergeJoin [i_item_sk#496], [cs_item_sk#892], Inner
[info]                :- *(4) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]                :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#26523]
[info]                :     +- *(3) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501]
[info]                :        +- *(3) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]                :           :- *(3) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, inv_date_sk#476]
[info]                :           :  +- *(3) BroadcastHashJoin [i_item_sk#496], [inv_item_sk#473], Inner, BuildLeft
[info]                :           :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26505]
[info]                :           :     :  +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501]
[info]                :           :     :     +- *(1) Filter (((((cast(i_current_price#501 as decimal(12,2)) <= 98.00) AND isnotnull(i_current_price#501)) AND (i_current_price#501 >= 68.00)) AND i_manufact_id#509 IN (677,940,694,808)) AND isnotnull(i_item_sk#496))
[info]                :           :     :        +- *(1) ColumnarToRow
[info]                :           :     :           +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_manufact_...
[info]                :           :     +- *(3) Project [inv_item_sk#473, inv_date_sk#476]
[info]                :           :        +- *(3) Filter ((((isnotnull(inv_quantity_on_hand#475) AND (inv_quantity_on_hand#475 >= 100)) AND (inv_quantity_on_hand#475 <= 500)) AND isnotnull(inv_item_sk#473)) AND isnotnull(inv_date_sk#476))
[info]                :           :           +- *(3) ColumnarToRow
[info]                :           :              +- BatchScan[inv_item_sk#473, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_quantity_on_hand:int>
[info]                :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26518]
[info]                :              +- *(2) Project [d_date_sk#331]
[info]                :                 +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10988)) AND (d_date#333 <= 11048)) AND isnotnull(d_date_sk#331))
[info]                :                    +- *(2) ColumnarToRow
[info]                :                       +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                +- *(6) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                   +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#26533]
[info]                      +- *(5) Project [cs_item_sk#892]
[info]                         +- *(5) Filter isnotnull(cs_item_sk#892)
[info]                            +- *(5) ColumnarToRow
[info]                               +- BatchScan[cs_item_sk#892] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 145 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q37                                                 146            146           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q38
[info] == Physical Plan ==
[info] CollectLimit 100
[info] +- *(17) HashAggregate(keys=[], functions=[count(1)])
[info]    +- Exchange SinglePartition, true, [id=#27191]
[info]       +- *(16) HashAggregate(keys=[], functions=[partial_count(1)])
[info]          +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]             +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                   +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                      +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                         +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, d_date#333, 4), true, [id=#27139]
[info]                            +- *(15) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                               +- *(15) Project [c_last_name#165, c_first_name#164, d_date#333]
[info]                                  +- SortMergeJoin [coalesce(c_last_name#165, ), isnull(c_last_name#165), coalesce(c_first_name#164, ), isnull(c_first_name#164), coalesce(d_date#333, 0), isnull(d_date#333)], [coalesce(c_last_name#8574, ), isnull(c_last_name#8574), coalesce(c_first_name#8573, ), isnull(c_first_name#8573), coalesce(d_date#8521, 0), isnull(d_date#8521)], LeftSemi
[info]                                     :- SortMergeJoin [coalesce(c_last_name#165, ), isnull(c_last_name#165), coalesce(c_first_name#164, ), isnull(c_first_name#164), coalesce(d_date#333, 0), isnull(d_date#333)], [coalesce(c_last_name#8510, ), isnull(c_last_name#8510), coalesce(c_first_name#8509, ), isnull(c_first_name#8509), coalesce(d_date#8456, 0), isnull(d_date#8456)], LeftSemi
[info]                                     :  :- *(4) Sort [coalesce(c_last_name#165, ) ASC NULLS FIRST, isnull(c_last_name#165) ASC NULLS FIRST, coalesce(c_first_name#164, ) ASC NULLS FIRST, isnull(c_first_name#164) ASC NULLS FIRST, coalesce(d_date#333, 0) ASC NULLS FIRST, isnull(d_date#333) ASC NULLS FIRST], false, 0
[info]                                     :  :  +- Exchange hashpartitioning(coalesce(c_last_name#165, ), isnull(c_last_name#165), coalesce(c_first_name#164, ), isnull(c_first_name#164), coalesce(d_date#333, 0), isnull(d_date#333), 4), true, [id=#26907]
[info]                                     :  :     +- *(3) Project [d_date#333, c_first_name#164, c_last_name#165]
[info]                                     :  :        +- *(3) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                                     :  :           :- *(3) Project [ss_customer_sk#1166, d_date#333]
[info]                                     :  :           :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                                     :  :           :     :- *(3) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                                     :  :           :     :  +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_customer_sk#1166))
[info]                                     :  :           :     :     +- *(3) ColumnarToRow
[info]                                     :  :           :     :        +- BatchScan[ss_customer_sk#1166, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int>
[info]                                     :  :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26893]
[info]                                     :  :           :        +- *(1) Project [d_date_sk#331, d_date#333]
[info]                                     :  :           :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                                     :  :           :              +- *(1) ColumnarToRow
[info]                                     :  :           :                 +- BatchScan[d_date_sk#331, d_date#333, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>
[info]                                     :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26902]
[info]                                     :  :              +- *(2) Project [c_customer_sk#156, c_first_name#164, c_last_name#165]
[info]                                     :  :                 +- *(2) Filter isnotnull(c_customer_sk#156)
[info]                                     :  :                    +- *(2) ColumnarToRow
[info]                                     :  :                       +- BatchScan[c_customer_sk#156, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
[info]                                     :  +- *(9) Sort [coalesce(c_last_name#8510, ) ASC NULLS FIRST, isnull(c_last_name#8510) ASC NULLS FIRST, coalesce(c_first_name#8509, ) ASC NULLS FIRST, isnull(c_first_name#8509) ASC NULLS FIRST, coalesce(d_date#8456, 0) ASC NULLS FIRST, isnull(d_date#8456) ASC NULLS FIRST], false, 0
[info]                                     :     +- Exchange hashpartitioning(coalesce(c_last_name#8510, ), isnull(c_last_name#8510), coalesce(c_first_name#8509, ), isnull(c_first_name#8509), coalesce(d_date#8456, 0), isnull(d_date#8456), 4), true, [id=#27041]
[info]                                     :        +- *(8) HashAggregate(keys=[c_last_name#8510, c_first_name#8509, d_date#8456], functions=[])
[info]                                     :           +- Exchange hashpartitioning(c_last_name#8510, c_first_name#8509, d_date#8456, 4), true, [id=#27037]
[info]                                     :              +- *(7) HashAggregate(keys=[c_last_name#8510, c_first_name#8509, d_date#8456], functions=[])
[info]                                     :                 +- *(7) Project [c_last_name#8510, c_first_name#8509, d_date#8456]
[info]                                     :                    +- *(7) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#8501], Inner, BuildRight
[info]                                     :                       :- *(7) Project [cs_bill_customer_sk#880, d_date#8456]
[info]                                     :                       :  +- *(7) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#8454], Inner, BuildRight
[info]                                     :                       :     :- *(7) Project [cs_bill_customer_sk#880, cs_sold_date_sk#911]
[info]                                     :                       :     :  +- *(7) Filter (isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_bill_customer_sk#880))
[info]                                     :                       :     :     +- *(7) ColumnarToRow
[info]                                     :                       :     :        +- BatchScan[cs_bill_customer_sk#880, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int>
[info]                                     :                       :     +- ReusedExchange [d_date_sk#8454, d_date#8456], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26893]
[info]                                     :                       +- ReusedExchange [c_customer_sk#8501, c_first_name#8509, c_last_name#8510], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26902]
[info]                                     +- *(14) Sort [coalesce(c_last_name#8574, ) ASC NULLS FIRST, isnull(c_last_name#8574) ASC NULLS FIRST, coalesce(c_first_name#8573, ) ASC NULLS FIRST, isnull(c_first_name#8573) ASC NULLS FIRST, coalesce(d_date#8521, 0) ASC NULLS FIRST, isnull(d_date#8521) ASC NULLS FIRST], false, 0
[info]                                        +- Exchange hashpartitioning(coalesce(c_last_name#8574, ), isnull(c_last_name#8574), coalesce(c_first_name#8573, ), isnull(c_first_name#8573), coalesce(d_date#8521, 0), isnull(d_date#8521), 4), true, [id=#27124]
[info]                                           +- *(13) HashAggregate(keys=[c_last_name#8574, c_first_name#8573, d_date#8521], functions=[])
[info]                                              +- Exchange hashpartitioning(c_last_name#8574, c_first_name#8573, d_date#8521, 4), true, [id=#27099]
[info]                                                 +- *(12) HashAggregate(keys=[c_last_name#8574, c_first_name#8573, d_date#8521], functions=[])
[info]                                                    +- *(12) Project [c_last_name#8574, c_first_name#8573, d_date#8521]
[info]                                                       +- *(12) BroadcastHashJoin [ws_bill_customer_sk#1024], [c_customer_sk#8565], Inner, BuildRight
[info]                                                          :- *(12) Project [ws_bill_customer_sk#1024, d_date#8521]
[info]                                                          :  +- *(12) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#8519], Inner, BuildRight
[info]                                                          :     :- *(12) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                                                          :     :  +- *(12) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_customer_sk#1024))
[info]                                                          :     :     +- *(12) ColumnarToRow
[info]                                                          :     :        +- BatchScan[ws_bill_customer_sk#1024, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int>
[info]                                                          :     +- ReusedExchange [d_date_sk#8519, d_date#8521], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26893]
[info]                                                          +- ReusedExchange [c_customer_sk#8565, c_first_name#8573, c_last_name#8574], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26902]
[info] 
[info] 
[info]   Stopped after 1 iterations, 300 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q38                                                 301            301           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q39a
[info] == Physical Plan ==
[info] *(14) Sort [w_warehouse_sk#1621 ASC NULLS FIRST, i_item_sk#496 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, mean#8947 ASC NULLS FIRST, cov#8948 ASC NULLS FIRST, d_moy#9248 ASC NULLS FIRST, mean#9069 ASC NULLS FIRST, cov#9001 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(w_warehouse_sk#1621 ASC NULLS FIRST, i_item_sk#496 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, mean#8947 ASC NULLS FIRST, cov#8948 ASC NULLS FIRST, d_moy#9248 ASC NULLS FIRST, mean#9069 ASC NULLS FIRST, cov#9001 ASC NULLS FIRST, 4), true, [id=#27687]
[info]    +- *(13) SortMergeJoin [i_item_sk#496, w_warehouse_sk#1621], [i_item_sk#9134, w_warehouse_sk#9198], Inner
[info]       :- *(6) Sort [i_item_sk#496 ASC NULLS FIRST, w_warehouse_sk#1621 ASC NULLS FIRST], false, 0
[info]       :  +- Exchange hashpartitioning(i_item_sk#496, w_warehouse_sk#1621, 4), true, [id=#27487]
[info]       :     +- *(5) Project [w_warehouse_sk#1621, i_item_sk#496, d_moy#339, mean#8947, CASE WHEN (mean#8947 = 0.0) THEN null ELSE (stdev#8946 / mean#8947) END AS cov#8948]
[info]       :        +- *(5) Filter (CASE WHEN (mean#8947 = 0.0) THEN 0.0 ELSE (stdev#8946 / mean#8947) END > 1.0)
[info]       :           +- *(5) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sk#1621, i_item_sk#496, d_moy#339], functions=[stddev_samp(cast(inv_quantity_on_hand#475 as double)), avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]       :              +- Exchange hashpartitioning(w_warehouse_name#1623, w_warehouse_sk#1621, i_item_sk#496, d_moy#339, 4), true, [id=#27481]
[info]       :                 +- *(4) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sk#1621, i_item_sk#496, d_moy#339], functions=[partial_stddev_samp(cast(inv_quantity_on_hand#475 as double)), partial_avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]       :                    +- *(4) Project [inv_quantity_on_hand#475, i_item_sk#496, w_warehouse_sk#1621, w_warehouse_name#1623, d_moy#339]
[info]       :                       +- *(4) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]       :                          :- *(4) Project [inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#496, w_warehouse_sk#1621, w_warehouse_name#1623]
[info]       :                          :  +- *(4) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#1621], Inner, BuildRight
[info]       :                          :     :- *(4) Project [inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#496]
[info]       :                          :     :  +- *(4) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#496], Inner, BuildRight
[info]       :                          :     :     :- *(4) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]       :                          :     :     :  +- *(4) Filter ((isnotnull(inv_item_sk#473) AND isnotnull(inv_warehouse_sk#474)) AND isnotnull(inv_date_sk#476))
[info]       :                          :     :     :     +- *(4) ColumnarToRow
[info]       :                          :     :     :        +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]       :                          :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27457]
[info]       :                          :     :        +- *(1) Project [i_item_sk#496]
[info]       :                          :     :           +- *(1) Filter isnotnull(i_item_sk#496)
[info]       :                          :     :              +- *(1) ColumnarToRow
[info]       :                          :     :                 +- BatchScan[i_item_sk#496] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int>
[info]       :                          :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27466]
[info]       :                          :        +- *(2) Project [w_warehouse_sk#1621, w_warehouse_name#1623]
[info]       :                          :           +- *(2) Filter isnotnull(w_warehouse_sk#1621)
[info]       :                          :              +- *(2) ColumnarToRow
[info]       :                          :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
[info]       :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27475]
[info]       :                             +- *(3) Project [d_date_sk#331, d_moy#339]
[info]       :                                +- *(3) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2001)) AND (d_moy#339 = 1)) AND isnotnull(d_date_sk#331))
[info]       :                                   +- *(3) ColumnarToRow
[info]       :                                      +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]       +- *(12) Sort [i_item_sk#9134 ASC NULLS FIRST, w_warehouse_sk#9198 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_item_sk#9134, w_warehouse_sk#9198, 4), true, [id=#27660]
[info]             +- *(11) Project [w_warehouse_sk#9198, i_item_sk#9134, d_moy#9248, mean#9069, CASE WHEN (mean#9069 = 0.0) THEN null ELSE (stdev#9068 / mean#9069) END AS cov#9001]
[info]                +- *(11) Filter (CASE WHEN (mean#9069 = 0.0) THEN 0.0 ELSE (stdev#9068 / mean#9069) END > 1.0)
[info]                   +- *(11) HashAggregate(keys=[w_warehouse_name#9200, w_warehouse_sk#9198, i_item_sk#9134, d_moy#9248], functions=[stddev_samp(cast(inv_quantity_on_hand#475 as double)), avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]                      +- Exchange hashpartitioning(w_warehouse_name#9200, w_warehouse_sk#9198, i_item_sk#9134, d_moy#9248, 4), true, [id=#27602]
[info]                         +- *(10) HashAggregate(keys=[w_warehouse_name#9200, w_warehouse_sk#9198, i_item_sk#9134, d_moy#9248], functions=[partial_stddev_samp(cast(inv_quantity_on_hand#475 as double)), partial_avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]                            +- *(10) Project [inv_quantity_on_hand#475, i_item_sk#9134, w_warehouse_sk#9198, w_warehouse_name#9200, d_moy#9248]
[info]                               +- *(10) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#9240], Inner, BuildRight
[info]                                  :- *(10) Project [inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#9134, w_warehouse_sk#9198, w_warehouse_name#9200]
[info]                                  :  +- *(10) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#9198], Inner, BuildRight
[info]                                  :     :- *(10) Project [inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#9134]
[info]                                  :     :  +- *(10) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#9134], Inner, BuildRight
[info]                                  :     :     :- *(10) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]                                  :     :     :  +- *(10) Filter ((isnotnull(inv_item_sk#473) AND isnotnull(inv_warehouse_sk#474)) AND isnotnull(inv_date_sk#476))
[info]                                  :     :     :     +- *(10) ColumnarToRow
[info]                                  :     :     :        +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]                                  :     :     +- ReusedExchange [i_item_sk#9134], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27457]
[info]                                  :     +- ReusedExchange [w_warehouse_sk#9198, w_warehouse_name#9200], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27466]
[info]                                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27519]
[info]                                     +- *(9) Project [d_date_sk#9240, d_moy#9248]
[info]                                        +- *(9) Filter ((((isnotnull(d_year#9246) AND isnotnull(d_moy#9248)) AND (d_year#9246 = 2001)) AND (d_moy#9248 = 2)) AND isnotnull(d_date_sk#9240))
[info]                                           +- *(9) ColumnarToRow
[info]                                              +- BatchScan[d_date_sk#9240, d_year#9246, d_moy#9248] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 321 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q39a                                                321            321           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q39b
[info] == Physical Plan ==
[info] *(14) Sort [w_warehouse_sk#1621 ASC NULLS FIRST, i_item_sk#496 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, mean#9721 ASC NULLS FIRST, cov#9722 ASC NULLS FIRST, d_moy#10022 ASC NULLS FIRST, mean#9843 ASC NULLS FIRST, cov#9775 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(w_warehouse_sk#1621 ASC NULLS FIRST, i_item_sk#496 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, mean#9721 ASC NULLS FIRST, cov#9722 ASC NULLS FIRST, d_moy#10022 ASC NULLS FIRST, mean#9843 ASC NULLS FIRST, cov#9775 ASC NULLS FIRST, 4), true, [id=#28182]
[info]    +- *(13) SortMergeJoin [i_item_sk#496, w_warehouse_sk#1621], [i_item_sk#9908, w_warehouse_sk#9972], Inner
[info]       :- *(6) Sort [i_item_sk#496 ASC NULLS FIRST, w_warehouse_sk#1621 ASC NULLS FIRST], false, 0
[info]       :  +- Exchange hashpartitioning(i_item_sk#496, w_warehouse_sk#1621, 4), true, [id=#27982]
[info]       :     +- *(5) Project [w_warehouse_sk#1621, i_item_sk#496, d_moy#339, mean#9721, CASE WHEN (mean#9721 = 0.0) THEN null ELSE (stdev#9720 / mean#9721) END AS cov#9722]
[info]       :        +- *(5) Filter ((CASE WHEN (mean#9721 = 0.0) THEN 0.0 ELSE (stdev#9720 / mean#9721) END > 1.0) AND (CASE WHEN (mean#9721 = 0.0) THEN null ELSE (stdev#9720 / mean#9721) END > 1.5))
[info]       :           +- *(5) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sk#1621, i_item_sk#496, d_moy#339], functions=[stddev_samp(cast(inv_quantity_on_hand#475 as double)), avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]       :              +- Exchange hashpartitioning(w_warehouse_name#1623, w_warehouse_sk#1621, i_item_sk#496, d_moy#339, 4), true, [id=#27976]
[info]       :                 +- *(4) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sk#1621, i_item_sk#496, d_moy#339], functions=[partial_stddev_samp(cast(inv_quantity_on_hand#475 as double)), partial_avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]       :                    +- *(4) Project [inv_quantity_on_hand#475, i_item_sk#496, w_warehouse_sk#1621, w_warehouse_name#1623, d_moy#339]
[info]       :                       +- *(4) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]       :                          :- *(4) Project [inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#496, w_warehouse_sk#1621, w_warehouse_name#1623]
[info]       :                          :  +- *(4) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#1621], Inner, BuildRight
[info]       :                          :     :- *(4) Project [inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#496]
[info]       :                          :     :  +- *(4) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#496], Inner, BuildRight
[info]       :                          :     :     :- *(4) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]       :                          :     :     :  +- *(4) Filter ((isnotnull(inv_item_sk#473) AND isnotnull(inv_warehouse_sk#474)) AND isnotnull(inv_date_sk#476))
[info]       :                          :     :     :     +- *(4) ColumnarToRow
[info]       :                          :     :     :        +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]       :                          :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27952]
[info]       :                          :     :        +- *(1) Project [i_item_sk#496]
[info]       :                          :     :           +- *(1) Filter isnotnull(i_item_sk#496)
[info]       :                          :     :              +- *(1) ColumnarToRow
[info]       :                          :     :                 +- BatchScan[i_item_sk#496] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int>
[info]       :                          :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27961]
[info]       :                          :        +- *(2) Project [w_warehouse_sk#1621, w_warehouse_name#1623]
[info]       :                          :           +- *(2) Filter isnotnull(w_warehouse_sk#1621)
[info]       :                          :              +- *(2) ColumnarToRow
[info]       :                          :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
[info]       :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27970]
[info]       :                             +- *(3) Project [d_date_sk#331, d_moy#339]
[info]       :                                +- *(3) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2001)) AND (d_moy#339 = 1)) AND isnotnull(d_date_sk#331))
[info]       :                                   +- *(3) ColumnarToRow
[info]       :                                      +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]       +- *(12) Sort [i_item_sk#9908 ASC NULLS FIRST, w_warehouse_sk#9972 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_item_sk#9908, w_warehouse_sk#9972, 4), true, [id=#28155]
[info]             +- *(11) Project [w_warehouse_sk#9972, i_item_sk#9908, d_moy#10022, mean#9843, CASE WHEN (mean#9843 = 0.0) THEN null ELSE (stdev#9842 / mean#9843) END AS cov#9775]
[info]                +- *(11) Filter (CASE WHEN (mean#9843 = 0.0) THEN 0.0 ELSE (stdev#9842 / mean#9843) END > 1.0)
[info]                   +- *(11) HashAggregate(keys=[w_warehouse_name#9974, w_warehouse_sk#9972, i_item_sk#9908, d_moy#10022], functions=[stddev_samp(cast(inv_quantity_on_hand#475 as double)), avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]                      +- Exchange hashpartitioning(w_warehouse_name#9974, w_warehouse_sk#9972, i_item_sk#9908, d_moy#10022, 4), true, [id=#28097]
[info]                         +- *(10) HashAggregate(keys=[w_warehouse_name#9974, w_warehouse_sk#9972, i_item_sk#9908, d_moy#10022], functions=[partial_stddev_samp(cast(inv_quantity_on_hand#475 as double)), partial_avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]                            +- *(10) Project [inv_quantity_on_hand#475, i_item_sk#9908, w_warehouse_sk#9972, w_warehouse_name#9974, d_moy#10022]
[info]                               +- *(10) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#10014], Inner, BuildRight
[info]                                  :- *(10) Project [inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#9908, w_warehouse_sk#9972, w_warehouse_name#9974]
[info]                                  :  +- *(10) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#9972], Inner, BuildRight
[info]                                  :     :- *(10) Project [inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#9908]
[info]                                  :     :  +- *(10) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#9908], Inner, BuildRight
[info]                                  :     :     :- *(10) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]                                  :     :     :  +- *(10) Filter ((isnotnull(inv_item_sk#473) AND isnotnull(inv_warehouse_sk#474)) AND isnotnull(inv_date_sk#476))
[info]                                  :     :     :     +- *(10) ColumnarToRow
[info]                                  :     :     :        +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]                                  :     :     +- ReusedExchange [i_item_sk#9908], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27952]
[info]                                  :     +- ReusedExchange [w_warehouse_sk#9972, w_warehouse_name#9974], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27961]
[info]                                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28014]
[info]                                     +- *(9) Project [d_date_sk#10014, d_moy#10022]
[info]                                        +- *(9) Filter ((((isnotnull(d_year#10020) AND isnotnull(d_moy#10022)) AND (d_year#10020 = 2001)) AND (d_moy#10022 = 2)) AND isnotnull(d_date_sk#10014))
[info]                                           +- *(9) ColumnarToRow
[info]                                              +- BatchScan[d_date_sk#10014, d_year#10020, d_moy#10022] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 307 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q39b                                                308            308           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q40
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[w_state#1631 ASC NULLS FIRST,i_item_id#497 ASC NULLS FIRST], output=[w_state#1631,i_item_id#497,sales_before#10172,sales_after#10173])
[info] +- *(9) HashAggregate(keys=[w_state#1631, i_item_id#497], functions=[sum(CASE WHEN (d_date#333 < 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#63 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END), sum(CASE WHEN (d_date#333 >= 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#63 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END)])
[info]    +- Exchange hashpartitioning(w_state#1631, i_item_id#497, 4), true, [id=#28375]
[info]       +- *(8) HashAggregate(keys=[w_state#1631, i_item_id#497], functions=[partial_sum(CASE WHEN (d_date#333 < 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#63 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_date#333 >= 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#63 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END)])
[info]          +- *(8) Project [cs_sales_price#898, cr_refunded_cash#63, w_state#1631, i_item_id#497, d_date#333]
[info]             +- *(8) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :- *(8) Project [cs_sales_price#898, cs_sold_date_sk#911, cr_refunded_cash#63, w_state#1631, i_item_id#497]
[info]                :  +- *(8) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                :     :- *(8) Project [cs_item_sk#892, cs_sales_price#898, cs_sold_date_sk#911, cr_refunded_cash#63, w_state#1631]
[info]                :     :  +- *(8) BroadcastHashJoin [cs_warehouse_sk#891], [w_warehouse_sk#1621], Inner, BuildRight
[info]                :     :     :- *(8) Project [cs_warehouse_sk#891, cs_item_sk#892, cs_sales_price#898, cs_sold_date_sk#911, cr_refunded_cash#63]
[info]                :     :     :  +- SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], LeftOuter
[info]                :     :     :     :- *(2) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                :     :     :     :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#28330]
[info]                :     :     :     :     +- *(1) Project [cs_warehouse_sk#891, cs_item_sk#892, cs_order_number#894L, cs_sales_price#898, cs_sold_date_sk#911]
[info]                :     :     :     :        +- *(1) Filter ((isnotnull(cs_warehouse_sk#891) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_sold_date_sk#911))
[info]                :     :     :     :           +- *(1) ColumnarToRow
[info]                :     :     :     :              +- BatchScan[cs_warehouse_sk#891, cs_item_sk#892, cs_order_number#894L, cs_sales_price#898, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_warehouse_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_sales_price:decimal(7,2)>
[info]                :     :     :     +- *(4) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]                :     :     :        +- Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#28339]
[info]                :     :     :           +- *(3) Project [cr_item_sk#42, cr_order_number#56L, cr_refunded_cash#63]
[info]                :     :     :              +- *(3) Filter (isnotnull(cr_order_number#56L) AND isnotnull(cr_item_sk#42))
[info]                :     :     :                 +- *(3) ColumnarToRow
[info]                :     :     :                    +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_refunded_cash#63] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_refunded_cash:decimal(7,2)>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28351]
[info]                :     :        +- *(5) Project [w_warehouse_sk#1621, w_state#1631]
[info]                :     :           +- *(5) Filter isnotnull(w_warehouse_sk#1621)
[info]                :     :              +- *(5) ColumnarToRow
[info]                :     :                 +- BatchScan[w_warehouse_sk#1621, w_state#1631] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_state:string>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28360]
[info]                :        +- *(6) Project [i_item_sk#496, i_item_id#497]
[info]                :           +- *(6) Filter (((isnotnull(i_current_price#501) AND (i_current_price#501 >= 0.99)) AND (i_current_price#501 <= 1.49)) AND isnotnull(i_item_sk#496))
[info]                :              +- *(6) ColumnarToRow
[info]                :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_current_price#501] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_current_price:decimal(7,2)>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28369]
[info]                   +- *(7) Project [d_date_sk#331, d_date#333]
[info]                      +- *(7) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10997)) AND (d_date#333 <= 11057)) AND isnotnull(d_date_sk#331))
[info]                         +- *(7) ColumnarToRow
[info]                            +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 189 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q40                                                 190            190           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q41
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_product_name#517 ASC NULLS FIRST], output=[i_product_name#517])
[info] +- *(2) HashAggregate(keys=[i_product_name#517], functions=[])
[info]    +- *(2) HashAggregate(keys=[i_product_name#517], functions=[])
[info]       +- *(2) Project [i_product_name#517]
[info]          +- *(2) BroadcastHashJoin [i_manufact#510], [i_manufact#510#10211], Inner, BuildRight
[info]             :- *(2) Project [i_manufact#510, i_product_name#517]
[info]             :  +- *(2) Filter (((isnotnull(i_manufact_id#509) AND (i_manufact_id#509 >= 738)) AND (i_manufact_id#509 <= 778)) AND isnotnull(i_manufact#510))
[info]             :     +- *(2) ColumnarToRow
[info]             :        +- BatchScan[i_manufact_id#509, i_manufact#510, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_manufact_id:int,i_manufact:string,i_product_name:string>
[info]             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true])), [id=#28463]
[info]                +- *(1) Project [i_manufact#510#10211]
[info]                   +- *(1) Filter (if (isnull(alwaysTrue#10217)) 0 else item_cnt#10207L > 0)
[info]                      +- *(1) HashAggregate(keys=[i_manufact#510], functions=[count(1)])
[info]                         +- *(1) HashAggregate(keys=[i_manufact#510], functions=[partial_count(1)])
[info]                            +- *(1) Project [i_manufact#510]
[info]                               +- *(1) Filter (((((i_category#508 = Women) AND (((((i_color#513 = powder) OR (i_color#513 = khaki)) AND ((i_units#514 = Ounce) OR (i_units#514 = Oz))) AND ((i_size#511 = medium) OR (i_size#511 = extra large))) OR ((((i_color#513 = brown) OR (i_color#513 = honeydew)) AND ((i_units#514 = Bunch) OR (i_units#514 = Ton))) AND ((i_size#511 = N/A) OR (i_size#511 = small))))) OR ((i_category#508 = Men) AND (((((i_color#513 = floral) OR (i_color#513 = deep)) AND ((i_units#514 = N/A) OR (i_units#514 = Dozen))) AND ((i_size#511 = petite) OR (i_size#511 = large))) OR ((((i_color#513 = light) OR (i_color#513 = cornflower)) AND ((i_units#514 = Box) OR (i_units#514 = Pound))) AND ((i_size#511 = medium) OR (i_size#511 = extra large)))))) OR (((i_category#508 = Women) AND (((((i_color#513 = midnight) OR (i_color#513 = snow)) AND ((i_units#514 = Pallet) OR (i_units#514 = Gross))) AND ((i_size#511 = medium) OR (i_size#511 = extra large))) OR ((((i_color#513 = cyan) OR (i_color#513 = papaya)) AND ((i_units#514 = Cup) OR (i_units#514 = Dram))) AND ((i_size#511 = N/A) OR (i_size#511 = small))))) OR ((i_category#508 = Men) AND (((((i_color#513 = orange) OR (i_color#513 = frosted)) AND ((i_units#514 = Each) OR (i_units#514 = Tbl))) AND ((i_size#511 = petite) OR (i_size#511 = large))) OR ((((i_color#513 = forest) OR (i_color#513 = ghost)) AND ((i_units#514 = Lb) OR (i_units#514 = Bundle))) AND ((i_size#511 = medium) OR (i_size#511 = extra large))))))) AND isnotnull(i_manufact#510))
[info]                                  +- *(1) ColumnarToRow
[info]                                     +- BatchScan[i_category#508, i_manufact#510, i_size#511, i_color#513, i_units#514] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_category:string,i_manufact:string,i_size:string,i_color:string,i_units:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 143 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q41                                                 143            143           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q42
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[sum(ss_ext_sales_price)#10235 DESC NULLS LAST,d_year#337 ASC NULLS FIRST,i_category_id#507 ASC NULLS FIRST,i_category#508 ASC NULLS FIRST], output=[d_year#337,i_category_id#507,i_category#508,sum(ss_ext_sales_price)#10235])
[info] +- *(4) HashAggregate(keys=[d_year#337, i_category_id#507, i_category#508], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]    +- Exchange hashpartitioning(d_year#337, i_category_id#507, i_category#508, 4), true, [id=#28575]
[info]       +- *(3) HashAggregate(keys=[d_year#337, i_category_id#507, i_category#508], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          +- *(3) Project [d_year#337, ss_ext_sales_price#1178, i_category_id#507, i_category#508]
[info]             +- *(3) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :- *(3) Project [d_year#337, ss_item_sk#1165, ss_ext_sales_price#1178]
[info]                :  +- *(3) BroadcastHashJoin [d_date_sk#331], [ss_sold_date_sk#1186], Inner, BuildLeft
[info]                :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28556]
[info]                :     :  +- *(1) Project [d_date_sk#331, d_year#337]
[info]                :     :     +- *(1) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 11)) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                :     :        +- *(1) ColumnarToRow
[info]                :     :           +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     +- *(3) Project [ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                :        +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165))
[info]                :           +- *(3) ColumnarToRow
[info]                :              +- BatchScan[ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28569]
[info]                   +- *(2) Project [i_item_sk#496, i_category_id#507, i_category#508]
[info]                      +- *(2) Filter ((isnotnull(i_manager_id#516) AND (i_manager_id#516 = 1)) AND isnotnull(i_item_sk#496))
[info]                         +- *(2) ColumnarToRow
[info]                            +- BatchScan[i_item_sk#496, i_category_id#507, i_category#508, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_category_id:int,i_category:string,i_manager_id:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 130 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q42                                                 131            131           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q43
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[s_store_name#675 ASC NULLS FIRST,s_store_id#671 ASC NULLS FIRST,sun_sales#10290 ASC NULLS FIRST,mon_sales#10291 ASC NULLS FIRST,tue_sales#10292 ASC NULLS FIRST,wed_sales#10293 ASC NULLS FIRST,thu_sales#10294 ASC NULLS FIRST,fri_sales#10295 ASC NULLS FIRST,sat_sales#10296 ASC NULLS FIRST], output=[s_store_name#675,s_store_id#671,sun_sales#10290,mon_sales#10291,tue_sales#10292,wed_sales#10293,thu_sales#10294,fri_sales#10295,sat_sales#10296])
[info] +- *(4) HashAggregate(keys=[s_store_name#675, s_store_id#671], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN ss_sales_price#1176 ELSE null END))])
[info]    +- Exchange hashpartitioning(s_store_name#675, s_store_id#671, 4), true, [id=#28684]
[info]       +- *(3) HashAggregate(keys=[s_store_name#675, s_store_id#671], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN ss_sales_price#1176 ELSE null END))])
[info]          +- *(3) Project [d_day_name#345, ss_sales_price#1176, s_store_id#671, s_store_name#675]
[info]             +- *(3) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :- *(3) Project [d_day_name#345, ss_store_sk#1170, ss_sales_price#1176]
[info]                :  +- *(3) BroadcastHashJoin [d_date_sk#331], [ss_sold_date_sk#1186], Inner, BuildLeft
[info]                :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28665]
[info]                :     :  +- *(1) Project [d_date_sk#331, d_day_name#345]
[info]                :     :     +- *(1) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                :     :        +- *(1) ColumnarToRow
[info]                :     :           +- BatchScan[d_date_sk#331, d_year#337, d_day_name#345] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_day_name:string>
[info]                :     +- *(3) Project [ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                :        +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]                :           +- *(3) ColumnarToRow
[info]                :              +- BatchScan[ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28678]
[info]                   +- *(2) Project [s_store_sk#670, s_store_id#671, s_store_name#675]
[info]                      +- *(2) Filter ((isnotnull(s_gmt_offset#697) AND (s_gmt_offset#697 = -5.00)) AND isnotnull(s_store_sk#670))
[info]                         +- *(2) ColumnarToRow
[info]                            +- BatchScan[s_store_sk#670, s_store_id#671, s_store_name#675, s_gmt_offset#697] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string,s_gmt_offset:decimal(5,2)>
[info] 
[info] 
[info]   Stopped after 1 iterations, 161 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q43                                                 161            161           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q44
[info] 15:04:51.625 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 15:04:51.630 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[rnk#10426 ASC NULLS FIRST], output=[rnk#10426,best_performing#10432,worst_performing#10433])
[info] +- *(11) Project [rnk#10426, i_product_name#517 AS best_performing#10432, i_product_name#10477 AS worst_performing#10433]
[info]    +- *(11) BroadcastHashJoin [item_sk#10427], [i_item_sk#10456], Inner, BuildRight
[info]       :- *(11) Project [rnk#10426, item_sk#10427, i_product_name#517]
[info]       :  +- *(11) BroadcastHashJoin [item_sk#10422], [i_item_sk#496], Inner, BuildRight
[info]       :     :- *(11) Project [item_sk#10422, rnk#10426, item_sk#10427]
[info]       :     :  +- *(11) SortMergeJoin [rnk#10426], [rnk#10431], Inner
[info]       :     :     :- *(4) Sort [rnk#10426 ASC NULLS FIRST], false, 0
[info]       :     :     :  +- *(4) Project [item_sk#10422, rnk#10426]
[info]       :     :     :     +- *(4) Filter ((isnotnull(rnk#10426) AND (rnk#10426 < 11)) AND isnotnull(item_sk#10422))
[info]       :     :     :        +- Window [rank(rank_col#10423) windowspecdefinition(rank_col#10423 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rnk#10426], [rank_col#10423 ASC NULLS FIRST]
[info]       :     :     :           +- *(3) Sort [rank_col#10423 ASC NULLS FIRST], false, 0
[info]       :     :     :              +- Exchange SinglePartition, true, [id=#28974]
[info]       :     :     :                 +- *(2) Project [item_sk#10422, rank_col#10423]
[info]       :     :     :                    +- *(2) Filter (isnotnull(avg(ss_net_profit#1185)#10444) AND (cast(avg(ss_net_profit#1185)#10444 as decimal(13,7)) > CheckOverflow((0.900000 * promote_precision(Subquery scalar-subquery#10425, [id=#28833])), DecimalType(13,7), true)))
[info]       :     :     :                       :  +- Subquery scalar-subquery#10425, [id=#28833]
[info]       :     :     :                       :     +- *(2) HashAggregate(keys=[ss_store_sk#1170], functions=[avg(UnscaledValue(ss_net_profit#1185))])
[info]       :     :     :                       :        +- Exchange hashpartitioning(ss_store_sk#1170, 4), true, [id=#28829]
[info]       :     :     :                       :           +- *(1) HashAggregate(keys=[ss_store_sk#1170], functions=[partial_avg(UnscaledValue(ss_net_profit#1185))])
[info]       :     :     :                       :              +- *(1) Project [ss_store_sk#1170, ss_net_profit#1185]
[info]       :     :     :                       :                 +- *(1) Filter ((isnotnull(ss_store_sk#1170) AND (ss_store_sk#1170 = 4)) AND isnull(ss_addr_sk#1169))
[info]       :     :     :                       :                    +- *(1) ColumnarToRow
[info]       :     :     :                       :                       +- BatchScan[ss_addr_sk#1169, ss_store_sk#1170, ss_net_profit#1185] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_addr_sk:int,ss_store_sk:int,ss_net_profit:decimal(7,2)>
[info]       :     :     :                       +- *(2) HashAggregate(keys=[ss_item_sk#1165], functions=[avg(UnscaledValue(ss_net_profit#1185))])
[info]       :     :     :                          +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#28968]
[info]       :     :     :                             +- *(1) HashAggregate(keys=[ss_item_sk#1165], functions=[partial_avg(UnscaledValue(ss_net_profit#1185))])
[info]       :     :     :                                +- *(1) Project [ss_item_sk#1165, ss_net_profit#1185]
[info]       :     :     :                                   +- *(1) Filter (isnotnull(ss_store_sk#1170) AND (ss_store_sk#1170 = 4))
[info]       :     :     :                                      +- *(1) ColumnarToRow
[info]       :     :     :                                         +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_net_profit#1185] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_net_profit:decimal(7,2)>
[info]       :     :     +- *(8) Sort [rnk#10431 ASC NULLS FIRST], false, 0
[info]       :     :        +- *(8) Project [item_sk#10427, rnk#10431]
[info]       :     :           +- *(8) Filter ((isnotnull(rnk#10431) AND (rnk#10431 < 11)) AND isnotnull(item_sk#10427))
[info]       :     :              +- Window [rank(rank_col#10428) windowspecdefinition(rank_col#10428 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rnk#10431], [rank_col#10428 DESC NULLS LAST]
[info]       :     :                 +- *(7) Sort [rank_col#10428 DESC NULLS LAST], false, 0
[info]       :     :                    +- ReusedExchange [item_sk#10427, rank_col#10428], Exchange SinglePartition, true, [id=#28974]
[info]       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29015]
[info]       :        +- *(9) Project [i_item_sk#496, i_product_name#517]
[info]       :           +- *(9) Filter isnotnull(i_item_sk#496)
[info]       :              +- *(9) ColumnarToRow
[info]       :                 +- BatchScan[i_item_sk#496, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_product_name:string>
[info]       +- ReusedExchange [i_item_sk#10456, i_product_name#10477], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29015]
[info] 
[info] 
[info]   Stopped after 1 iterations, 304 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q44                                                 304            304           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q45
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ca_zip#242 ASC NULLS FIRST,ca_city#239 ASC NULLS FIRST], output=[ca_zip#242,ca_city#239,sum(ws_sales_price)#10559])
[info] +- *(7) HashAggregate(keys=[ca_zip#242, ca_city#239], functions=[sum(UnscaledValue(ws_sales_price#1041))])
[info]    +- Exchange hashpartitioning(ca_zip#242, ca_city#239, 4), true, [id=#29368]
[info]       +- *(6) HashAggregate(keys=[ca_zip#242, ca_city#239], functions=[partial_sum(UnscaledValue(ws_sales_price#1041))])
[info]          +- *(6) Project [ws_sales_price#1041, ca_city#239, ca_zip#242]
[info]             +- *(6) Filter (substring(ca_zip#242, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#10581)
[info]                +- *(6) BroadcastHashJoin [i_item_id#497], [i_item_id#497#10582], ExistenceJoin(exists#10581), BuildRight
[info]                   :- *(6) Project [ws_sales_price#1041, ca_city#239, ca_zip#242, i_item_id#497]
[info]                   :  +- *(6) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                   :     :- *(6) Project [ws_item_sk#1023, ws_sales_price#1041, ca_city#239, ca_zip#242]
[info]                   :     :  +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                   :     :     :- *(6) Project [ws_item_sk#1023, ws_sales_price#1041, ws_sold_date_sk#1054, ca_city#239, ca_zip#242]
[info]                   :     :     :  +- *(6) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                   :     :     :     :- *(6) Project [ws_item_sk#1023, ws_sales_price#1041, ws_sold_date_sk#1054, c_current_addr_sk#160]
[info]                   :     :     :     :  +- *(6) BroadcastHashJoin [ws_bill_customer_sk#1024], [c_customer_sk#156], Inner, BuildRight
[info]                   :     :     :     :     :- *(6) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_sales_price#1041, ws_sold_date_sk#1054]
[info]                   :     :     :     :     :  +- *(6) Filter ((isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054)) AND isnotnull(ws_item_sk#1023))
[info]                   :     :     :     :     :     +- *(6) ColumnarToRow
[info]                   :     :     :     :     :        +- BatchScan[ws_item_sk#1023, ws_bill_customer_sk#1024, ws_sales_price#1041, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_sales_price:decimal(7,2)>
[info]                   :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29325]
[info]                   :     :     :     :        +- *(1) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]                   :     :     :     :           +- *(1) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]                   :     :     :     :              +- *(1) ColumnarToRow
[info]                   :     :     :     :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
[info]                   :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29334]
[info]                   :     :     :        +- *(2) Project [ca_address_sk#233, ca_city#239, ca_zip#242]
[info]                   :     :     :           +- *(2) Filter isnotnull(ca_address_sk#233)
[info]                   :     :     :              +- *(2) ColumnarToRow
[info]                   :     :     :                 +- BatchScan[ca_address_sk#233, ca_city#239, ca_zip#242] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_city:string,ca_zip:string>
[info]                   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29343]
[info]                   :     :        +- *(3) Project [d_date_sk#331]
[info]                   :     :           +- *(3) Filter ((((isnotnull(d_qoy#341) AND isnotnull(d_year#337)) AND (d_qoy#341 = 2)) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]                   :     :              +- *(3) ColumnarToRow
[info]                   :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29352]
[info]                   :        +- *(4) Project [i_item_sk#496, i_item_id#497]
[info]                   :           +- *(4) Filter isnotnull(i_item_sk#496)
[info]                   :              +- *(4) ColumnarToRow
[info]                   :                 +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true])), [id=#29361]
[info]                      +- *(5) Project [i_item_id#497 AS i_item_id#497#10582]
[info]                         +- *(5) Filter i_item_sk#496 IN (2,3,5,7,11,13,17,19,23,29)
[info]                            +- *(5) ColumnarToRow
[info]                               +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 199 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q45                                                 200            200           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q46
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_last_name#165 ASC NULLS FIRST,c_first_name#164 ASC NULLS FIRST,ca_city#239 ASC NULLS FIRST,bought_city#10598 ASC NULLS FIRST,ss_ticket_number#1172L ASC NULLS FIRST], output=[c_last_name#165,c_first_name#164,ca_city#239,bought_city#10598,ss_ticket_number#1172L,amt#10599,profit#10600])
[info] +- *(8) Project [c_last_name#165, c_first_name#164, ca_city#239, bought_city#10598, ss_ticket_number#1172L, amt#10599, profit#10600]
[info]    +- *(8) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight, NOT (ca_city#239 = bought_city#10598)
[info]       :- *(8) Project [ss_ticket_number#1172L, bought_city#10598, amt#10599, profit#10600, c_current_addr_sk#160, c_first_name#164, c_last_name#165]
[info]       :  +- *(8) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]       :     :- *(8) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, ca_city#239], functions=[sum(UnscaledValue(ss_coupon_amt#1182)), sum(UnscaledValue(ss_net_profit#1185))])
[info]       :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, ca_city#239, 4), true, [id=#29599]
[info]       :     :     +- *(5) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, ca_city#239], functions=[partial_sum(UnscaledValue(ss_coupon_amt#1182)), partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]       :     :        +- *(5) Project [ss_customer_sk#1166, ss_addr_sk#1169, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185, ca_city#239]
[info]       :     :           +- *(5) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]       :     :              :- *(5) Project [ss_customer_sk#1166, ss_addr_sk#1169, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185]
[info]       :     :              :  +- *(5) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]       :     :              :     :- *(5) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185]
[info]       :     :              :     :  +- *(5) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]       :     :              :     :     :- *(5) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185]
[info]       :     :              :     :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :              :     :     :     :- *(5) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]       :     :              :     :     :     :  +- *(5) Filter ((((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_addr_sk#1169)) AND isnotnull(ss_customer_sk#1166))
[info]       :     :              :     :     :     :     +- *(5) ColumnarToRow
[info]       :     :              :     :     :     :        +- BatchScan[ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_ticket_number:bigint,...
[info]       :     :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29566]
[info]       :     :              :     :     :        +- *(1) Project [d_date_sk#331]
[info]       :     :              :     :     :           +- *(1) Filter ((d_dow#338 IN (6,0) AND d_year#337 IN (1999,2000,2001)) AND isnotnull(d_date_sk#331))
[info]       :     :              :     :     :              +- *(1) ColumnarToRow
[info]       :     :              :     :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_dow#338] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_dow:int>
[info]       :     :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29575]
[info]       :     :              :     :        +- *(2) Project [s_store_sk#670]
[info]       :     :              :     :           +- *(2) Filter (s_city#692 IN (Fairview,Midway) AND isnotnull(s_store_sk#670))
[info]       :     :              :     :              +- *(2) ColumnarToRow
[info]       :     :              :     :                 +- BatchScan[s_store_sk#670, s_city#692] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_city:string>
[info]       :     :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29584]
[info]       :     :              :        +- *(3) Project [hd_demo_sk#448]
[info]       :     :              :           +- *(3) Filter (((hd_dep_count#451 = 4) OR (hd_vehicle_count#452 = 3)) AND isnotnull(hd_demo_sk#448))
[info]       :     :              :              +- *(3) ColumnarToRow
[info]       :     :              :                 +- BatchScan[hd_demo_sk#448, hd_dep_count#451, hd_vehicle_count#452] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
[info]       :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29593]
[info]       :     :                 +- *(4) Project [ca_address_sk#233, ca_city#239]
[info]       :     :                    +- *(4) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_city#239))
[info]       :     :                       +- *(4) ColumnarToRow
[info]       :     :                          +- BatchScan[ca_address_sk#233, ca_city#239] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_city:string>
[info]       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29607]
[info]       :        +- *(6) Project [c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165]
[info]       :           +- *(6) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]       :              +- *(6) ColumnarToRow
[info]       :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string>
[info]       +- ReusedExchange [ca_address_sk#233, ca_city#239], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29593]
[info] 
[info] 
[info]   Stopped after 1 iterations, 246 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q46                                                 247            247           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q47
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#11706 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#11707 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,s_store_name#675 ASC NULLS FIRST], output=[i_category#508,i_brand#504,s_store_name#675,s_company_name#687,d_year#337,d_moy#339,avg_monthly_sales#11707,sum_sales#11706,psum#11709,nsum#11710])
[info] +- *(27) Project [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, avg_monthly_sales#11707, sum_sales#11706, sum_sales#11930 AS psum#11709, sum_sales#12405 AS nsum#11710]
[info]    +- *(27) SortMergeJoin [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, rn#11708], [i_category#12510, i_brand#12506, s_store_name#12667, s_company_name#12679, (rn#12311 - 1)], Inner
[info]       :- *(18) Project [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, sum_sales#11706, avg_monthly_sales#11707, rn#11708, sum_sales#11930]
[info]       :  +- *(18) SortMergeJoin [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, rn#11708], [i_category#12035, i_brand#12031, s_store_name#12192, s_company_name#12204, (rn#11836 + 1)], Inner
[info]       :     :- *(9) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, s_store_name#675 ASC NULLS FIRST, s_company_name#687 ASC NULLS FIRST, rn#11708 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, rn#11708, 4), true, [id=#30125]
[info]       :     :     +- *(8) Project [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, sum_sales#11706, avg_monthly_sales#11707, rn#11708]
[info]       :     :        +- *(8) Filter (((isnotnull(avg_monthly_sales#11707) AND (avg_monthly_sales#11707 > 0.000000)) AND (CASE WHEN (avg_monthly_sales#11707 > 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#11706 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#11707 as decimal(22,6)))), DecimalType(22,6), true))) / promote_precision(cast(avg_monthly_sales#11707 as decimal(22,6)))), DecimalType(38,16), true) ELSE null END > 0.1000000000000000)) AND isnotnull(rn#11708))
[info]       :     :           +- Window [avg(_w0#11738) windowspecdefinition(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#11707], [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337]
[info]       :     :              +- *(7) Filter (isnotnull(d_year#337) AND (d_year#337 = 1999))
[info]       :     :                 +- Window [rank(d_year#337, d_moy#339) windowspecdefinition(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#11708], [i_category#508, i_brand#504, s_store_name#675, s_company_name#687], [d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST]
[info]       :     :                    +- *(6) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, s_store_name#675 ASC NULLS FIRST, s_company_name#687 ASC NULLS FIRST, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST], false, 0
[info]       :     :                       +- Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, 4), true, [id=#30112]
[info]       :     :                          +- *(5) HashAggregate(keys=[i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :                             +- Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, 4), true, [id=#30108]
[info]       :     :                                +- *(4) HashAggregate(keys=[i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :                                   +- *(4) Project [i_brand#504, i_category#508, ss_sales_price#1176, d_year#337, d_moy#339, s_store_name#675, s_company_name#687]
[info]       :     :                                      +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]       :     :                                         :- *(4) Project [i_brand#504, i_category#508, ss_store_sk#1170, ss_sales_price#1176, d_year#337, d_moy#339]
[info]       :     :                                         :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :                                         :     :- *(4) Project [i_brand#504, i_category#508, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                                         :     :  +- *(4) BroadcastHashJoin [i_item_sk#496], [ss_item_sk#1165], Inner, BuildLeft
[info]       :     :                                         :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#30080]
[info]       :     :                                         :     :     :  +- *(1) Project [i_item_sk#496, i_brand#504, i_category#508]
[info]       :     :                                         :     :     :     +- *(1) Filter ((isnotnull(i_item_sk#496) AND isnotnull(i_brand#504)) AND isnotnull(i_category#508))
[info]       :     :                                         :     :     :        +- *(1) ColumnarToRow
[info]       :     :                                         :     :     :           +- BatchScan[i_item_sk#496, i_brand#504, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
[info]       :     :                                         :     :     +- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                                         :     :        +- *(4) Filter ((isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]       :     :                                         :     :           +- *(4) ColumnarToRow
[info]       :     :                                         :     :              +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]       :     :                                         :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#30093]
[info]       :     :                                         :        +- *(2) Project [d_date_sk#331, d_year#337, d_moy#339]
[info]       :     :                                         :           +- *(2) Filter ((((d_year#337 = 1999) OR ((d_year#337 = 1998) AND (d_moy#339 = 12))) OR ((d_year#337 = 2000) AND (d_moy#339 = 1))) AND isnotnull(d_date_sk#331))
[info]       :     :                                         :              +- *(2) ColumnarToRow
[info]       :     :                                         :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]       :     :                                         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#30102]
[info]       :     :                                            +- *(3) Project [s_store_sk#670, s_store_name#675, s_company_name#687]
[info]       :     :                                               +- *(3) Filter ((isnotnull(s_store_sk#670) AND isnotnull(s_store_name#675)) AND isnotnull(s_company_name#687))
[info]       :     :                                                  +- *(3) ColumnarToRow
[info]       :     :                                                     +- BatchScan[s_store_sk#670, s_store_name#675, s_company_name#687] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
[info]       :     +- *(17) Sort [i_category#12035 ASC NULLS FIRST, i_brand#12031 ASC NULLS FIRST, s_store_name#12192 ASC NULLS FIRST, s_company_name#12204 ASC NULLS FIRST, (rn#11836 + 1) ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(i_category#12035, i_brand#12031, s_store_name#12192, s_company_name#12204, (rn#11836 + 1), 4), true, [id=#30368]
[info]       :           +- *(16) Project [i_category#12035, i_brand#12031, s_store_name#12192, s_company_name#12204, sum_sales#11930, rn#11836]
[info]       :              +- *(16) Filter isnotnull(rn#11836)
[info]       :                 +- Window [rank(d_year#12120, d_moy#12122) windowspecdefinition(i_category#12035, i_brand#12031, s_store_name#12192, s_company_name#12204, d_year#12120 ASC NULLS FIRST, d_moy#12122 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#11836], [i_category#12035, i_brand#12031, s_store_name#12192, s_company_name#12204], [d_year#12120 ASC NULLS FIRST, d_moy#12122 ASC NULLS FIRST]
[info]       :                    +- *(15) Sort [i_category#12035 ASC NULLS FIRST, i_brand#12031 ASC NULLS FIRST, s_store_name#12192 ASC NULLS FIRST, s_company_name#12204 ASC NULLS FIRST, d_year#12120 ASC NULLS FIRST, d_moy#12122 ASC NULLS FIRST], false, 0
[info]       :                       +- Exchange hashpartitioning(i_category#12035, i_brand#12031, s_store_name#12192, s_company_name#12204, 4), true, [id=#30359]
[info]       :                          +- *(14) HashAggregate(keys=[i_category#12035, i_brand#12031, s_store_name#12192, s_company_name#12204, d_year#12120, d_moy#12122], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]       :                             +- ReusedExchange [i_category#12035, i_brand#12031, s_store_name#12192, s_company_name#12204, d_year#12120, d_moy#12122, sum#12815L], Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, 4), true, [id=#30108]
[info]       +- *(26) Sort [i_category#12510 ASC NULLS FIRST, i_brand#12506 ASC NULLS FIRST, s_store_name#12667 ASC NULLS FIRST, s_company_name#12679 ASC NULLS FIRST, (rn#12311 - 1) ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_category#12510, i_brand#12506, s_store_name#12667, s_company_name#12679, (rn#12311 - 1), 4), true, [id=#30468]
[info]             +- *(25) Project [i_category#12510, i_brand#12506, s_store_name#12667, s_company_name#12679, sum_sales#12405, rn#12311]
[info]                +- *(25) Filter isnotnull(rn#12311)
[info]                   +- Window [rank(d_year#12595, d_moy#12597) windowspecdefinition(i_category#12510, i_brand#12506, s_store_name#12667, s_company_name#12679, d_year#12595 ASC NULLS FIRST, d_moy#12597 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#12311], [i_category#12510, i_brand#12506, s_store_name#12667, s_company_name#12679], [d_year#12595 ASC NULLS FIRST, d_moy#12597 ASC NULLS FIRST]
[info]                      +- *(24) Sort [i_category#12510 ASC NULLS FIRST, i_brand#12506 ASC NULLS FIRST, s_store_name#12667 ASC NULLS FIRST, s_company_name#12679 ASC NULLS FIRST, d_year#12595 ASC NULLS FIRST, d_moy#12597 ASC NULLS FIRST], false, 0
[info]                         +- ReusedExchange [i_category#12510, i_brand#12506, s_store_name#12667, s_company_name#12679, d_year#12595, d_moy#12597, sum_sales#12405], Exchange hashpartitioning(i_category#12035, i_brand#12031, s_store_name#12192, s_company_name#12204, 4), true, [id=#30359]
[info] 
[info] 
[info]   Stopped after 1 iterations, 688 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q47                                                 688            688           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q48
[info] == Physical Plan ==
[info] *(6) HashAggregate(keys=[], functions=[sum(cast(ss_quantity#1173 as bigint))])
[info] +- Exchange SinglePartition, true, [id=#30674]
[info]    +- *(5) HashAggregate(keys=[], functions=[partial_sum(cast(ss_quantity#1173 as bigint))])
[info]       +- *(5) Project [ss_quantity#1173]
[info]          +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :- *(5) Project [ss_quantity#1173, ss_sold_date_sk#1186]
[info]             :  +- *(5) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight, ((((ca_state#241 IN (CO,OH,TX) AND (ss_net_profit#1185 >= 0.00)) AND (ss_net_profit#1185 <= 2000.00)) OR ((ca_state#241 IN (OR,MN,KY) AND (ss_net_profit#1185 >= 150.00)) AND (ss_net_profit#1185 <= 3000.00))) OR ((ca_state#241 IN (VA,CA,MS) AND (ss_net_profit#1185 >= 50.00)) AND (ss_net_profit#1185 <= 25000.00)))
[info]             :     :- *(5) Project [ss_addr_sk#1169, ss_quantity#1173, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]             :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight, ((((((cd_marital_status#292 = M) AND (cd_education_status#293 = 4 yr Degree)) AND (ss_sales_price#1176 >= 100.00)) AND (ss_sales_price#1176 <= 150.00)) OR ((((cd_marital_status#292 = D) AND (cd_education_status#293 = 2 yr Degree)) AND (ss_sales_price#1176 >= 50.00)) AND (ss_sales_price#1176 <= 100.00))) OR ((((cd_marital_status#292 = S) AND (cd_education_status#293 = College)) AND (ss_sales_price#1176 >= 150.00)) AND (ss_sales_price#1176 <= 200.00)))
[info]             :     :     :- *(5) Project [ss_cdemo_sk#1167, ss_addr_sk#1169, ss_quantity#1173, ss_sales_price#1176, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]             :     :     :  +- *(5) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]             :     :     :     :- *(5) Project [ss_cdemo_sk#1167, ss_addr_sk#1169, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]             :     :     :     :  +- *(5) Filter (((isnotnull(ss_store_sk#1170) AND isnotnull(ss_cdemo_sk#1167)) AND isnotnull(ss_addr_sk#1169)) AND isnotnull(ss_sold_date_sk#1186))
[info]             :     :     :     :     +- *(5) ColumnarToRow
[info]             :     :     :     :        +- BatchScan[ss_cdemo_sk#1167, ss_addr_sk#1169, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_cdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)...
[info]             :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#30641]
[info]             :     :     :        +- *(1) Project [s_store_sk#670]
[info]             :     :     :           +- *(1) Filter isnotnull(s_store_sk#670)
[info]             :     :     :              +- *(1) ColumnarToRow
[info]             :     :     :                 +- BatchScan[s_store_sk#670] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int>
[info]             :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#30650]
[info]             :     :        +- *(2) Project [cd_demo_sk#290, cd_marital_status#292, cd_education_status#293]
[info]             :     :           +- *(2) Filter isnotnull(cd_demo_sk#290)
[info]             :     :              +- *(2) ColumnarToRow
[info]             :     :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
[info]             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#30659]
[info]             :        +- *(3) Project [ca_address_sk#233, ca_state#241]
[info]             :           +- *(3) Filter ((isnotnull(ca_country#243) AND (ca_country#243 = United States)) AND isnotnull(ca_address_sk#233))
[info]             :              +- *(3) ColumnarToRow
[info]             :                 +- BatchScan[ca_address_sk#233, ca_state#241, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
[info]             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#30668]
[info]                +- *(4) Project [d_date_sk#331]
[info]                   +- *(4) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]                      +- *(4) ColumnarToRow
[info]                         +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 192 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q48                                                 193            193           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q49
[info] 15:04:54.407 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 15:04:54.408 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 15:04:54.417 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 15:04:54.417 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 15:04:54.426 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 15:04:54.426 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#12973 ASC NULLS FIRST,return_rank#12971 ASC NULLS FIRST,currency_rank#12972 ASC NULLS FIRST], output=[channel#12973,item#12968,return_ratio#12969,return_rank#12971,currency_rank#12972])
[info] +- *(32) HashAggregate(keys=[channel#12973, item#12968, return_ratio#12969, return_rank#12971, currency_rank#12972], functions=[])
[info]    +- Exchange hashpartitioning(channel#12973, item#12968, return_ratio#12969, return_rank#12971, currency_rank#12972, 4), true, [id=#31436]
[info]       +- *(31) HashAggregate(keys=[channel#12973, item#12968, return_ratio#12969, return_rank#12971, currency_rank#12972], functions=[])
[info]          +- Union
[info]             :- *(10) Project [web AS channel#12973, item#12968, return_ratio#12969, return_rank#12971, currency_rank#12972]
[info]             :  +- *(10) Filter ((return_rank#12971 <= 10) OR (currency_rank#12972 <= 10))
[info]             :     +- Window [rank(return_ratio#12969) windowspecdefinition(return_ratio#12969 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#12971], [return_ratio#12969 ASC NULLS FIRST]
[info]             :        +- *(9) Sort [return_ratio#12969 ASC NULLS FIRST], false, 0
[info]             :           +- *(9) Project [item#12968, return_ratio#12969, currency_rank#12972]
[info]             :              +- Window [rank(currency_ratio#12970) windowspecdefinition(currency_ratio#12970 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#12972], [currency_ratio#12970 ASC NULLS FIRST]
[info]             :                 +- *(8) Sort [currency_ratio#12970 ASC NULLS FIRST], false, 0
[info]             :                    +- Exchange SinglePartition, true, [id=#31096]
[info]             :                       +- *(7) HashAggregate(keys=[ws_item_sk#1023], functions=[sum(cast(coalesce(wr_return_quantity#1276, 0) as bigint)), sum(cast(coalesce(ws_quantity#1038, 0) as bigint)), sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), sum(coalesce(cast(ws_net_paid#1049 as decimal(12,2)), 0.00))])
[info]             :                          +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#31092]
[info]             :                             +- *(6) HashAggregate(keys=[ws_item_sk#1023], functions=[partial_sum(cast(coalesce(wr_return_quantity#1276, 0) as bigint)), partial_sum(cast(coalesce(ws_quantity#1038, 0) as bigint)), partial_sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(ws_net_paid#1049 as decimal(12,2)), 0.00))])
[info]             :                                +- *(6) Project [ws_item_sk#1023, ws_quantity#1038, ws_net_paid#1049, wr_return_quantity#1276, wr_return_amt#1277]
[info]             :                                   +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :                                      :- *(6) Project [ws_item_sk#1023, ws_quantity#1038, ws_net_paid#1049, ws_sold_date_sk#1054, wr_return_quantity#1276, wr_return_amt#1277]
[info]             :                                      :  +- *(6) SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], Inner
[info]             :                                      :     :- *(2) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]             :                                      :     :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#31064]
[info]             :                                      :     :     +- *(1) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]             :                                      :     :        +- *(1) Filter ((((((((isnotnull(ws_quantity#1038) AND isnotnull(ws_net_profit#1053)) AND isnotnull(ws_net_paid#1049)) AND (ws_net_profit#1053 > 1.00)) AND (ws_net_paid#1049 > 0.00)) AND (ws_quantity#1038 > 0)) AND isnotnull(ws_item_sk#1023)) AND isnotnull(ws_order_number#1037L)) AND isnotnull(ws_sold_date_sk#1054))
[info]             :                                      :     :           +- *(1) ColumnarToRow
[info]             :                                      :     :              +- BatchScan[ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_net_paid#1049, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_net_paid:decimal(7,2),ws_net_prof...
[info]             :                                      :     +- *(4) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]             :                                      :        +- Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#31074]
[info]             :                                      :           +- *(3) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277]
[info]             :                                      :              +- *(3) Filter (((isnotnull(wr_return_amt#1277) AND (wr_return_amt#1277 > 10000.00)) AND isnotnull(wr_order_number#1275L)) AND isnotnull(wr_item_sk#1264))
[info]             :                                      :                 +- *(3) ColumnarToRow
[info]             :                                      :                    +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
[info]             :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31086]
[info]             :                                         +- *(5) Project [d_date_sk#331]
[info]             :                                            +- *(5) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2001)) AND (d_moy#339 = 12)) AND isnotnull(d_date_sk#331))
[info]             :                                               +- *(5) ColumnarToRow
[info]             :                                                  +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             :- *(20) Project [catalog AS channel#12979, item#12974, return_ratio#12975, return_rank#12977, currency_rank#12978]
[info]             :  +- *(20) Filter ((return_rank#12977 <= 10) OR (currency_rank#12978 <= 10))
[info]             :     +- Window [rank(currency_ratio#12976) windowspecdefinition(currency_ratio#12976 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#12978], [currency_ratio#12976 ASC NULLS FIRST]
[info]             :        +- *(19) Sort [currency_ratio#12976 ASC NULLS FIRST], false, 0
[info]             :           +- Window [rank(return_ratio#12975) windowspecdefinition(return_ratio#12975 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#12977], [return_ratio#12975 ASC NULLS FIRST]
[info]             :              +- *(18) Sort [return_ratio#12975 ASC NULLS FIRST], false, 0
[info]             :                 +- Exchange SinglePartition, true, [id=#31246]
[info]             :                    +- *(17) HashAggregate(keys=[cs_item_sk#892], functions=[sum(cast(coalesce(cr_return_quantity#57, 0) as bigint)), sum(cast(coalesce(cs_quantity#895, 0) as bigint)), sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), sum(coalesce(cast(cs_net_paid#906 as decimal(12,2)), 0.00))])
[info]             :                       +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#31242]
[info]             :                          +- *(16) HashAggregate(keys=[cs_item_sk#892], functions=[partial_sum(cast(coalesce(cr_return_quantity#57, 0) as bigint)), partial_sum(cast(coalesce(cs_quantity#895, 0) as bigint)), partial_sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(cs_net_paid#906 as decimal(12,2)), 0.00))])
[info]             :                             +- *(16) Project [cs_item_sk#892, cs_quantity#895, cs_net_paid#906, cr_return_quantity#57, cr_return_amount#58]
[info]             :                                +- *(16) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :                                   :- *(16) Project [cs_item_sk#892, cs_quantity#895, cs_net_paid#906, cs_sold_date_sk#911, cr_return_quantity#57, cr_return_amount#58]
[info]             :                                   :  +- *(16) SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], Inner
[info]             :                                   :     :- *(12) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]             :                                   :     :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#31115]
[info]             :                                   :     :     +- *(11) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_net_paid#906, cs_sold_date_sk#911]
[info]             :                                   :     :        +- *(11) Filter ((((((((isnotnull(cs_net_paid#906) AND isnotnull(cs_quantity#895)) AND isnotnull(cs_net_profit#910)) AND (cs_net_profit#910 > 1.00)) AND (cs_net_paid#906 > 0.00)) AND (cs_quantity#895 > 0)) AND isnotnull(cs_order_number#894L)) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_sold_date_sk#911))
[info]             :                                   :     :           +- *(11) ColumnarToRow
[info]             :                                   :     :              +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_net_paid#906, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_net_paid:decimal(7,2),cs_net_prof...
[info]             :                                   :     +- *(14) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]             :                                   :        +- Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#31125]
[info]             :                                   :           +- *(13) Project [cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58]
[info]             :                                   :              +- *(13) Filter (((isnotnull(cr_return_amount#58) AND (cr_return_amount#58 > 10000.00)) AND isnotnull(cr_item_sk#42)) AND isnotnull(cr_order_number#56L))
[info]             :                                   :                 +- *(13) ColumnarToRow
[info]             :                                   :                    +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
[info]             :                                   +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31086]
[info]             +- *(30) Project [store AS channel#12985, item#12980, return_ratio#12981, return_rank#12983, currency_rank#12984]
[info]                +- *(30) Filter ((return_rank#12983 <= 10) OR (currency_rank#12984 <= 10))
[info]                   +- Window [rank(return_ratio#12981) windowspecdefinition(return_ratio#12981 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#12983], [return_ratio#12981 ASC NULLS FIRST]
[info]                      +- *(29) Sort [return_ratio#12981 ASC NULLS FIRST], false, 0
[info]                         +- *(29) Project [item#12980, return_ratio#12981, currency_rank#12984]
[info]                            +- Window [rank(currency_ratio#12982) windowspecdefinition(currency_ratio#12982 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#12984], [currency_ratio#12982 ASC NULLS FIRST]
[info]                               +- *(28) Sort [currency_ratio#12982 ASC NULLS FIRST], false, 0
[info]                                  +- Exchange SinglePartition, true, [id=#31371]
[info]                                     +- *(27) HashAggregate(keys=[ss_item_sk#1165], functions=[sum(cast(coalesce(sr_return_quantity#800, 0) as bigint)), sum(cast(coalesce(ss_quantity#1173, 0) as bigint)), sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), sum(coalesce(cast(ss_net_paid#1183 as decimal(12,2)), 0.00))])
[info]                                        +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#31367]
[info]                                           +- *(26) HashAggregate(keys=[ss_item_sk#1165], functions=[partial_sum(cast(coalesce(sr_return_quantity#800, 0) as bigint)), partial_sum(cast(coalesce(ss_quantity#1173, 0) as bigint)), partial_sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(ss_net_paid#1183 as decimal(12,2)), 0.00))])
[info]                                              +- *(26) Project [ss_item_sk#1165, ss_quantity#1173, ss_net_paid#1183, sr_return_quantity#800, sr_return_amt#801]
[info]                                                 +- *(26) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                                                    :- *(26) Project [ss_item_sk#1165, ss_quantity#1173, ss_net_paid#1183, ss_sold_date_sk#1186, sr_return_quantity#800, sr_return_amt#801]
[info]                                                    :  +- *(26) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]                                                    :     :- *(22) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                                                    :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#31165]
[info]                                                    :     :     +- *(21) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]                                                    :     :        +- *(21) Filter ((((((((isnotnull(ss_net_paid#1183) AND isnotnull(ss_quantity#1173)) AND isnotnull(ss_net_profit#1185)) AND (ss_net_profit#1185 > 1.00)) AND (ss_net_paid#1183 > 0.00)) AND (ss_quantity#1173 > 0)) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_sold_date_sk#1186))
[info]                                                    :     :           +- *(21) ColumnarToRow
[info]                                                    :     :              +- BatchScan[ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_net_paid#1183, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_net_paid:decimal(7,2),ss_net_pro...
[info]                                                    :     +- *(24) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                                                    :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#31175]
[info]                                                    :           +- *(23) Project [sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801]
[info]                                                    :              +- *(23) Filter (((isnotnull(sr_return_amt#801) AND (sr_return_amt#801 > 10000.00)) AND isnotnull(sr_item_sk#792)) AND isnotnull(sr_ticket_number#799L))
[info]                                                    :                 +- *(23) ColumnarToRow
[info]                                                    :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
[info]                                                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31086]
[info] 
[info] 
[info]   Stopped after 1 iterations, 474 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q49                                                 475            475           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q50
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[s_store_name#675 ASC NULLS FIRST,s_company_id#686 ASC NULLS FIRST,s_street_number#688 ASC NULLS FIRST,s_street_name#689 ASC NULLS FIRST,s_street_type#690 ASC NULLS FIRST,s_suite_number#691 ASC NULLS FIRST,s_city#692 ASC NULLS FIRST,s_county#693 ASC NULLS FIRST,s_state#694 ASC NULLS FIRST,s_zip#695 ASC NULLS FIRST], output=[s_store_name#675,s_company_id#686,s_street_number#688,s_street_name#689,s_street_type#690,s_suite_number#691,s_city#692,s_county#693,s_state#694,s_zip#695,30 days #13225L,31 - 60 days #13226L,61 - 90 days #13227L,91 - 120 days #13228L,>120 days #13229L])
[info] +- *(9) HashAggregate(keys=[s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695], functions=[sum(cast(CASE WHEN ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 30) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 30) AND ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 60)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 60) AND ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 90)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 90) AND ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 120)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 120) THEN 1 ELSE 0 END as bigint))])
[info]    +- Exchange hashpartitioning(s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695, 4), true, [id=#31631]
[info]       +- *(8) HashAggregate(keys=[s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695], functions=[partial_sum(cast(CASE WHEN ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 30) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 30) AND ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 60)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 60) AND ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 90)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 90) AND ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 120)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 120) THEN 1 ELSE 0 END as bigint))])
[info]          +- *(8) Project [ss_sold_date_sk#1186, sr_returned_date_sk#810, s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695]
[info]             +- *(8) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#13230], Inner, BuildRight
[info]                :- *(8) Project [ss_sold_date_sk#1186, sr_returned_date_sk#810, s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695]
[info]                :  +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :- *(8) Project [ss_sold_date_sk#1186, sr_returned_date_sk#810, s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695]
[info]                :     :  +- *(8) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :     :     :- *(8) Project [ss_store_sk#1170, ss_sold_date_sk#1186, sr_returned_date_sk#810]
[info]                :     :     :  +- *(8) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165, ss_customer_sk#1166], [sr_ticket_number#799L, sr_item_sk#792, sr_customer_sk#793], Inner
[info]                :     :     :     :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST, ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                :     :     :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, ss_customer_sk#1166, 4), true, [id=#31585]
[info]                :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186]
[info]                :     :     :     :        +- *(1) Filter ((((isnotnull(ss_item_sk#1165) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_sold_date_sk#1186))
[info]                :     :     :     :           +- *(1) ColumnarToRow
[info]                :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint>
[info]                :     :     :     +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST, sr_customer_sk#793 ASC NULLS FIRST], false, 0
[info]                :     :     :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, sr_customer_sk#793, 4), true, [id=#31595]
[info]                :     :     :           +- *(3) Project [sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_returned_date_sk#810]
[info]                :     :     :              +- *(3) Filter (((isnotnull(sr_customer_sk#793) AND isnotnull(sr_ticket_number#799L)) AND isnotnull(sr_item_sk#792)) AND isnotnull(sr_returned_date_sk#810))
[info]                :     :     :                 +- *(3) ColumnarToRow
[info]                :     :     :                    +- BatchScan[sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31607]
[info]                :     :        +- *(5) Project [s_store_sk#670, s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695]
[info]                :     :           +- *(5) Filter isnotnull(s_store_sk#670)
[info]                :     :              +- *(5) ColumnarToRow
[info]                :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_id:int,s_street_number:string,s_street_name:s...
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31616]
[info]                :        +- *(6) Project [d_date_sk#331]
[info]                :           +- *(6) Filter isnotnull(d_date_sk#331)
[info]                :              +- *(6) ColumnarToRow
[info]                :                 +- BatchScan[d_date_sk#331] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31625]
[info]                   +- *(7) Project [d_date_sk#13230]
[info]                      +- *(7) Filter ((((isnotnull(d_year#13236) AND isnotnull(d_moy#13238)) AND (d_year#13236 = 2001)) AND (d_moy#13238 = 8)) AND isnotnull(d_date_sk#13230))
[info]                         +- *(7) ColumnarToRow
[info]                            +- BatchScan[d_date_sk#13230, d_year#13236, d_moy#13238] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 201 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q50                                                 201            201           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q51
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[item_sk#13376 ASC NULLS FIRST,d_date#13377 ASC NULLS FIRST], output=[item_sk#13376,d_date#13377,web_sales#13378,store_sales#13379,web_cumulative#13380,store_cumulative#13381])
[info] +- *(15) Filter ((isnotnull(web_cumulative#13380) AND isnotnull(store_cumulative#13381)) AND (web_cumulative#13380 > store_cumulative#13381))
[info]    +- Window [max(web_sales#13378) windowspecdefinition(item_sk#13376, d_date#13377 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS web_cumulative#13380, max(store_sales#13379) windowspecdefinition(item_sk#13376, d_date#13377 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS store_cumulative#13381], [item_sk#13376], [d_date#13377 ASC NULLS FIRST]
[info]       +- *(14) Sort [item_sk#13376 ASC NULLS FIRST, d_date#13377 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(item_sk#13376, 4), true, [id=#32014]
[info]             +- *(13) Project [CASE WHEN isnotnull(item_sk#13382) THEN item_sk#13382 ELSE item_sk#13384 END AS item_sk#13376, CASE WHEN isnotnull(d_date#333) THEN d_date#333 ELSE d_date#13394 END AS d_date#13377, cume_sales#13383 AS web_sales#13378, cume_sales#13385 AS store_sales#13379]
[info]                +- SortMergeJoin [item_sk#13382, d_date#333], [item_sk#13384, d_date#13394], FullOuter
[info]                   :- *(6) Sort [item_sk#13382 ASC NULLS FIRST, d_date#333 ASC NULLS FIRST], false, 0
[info]                   :  +- Exchange hashpartitioning(item_sk#13382, d_date#333, 4), true, [id=#31856]
[info]                   :     +- *(5) Project [item_sk#13382, d_date#333, cume_sales#13383]
[info]                   :        +- Window [sum(_w0#13390) windowspecdefinition(ws_item_sk#1023, d_date#333 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS cume_sales#13383], [ws_item_sk#1023], [d_date#333 ASC NULLS FIRST]
[info]                   :           +- *(4) Sort [ws_item_sk#1023 ASC NULLS FIRST, d_date#333 ASC NULLS FIRST], false, 0
[info]                   :              +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#31848]
[info]                   :                 +- *(3) HashAggregate(keys=[ws_item_sk#1023, d_date#333], functions=[sum(UnscaledValue(ws_sales_price#1041))])
[info]                   :                    +- Exchange hashpartitioning(ws_item_sk#1023, d_date#333, 4), true, [id=#31844]
[info]                   :                       +- *(2) HashAggregate(keys=[ws_item_sk#1023, d_date#333], functions=[partial_sum(UnscaledValue(ws_sales_price#1041))])
[info]                   :                          +- *(2) Project [ws_item_sk#1023, ws_sales_price#1041, d_date#333]
[info]                   :                             +- *(2) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                   :                                :- *(2) Project [ws_item_sk#1023, ws_sales_price#1041, ws_sold_date_sk#1054]
[info]                   :                                :  +- *(2) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                   :                                :     +- *(2) ColumnarToRow
[info]                   :                                :        +- BatchScan[ws_item_sk#1023, ws_sales_price#1041, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_sales_price:decimal(7,2)>
[info]                   :                                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31838]
[info]                   :                                   +- *(1) Project [d_date_sk#331, d_date#333]
[info]                   :                                      +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                   :                                         +- *(1) ColumnarToRow
[info]                   :                                            +- BatchScan[d_date_sk#331, d_date#333, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>
[info]                   +- *(12) Sort [item_sk#13384 ASC NULLS FIRST, d_date#13394 ASC NULLS FIRST], false, 0
[info]                      +- Exchange hashpartitioning(item_sk#13384, d_date#13394, 4), true, [id=#31938]
[info]                         +- *(11) Project [item_sk#13384, d_date#13394, cume_sales#13385]
[info]                            +- Window [sum(_w0#13391) windowspecdefinition(ss_item_sk#1165, d_date#13394 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS cume_sales#13385], [ss_item_sk#1165], [d_date#13394 ASC NULLS FIRST]
[info]                               +- *(10) Sort [ss_item_sk#1165 ASC NULLS FIRST, d_date#13394 ASC NULLS FIRST], false, 0
[info]                                  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#31930]
[info]                                     +- *(9) HashAggregate(keys=[ss_item_sk#1165, d_date#13394], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]                                        +- Exchange hashpartitioning(ss_item_sk#1165, d_date#13394, 4), true, [id=#31926]
[info]                                           +- *(8) HashAggregate(keys=[ss_item_sk#1165, d_date#13394], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]                                              +- *(8) Project [ss_item_sk#1165, ss_sales_price#1176, d_date#13394]
[info]                                                 +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#13392], Inner, BuildRight
[info]                                                    :- *(8) Project [ss_item_sk#1165, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                                                    :  +- *(8) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                                                    :     +- *(8) ColumnarToRow
[info]                                                    :        +- BatchScan[ss_item_sk#1165, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_sales_price:decimal(7,2)>
[info]                                                    +- ReusedExchange [d_date_sk#13392, d_date#13394], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31838]
[info] 
[info] 
[info]   Stopped after 1 iterations, 181 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q51                                                 182            182           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q52
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[d_year#337 ASC NULLS FIRST,ext_price#13463 DESC NULLS LAST,brand_id#13461 ASC NULLS FIRST], output=[d_year#337,brand_id#13461,brand#13462,ext_price#13463])
[info] +- *(4) HashAggregate(keys=[d_year#337, i_brand#504, i_brand_id#503], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]    +- Exchange hashpartitioning(d_year#337, i_brand#504, i_brand_id#503, 4), true, [id=#32127]
[info]       +- *(3) HashAggregate(keys=[d_year#337, i_brand#504, i_brand_id#503], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          +- *(3) Project [d_year#337, ss_ext_sales_price#1178, i_brand_id#503, i_brand#504]
[info]             +- *(3) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :- *(3) Project [d_year#337, ss_item_sk#1165, ss_ext_sales_price#1178]
[info]                :  +- *(3) BroadcastHashJoin [d_date_sk#331], [ss_sold_date_sk#1186], Inner, BuildLeft
[info]                :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32108]
[info]                :     :  +- *(1) Project [d_date_sk#331, d_year#337]
[info]                :     :     +- *(1) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 11)) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                :     :        +- *(1) ColumnarToRow
[info]                :     :           +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     +- *(3) Project [ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                :        +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165))
[info]                :           +- *(3) ColumnarToRow
[info]                :              +- BatchScan[ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32121]
[info]                   +- *(2) Project [i_item_sk#496, i_brand_id#503, i_brand#504]
[info]                      +- *(2) Filter ((isnotnull(i_manager_id#516) AND (i_manager_id#516 = 1)) AND isnotnull(i_item_sk#496))
[info]                         +- *(2) ColumnarToRow
[info]                            +- BatchScan[i_item_sk#496, i_brand_id#503, i_brand#504, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manager_id:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 106 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q52                                                 106            106           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q53
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[avg_quarterly_sales#13495 ASC NULLS FIRST,sum_sales#13494 ASC NULLS FIRST,i_manufact_id#509 ASC NULLS FIRST], output=[i_manufact_id#509,sum_sales#13494,avg_quarterly_sales#13495])
[info] +- *(7) Project [i_manufact_id#509, sum_sales#13494, avg_quarterly_sales#13495]
[info]    +- *(7) Filter (CASE WHEN (avg_quarterly_sales#13495 > 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#13494 as decimal(22,6))) - promote_precision(cast(avg_quarterly_sales#13495 as decimal(22,6)))), DecimalType(22,6), true))) / promote_precision(cast(avg_quarterly_sales#13495 as decimal(22,6)))), DecimalType(38,16), true) ELSE null END > 0.1000000000000000)
[info]       +- Window [avg(_w0#13499) windowspecdefinition(i_manufact_id#509, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_quarterly_sales#13495], [i_manufact_id#509]
[info]          +- *(6) Sort [i_manufact_id#509 ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning(i_manufact_id#509, 4), true, [id=#32298]
[info]                +- *(5) HashAggregate(keys=[i_manufact_id#509, d_qoy#341], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]                   +- Exchange hashpartitioning(i_manufact_id#509, d_qoy#341, 4), true, [id=#32294]
[info]                      +- *(4) HashAggregate(keys=[i_manufact_id#509, d_qoy#341], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]                         +- *(4) Project [i_manufact_id#509, ss_sales_price#1176, d_qoy#341]
[info]                            +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :- *(4) Project [i_manufact_id#509, ss_store_sk#1170, ss_sales_price#1176, d_qoy#341]
[info]                               :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :- *(4) Project [i_manufact_id#509, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                               :     :  +- *(4) BroadcastHashJoin [i_item_sk#496], [ss_item_sk#1165], Inner, BuildLeft
[info]                               :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32266]
[info]                               :     :     :  +- *(1) Project [i_item_sk#496, i_manufact_id#509]
[info]                               :     :     :     +- *(1) Filter ((((i_category#508 IN (Books,Children,Electronics) AND i_class#506 IN (personal,portable,reference,self-help)) AND i_brand#504 IN (scholaramalgamalg #14,scholaramalgamalg #7,exportiunivamalg #9,scholaramalgamalg #9)) OR ((i_category#508 IN (Women,Music,Men) AND i_class#506 IN (accessories,classical,fragrances,pants)) AND i_brand#504 IN (amalgimporto #1,edu packscholar #1,exportiimporto #1,importoamalg #1))) AND isnotnull(i_item_sk#496))
[info]                               :     :     :        +- *(1) ColumnarToRow
[info]                               :     :     :           +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_manufact_id:int>
[info]                               :     :     +- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                               :     :        +- *(4) Filter ((isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]                               :     :           +- *(4) ColumnarToRow
[info]                               :     :              +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32279]
[info]                               :        +- *(2) Project [d_date_sk#331, d_qoy#341]
[info]                               :           +- *(2) Filter (d_month_seq#334 INSET (1200,1211,1205,1201,1206,1210,1207,1202,1209,1203,1208,1204) AND isnotnull(d_date_sk#331))
[info]                               :              +- *(2) ColumnarToRow
[info]                               :                 +- BatchScan[d_date_sk#331, d_month_seq#334, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_qoy:int>
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32288]
[info]                                  +- *(3) Project [s_store_sk#670]
[info]                                     +- *(3) Filter isnotnull(s_store_sk#670)
[info]                                        +- *(3) ColumnarToRow
[info]                                           +- BatchScan[s_store_sk#670] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 200 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q53                                                 200            200           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q54
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[segment#13549 ASC NULLS FIRST,num_customers#13538L ASC NULLS FIRST], output=[segment#13549,num_customers#13538L,segment_base#13539])
[info] +- *(15) HashAggregate(keys=[segment#13549], functions=[count(1)])
[info]    +- Exchange hashpartitioning(segment#13549, 4), true, [id=#32722]
[info]       +- *(14) HashAggregate(keys=[segment#13549], functions=[partial_count(1)])
[info]          +- *(14) HashAggregate(keys=[c_customer_sk#156], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             +- *(14) HashAggregate(keys=[c_customer_sk#156], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                +- *(14) Project [c_customer_sk#156, ss_ext_sales_price#1178]
[info]                   +- *(14) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                      :- *(14) Project [c_customer_sk#156, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                      :  +- *(14) BroadcastHashJoin [ca_county#240, ca_state#241], [s_county#693, s_state#694], Inner, BuildRight
[info]                      :     :- *(14) Project [c_customer_sk#156, ss_ext_sales_price#1178, ss_sold_date_sk#1186, ca_county#240, ca_state#241]
[info]                      :     :  +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                      :     :     :- *(14) Project [c_customer_sk#156, c_current_addr_sk#160, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                      :     :     :  +- *(14) SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner
[info]                      :     :     :     :- *(8) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                      :     :     :     :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#32674]
[info]                      :     :     :     :     +- *(7) HashAggregate(keys=[c_customer_sk#156, c_current_addr_sk#160], functions=[])
[info]                      :     :     :     :        +- Exchange hashpartitioning(c_customer_sk#156, c_current_addr_sk#160, 4), true, [id=#32670]
[info]                      :     :     :     :           +- *(6) HashAggregate(keys=[c_customer_sk#156, c_current_addr_sk#160], functions=[])
[info]                      :     :     :     :              +- *(6) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]                      :     :     :     :                 +- *(6) BroadcastHashJoin [customer_sk#13541], [c_customer_sk#156], Inner, BuildRight
[info]                      :     :     :     :                    :- *(6) Project [customer_sk#13541]
[info]                      :     :     :     :                    :  +- *(6) BroadcastHashJoin [sold_date_sk#13540], [d_date_sk#331], Inner, BuildRight
[info]                      :     :     :     :                    :     :- *(6) Project [sold_date_sk#13540, customer_sk#13541]
[info]                      :     :     :     :                    :     :  +- *(6) BroadcastHashJoin [item_sk#13542], [i_item_sk#496], Inner, BuildRight
[info]                      :     :     :     :                    :     :     :- Union
[info]                      :     :     :     :                    :     :     :  :- *(1) Project [cs_sold_date_sk#911 AS sold_date_sk#13540, cs_bill_customer_sk#880 AS customer_sk#13541, cs_item_sk#892 AS item_sk#13542]
[info]                      :     :     :     :                    :     :     :  :  +- *(1) Filter ((isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_bill_customer_sk#880))
[info]                      :     :     :     :                    :     :     :  :     +- *(1) ColumnarToRow
[info]                      :     :     :     :                    :     :     :  :        +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int>
[info]                      :     :     :     :                    :     :     :  +- *(2) Project [ws_sold_date_sk#1054 AS sold_date_sk#13543, ws_bill_customer_sk#1024 AS customer_sk#13544, ws_item_sk#1023 AS item_sk#13545]
[info]                      :     :     :     :                    :     :     :     +- *(2) Filter ((isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054)) AND isnotnull(ws_bill_customer_sk#1024))
[info]                      :     :     :     :                    :     :     :        +- *(2) ColumnarToRow
[info]                      :     :     :     :                    :     :     :           +- BatchScan[ws_item_sk#1023, ws_bill_customer_sk#1024, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int>
[info]                      :     :     :     :                    :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32646]
[info]                      :     :     :     :                    :     :        +- *(3) Project [i_item_sk#496]
[info]                      :     :     :     :                    :     :           +- *(3) Filter ((((isnotnull(i_category#508) AND isnotnull(i_class#506)) AND (i_category#508 = Women)) AND (i_class#506 = maternity)) AND isnotnull(i_item_sk#496))
[info]                      :     :     :     :                    :     :              +- *(3) ColumnarToRow
[info]                      :     :     :     :                    :     :                 +- BatchScan[i_item_sk#496, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
[info]                      :     :     :     :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32655]
[info]                      :     :     :     :                    :        +- *(4) Project [d_date_sk#331]
[info]                      :     :     :     :                    :           +- *(4) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 12)) AND (d_year#337 = 1998)) AND isnotnull(d_date_sk#331))
[info]                      :     :     :     :                    :              +- *(4) ColumnarToRow
[info]                      :     :     :     :                    :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                      :     :     :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32664]
[info]                      :     :     :     :                       +- *(5) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]                      :     :     :     :                          +- *(5) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]                      :     :     :     :                             +- *(5) ColumnarToRow
[info]                      :     :     :     :                                +- BatchScan[c_customer_sk#156, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
[info]                      :     :     :     +- *(10) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                      :     :     :        +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#32684]
[info]                      :     :     :           +- *(9) Project [ss_customer_sk#1166, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                      :     :     :              +- *(9) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]                      :     :     :                 +- *(9) ColumnarToRow
[info]                      :     :     :                    +- BatchScan[ss_customer_sk#1166, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32696]
[info]                      :     :        +- *(11) Project [ca_address_sk#233, ca_county#240, ca_state#241]
[info]                      :     :           +- *(11) Filter ((isnotnull(ca_address_sk#233) AND isnotnull(ca_state#241)) AND isnotnull(ca_county#240))
[info]                      :     :              +- *(11) ColumnarToRow
[info]                      :     :                 +- BatchScan[ca_address_sk#233, ca_county#240, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string>
[info]                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true], input[1, string, true])), [id=#32705]
[info]                      :        +- *(12) Project [s_county#693, s_state#694]
[info]                      :           +- *(12) Filter (isnotnull(s_state#694) AND isnotnull(s_county#693))
[info]                      :              +- *(12) ColumnarToRow
[info]                      :                 +- BatchScan[s_county#693, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_county:string,s_state:string>
[info]                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32714]
[info]                         +- *(13) Project [d_date_sk#331]
[info]                            +- *(13) Filter (((isnotnull(d_month_seq#334) AND isnotnull(d_date_sk#331)) AND (d_month_seq#334 >= Subquery scalar-subquery#13546, [id=#32489])) AND (d_month_seq#334 <= Subquery scalar-subquery#13547, [id=#32516]))
[info]                               :  :- Subquery scalar-subquery#13546, [id=#32489]
[info]                               :  :  +- *(1) HashAggregate(keys=[(d_month_seq + 1)#13551], functions=[])
[info]                               :  :     +- *(1) HashAggregate(keys=[(d_month_seq + 1)#13551], functions=[])
[info]                               :  :        +- *(1) Project [(d_month_seq#334 + 1) AS (d_month_seq + 1)#13551]
[info]                               :  :           +- *(1) Filter (((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 1998)) AND (d_moy#339 = 12))
[info]                               :  :              +- *(1) ColumnarToRow
[info]                               :  :                 +- BatchScan[d_month_seq#334, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>
[info]                               :  +- Subquery scalar-subquery#13547, [id=#32516]
[info]                               :     +- *(1) HashAggregate(keys=[(d_month_seq + 3)#13552], functions=[])
[info]                               :        +- *(1) HashAggregate(keys=[(d_month_seq + 3)#13552], functions=[])
[info]                               :           +- *(1) Project [(d_month_seq#334 + 3) AS (d_month_seq + 3)#13552]
[info]                               :              +- *(1) Filter (((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 1998)) AND (d_moy#339 = 12))
[info]                               :                 +- *(1) ColumnarToRow
[info]                               :                    +- BatchScan[d_month_seq#334, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>
[info]                               +- *(13) ColumnarToRow
[info]                                  +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 389 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q54                                                 389            389           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q55
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ext_price#13605 DESC NULLS LAST,brand_id#13603 ASC NULLS FIRST], output=[brand_id#13603,brand#13604,ext_price#13605])
[info] +- *(4) HashAggregate(keys=[i_brand#504, i_brand_id#503], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]    +- Exchange hashpartitioning(i_brand#504, i_brand_id#503, 4), true, [id=#32929]
[info]       +- *(3) HashAggregate(keys=[i_brand#504, i_brand_id#503], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          +- *(3) Project [ss_ext_sales_price#1178, i_brand_id#503, i_brand#504]
[info]             +- *(3) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :- *(3) Project [ss_item_sk#1165, ss_ext_sales_price#1178]
[info]                :  +- *(3) BroadcastHashJoin [d_date_sk#331], [ss_sold_date_sk#1186], Inner, BuildLeft
[info]                :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32910]
[info]                :     :  +- *(1) Project [d_date_sk#331]
[info]                :     :     +- *(1) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 11)) AND (d_year#337 = 1999)) AND isnotnull(d_date_sk#331))
[info]                :     :        +- *(1) ColumnarToRow
[info]                :     :           +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     +- *(3) Project [ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                :        +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165))
[info]                :           +- *(3) ColumnarToRow
[info]                :              +- BatchScan[ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32923]
[info]                   +- *(2) Project [i_item_sk#496, i_brand_id#503, i_brand#504]
[info]                      +- *(2) Filter ((isnotnull(i_manager_id#516) AND (i_manager_id#516 = 28)) AND isnotnull(i_item_sk#496))
[info]                         +- *(2) ColumnarToRow
[info]                            +- BatchScan[i_item_sk#496, i_brand_id#503, i_brand#504, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manager_id:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 102 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q55                                                 102            102           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q56
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[total_sales#13643 ASC NULLS FIRST], output=[i_item_id#497,total_sales#13643])
[info] +- *(20) HashAggregate(keys=[i_item_id#497], functions=[sum(total_sales#13645)])
[info]    +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#33698]
[info]       +- *(19) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(total_sales#13645)])
[info]          +- Union
[info]             :- *(6) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             :  +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#33362]
[info]             :     +- *(5) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             :        +- *(5) Project [ss_ext_sales_price#1178, i_item_id#497]
[info]             :           +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :              :- *(5) Project [ss_item_sk#1165, ss_ext_sales_price#1178]
[info]             :              :  +- *(5) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]             :              :     :- *(5) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178]
[info]             :              :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :              :     :     :- *(5) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]             :              :     :     :  +- *(5) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_addr_sk#1169)) AND isnotnull(ss_item_sk#1165))
[info]             :              :     :     :     +- *(5) ColumnarToRow
[info]             :              :     :     :        +- BatchScan[ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]             :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#33330]
[info]             :              :     :        +- *(1) Project [d_date_sk#331]
[info]             :              :     :           +- *(1) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2001)) AND (d_moy#339 = 2)) AND isnotnull(d_date_sk#331))
[info]             :              :     :              +- *(1) ColumnarToRow
[info]             :              :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#33339]
[info]             :              :        +- *(2) Project [ca_address_sk#233]
[info]             :              :           +- *(2) Filter ((isnotnull(ca_gmt_offset#244) AND (ca_gmt_offset#244 = -5.00)) AND isnotnull(ca_address_sk#233))
[info]             :              :              +- *(2) ColumnarToRow
[info]             :              :                 +- BatchScan[ca_address_sk#233, ca_gmt_offset#244] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
[info]             :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#33356]
[info]             :                 +- *(4) BroadcastHashJoin [i_item_id#497], [i_item_id#497#13700], LeftSemi, BuildRight
[info]             :                    :- *(4) Project [i_item_sk#496, i_item_id#497]
[info]             :                    :  +- *(4) Filter isnotnull(i_item_sk#496)
[info]             :                    :     +- *(4) ColumnarToRow
[info]             :                    :        +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]             :                    +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true])), [id=#33352]
[info]             :                       +- *(3) Project [i_item_id#497 AS i_item_id#497#13700]
[info]             :                          +- *(3) Filter i_color#513 IN (slate,blanched,burnished)
[info]             :                             +- *(3) ColumnarToRow
[info]             :                                +- BatchScan[i_item_id#497, i_color#513] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_id:string,i_color:string>
[info]             :- *(12) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(cs_ext_sales_price#900))])
[info]             :  +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#33554]
[info]             :     +- *(11) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900))])
[info]             :        +- *(11) Project [cs_ext_sales_price#900, i_item_id#497]
[info]             :           +- *(11) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]             :              :- *(11) Project [cs_item_sk#892, cs_ext_sales_price#900]
[info]             :              :  +- *(11) BroadcastHashJoin [cs_bill_addr_sk#883], [ca_address_sk#233], Inner, BuildRight
[info]             :              :     :- *(11) Project [cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900]
[info]             :              :     :  +- *(11) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :              :     :     :- *(11) Project [cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]             :              :     :     :  +- *(11) Filter ((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_bill_addr_sk#883)) AND isnotnull(cs_item_sk#892))
[info]             :              :     :     :     +- *(11) ColumnarToRow
[info]             :              :     :     :        +- BatchScan[cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]             :              :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#33330]
[info]             :              :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#33339]
[info]             :              +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#33356]
[info]             +- *(18) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#33664]
[info]                   +- *(17) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                      +- *(17) Project [ws_ext_sales_price#1043, i_item_id#497]
[info]                         +- *(17) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                            :- *(17) Project [ws_item_sk#1023, ws_ext_sales_price#1043]
[info]                            :  +- *(17) BroadcastHashJoin [ws_bill_addr_sk#1027], [ca_address_sk#233], Inner, BuildRight
[info]                            :     :- *(17) Project [ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043]
[info]                            :     :  +- *(17) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                            :     :     :- *(17) Project [ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                            :     :     :  +- *(17) Filter ((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_addr_sk#1027)) AND isnotnull(ws_item_sk#1023))
[info]                            :     :     :     +- *(17) ColumnarToRow
[info]                            :     :     :        +- BatchScan[ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                            :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#33330]
[info]                            :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#33339]
[info]                            +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#33356]
[info] 
[info] 
[info]   Stopped after 1 iterations, 464 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q56                                                 465            465           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q57
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#14807 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#14808 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,cc_name#1498 ASC NULLS FIRST], output=[i_category#508,i_brand#504,cc_name#1498,d_year#337,d_moy#339,avg_monthly_sales#14808,sum_sales#14807,psum#14810,nsum#14811])
[info] +- *(27) Project [i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, avg_monthly_sales#14808, sum_sales#14807, sum_sales#15035 AS psum#14810, sum_sales#15522 AS nsum#14811]
[info]    +- *(27) SortMergeJoin [i_category#508, i_brand#504, cc_name#1498, rn#14809], [i_category#15629, i_brand#15625, cc_name#15791, (rn#15426 - 1)], Inner
[info]       :- *(18) Project [i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, sum_sales#14807, avg_monthly_sales#14808, rn#14809, sum_sales#15035]
[info]       :  +- *(18) SortMergeJoin [i_category#508, i_brand#504, cc_name#1498, rn#14809], [i_category#15142, i_brand#15138, cc_name#15304, (rn#14939 + 1)], Inner
[info]       :     :- *(9) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, cc_name#1498 ASC NULLS FIRST, rn#14809 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, rn#14809, 4), true, [id=#34184]
[info]       :     :     +- *(8) Project [i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, sum_sales#14807, avg_monthly_sales#14808, rn#14809]
[info]       :     :        +- *(8) Filter (((isnotnull(avg_monthly_sales#14808) AND (avg_monthly_sales#14808 > 0.000000)) AND (CASE WHEN (avg_monthly_sales#14808 > 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#14807 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#14808 as decimal(22,6)))), DecimalType(22,6), true))) / promote_precision(cast(avg_monthly_sales#14808 as decimal(22,6)))), DecimalType(38,16), true) ELSE null END > 0.1000000000000000)) AND isnotnull(rn#14809))
[info]       :     :           +- Window [avg(_w0#14839) windowspecdefinition(i_category#508, i_brand#504, cc_name#1498, d_year#337, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#14808], [i_category#508, i_brand#504, cc_name#1498, d_year#337]
[info]       :     :              +- *(7) Filter (isnotnull(d_year#337) AND (d_year#337 = 1999))
[info]       :     :                 +- Window [rank(d_year#337, d_moy#339) windowspecdefinition(i_category#508, i_brand#504, cc_name#1498, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#14809], [i_category#508, i_brand#504, cc_name#1498], [d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST]
[info]       :     :                    +- *(6) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, cc_name#1498 ASC NULLS FIRST, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST], false, 0
[info]       :     :                       +- Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, 4), true, [id=#34171]
[info]       :     :                          +- *(5) HashAggregate(keys=[i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339], functions=[sum(UnscaledValue(cs_sales_price#898))])
[info]       :     :                             +- Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, 4), true, [id=#34167]
[info]       :     :                                +- *(4) HashAggregate(keys=[i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339], functions=[partial_sum(UnscaledValue(cs_sales_price#898))])
[info]       :     :                                   +- *(4) Project [i_brand#504, i_category#508, cs_sales_price#898, d_year#337, d_moy#339, cc_name#1498]
[info]       :     :                                      +- *(4) BroadcastHashJoin [cs_call_center_sk#888], [cc_call_center_sk#1492], Inner, BuildRight
[info]       :     :                                         :- *(4) Project [i_brand#504, i_category#508, cs_call_center_sk#888, cs_sales_price#898, d_year#337, d_moy#339]
[info]       :     :                                         :  +- *(4) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :     :                                         :     :- *(4) Project [i_brand#504, i_category#508, cs_call_center_sk#888, cs_sales_price#898, cs_sold_date_sk#911]
[info]       :     :                                         :     :  +- *(4) BroadcastHashJoin [i_item_sk#496], [cs_item_sk#892], Inner, BuildLeft
[info]       :     :                                         :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#34139]
[info]       :     :                                         :     :     :  +- *(1) Project [i_item_sk#496, i_brand#504, i_category#508]
[info]       :     :                                         :     :     :     +- *(1) Filter ((isnotnull(i_item_sk#496) AND isnotnull(i_brand#504)) AND isnotnull(i_category#508))
[info]       :     :                                         :     :     :        +- *(1) ColumnarToRow
[info]       :     :                                         :     :     :           +- BatchScan[i_item_sk#496, i_brand#504, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
[info]       :     :                                         :     :     +- *(4) Project [cs_call_center_sk#888, cs_item_sk#892, cs_sales_price#898, cs_sold_date_sk#911]
[info]       :     :                                         :     :        +- *(4) Filter ((isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_call_center_sk#888))
[info]       :     :                                         :     :           +- *(4) ColumnarToRow
[info]       :     :                                         :     :              +- BatchScan[cs_call_center_sk#888, cs_item_sk#892, cs_sales_price#898, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_call_center_sk:int,cs_item_sk:int,cs_sales_price:decimal(7,2)>
[info]       :     :                                         :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#34152]
[info]       :     :                                         :        +- *(2) Project [d_date_sk#331, d_year#337, d_moy#339]
[info]       :     :                                         :           +- *(2) Filter ((((d_year#337 = 1999) OR ((d_year#337 = 1998) AND (d_moy#339 = 12))) OR ((d_year#337 = 2000) AND (d_moy#339 = 1))) AND isnotnull(d_date_sk#331))
[info]       :     :                                         :              +- *(2) ColumnarToRow
[info]       :     :                                         :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]       :     :                                         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#34161]
[info]       :     :                                            +- *(3) Project [cc_call_center_sk#1492, cc_name#1498]
[info]       :     :                                               +- *(3) Filter (isnotnull(cc_call_center_sk#1492) AND isnotnull(cc_name#1498))
[info]       :     :                                                  +- *(3) ColumnarToRow
[info]       :     :                                                     +- BatchScan[cc_call_center_sk#1492, cc_name#1498] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/call_center], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
[info]       :     +- *(17) Sort [i_category#15142 ASC NULLS FIRST, i_brand#15138 ASC NULLS FIRST, cc_name#15304 ASC NULLS FIRST, (rn#14939 + 1) ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(i_category#15142, i_brand#15138, cc_name#15304, (rn#14939 + 1), 4), true, [id=#34427]
[info]       :           +- *(16) Project [i_category#15142, i_brand#15138, cc_name#15304, sum_sales#15035, rn#14939]
[info]       :              +- *(16) Filter isnotnull(rn#14939)
[info]       :                 +- Window [rank(d_year#15229, d_moy#15231) windowspecdefinition(i_category#15142, i_brand#15138, cc_name#15304, d_year#15229 ASC NULLS FIRST, d_moy#15231 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#14939], [i_category#15142, i_brand#15138, cc_name#15304], [d_year#15229 ASC NULLS FIRST, d_moy#15231 ASC NULLS FIRST]
[info]       :                    +- *(15) Sort [i_category#15142 ASC NULLS FIRST, i_brand#15138 ASC NULLS FIRST, cc_name#15304 ASC NULLS FIRST, d_year#15229 ASC NULLS FIRST, d_moy#15231 ASC NULLS FIRST], false, 0
[info]       :                       +- Exchange hashpartitioning(i_category#15142, i_brand#15138, cc_name#15304, 4), true, [id=#34418]
[info]       :                          +- *(14) HashAggregate(keys=[i_category#15142, i_brand#15138, cc_name#15304, d_year#15229, d_moy#15231], functions=[sum(UnscaledValue(cs_sales_price#898))])
[info]       :                             +- ReusedExchange [i_category#15142, i_brand#15138, cc_name#15304, d_year#15229, d_moy#15231, sum#15936L], Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, 4), true, [id=#34167]
[info]       +- *(26) Sort [i_category#15629 ASC NULLS FIRST, i_brand#15625 ASC NULLS FIRST, cc_name#15791 ASC NULLS FIRST, (rn#15426 - 1) ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_category#15629, i_brand#15625, cc_name#15791, (rn#15426 - 1), 4), true, [id=#34527]
[info]             +- *(25) Project [i_category#15629, i_brand#15625, cc_name#15791, sum_sales#15522, rn#15426]
[info]                +- *(25) Filter isnotnull(rn#15426)
[info]                   +- Window [rank(d_year#15716, d_moy#15718) windowspecdefinition(i_category#15629, i_brand#15625, cc_name#15791, d_year#15716 ASC NULLS FIRST, d_moy#15718 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#15426], [i_category#15629, i_brand#15625, cc_name#15791], [d_year#15716 ASC NULLS FIRST, d_moy#15718 ASC NULLS FIRST]
[info]                      +- *(24) Sort [i_category#15629 ASC NULLS FIRST, i_brand#15625 ASC NULLS FIRST, cc_name#15791 ASC NULLS FIRST, d_year#15716 ASC NULLS FIRST, d_moy#15718 ASC NULLS FIRST], false, 0
[info]                         +- ReusedExchange [i_category#15629, i_brand#15625, cc_name#15791, d_year#15716, d_moy#15718, sum_sales#15522], Exchange hashpartitioning(i_category#15142, i_brand#15138, cc_name#15304, 4), true, [id=#34418]
[info] 
[info] 
[info]   Stopped after 1 iterations, 678 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q57                                                 678            678           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q58
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[item_id#15996 ASC NULLS FIRST,ss_item_rev#15997 ASC NULLS FIRST], output=[item_id#15996,ss_item_rev#15997,ss_dev#15990,cs_item_rev#16001,cs_dev#15991,ws_item_rev#16005,ws_dev#15992,average#15993])
[info] +- *(20) Project [item_id#15996, ss_item_rev#15997, CheckOverflow((promote_precision(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(ss_item_rev#15997 as decimal(19,2))) / promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_item_rev#15997 as decimal(18,2))) + promote_precision(cast(cs_item_rev#16001 as decimal(18,2)))), DecimalType(18,2), true) as decimal(19,2))) + promote_precision(cast(ws_item_rev#16005 as decimal(19,2)))), DecimalType(19,2), true))), DecimalType(38,21), true)) / 3.000000000000000000000), DecimalType(38,21), true)) * 100.000000000000000000000), DecimalType(38,17), true) AS ss_dev#15990, cs_item_rev#16001, CheckOverflow((promote_precision(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(cs_item_rev#16001 as decimal(19,2))) / promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_item_rev#15997 as decimal(18,2))) + promote_precision(cast(cs_item_rev#16001 as decimal(18,2)))), DecimalType(18,2), true) as decimal(19,2))) + promote_precision(cast(ws_item_rev#16005 as decimal(19,2)))), DecimalType(19,2), true))), DecimalType(38,21), true)) / 3.000000000000000000000), DecimalType(38,21), true)) * 100.000000000000000000000), DecimalType(38,17), true) AS cs_dev#15991, ws_item_rev#16005, CheckOverflow((promote_precision(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(ws_item_rev#16005 as decimal(19,2))) / promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_item_rev#15997 as decimal(18,2))) + promote_precision(cast(cs_item_rev#16001 as decimal(18,2)))), DecimalType(18,2), true) as decimal(19,2))) + promote_precision(cast(ws_item_rev#16005 as decimal(19,2)))), DecimalType(19,2), true))), DecimalType(38,21), true)) / 3.000000000000000000000), DecimalType(38,21), true)) * 100.000000000000000000000), DecimalType(38,17), true) AS ws_dev#15992, CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_item_rev#15997 as decimal(18,2))) + promote_precision(cast(cs_item_rev#16001 as decimal(18,2)))), DecimalType(18,2), true) as decimal(19,2))) + promote_precision(cast(ws_item_rev#16005 as decimal(19,2)))), DecimalType(19,2), true)) / 3.00), DecimalType(23,6), true) AS average#15993]
[info]    +- *(20) SortMergeJoin [item_id#15996], [item_id#16004], Inner, ((((((((cast(ss_item_rev#15997 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(ws_item_rev#16005)), DecimalType(19,3), true)) AND (cast(ss_item_rev#15997 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(ws_item_rev#16005)), DecimalType(20,3), true))) AND (cast(cs_item_rev#16001 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(ws_item_rev#16005)), DecimalType(19,3), true))) AND (cast(cs_item_rev#16001 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(ws_item_rev#16005)), DecimalType(20,3), true))) AND (cast(ws_item_rev#16005 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(ss_item_rev#15997)), DecimalType(19,3), true))) AND (cast(ws_item_rev#16005 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(ss_item_rev#15997)), DecimalType(20,3), true))) AND (cast(ws_item_rev#16005 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(cs_item_rev#16001)), DecimalType(19,3), true))) AND (cast(ws_item_rev#16005 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(cs_item_rev#16001)), DecimalType(20,3), true)))
[info]       :- *(13) Project [item_id#15996, ss_item_rev#15997, cs_item_rev#16001]
[info]       :  +- *(13) SortMergeJoin [item_id#15996], [item_id#16000], Inner, ((((cast(ss_item_rev#15997 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(cs_item_rev#16001)), DecimalType(19,3), true)) AND (cast(ss_item_rev#15997 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(cs_item_rev#16001)), DecimalType(20,3), true))) AND (cast(cs_item_rev#16001 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(ss_item_rev#15997)), DecimalType(19,3), true))) AND (cast(cs_item_rev#16001 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(ss_item_rev#15997)), DecimalType(20,3), true)))
[info]       :     :- *(6) Sort [item_id#15996 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(item_id#15996, 4), true, [id=#35047]
[info]       :     :     +- *(5) Filter isnotnull(ss_item_rev#15997)
[info]       :     :        +- *(5) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]       :     :           +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#35042]
[info]       :     :              +- *(4) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]       :     :                 +- *(4) Project [ss_ext_sales_price#1178, i_item_id#497]
[info]       :     :                    +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :                       :- *(4) Project [ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_item_id#497]
[info]       :     :                       :  +- *(4) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]       :     :                       :     :- *(4) Project [ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]       :     :                       :     :  +- *(4) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :                       :     :     +- *(4) ColumnarToRow
[info]       :     :                       :     :        +- BatchScan[ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]       :     :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35018]
[info]       :     :                       :        +- *(1) Project [i_item_sk#496, i_item_id#497]
[info]       :     :                       :           +- *(1) Filter (isnotnull(i_item_sk#496) AND isnotnull(i_item_id#497))
[info]       :     :                       :              +- *(1) ColumnarToRow
[info]       :     :                       :                 +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]       :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35036]
[info]       :     :                          +- *(3) Project [d_date_sk#331]
[info]       :     :                             +- *(3) BroadcastHashJoin [d_date#333], [d_date#333#16050], LeftSemi, BuildRight
[info]       :     :                                :- *(3) Project [d_date_sk#331, d_date#333]
[info]       :     :                                :  +- *(3) Filter isnotnull(d_date_sk#331)
[info]       :     :                                :     +- *(3) ColumnarToRow
[info]       :     :                                :        +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]       :     :                                +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, date, true])), [id=#35031]
[info]       :     :                                   +- *(2) Project [d_date#333 AS d_date#333#16050]
[info]       :     :                                      +- *(2) Filter (isnotnull(d_week_seq#335) AND (d_week_seq#335 = Subquery scalar-subquery#15994, [id=#34798]))
[info]       :     :                                         :  +- Subquery scalar-subquery#15994, [id=#34798]
[info]       :     :                                         :     +- *(1) Project [d_week_seq#335]
[info]       :     :                                         :        +- *(1) Filter (isnotnull(d_date#333) AND (d_date#333 = 10959))
[info]       :     :                                         :           +- *(1) ColumnarToRow
[info]       :     :                                         :              +- BatchScan[d_date#333, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date:date,d_week_seq:int>
[info]       :     :                                         +- *(2) ColumnarToRow
[info]       :     :                                            +- BatchScan[d_date#333, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date:date,d_week_seq:int>
[info]       :     +- *(12) Sort [item_id#16000 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(item_id#16000, 4), true, [id=#35283]
[info]       :           +- *(11) Filter isnotnull(cs_item_rev#16001)
[info]       :              +- *(11) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(cs_ext_sales_price#900))])
[info]       :                 +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#35236]
[info]       :                    +- *(10) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900))])
[info]       :                       +- *(10) Project [cs_ext_sales_price#900, i_item_id#497]
[info]       :                          +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :                             :- *(10) Project [cs_ext_sales_price#900, cs_sold_date_sk#911, i_item_id#497]
[info]       :                             :  +- *(10) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]       :                             :     :- *(10) Project [cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]       :                             :     :  +- *(10) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]       :                             :     :     +- *(10) ColumnarToRow
[info]       :                             :     :        +- BatchScan[cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]       :                             :     +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35018]
[info]       :                             +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35036]
[info]       +- *(19) Sort [item_id#16004 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(item_id#16004, 4), true, [id=#35371]
[info]             +- *(18) Filter isnotnull(ws_item_rev#16005)
[info]                +- *(18) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                   +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#35345]
[info]                      +- *(17) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                         +- *(17) Project [ws_ext_sales_price#1043, i_item_id#497]
[info]                            +- *(17) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(17) Project [ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_item_id#497]
[info]                               :  +- *(17) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                               :     :- *(17) Project [ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                               :     :  +- *(17) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                               :     :     +- *(17) ColumnarToRow
[info]                               :     :        +- BatchScan[ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                               :     +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35018]
[info]                               +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35036]
[info] 
[info] 
[info]   Stopped after 1 iterations, 500 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q58                                                 501            501           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q59
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[s_store_name1#16179 ASC NULLS FIRST,s_store_id1#16181 ASC NULLS FIRST,d_week_seq1#16180 ASC NULLS FIRST], output=[s_store_name1#16179,s_store_id1#16181,d_week_seq1#16180,(sun_sales1 / sun_sales2)#16276,(mon_sales1 / mon_sales2)#16277,(tue_sales1 / tue_sales2)#16278,(wed_sales1 / wed_sales2)#16279,(thu_sales1 / thu_sales2)#16280,(fri_sales1 / fri_sales2)#16281,(sat_sales1 / sat_sales2)#16282])
[info] +- *(13) Project [s_store_name1#16179, s_store_id1#16181, d_week_seq1#16180, CheckOverflow((promote_precision(sun_sales1#16182) / promote_precision(sun_sales2#16192)), DecimalType(37,20), true) AS (sun_sales1 / sun_sales2)#16276, CheckOverflow((promote_precision(mon_sales1#16183) / promote_precision(mon_sales2#16193)), DecimalType(37,20), true) AS (mon_sales1 / mon_sales2)#16277, CheckOverflow((promote_precision(tue_sales1#16184) / promote_precision(tue_sales2#16194)), DecimalType(37,20), true) AS (tue_sales1 / tue_sales2)#16278, CheckOverflow((promote_precision(wed_sales1#16185) / promote_precision(wed_sales2#16195)), DecimalType(37,20), true) AS (wed_sales1 / wed_sales2)#16279, CheckOverflow((promote_precision(thu_sales1#16186) / promote_precision(thu_sales2#16196)), DecimalType(37,20), true) AS (thu_sales1 / thu_sales2)#16280, CheckOverflow((promote_precision(fri_sales1#16187) / promote_precision(fri_sales2#16197)), DecimalType(37,20), true) AS (fri_sales1 / fri_sales2)#16281, CheckOverflow((promote_precision(sat_sales1#16188) / promote_precision(sat_sales2#16198)), DecimalType(37,20), true) AS (sat_sales1 / sat_sales2)#16282]
[info]    +- *(13) SortMergeJoin [s_store_id1#16181, d_week_seq1#16180], [s_store_id2#16191, (d_week_seq2#16190 - 52)], Inner
[info]       :- *(6) Sort [s_store_id1#16181 ASC NULLS FIRST, d_week_seq1#16180 ASC NULLS FIRST], false, 0
[info]       :  +- Exchange hashpartitioning(s_store_id1#16181, d_week_seq1#16180, 4), true, [id=#35647]
[info]       :     +- *(5) Project [s_store_name#675 AS s_store_name1#16179, d_week_seq#335 AS d_week_seq1#16180, s_store_id#671 AS s_store_id1#16181, sun_sales#16199 AS sun_sales1#16182, mon_sales#16200 AS mon_sales1#16183, tue_sales#16201 AS tue_sales1#16184, wed_sales#16202 AS wed_sales1#16185, thu_sales#16203 AS thu_sales1#16186, fri_sales#16204 AS fri_sales1#16187, sat_sales#16205 AS sat_sales1#16188]
[info]       :        +- *(5) BroadcastHashJoin [d_week_seq#335], [d_week_seq#16224], Inner, BuildRight
[info]       :           :- *(5) Project [d_week_seq#335, sun_sales#16199, mon_sales#16200, tue_sales#16201, wed_sales#16202, thu_sales#16203, fri_sales#16204, sat_sales#16205, s_store_id#671, s_store_name#675]
[info]       :           :  +- *(5) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]       :           :     :- *(5) HashAggregate(keys=[d_week_seq#335, ss_store_sk#1170], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN ss_sales_price#1176 ELSE null END))])
[info]       :           :     :  +- Exchange hashpartitioning(d_week_seq#335, ss_store_sk#1170, 4), true, [id=#35625]
[info]       :           :     :     +- *(2) HashAggregate(keys=[d_week_seq#335, ss_store_sk#1170], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN ss_sales_price#1176 ELSE null END))])
[info]       :           :     :        +- *(2) Project [ss_store_sk#1170, ss_sales_price#1176, d_week_seq#335, d_day_name#345]
[info]       :           :     :           +- *(2) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :           :     :              :- *(2) Project [ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :           :     :              :  +- *(2) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]       :           :     :              :     +- *(2) ColumnarToRow
[info]       :           :     :              :        +- BatchScan[ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]       :           :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35619]
[info]       :           :     :                 +- *(1) Project [d_date_sk#331, d_week_seq#335, d_day_name#345]
[info]       :           :     :                    +- *(1) Filter (isnotnull(d_date_sk#331) AND isnotnull(d_week_seq#335))
[info]       :           :     :                       +- *(1) ColumnarToRow
[info]       :           :     :                          +- BatchScan[d_date_sk#331, d_week_seq#335, d_day_name#345] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
[info]       :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35633]
[info]       :           :        +- *(3) Project [s_store_sk#670, s_store_id#671, s_store_name#675]
[info]       :           :           +- *(3) Filter (isnotnull(s_store_sk#670) AND isnotnull(s_store_id#671))
[info]       :           :              +- *(3) ColumnarToRow
[info]       :           :                 +- BatchScan[s_store_sk#670, s_store_id#671, s_store_name#675] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
[info]       :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35642]
[info]       :              +- *(4) Project [d_week_seq#16224]
[info]       :                 +- *(4) Filter (((isnotnull(d_month_seq#16223) AND (d_month_seq#16223 >= 1212)) AND (d_month_seq#16223 <= 1223)) AND isnotnull(d_week_seq#16224))
[info]       :                    +- *(4) ColumnarToRow
[info]       :                       +- BatchScan[d_month_seq#16223, d_week_seq#16224] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_month_seq:int,d_week_seq:int>
[info]       +- *(12) Sort [s_store_id2#16191 ASC NULLS FIRST, (d_week_seq2#16190 - 52) ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(s_store_id2#16191, (d_week_seq2#16190 - 52), 4), true, [id=#35777]
[info]             +- *(11) Project [d_week_seq#335 AS d_week_seq2#16190, s_store_id#671 AS s_store_id2#16191, sun_sales#16199 AS sun_sales2#16192, mon_sales#16200 AS mon_sales2#16193, tue_sales#16201 AS tue_sales2#16194, wed_sales#16202 AS wed_sales2#16195, thu_sales#16203 AS thu_sales2#16196, fri_sales#16204 AS fri_sales2#16197, sat_sales#16205 AS sat_sales2#16198]
[info]                +- *(11) BroadcastHashJoin [d_week_seq#335], [d_week_seq#16252], Inner, BuildRight
[info]                   :- *(11) Project [d_week_seq#335, sun_sales#16199, mon_sales#16200, tue_sales#16201, wed_sales#16202, thu_sales#16203, fri_sales#16204, sat_sales#16205, s_store_id#671]
[info]                   :  +- *(11) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                   :     :- *(11) HashAggregate(keys=[d_week_seq#335, ss_store_sk#1170], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN ss_sales_price#1176 ELSE null END))])
[info]                   :     :  +- ReusedExchange [d_week_seq#335, ss_store_sk#1170, sum#16335L, sum#16336L, sum#16337L, sum#16338L, sum#16339L, sum#16340L, sum#16341L], Exchange hashpartitioning(d_week_seq#335, ss_store_sk#1170, 4), true, [id=#35625]
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35675]
[info]                   :        +- *(9) Project [s_store_sk#670, s_store_id#671]
[info]                   :           +- *(9) Filter (isnotnull(s_store_sk#670) AND isnotnull(s_store_id#671))
[info]                   :              +- *(9) ColumnarToRow
[info]                   :                 +- BatchScan[s_store_sk#670, s_store_id#671] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string>
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35684]
[info]                      +- *(10) Project [d_week_seq#16252]
[info]                         +- *(10) Filter (((isnotnull(d_month_seq#16251) AND (d_month_seq#16251 >= 1224)) AND (d_month_seq#16251 <= 1235)) AND isnotnull(d_week_seq#16252))
[info]                            +- *(10) ColumnarToRow
[info]                               +- BatchScan[d_month_seq#16251, d_week_seq#16252] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_month_seq:int,d_week_seq:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 282 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q59                                                 283            283           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q60
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST,total_sales#16377 ASC NULLS FIRST], output=[i_item_id#497,total_sales#16377])
[info] +- *(20) HashAggregate(keys=[i_item_id#497], functions=[sum(total_sales#16379)])
[info]    +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#36550]
[info]       +- *(19) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(total_sales#16379)])
[info]          +- Union
[info]             :- *(6) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             :  +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#36214]
[info]             :     +- *(5) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             :        +- *(5) Project [ss_ext_sales_price#1178, i_item_id#497]
[info]             :           +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :              :- *(5) Project [ss_item_sk#1165, ss_ext_sales_price#1178]
[info]             :              :  +- *(5) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]             :              :     :- *(5) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178]
[info]             :              :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :              :     :     :- *(5) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]             :              :     :     :  +- *(5) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_addr_sk#1169)) AND isnotnull(ss_item_sk#1165))
[info]             :              :     :     :     +- *(5) ColumnarToRow
[info]             :              :     :     :        +- BatchScan[ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]             :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36182]
[info]             :              :     :        +- *(1) Project [d_date_sk#331]
[info]             :              :     :           +- *(1) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 1998)) AND (d_moy#339 = 9)) AND isnotnull(d_date_sk#331))
[info]             :              :     :              +- *(1) ColumnarToRow
[info]             :              :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36191]
[info]             :              :        +- *(2) Project [ca_address_sk#233]
[info]             :              :           +- *(2) Filter ((isnotnull(ca_gmt_offset#244) AND (ca_gmt_offset#244 = -5.00)) AND isnotnull(ca_address_sk#233))
[info]             :              :              +- *(2) ColumnarToRow
[info]             :              :                 +- BatchScan[ca_address_sk#233, ca_gmt_offset#244] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
[info]             :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36208]
[info]             :                 +- *(4) BroadcastHashJoin [i_item_id#497], [i_item_id#497#16435], LeftSemi, BuildRight
[info]             :                    :- *(4) Project [i_item_sk#496, i_item_id#497]
[info]             :                    :  +- *(4) Filter isnotnull(i_item_sk#496)
[info]             :                    :     +- *(4) ColumnarToRow
[info]             :                    :        +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]             :                    +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true])), [id=#36204]
[info]             :                       +- *(3) Project [i_item_id#497 AS i_item_id#497#16435]
[info]             :                          +- *(3) Filter (isnotnull(i_category#508) AND (i_category#508 = Music))
[info]             :                             +- *(3) ColumnarToRow
[info]             :                                +- BatchScan[i_item_id#497, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_id:string,i_category:string>
[info]             :- *(12) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(cs_ext_sales_price#900))])
[info]             :  +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#36406]
[info]             :     +- *(11) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900))])
[info]             :        +- *(11) Project [cs_ext_sales_price#900, i_item_id#497]
[info]             :           +- *(11) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]             :              :- *(11) Project [cs_item_sk#892, cs_ext_sales_price#900]
[info]             :              :  +- *(11) BroadcastHashJoin [cs_bill_addr_sk#883], [ca_address_sk#233], Inner, BuildRight
[info]             :              :     :- *(11) Project [cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900]
[info]             :              :     :  +- *(11) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :              :     :     :- *(11) Project [cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]             :              :     :     :  +- *(11) Filter ((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_bill_addr_sk#883)) AND isnotnull(cs_item_sk#892))
[info]             :              :     :     :     +- *(11) ColumnarToRow
[info]             :              :     :     :        +- BatchScan[cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]             :              :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36182]
[info]             :              :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36191]
[info]             :              +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36208]
[info]             +- *(18) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#36516]
[info]                   +- *(17) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                      +- *(17) Project [ws_ext_sales_price#1043, i_item_id#497]
[info]                         +- *(17) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                            :- *(17) Project [ws_item_sk#1023, ws_ext_sales_price#1043]
[info]                            :  +- *(17) BroadcastHashJoin [ws_bill_addr_sk#1027], [ca_address_sk#233], Inner, BuildRight
[info]                            :     :- *(17) Project [ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043]
[info]                            :     :  +- *(17) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                            :     :     :- *(17) Project [ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                            :     :     :  +- *(17) Filter ((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_addr_sk#1027)) AND isnotnull(ws_item_sk#1023))
[info]                            :     :     :     +- *(17) ColumnarToRow
[info]                            :     :     :        +- BatchScan[ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                            :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36182]
[info]                            :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36191]
[info]                            +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36208]
[info] 
[info] 
[info]   Stopped after 1 iterations, 444 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q60                                                 445            445           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q61
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[promotions#16460 ASC NULLS FIRST,total#16461 ASC NULLS FIRST], output=[promotions#16460,total#16461,(CAST((CAST(CAST(promotions AS DECIMAL(15,4)) AS DECIMAL(15,4)) / CAST(CAST(total AS DECIMAL(15,4)) AS DECIMAL(15,4))) AS DECIMAL(35,20)) * CAST(CAST(100 AS DECIMAL(3,0)) AS DECIMAL(35,20)))#16464])
[info] +- *(16) Project [promotions#16460, total#16461, CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(promotions#16460 as decimal(15,4))) / promote_precision(cast(total#16461 as decimal(15,4)))), DecimalType(35,20), true)) * 100.00000000000000000000), DecimalType(38,19), true) AS (CAST((CAST(CAST(promotions AS DECIMAL(15,4)) AS DECIMAL(15,4)) / CAST(CAST(total AS DECIMAL(15,4)) AS DECIMAL(15,4))) AS DECIMAL(35,20)) * CAST(CAST(100 AS DECIMAL(3,0)) AS DECIMAL(35,20)))#16464]
[info]    +- BroadcastNestedLoopJoin BuildRight, Inner
[info]       :- *(8) HashAggregate(keys=[], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]       :  +- Exchange SinglePartition, true, [id=#36968]
[info]       :     +- *(7) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]       :        +- *(7) Project [ss_ext_sales_price#1178]
[info]       :           +- *(7) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]       :              :- *(7) Project [ss_item_sk#1165, ss_ext_sales_price#1178]
[info]       :              :  +- *(7) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]       :              :     :- *(7) Project [ss_item_sk#1165, ss_ext_sales_price#1178, c_current_addr_sk#160]
[info]       :              :     :  +- *(7) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]       :              :     :     :- *(7) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_ext_sales_price#1178]
[info]       :              :     :     :  +- *(7) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :              :     :     :     :- *(7) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]       :              :     :     :     :  +- *(7) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]       :              :     :     :     :     :- *(7) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]       :              :     :     :     :     :  +- *(7) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]       :              :     :     :     :     :     :- *(7) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]       :              :     :     :     :     :     :  +- *(7) Filter ((((isnotnull(ss_store_sk#1170) AND isnotnull(ss_promo_sk#1171)) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_item_sk#1165))
[info]       :              :     :     :     :     :     :     +- *(7) ColumnarToRow
[info]       :              :     :     :     :     :     :        +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ext_sales_price:decim...
[info]       :              :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36917]
[info]       :              :     :     :     :     :        +- *(1) Project [s_store_sk#670]
[info]       :              :     :     :     :     :           +- *(1) Filter ((isnotnull(s_gmt_offset#697) AND (s_gmt_offset#697 = -5.00)) AND isnotnull(s_store_sk#670))
[info]       :              :     :     :     :     :              +- *(1) ColumnarToRow
[info]       :              :     :     :     :     :                 +- BatchScan[s_store_sk#670, s_gmt_offset#697] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_gmt_offset:decimal(5,2)>
[info]       :              :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36926]
[info]       :              :     :     :     :        +- *(2) Project [p_promo_sk#589]
[info]       :              :     :     :     :           +- *(2) Filter ((((p_channel_dmail#597 = Y) OR (p_channel_email#598 = Y)) OR (p_channel_tv#600 = Y)) AND isnotnull(p_promo_sk#589))
[info]       :              :     :     :     :              +- *(2) ColumnarToRow
[info]       :              :     :     :     :                 +- BatchScan[p_promo_sk#589, p_channel_dmail#597, p_channel_email#598, p_channel_tv#600] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int,p_channel_dmail:string,p_channel_email:string,p_channel_tv:string>
[info]       :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36935]
[info]       :              :     :     :        +- *(3) Project [d_date_sk#331]
[info]       :              :     :     :           +- *(3) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 1998)) AND (d_moy#339 = 11)) AND isnotnull(d_date_sk#331))
[info]       :              :     :     :              +- *(3) ColumnarToRow
[info]       :              :     :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]       :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36944]
[info]       :              :     :        +- *(4) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]       :              :     :           +- *(4) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]       :              :     :              +- *(4) ColumnarToRow
[info]       :              :     :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
[info]       :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36953]
[info]       :              :        +- *(5) Project [ca_address_sk#233]
[info]       :              :           +- *(5) Filter ((isnotnull(ca_gmt_offset#244) AND (ca_gmt_offset#244 = -5.00)) AND isnotnull(ca_address_sk#233))
[info]       :              :              +- *(5) ColumnarToRow
[info]       :              :                 +- BatchScan[ca_address_sk#233, ca_gmt_offset#244] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
[info]       :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36962]
[info]       :                 +- *(6) Project [i_item_sk#496]
[info]       :                    +- *(6) Filter ((isnotnull(i_category#508) AND (i_category#508 = Jewelry)) AND isnotnull(i_item_sk#496))
[info]       :                       +- *(6) ColumnarToRow
[info]       :                          +- BatchScan[i_item_sk#496, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_category:string>
[info]       +- BroadcastExchange IdentityBroadcastMode, [id=#37222]
[info]          +- *(15) HashAggregate(keys=[], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             +- Exchange SinglePartition, true, [id=#37135]
[info]                +- *(14) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                   +- *(14) Project [ss_ext_sales_price#1178]
[info]                      +- *(14) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                         :- *(14) Project [ss_item_sk#1165, ss_ext_sales_price#1178]
[info]                         :  +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                         :     :- *(14) Project [ss_item_sk#1165, ss_ext_sales_price#1178, c_current_addr_sk#160]
[info]                         :     :  +- *(14) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                         :     :     :- *(14) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_ext_sales_price#1178]
[info]                         :     :     :  +- *(14) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                         :     :     :     :- *(14) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                         :     :     :     :  +- *(14) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                         :     :     :     :     :- *(14) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                         :     :     :     :     :  +- *(14) Filter (((isnotnull(ss_store_sk#1170) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_item_sk#1165))
[info]                         :     :     :     :     :     +- *(14) ColumnarToRow
[info]                         :     :     :     :     :        +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                         :     :     :     :     +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36917]
[info]                         :     :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36935]
[info]                         :     :     +- ReusedExchange [c_customer_sk#156, c_current_addr_sk#160], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36944]
[info]                         :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36953]
[info]                         +- ReusedExchange [i_item_sk#496], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36962]
[info] 
[info] 
[info]   Stopped after 1 iterations, 424 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q61                                                 424            424           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q62
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[substring(w_warehouse_name, 1, 20)#16545 ASC NULLS FIRST,sm_type#1684 ASC NULLS FIRST,web_name#1370 ASC NULLS FIRST], output=[substring(w_warehouse_name, 1, 20)#16545,sm_type#1684,web_name#1370,30 days #16535L,31 - 60 days #16536L,61 - 90 days #16537L,91 - 120 days #16538L,>120 days #16539L])
[info] +- *(6) HashAggregate(keys=[substring(w_warehouse_name#1623, 1, 20)#16570, sm_type#1684, web_name#1370], functions=[sum(cast(CASE WHEN ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 30) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 30) AND ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 60)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 60) AND ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 90)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 90) AND ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 120)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 120) THEN 1 ELSE 0 END as bigint))])
[info]    +- Exchange hashpartitioning(substring(w_warehouse_name#1623, 1, 20)#16570, sm_type#1684, web_name#1370, 4), true, [id=#37402]
[info]       +- *(5) HashAggregate(keys=[substring(w_warehouse_name#1623, 1, 20) AS substring(w_warehouse_name#1623, 1, 20)#16570, sm_type#1684, web_name#1370], functions=[partial_sum(cast(CASE WHEN ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 30) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 30) AND ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 60)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 60) AND ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 90)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 90) AND ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 120)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 120) THEN 1 ELSE 0 END as bigint))])
[info]          +- *(5) Project [ws_ship_date_sk#1022, ws_sold_date_sk#1054, w_warehouse_name#1623, sm_type#1684, web_name#1370]
[info]             +- *(5) BroadcastHashJoin [ws_ship_date_sk#1022], [d_date_sk#331], Inner, BuildRight
[info]                :- *(5) Project [ws_ship_date_sk#1022, ws_sold_date_sk#1054, w_warehouse_name#1623, sm_type#1684, web_name#1370]
[info]                :  +- *(5) BroadcastHashJoin [ws_web_site_sk#1033], [web_site_sk#1366], Inner, BuildRight
[info]                :     :- *(5) Project [ws_ship_date_sk#1022, ws_web_site_sk#1033, ws_sold_date_sk#1054, w_warehouse_name#1623, sm_type#1684]
[info]                :     :  +- *(5) BroadcastHashJoin [ws_ship_mode_sk#1034], [sm_ship_mode_sk#1682], Inner, BuildRight
[info]                :     :     :- *(5) Project [ws_ship_date_sk#1022, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_sold_date_sk#1054, w_warehouse_name#1623]
[info]                :     :     :  +- *(5) BroadcastHashJoin [ws_warehouse_sk#1035], [w_warehouse_sk#1621], Inner, BuildRight
[info]                :     :     :     :- *(5) Project [ws_ship_date_sk#1022, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_sold_date_sk#1054]
[info]                :     :     :     :  +- *(5) Filter (((isnotnull(ws_warehouse_sk#1035) AND isnotnull(ws_ship_mode_sk#1034)) AND isnotnull(ws_web_site_sk#1033)) AND isnotnull(ws_ship_date_sk#1022))
[info]                :     :     :     :     +- *(5) ColumnarToRow
[info]                :     :     :     :        +- BatchScan[ws_ship_date_sk#1022, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_ship_date_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int>
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#37369]
[info]                :     :     :        +- *(1) Project [w_warehouse_sk#1621, w_warehouse_name#1623]
[info]                :     :     :           +- *(1) Filter isnotnull(w_warehouse_sk#1621)
[info]                :     :     :              +- *(1) ColumnarToRow
[info]                :     :     :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#37378]
[info]                :     :        +- *(2) Project [sm_ship_mode_sk#1682, sm_type#1684]
[info]                :     :           +- *(2) Filter isnotnull(sm_ship_mode_sk#1682)
[info]                :     :              +- *(2) ColumnarToRow
[info]                :     :                 +- BatchScan[sm_ship_mode_sk#1682, sm_type#1684] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/ship_mode], ReadSchema: struct<sm_ship_mode_sk:int,sm_type:string>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#37387]
[info]                :        +- *(3) Project [web_site_sk#1366, web_name#1370]
[info]                :           +- *(3) Filter isnotnull(web_site_sk#1366)
[info]                :              +- *(3) ColumnarToRow
[info]                :                 +- BatchScan[web_site_sk#1366, web_name#1370] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_site], ReadSchema: struct<web_site_sk:int,web_name:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#37396]
[info]                   +- *(4) Project [d_date_sk#331]
[info]                      +- *(4) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                         +- *(4) ColumnarToRow
[info]                            +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 157 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q62                                                 158            158           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q63
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_manager_id#516 ASC NULLS FIRST,avg_monthly_sales#16592 ASC NULLS FIRST,sum_sales#16591 ASC NULLS FIRST], output=[i_manager_id#516,sum_sales#16591,avg_monthly_sales#16592])
[info] +- *(7) Project [i_manager_id#516, sum_sales#16591, avg_monthly_sales#16592]
[info]    +- *(7) Filter (CASE WHEN (avg_monthly_sales#16592 > 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#16591 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#16592 as decimal(22,6)))), DecimalType(22,6), true))) / promote_precision(cast(avg_monthly_sales#16592 as decimal(22,6)))), DecimalType(38,16), true) ELSE null END > 0.1000000000000000)
[info]       +- Window [avg(_w0#16596) windowspecdefinition(i_manager_id#516, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#16592], [i_manager_id#516]
[info]          +- *(6) Sort [i_manager_id#516 ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning(i_manager_id#516, 4), true, [id=#37573]
[info]                +- *(5) HashAggregate(keys=[i_manager_id#516, d_moy#339], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]                   +- Exchange hashpartitioning(i_manager_id#516, d_moy#339, 4), true, [id=#37569]
[info]                      +- *(4) HashAggregate(keys=[i_manager_id#516, d_moy#339], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]                         +- *(4) Project [i_manager_id#516, ss_sales_price#1176, d_moy#339]
[info]                            +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :- *(4) Project [i_manager_id#516, ss_store_sk#1170, ss_sales_price#1176, d_moy#339]
[info]                               :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :- *(4) Project [i_manager_id#516, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                               :     :  +- *(4) BroadcastHashJoin [i_item_sk#496], [ss_item_sk#1165], Inner, BuildLeft
[info]                               :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#37541]
[info]                               :     :     :  +- *(1) Project [i_item_sk#496, i_manager_id#516]
[info]                               :     :     :     +- *(1) Filter ((((i_category#508 IN (Books,Children,Electronics) AND i_class#506 IN (personal,portable,refernece,self-help)) AND i_brand#504 IN (scholaramalgamalg #14,scholaramalgamalg #7,exportiunivamalg #9,scholaramalgamalg #9)) OR ((i_category#508 IN (Women,Music,Men) AND i_class#506 IN (accessories,classical,fragrances,pants)) AND i_brand#504 IN (amalgimporto #1,edu packscholar #1,exportiimporto #1,importoamalg #1))) AND isnotnull(i_item_sk#496))
[info]                               :     :     :        +- *(1) ColumnarToRow
[info]                               :     :     :           +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_manager_id:int>
[info]                               :     :     +- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                               :     :        +- *(4) Filter ((isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]                               :     :           +- *(4) ColumnarToRow
[info]                               :     :              +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#37554]
[info]                               :        +- *(2) Project [d_date_sk#331, d_moy#339]
[info]                               :           +- *(2) Filter (d_month_seq#334 INSET (1200,1211,1205,1201,1206,1210,1207,1202,1209,1203,1208,1204) AND isnotnull(d_date_sk#331))
[info]                               :              +- *(2) ColumnarToRow
[info]                               :                 +- BatchScan[d_date_sk#331, d_month_seq#334, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_moy:int>
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#37563]
[info]                                  +- *(3) Project [s_store_sk#670]
[info]                                     +- *(3) Filter isnotnull(s_store_sk#670)
[info]                                        +- *(3) ColumnarToRow
[info]                                           +- BatchScan[s_store_sk#670] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 162 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q63                                                 163            163           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q64
[info] == Physical Plan ==
[info] *(62) Sort [product_name#16883 ASC NULLS FIRST, store_name#16885 ASC NULLS FIRST, cnt#17117L ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(product_name#16883 ASC NULLS FIRST, store_name#16885 ASC NULLS FIRST, cnt#17117L ASC NULLS FIRST, 4), true, [id=#39851]
[info]    +- *(61) Project [product_name#16883, store_name#16885, store_zip#16886, b_street_number#16887, b_streen_name#16888, b_city#16889, b_zip#16890, c_street_number#16891, c_street_name#16892, c_city#16893, c_zip#16894, syear#16895, cnt#16898L, s1#16899, s2#16900, s3#16901, s1#17118, s2#17119, s3#17120, syear#17114, cnt#17117L]
[info]       +- *(61) SortMergeJoin [item_sk#16884, store_name#16885, store_zip#16886], [item_sk#17103, store_name#17104, store_zip#17105], Inner, (cnt#17117L <= cnt#16898L)
[info]          :- *(30) Sort [item_sk#16884 ASC NULLS FIRST, store_name#16885 ASC NULLS FIRST, store_zip#16886 ASC NULLS FIRST], false, 0
[info]          :  +- Exchange hashpartitioning(item_sk#16884, store_name#16885, store_zip#16886, 4), true, [id=#39234]
[info]          :     +- *(29) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#16990, ca_street_name#16991, ca_city#16994, ca_zip#16997, d_year#337, d_year#16924, d_year#16952], functions=[count(1), sum(UnscaledValue(ss_wholesale_cost#1174)), sum(UnscaledValue(ss_list_price#1175)), sum(UnscaledValue(ss_coupon_amt#1182))])
[info]          :        +- Exchange hashpartitioning(i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#16990, ca_street_name#16991, ca_city#16994, ca_zip#16997, d_year#337, d_year#16924, d_year#16952, 4), true, [id=#39230]
[info]          :           +- *(28) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#16990, ca_street_name#16991, ca_city#16994, ca_zip#16997, d_year#337, d_year#16924, d_year#16952], functions=[partial_count(1), partial_sum(UnscaledValue(ss_wholesale_cost#1174)), partial_sum(UnscaledValue(ss_list_price#1175)), partial_sum(UnscaledValue(ss_coupon_amt#1182))])
[info]          :              +- *(28) Project [ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, d_year#16924, d_year#16952, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#16990, ca_street_name#16991, ca_city#16994, ca_zip#16997, i_item_sk#496, i_product_name#517]
[info]          :                 +- *(28) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]          :                    :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#16924, d_year#16952, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#16990, ca_street_name#16991, ca_city#16994, ca_zip#16997]
[info]          :                    :  +- *(28) BroadcastHashJoin [hd_income_band_sk#16984], [ib_income_band_sk#17001], Inner, BuildRight
[info]          :                    :     :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#16924, d_year#16952, hd_income_band_sk#16984, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#16990, ca_street_name#16991, ca_city#16994, ca_zip#16997]
[info]          :                    :     :  +- *(28) BroadcastHashJoin [hd_income_band_sk#449], [ib_income_band_sk#1711], Inner, BuildRight
[info]          :                    :     :     :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#16924, d_year#16952, hd_income_band_sk#449, hd_income_band_sk#16984, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#16990, ca_street_name#16991, ca_city#16994, ca_zip#16997]
[info]          :                    :     :     :  +- *(28) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#16988], Inner, BuildRight
[info]          :                    :     :     :     :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#16924, d_year#16952, hd_income_band_sk#449, hd_income_band_sk#16984, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242]
[info]          :                    :     :     :     :  +- *(28) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]          :                    :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#16924, d_year#16952, hd_income_band_sk#449, hd_income_band_sk#16984]
[info]          :                    :     :     :     :     :  +- *(28) BroadcastHashJoin [c_current_hdemo_sk#159], [hd_demo_sk#16983], Inner, BuildRight
[info]          :                    :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#16924, d_year#16952, hd_income_band_sk#449]
[info]          :                    :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#16924, d_year#16952]
[info]          :                    :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#16924, d_year#16952]
[info]          :                    :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#16974], Inner, BuildRight, NOT (cd_marital_status#292 = cd_marital_status#16976)
[info]          :                    :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#16924, d_year#16952, cd_marital_status#292]
[info]          :                    :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#16924, d_year#16952]
[info]          :                    :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [c_first_shipto_date_sk#161], [d_date_sk#16946], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, d_year#16924]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [c_first_sales_date_sk#162], [d_date_sk#16918], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) SortMergeJoin [ss_item_sk#1165], [cs_item_sk#892], Inner
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(6) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#38708]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- *(5) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(5) SortMergeJoin [ss_item_sk#1165, ss_ticket_number#1172L], [sr_item_sk#792, sr_ticket_number#799L], Inner
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :  +- Exchange hashpartitioning(ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#38690]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :        +- *(1) Filter ((((((((isnotnull(ss_item_sk#1165) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_cdemo_sk#1167)) AND isnotnull(ss_promo_sk#1171)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_addr_sk#1169))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :           +- *(1) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_...
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(4) Sort [sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- Exchange hashpartitioning(sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#38700]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                    +- *(3) Filter (isnotnull(sr_item_sk#792) AND isnotnull(sr_ticket_number#799L))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                       +- *(3) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                          +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- *(12) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(12) Project [cs_item_sk#892]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(12) Filter (isnotnull(sum(cs_ext_list_price#902)#16911) AND (cast(sum(cs_ext_list_price#902)#16911 as decimal(21,2)) > CheckOverflow((2.00 * promote_precision(sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))#16912)), DecimalType(21,2), true)))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(12) HashAggregate(keys=[cs_item_sk#892], functions=[sum(UnscaledValue(cs_ext_list_price#902)), sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))])
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#38737]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                    +- *(11) HashAggregate(keys=[cs_item_sk#892], functions=[partial_sum(UnscaledValue(cs_ext_list_price#902)), partial_sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))])
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                       +- *(11) Project [cs_item_sk#892, cs_ext_list_price#902, cr_refunded_cash#63, cr_reversed_charge#64, cr_store_credit#65]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                          +- *(11) SortMergeJoin [cs_item_sk#892, cs_order_number#894L], [cr_item_sk#42, cr_order_number#56L], Inner
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :- *(8) Sort [cs_item_sk#892 ASC NULLS FIRST, cs_order_number#894L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :  +- Exchange hashpartitioning(cs_item_sk#892, cs_order_number#894L, 4), true, [id=#38718]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :     +- *(7) Project [cs_item_sk#892, cs_order_number#894L, cs_ext_list_price#902]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :        +- *(7) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_order_number#894L))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :           +- *(7) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :              +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_ext_list_price#902] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_ext_list_price:decimal(7,2)>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             +- *(10) Sort [cr_item_sk#42 ASC NULLS FIRST, cr_order_number#56L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                +- Exchange hashpartitioning(cr_item_sk#42, cr_order_number#56L, 4), true, [id=#38728]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                   +- *(9) Project [cr_item_sk#42, cr_order_number#56L, cr_refunded_cash#63, cr_reversed_charge#64, cr_store_credit#65]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                      +- *(9) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                         +- *(9) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                            +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_refunded_cash#63, cr_reversed_charge#64, cr_store_credit#65] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_refunded_cash:decimal(7,2),cr_reversed_charge:dec...
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38752]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(13) Project [d_date_sk#331, d_year#337]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(13) Filter ((isnotnull(d_year#337) AND (d_year#337 = 1999)) AND isnotnull(d_date_sk#331))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(13) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38761]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(14) Project [s_store_sk#670, s_store_name#675, s_zip#695]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(14) Filter ((isnotnull(s_store_sk#670) AND isnotnull(s_store_name#675)) AND isnotnull(s_zip#695))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(14) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_zip:string>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38770]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :        +- *(15) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :           +- *(15) Filter (((((isnotnull(c_customer_sk#156) AND isnotnull(c_first_sales_date_sk#162)) AND isnotnull(c_first_shipto_date_sk#161)) AND isnotnull(c_current_cdemo_sk#158)) AND isnotnull(c_current_hdemo_sk#159)) AND isnotnull(c_current_addr_sk#160))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :              +- *(15) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int,c_fi...
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38779]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :        +- *(16) Project [d_date_sk#16918, d_year#16924]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :           +- *(16) Filter isnotnull(d_date_sk#16918)
[info]          :                    :     :     :     :     :     :     :     :     :     :     :              +- *(16) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[d_date_sk#16918, d_year#16924] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]          :                    :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#16946, d_year#16952], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38779]
[info]          :                    :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38797]
[info]          :                    :     :     :     :     :     :     :     :     :        +- *(18) Project [cd_demo_sk#290, cd_marital_status#292]
[info]          :                    :     :     :     :     :     :     :     :     :           +- *(18) Filter (isnotnull(cd_demo_sk#290) AND isnotnull(cd_marital_status#292))
[info]          :                    :     :     :     :     :     :     :     :     :              +- *(18) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>
[info]          :                    :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#16974, cd_marital_status#16976], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38797]
[info]          :                    :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38815]
[info]          :                    :     :     :     :     :     :     :        +- *(20) Project [p_promo_sk#589]
[info]          :                    :     :     :     :     :     :     :           +- *(20) Filter isnotnull(p_promo_sk#589)
[info]          :                    :     :     :     :     :     :     :              +- *(20) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :                 +- BatchScan[p_promo_sk#589] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int>
[info]          :                    :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38824]
[info]          :                    :     :     :     :     :     :        +- *(21) Project [hd_demo_sk#448, hd_income_band_sk#449]
[info]          :                    :     :     :     :     :     :           +- *(21) Filter (isnotnull(hd_demo_sk#448) AND isnotnull(hd_income_band_sk#449))
[info]          :                    :     :     :     :     :     :              +- *(21) ColumnarToRow
[info]          :                    :     :     :     :     :     :                 +- BatchScan[hd_demo_sk#448, hd_income_band_sk#449] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_income_band_sk:int>
[info]          :                    :     :     :     :     :     +- ReusedExchange [hd_demo_sk#16983, hd_income_band_sk#16984], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38824]
[info]          :                    :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38842]
[info]          :                    :     :     :     :        +- *(23) Project [ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242]
[info]          :                    :     :     :     :           +- *(23) Filter isnotnull(ca_address_sk#233)
[info]          :                    :     :     :     :              +- *(23) ColumnarToRow
[info]          :                    :     :     :     :                 +- BatchScan[ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_city:string,ca_zip:string>
[info]          :                    :     :     :     +- ReusedExchange [ca_address_sk#16988, ca_street_number#16990, ca_street_name#16991, ca_city#16994, ca_zip#16997], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38842]
[info]          :                    :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38860]
[info]          :                    :     :        +- *(25) Project [ib_income_band_sk#1711]
[info]          :                    :     :           +- *(25) Filter isnotnull(ib_income_band_sk#1711)
[info]          :                    :     :              +- *(25) ColumnarToRow
[info]          :                    :     :                 +- BatchScan[ib_income_band_sk#1711] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/income_band], ReadSchema: struct<ib_income_band_sk:int>
[info]          :                    :     +- ReusedExchange [ib_income_band_sk#17001], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38860]
[info]          :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38878]
[info]          :                       +- *(27) Project [i_item_sk#496, i_product_name#517]
[info]          :                          +- *(27) Filter (((((((cast(i_current_price#501 as decimal(12,2)) <= 74.00) AND (cast(i_current_price#501 as decimal(12,2)) >= 65.00)) AND (cast(i_current_price#501 as decimal(12,2)) <= 79.00)) AND isnotnull(i_current_price#501)) AND i_color#513 IN (purple,burlywood,indian,spring,floral,medium)) AND (i_current_price#501 >= 64.00)) AND isnotnull(i_item_sk#496))
[info]          :                             +- *(27) ColumnarToRow
[info]          :                                +- BatchScan[i_item_sk#496, i_current_price#501, i_color#513, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_color:string,i_product_name:string>
[info]          +- *(60) Sort [item_sk#17103 ASC NULLS FIRST, store_name#17104 ASC NULLS FIRST, store_zip#17105 ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning(item_sk#17103, store_name#17104, store_zip#17105, 4), true, [id=#39843]
[info]                +- *(59) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#17076, ca_street_name#17077, ca_city#17080, ca_zip#17083, d_year#337, d_year#17010, d_year#17038], functions=[count(1), sum(UnscaledValue(ss_wholesale_cost#1174)), sum(UnscaledValue(ss_list_price#1175)), sum(UnscaledValue(ss_coupon_amt#1182))])
[info]                   +- Exchange hashpartitioning(i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#17076, ca_street_name#17077, ca_city#17080, ca_zip#17083, d_year#337, d_year#17010, d_year#17038, 4), true, [id=#39639]
[info]                      +- *(58) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#17076, ca_street_name#17077, ca_city#17080, ca_zip#17083, d_year#337, d_year#17010, d_year#17038], functions=[partial_count(1), partial_sum(UnscaledValue(ss_wholesale_cost#1174)), partial_sum(UnscaledValue(ss_list_price#1175)), partial_sum(UnscaledValue(ss_coupon_amt#1182))])
[info]                         +- *(58) Project [ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, d_year#17010, d_year#17038, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#17076, ca_street_name#17077, ca_city#17080, ca_zip#17083, i_item_sk#496, i_product_name#517]
[info]                            +- *(58) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                               :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#17010, d_year#17038, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#17076, ca_street_name#17077, ca_city#17080, ca_zip#17083]
[info]                               :  +- *(58) BroadcastHashJoin [hd_income_band_sk#17070], [ib_income_band_sk#17087], Inner, BuildRight
[info]                               :     :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#17010, d_year#17038, hd_income_band_sk#17070, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#17076, ca_street_name#17077, ca_city#17080, ca_zip#17083]
[info]                               :     :  +- *(58) BroadcastHashJoin [hd_income_band_sk#449], [ib_income_band_sk#1711], Inner, BuildRight
[info]                               :     :     :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#17010, d_year#17038, hd_income_band_sk#449, hd_income_band_sk#17070, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#17076, ca_street_name#17077, ca_city#17080, ca_zip#17083]
[info]                               :     :     :  +- *(58) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#17074], Inner, BuildRight
[info]                               :     :     :     :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#17010, d_year#17038, hd_income_band_sk#449, hd_income_band_sk#17070, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242]
[info]                               :     :     :     :  +- *(58) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]                               :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#17010, d_year#17038, hd_income_band_sk#449, hd_income_band_sk#17070]
[info]                               :     :     :     :     :  +- *(58) BroadcastHashJoin [c_current_hdemo_sk#159], [hd_demo_sk#17069], Inner, BuildRight
[info]                               :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#17010, d_year#17038, hd_income_band_sk#449]
[info]                               :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]                               :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#17010, d_year#17038]
[info]                               :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#17010, d_year#17038]
[info]                               :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#17060], Inner, BuildRight, NOT (cd_marital_status#292 = cd_marital_status#17062)
[info]                               :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#17010, d_year#17038, cd_marital_status#292]
[info]                               :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#17010, d_year#17038]
[info]                               :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [c_first_shipto_date_sk#161], [d_date_sk#17032], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, d_year#17010]
[info]                               :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [c_first_sales_date_sk#162], [d_date_sk#17004], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) SortMergeJoin [ss_item_sk#1165], [cs_item_sk#892], Inner
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(36) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- ReusedExchange [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186], Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#38708]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- *(42) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(42) Project [cs_item_sk#892]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(42) Filter (isnotnull(sum(cs_ext_list_price#902)#16916) AND (cast(sum(cs_ext_list_price#902)#16916 as decimal(21,2)) > CheckOverflow((2.00 * promote_precision(sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))#16917)), DecimalType(21,2), true)))
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(42) HashAggregate(keys=[cs_item_sk#892], functions=[sum(UnscaledValue(cs_ext_list_price#902)), sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))])
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- ReusedExchange [cs_item_sk#892, sum#17292L, sum#17293], Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#38737]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38960]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(43) Project [d_date_sk#331, d_year#337]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(43) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(43) ColumnarToRow
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [s_store_sk#670, s_store_name#675, s_zip#695], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38761]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38770]
[info]                               :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#17004, d_year#17010], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38779]
[info]                               :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#17032, d_year#17038], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38779]
[info]                               :     :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#290, cd_marital_status#292], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38797]
[info]                               :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#17060, cd_marital_status#17062], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38797]
[info]                               :     :     :     :     :     :     :     +- ReusedExchange [p_promo_sk#589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38815]
[info]                               :     :     :     :     :     :     +- ReusedExchange [hd_demo_sk#448, hd_income_band_sk#449], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38824]
[info]                               :     :     :     :     :     +- ReusedExchange [hd_demo_sk#17069, hd_income_band_sk#17070], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38824]
[info]                               :     :     :     :     +- ReusedExchange [ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38842]
[info]                               :     :     :     +- ReusedExchange [ca_address_sk#17074, ca_street_number#17076, ca_street_name#17077, ca_city#17080, ca_zip#17083], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38842]
[info]                               :     :     +- ReusedExchange [ib_income_band_sk#1711], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38860]
[info]                               :     +- ReusedExchange [ib_income_band_sk#17087], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38860]
[info]                               +- ReusedExchange [i_item_sk#496, i_product_name#517], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38878]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1571 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q64                                                1572           1572           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q65
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[s_store_name#675 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST], output=[s_store_name#675,i_item_desc#500,revenue#17353,i_current_price#501,i_wholesale_cost#502,i_brand#504])
[info] +- *(11) Project [s_store_name#675, i_item_desc#500, revenue#17353, i_current_price#501, i_wholesale_cost#502, i_brand#504]
[info]    +- *(11) SortMergeJoin [ss_store_sk#17363], [ss_store_sk#1170], Inner, (cast(revenue#17353 as decimal(23,7)) <= CheckOverflow((0.100000 * promote_precision(ave#17352)), DecimalType(23,7), true))
[info]       :- *(6) Sort [ss_store_sk#17363 ASC NULLS FIRST], false, 0
[info]       :  +- Exchange hashpartitioning(ss_store_sk#17363, 4), true, [id=#40089]
[info]       :     +- *(5) Project [s_store_name#675, ss_store_sk#17363, revenue#17353, i_item_desc#500, i_current_price#501, i_wholesale_cost#502, i_brand#504]
[info]       :        +- *(5) BroadcastHashJoin [ss_item_sk#17358], [i_item_sk#496], Inner, BuildRight
[info]       :           :- *(5) Project [s_store_name#675, ss_store_sk#17363, ss_item_sk#17358, revenue#17353]
[info]       :           :  +- *(5) BroadcastHashJoin [s_store_sk#670], [ss_store_sk#17363], Inner, BuildLeft
[info]       :           :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40056]
[info]       :           :     :  +- *(1) Project [s_store_sk#670, s_store_name#675]
[info]       :           :     :     +- *(1) Filter isnotnull(s_store_sk#670)
[info]       :           :     :        +- *(1) ColumnarToRow
[info]       :           :     :           +- BatchScan[s_store_sk#670, s_store_name#675] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string>
[info]       :           :     +- *(5) Filter isnotnull(revenue#17353)
[info]       :           :        +- *(5) HashAggregate(keys=[ss_store_sk#17363, ss_item_sk#17358], functions=[sum(UnscaledValue(ss_sales_price#17369))])
[info]       :           :           +- Exchange hashpartitioning(ss_store_sk#17363, ss_item_sk#17358, 4), true, [id=#40073]
[info]       :           :              +- *(3) HashAggregate(keys=[ss_store_sk#17363, ss_item_sk#17358], functions=[partial_sum(UnscaledValue(ss_sales_price#17369))])
[info]       :           :                 +- *(3) Project [ss_item_sk#17358, ss_store_sk#17363, ss_sales_price#17369]
[info]       :           :                    +- *(3) BroadcastHashJoin [ss_sold_date_sk#17379], [d_date_sk#331], Inner, BuildRight
[info]       :           :                       :- *(3) Project [ss_item_sk#17358, ss_store_sk#17363, ss_sales_price#17369, ss_sold_date_sk#17379]
[info]       :           :                       :  +- *(3) Filter ((isnotnull(ss_sold_date_sk#17379) AND isnotnull(ss_store_sk#17363)) AND isnotnull(ss_item_sk#17358))
[info]       :           :                       :     +- *(3) ColumnarToRow
[info]       :           :                       :        +- BatchScan[ss_item_sk#17358, ss_store_sk#17363, ss_sales_price#17369, ss_sold_date_sk#17379] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]       :           :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40067]
[info]       :           :                          +- *(2) Project [d_date_sk#331]
[info]       :           :                             +- *(2) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1176)) AND (d_month_seq#334 <= 1187)) AND isnotnull(d_date_sk#331))
[info]       :           :                                +- *(2) ColumnarToRow
[info]       :           :                                   +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]       :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40084]
[info]       :              +- *(4) Project [i_item_sk#496, i_item_desc#500, i_current_price#501, i_wholesale_cost#502, i_brand#504]
[info]       :                 +- *(4) Filter isnotnull(i_item_sk#496)
[info]       :                    +- *(4) ColumnarToRow
[info]       :                       +- BatchScan[i_item_sk#496, i_item_desc#500, i_current_price#501, i_wholesale_cost#502, i_brand#504] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_desc:string,i_current_price:decimal(7,2),i_wholesale_cost:decimal(7,2...
[info]       +- *(10) Sort [ss_store_sk#1170 ASC NULLS FIRST], false, 0
[info]          +- *(10) HashAggregate(keys=[ss_store_sk#1170], functions=[avg(revenue#17351)])
[info]             +- Exchange hashpartitioning(ss_store_sk#1170, 4), true, [id=#40183]
[info]                +- *(9) HashAggregate(keys=[ss_store_sk#1170], functions=[partial_avg(revenue#17351)])
[info]                   +- *(9) HashAggregate(keys=[ss_store_sk#1170, ss_item_sk#1165], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]                      +- Exchange hashpartitioning(ss_store_sk#1170, ss_item_sk#1165, 4), true, [id=#40146]
[info]                         +- *(8) HashAggregate(keys=[ss_store_sk#1170, ss_item_sk#1165], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]                            +- *(8) Project [ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176]
[info]                               +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                                  :- *(8) Project [ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                                  :  +- *(8) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]                                  :     +- *(8) ColumnarToRow
[info]                                  :        +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]                                  +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40067]
[info] 
[info] 
[info]   Stopped after 1 iterations, 215 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q65                                                 216            216           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q66
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#1623 ASC NULLS FIRST], output=[w_warehouse_name#1623,w_warehouse_sq_ft#1624,w_city#1629,w_county#1630,w_state#1631,w_country#1633,ship_carriers#17666,year#17667,jan_sales#17718,feb_sales#17719,mar_sales#17720,apr_sales#17721,may_sales#17722,jun_sales#17723,jul_sales#17724,aug_sales#17725,sep_sales#17726,oct_sales#17727,nov_sales#17728,dec_sales#17729,jan_sales_per_sq_foot#17730,feb_sales_per_sq_foot#17731,mar_sales_per_sq_foot#17732,apr_sales_per_sq_foot#17733,... 20 more fields])
[info] +- *(14) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, ship_carriers#17666, year#17667], functions=[sum(jan_sales#17668), sum(feb_sales#17669), sum(mar_sales#17670), sum(apr_sales#17671), sum(may_sales#17672), sum(jun_sales#17673), sum(jul_sales#17674), sum(aug_sales#17675), sum(sep_sales#17676), sum(oct_sales#17677), sum(nov_sales#17678), sum(dec_sales#17679), sum(CheckOverflow((promote_precision(jan_sales#17668) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(feb_sales#17669) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(mar_sales#17670) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(apr_sales#17671) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(may_sales#17672) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jun_sales#17673) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jul_sales#17674) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(aug_sales#17675) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(sep_sales#17676) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(oct_sales#17677) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(nov_sales#17678) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(dec_sales#17679) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields])
[info]    +- Exchange hashpartitioning(w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, ship_carriers#17666, year#17667, 4), true, [id=#40726]
[info]       +- *(13) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, ship_carriers#17666, year#17667], functions=[partial_sum(jan_sales#17668), partial_sum(feb_sales#17669), partial_sum(mar_sales#17670), partial_sum(apr_sales#17671), partial_sum(may_sales#17672), partial_sum(jun_sales#17673), partial_sum(jul_sales#17674), partial_sum(aug_sales#17675), partial_sum(sep_sales#17676), partial_sum(oct_sales#17677), partial_sum(nov_sales#17678), partial_sum(dec_sales#17679), partial_sum(CheckOverflow((promote_precision(jan_sales#17668) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(feb_sales#17669) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(mar_sales#17670) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(apr_sales#17671) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(may_sales#17672) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jun_sales#17673) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jul_sales#17674) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(aug_sales#17675) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(sep_sales#17676) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(oct_sales#17677) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(nov_sales#17678) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(dec_sales#17679) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields])
[info]          +- Union
[info]             :- *(6) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337], functions=[sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)])
[info]             :  +- Exchange hashpartitioning(w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, 4), true, [id=#40515]
[info]             :     +- *(5) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337], functions=[partial_sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)])
[info]             :        +- *(5) Project [ws_quantity#1038, ws_ext_sales_price#1043, ws_net_paid#1049, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, d_moy#339]
[info]             :           +- *(5) BroadcastHashJoin [ws_ship_mode_sk#1034], [sm_ship_mode_sk#1682], Inner, BuildRight
[info]             :              :- *(5) Project [ws_ship_mode_sk#1034, ws_quantity#1038, ws_ext_sales_price#1043, ws_net_paid#1049, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, d_moy#339]
[info]             :              :  +- *(5) BroadcastHashJoin [ws_sold_time_sk#1021], [t_time_sk#1728], Inner, BuildRight
[info]             :              :     :- *(5) Project [ws_sold_time_sk#1021, ws_ship_mode_sk#1034, ws_quantity#1038, ws_ext_sales_price#1043, ws_net_paid#1049, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, d_moy#339]
[info]             :              :     :  +- *(5) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :              :     :     :- *(5) Project [ws_sold_time_sk#1021, ws_ship_mode_sk#1034, ws_quantity#1038, ws_ext_sales_price#1043, ws_net_paid#1049, ws_sold_date_sk#1054, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633]
[info]             :              :     :     :  +- *(5) BroadcastHashJoin [ws_warehouse_sk#1035], [w_warehouse_sk#1621], Inner, BuildRight
[info]             :              :     :     :     :- *(5) Project [ws_sold_time_sk#1021, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_quantity#1038, ws_ext_sales_price#1043, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]             :              :     :     :     :  +- *(5) Filter (((isnotnull(ws_warehouse_sk#1035) AND isnotnull(ws_sold_date_sk#1054)) AND isnotnull(ws_sold_time_sk#1021)) AND isnotnull(ws_ship_mode_sk#1034))
[info]             :              :     :     :     :     +- *(5) ColumnarToRow
[info]             :              :     :     :     :        +- BatchScan[ws_sold_time_sk#1021, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_quantity#1038, ws_ext_sales_price#1043, ws_net_paid#1049, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantity:int,ws_ext_sales_p...
[info]             :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40482]
[info]             :              :     :     :        +- *(1) Project [w_warehouse_sk#1621, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633]
[info]             :              :     :     :           +- *(1) Filter isnotnull(w_warehouse_sk#1621)
[info]             :              :     :     :              +- *(1) ColumnarToRow
[info]             :              :     :     :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
[info]             :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40491]
[info]             :              :     :        +- *(2) Project [d_date_sk#331, d_year#337, d_moy#339]
[info]             :              :     :           +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]             :              :     :              +- *(2) ColumnarToRow
[info]             :              :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40500]
[info]             :              :        +- *(3) Project [t_time_sk#1728]
[info]             :              :           +- *(3) Filter (((isnotnull(t_time#1730) AND (t_time#1730 >= 30838)) AND (t_time#1730 <= 59638)) AND isnotnull(t_time_sk#1728))
[info]             :              :              +- *(3) ColumnarToRow
[info]             :              :                 +- BatchScan[t_time_sk#1728, t_time#1730] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_time:int>
[info]             :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40509]
[info]             :                 +- *(4) Project [sm_ship_mode_sk#1682]
[info]             :                    +- *(4) Filter (sm_carrier#1686 IN (DHL,BARIAN) AND isnotnull(sm_ship_mode_sk#1682))
[info]             :                       +- *(4) ColumnarToRow
[info]             :                          +- BatchScan[sm_ship_mode_sk#1682, sm_carrier#1686] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/ship_mode], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
[info]             +- *(12) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337], functions=[sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)])
[info]                +- Exchange hashpartitioning(w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, 4), true, [id=#40656]
[info]                   +- *(11) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337], functions=[partial_sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)])
[info]                      +- *(11) Project [cs_quantity#895, cs_sales_price#898, cs_net_paid_inc_tax#907, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, d_moy#339]
[info]                         +- *(11) BroadcastHashJoin [cs_ship_mode_sk#890], [sm_ship_mode_sk#1682], Inner, BuildRight
[info]                            :- *(11) Project [cs_ship_mode_sk#890, cs_quantity#895, cs_sales_price#898, cs_net_paid_inc_tax#907, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, d_moy#339]
[info]                            :  +- *(11) BroadcastHashJoin [cs_sold_time_sk#878], [t_time_sk#1728], Inner, BuildRight
[info]                            :     :- *(11) Project [cs_sold_time_sk#878, cs_ship_mode_sk#890, cs_quantity#895, cs_sales_price#898, cs_net_paid_inc_tax#907, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, d_moy#339]
[info]                            :     :  +- *(11) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                            :     :     :- *(11) Project [cs_sold_time_sk#878, cs_ship_mode_sk#890, cs_quantity#895, cs_sales_price#898, cs_net_paid_inc_tax#907, cs_sold_date_sk#911, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633]
[info]                            :     :     :  +- *(11) BroadcastHashJoin [cs_warehouse_sk#891], [w_warehouse_sk#1621], Inner, BuildRight
[info]                            :     :     :     :- *(11) Project [cs_sold_time_sk#878, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_quantity#895, cs_sales_price#898, cs_net_paid_inc_tax#907, cs_sold_date_sk#911]
[info]                            :     :     :     :  +- *(11) Filter (((isnotnull(cs_warehouse_sk#891) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_sold_time_sk#878)) AND isnotnull(cs_ship_mode_sk#890))
[info]                            :     :     :     :     +- *(11) ColumnarToRow
[info]                            :     :     :     :        +- BatchScan[cs_sold_time_sk#878, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_quantity#895, cs_sales_price#898, cs_net_paid_inc_tax#907, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantity:int,cs_sales_price...
[info]                            :     :     :     +- ReusedExchange [w_warehouse_sk#1621, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40482]
[info]                            :     :     +- ReusedExchange [d_date_sk#331, d_year#337, d_moy#339], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40491]
[info]                            :     +- ReusedExchange [t_time_sk#1728], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40500]
[info]                            +- ReusedExchange [sm_ship_mode_sk#1682], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40509]
[info] 
[info] 
[info]   Stopped after 1 iterations, 572 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q66                                                 572            572           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q67
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_category#18230 ASC NULLS FIRST,i_class#18231 ASC NULLS FIRST,i_brand#18232 ASC NULLS FIRST,i_product_name#18233 ASC NULLS FIRST,d_year#18234 ASC NULLS FIRST,d_qoy#18235 ASC NULLS FIRST,d_moy#18236 ASC NULLS FIRST,s_store_id#18237 ASC NULLS FIRST,sumsales#18216 ASC NULLS FIRST,rk#18217 ASC NULLS FIRST], output=[i_category#18230,i_class#18231,i_brand#18232,i_product_name#18233,d_year#18234,d_qoy#18235,d_moy#18236,s_store_id#18237,sumsales#18216,rk#18217])
[info] +- *(7) Filter (isnotnull(rk#18217) AND (rk#18217 <= 100))
[info]    +- Window [rank(sumsales#18216) windowspecdefinition(i_category#18230, sumsales#18216 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#18217], [i_category#18230], [sumsales#18216 DESC NULLS LAST]
[info]       +- *(6) Sort [i_category#18230 ASC NULLS FIRST, sumsales#18216 DESC NULLS LAST], false, 0
[info]          +- Exchange hashpartitioning(i_category#18230, 4), true, [id=#40898]
[info]             +- *(5) HashAggregate(keys=[i_category#18230, i_class#18231, i_brand#18232, i_product_name#18233, d_year#18234, d_qoy#18235, d_moy#18236, s_store_id#18237, spark_grouping_id#18221], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                +- Exchange hashpartitioning(i_category#18230, i_class#18231, i_brand#18232, i_product_name#18233, d_year#18234, d_qoy#18235, d_moy#18236, s_store_id#18237, spark_grouping_id#18221, 4), true, [id=#40894]
[info]                   +- *(4) HashAggregate(keys=[i_category#18230, i_class#18231, i_brand#18232, i_product_name#18233, d_year#18234, d_qoy#18235, d_moy#18236, s_store_id#18237, spark_grouping_id#18221], functions=[partial_sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                      +- *(4) Expand [List(ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 0), List(ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, null, 1), List(ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, null, null, 3), List(ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, null, null, null, 7), List(ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, i_brand#504, i_product_name#517, null, null, null, null, 15), List(ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, i_brand#504, null, null, null, null, null, 31), List(ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, null, null, null, null, null, null, 63), List(ss_quantity#1173, ss_sales_price#1176, i_category#508, null, null, null, null, null, null, null, 127), List(ss_quantity#1173, ss_sales_price#1176, null, null, null, null, null, null, null, null, 255)], [ss_quantity#1173, ss_sales_price#1176, i_category#18230, i_class#18231, i_brand#18232, i_product_name#18233, d_year#18234, d_qoy#18235, d_moy#18236, s_store_id#18237, spark_grouping_id#18221]
[info]                         +- *(4) Project [ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671]
[info]                            +- *(4) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                               :- *(4) Project [ss_item_sk#1165, ss_quantity#1173, ss_sales_price#1176, d_year#337, d_moy#339, d_qoy#341, s_store_id#671]
[info]                               :  +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, d_year#337, d_moy#339, d_qoy#341]
[info]                               :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                               :     :     :  +- *(4) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165))
[info]                               :     :     :     +- *(4) ColumnarToRow
[info]                               :     :     :        +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
[info]                               :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40869]
[info]                               :     :        +- *(1) Project [d_date_sk#331, d_year#337, d_moy#339, d_qoy#341]
[info]                               :     :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                               :     :              +- *(1) ColumnarToRow
[info]                               :     :                 +- BatchScan[d_date_sk#331, d_month_seq#334, d_year#337, d_moy#339, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40878]
[info]                               :        +- *(2) Project [s_store_sk#670, s_store_id#671]
[info]                               :           +- *(2) Filter isnotnull(s_store_sk#670)
[info]                               :              +- *(2) ColumnarToRow
[info]                               :                 +- BatchScan[s_store_sk#670, s_store_id#671] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string>
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40887]
[info]                                  +- *(3) Project [i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]                                     +- *(3) Filter isnotnull(i_item_sk#496)
[info]                                        +- *(3) ColumnarToRow
[info]                                           +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 197 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q67                                                 197            197           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q68
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_last_name#165 ASC NULLS FIRST,ss_ticket_number#1172L ASC NULLS FIRST], output=[c_last_name#165,c_first_name#164,ca_city#239,bought_city#18292,ss_ticket_number#1172L,extended_price#18293,extended_tax#18295,list_price#18294])
[info] +- *(8) Project [c_last_name#165, c_first_name#164, ca_city#239, bought_city#18292, ss_ticket_number#1172L, extended_price#18293, extended_tax#18295, list_price#18294]
[info]    +- *(8) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight, NOT (ca_city#239 = bought_city#18292)
[info]       :- *(8) Project [ss_ticket_number#1172L, bought_city#18292, extended_price#18293, list_price#18294, extended_tax#18295, c_current_addr_sk#160, c_first_name#164, c_last_name#165]
[info]       :  +- *(8) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]       :     :- *(8) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, ca_city#239], functions=[sum(UnscaledValue(ss_ext_sales_price#1178)), sum(UnscaledValue(ss_ext_list_price#1180)), sum(UnscaledValue(ss_ext_tax#1181))])
[info]       :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, ca_city#239, 4), true, [id=#41133]
[info]       :     :     +- *(5) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, ca_city#239], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178)), partial_sum(UnscaledValue(ss_ext_list_price#1180)), partial_sum(UnscaledValue(ss_ext_tax#1181))])
[info]       :     :        +- *(5) Project [ss_customer_sk#1166, ss_addr_sk#1169, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_ext_list_price#1180, ss_ext_tax#1181, ca_city#239]
[info]       :     :           +- *(5) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]       :     :              :- *(5) Project [ss_customer_sk#1166, ss_addr_sk#1169, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_ext_list_price#1180, ss_ext_tax#1181]
[info]       :     :              :  +- *(5) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]       :     :              :     :- *(5) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_ext_list_price#1180, ss_ext_tax#1181]
[info]       :     :              :     :  +- *(5) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]       :     :              :     :     :- *(5) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_ext_list_price#1180, ss_ext_tax#1181]
[info]       :     :              :     :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :              :     :     :     :- *(5) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_ext_list_price#1180, ss_ext_tax#1181, ss_sold_date_sk#1186]
[info]       :     :              :     :     :     :  +- *(5) Filter ((((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_addr_sk#1169)) AND isnotnull(ss_customer_sk#1166))
[info]       :     :              :     :     :     :     +- *(5) ColumnarToRow
[info]       :     :              :     :     :     :        +- BatchScan[ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_ext_list_price#1180, ss_ext_tax#1181, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_ticket_number:bigint,...
[info]       :     :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41100]
[info]       :     :              :     :     :        +- *(1) Project [d_date_sk#331]
[info]       :     :              :     :     :           +- *(1) Filter ((((isnotnull(d_dom#340) AND (d_dom#340 >= 1)) AND (d_dom#340 <= 2)) AND d_year#337 IN (1999,2000,2001)) AND isnotnull(d_date_sk#331))
[info]       :     :              :     :     :              +- *(1) ColumnarToRow
[info]       :     :              :     :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_dom:int>
[info]       :     :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41109]
[info]       :     :              :     :        +- *(2) Project [s_store_sk#670]
[info]       :     :              :     :           +- *(2) Filter (s_city#692 IN (Midway,Fairview) AND isnotnull(s_store_sk#670))
[info]       :     :              :     :              +- *(2) ColumnarToRow
[info]       :     :              :     :                 +- BatchScan[s_store_sk#670, s_city#692] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_city:string>
[info]       :     :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41118]
[info]       :     :              :        +- *(3) Project [hd_demo_sk#448]
[info]       :     :              :           +- *(3) Filter (((hd_dep_count#451 = 4) OR (hd_vehicle_count#452 = 3)) AND isnotnull(hd_demo_sk#448))
[info]       :     :              :              +- *(3) ColumnarToRow
[info]       :     :              :                 +- BatchScan[hd_demo_sk#448, hd_dep_count#451, hd_vehicle_count#452] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
[info]       :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41127]
[info]       :     :                 +- *(4) Project [ca_address_sk#233, ca_city#239]
[info]       :     :                    +- *(4) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_city#239))
[info]       :     :                       +- *(4) ColumnarToRow
[info]       :     :                          +- BatchScan[ca_address_sk#233, ca_city#239] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_city:string>
[info]       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41141]
[info]       :        +- *(6) Project [c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165]
[info]       :           +- *(6) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]       :              +- *(6) ColumnarToRow
[info]       :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string>
[info]       +- ReusedExchange [ca_address_sk#233, ca_city#239], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41127]
[info] 
[info] 
[info]   Stopped after 1 iterations, 209 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q68                                                 209            209           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q69
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[cd_gender#291 ASC NULLS FIRST,cd_marital_status#292 ASC NULLS FIRST,cd_education_status#293 ASC NULLS FIRST,cd_purchase_estimate#294 ASC NULLS FIRST,cd_credit_rating#295 ASC NULLS FIRST], output=[cd_gender#291,cd_marital_status#292,cd_education_status#293,cnt1#18359L,cd_purchase_estimate#294,cnt2#18360L,cd_credit_rating#295,cnt3#18361L])
[info] +- *(15) HashAggregate(keys=[cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295], functions=[count(1)])
[info]    +- Exchange hashpartitioning(cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, 4), true, [id=#41558]
[info]       +- *(14) HashAggregate(keys=[cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295], functions=[partial_count(1)])
[info]          +- *(14) Project [cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295]
[info]             +- *(14) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]                :- *(14) Project [c_current_cdemo_sk#158]
[info]                :  +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                :     :- *(14) Project [c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :  +- SortMergeJoin [c_customer_sk#156], [cs_ship_customer_sk#884], LeftAnti
[info]                :     :     :- SortMergeJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], LeftAnti
[info]                :     :     :  :- SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], LeftSemi
[info]                :     :     :  :  :- *(2) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                :     :     :  :  :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#41418]
[info]                :     :     :  :  :     +- *(1) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :     :  :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_current_cdemo_sk#158))
[info]                :     :     :  :  :           +- *(1) ColumnarToRow
[info]                :     :     :  :  :              +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
[info]                :     :     :  :  +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                :     :     :  :     +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#41436]
[info]                :     :     :  :        +- *(4) Project [ss_customer_sk#1166]
[info]                :     :     :  :           +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :  :              :- *(4) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                :     :     :  :              :  +- *(4) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :     :     :  :              :     +- *(4) ColumnarToRow
[info]                :     :     :  :              :        +- BatchScan[ss_sold_time_sk#1164, ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_sales_price#1176, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_ext_tax#1181, ss_coupon_amt#1182, ss_net_paid#1183, ss_net_paid_inc_tax#1184, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_a...
[info]                :     :     :  :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41431]
[info]                :     :     :  :                 +- *(3) Project [d_date_sk#331]
[info]                :     :     :  :                    +- *(3) Filter (((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2001)) AND (d_moy#339 >= 4)) AND (d_moy#339 <= 6)) AND isnotnull(d_date_sk#331))
[info]                :     :     :  :                       +- *(3) ColumnarToRow
[info]                :     :     :  :                          +- BatchScan[d_date_sk#331, d_date_id#332, d_date#333, d_month_seq#334, d_week_seq#335, d_quarter_seq#336, d_year#337, d_dow#338, d_moy#339, d_dom#340, d_qoy#341, d_fy_year#342, d_fy_quarter_seq#343, d_fy_week_seq#344, d_day_name#345, d_quarter_name#346, d_holiday#347, d_weekend#348, d_following_holiday#349, d_first_dom#350, d_last_dom#351, d_same_day_ly#352, d_same_day_lq#353, d_current_day#354, ... 4 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:in...
[info]                :     :     :  +- *(8) Sort [ws_bill_customer_sk#1024 ASC NULLS FIRST], false, 0
[info]                :     :     :     +- Exchange hashpartitioning(ws_bill_customer_sk#1024, 4), true, [id=#41527]
[info]                :     :     :        +- *(7) Project [ws_bill_customer_sk#1024]
[info]                :     :     :           +- *(7) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :              :- *(7) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                :     :     :              :  +- *(7) Filter isnotnull(ws_sold_date_sk#1054)
[info]                :     :     :              :     +- *(7) ColumnarToRow
[info]                :     :     :              :        +- BatchScan[ws_sold_time_sk#1021, ws_ship_date_sk#1022, ws_item_sk#1023, ws_bill_customer_sk#1024, ws_bill_cdemo_sk#1025, ws_bill_hdemo_sk#1026, ws_bill_addr_sk#1027, ws_ship_customer_sk#1028, ws_ship_cdemo_sk#1029, ws_ship_hdemo_sk#1030, ws_ship_addr_sk#1031, ws_web_page_sk#1032, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_promo_sk#1036, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_list_price#1040, ws_sales_price#1041, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cde...
[info]                :     :     :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41431]
[info]                :     :     +- *(11) Sort [cs_ship_customer_sk#884 ASC NULLS FIRST], false, 0
[info]                :     :        +- Exchange hashpartitioning(cs_ship_customer_sk#884, 4), true, [id=#41545]
[info]                :     :           +- *(10) Project [cs_ship_customer_sk#884]
[info]                :     :              +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :                 :- *(10) Project [cs_ship_customer_sk#884, cs_sold_date_sk#911]
[info]                :     :                 :  +- *(10) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :                 :     +- *(10) ColumnarToRow
[info]                :     :                 :        +- BatchScan[cs_sold_time_sk#878, cs_ship_date_sk#879, cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_bill_addr_sk#883, cs_ship_customer_sk#884, cs_ship_cdemo_sk#885, cs_ship_hdemo_sk#886, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_catalog_page_sk#889, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_list_price#897, cs_sales_price#898, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bi...
[info]                :     :                 +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41431]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41486]
[info]                :        +- *(12) Project [ca_address_sk#233]
[info]                :           +- *(12) Filter (ca_state#241 IN (KY,GA,NM) AND isnotnull(ca_address_sk#233))
[info]                :              +- *(12) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41495]
[info]                   +- *(13) Project [cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295]
[info]                      +- *(13) Filter isnotnull(cd_demo_sk#290)
[info]                         +- *(13) ColumnarToRow
[info]                            +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_pur...
[info] 
[info] 
[info]   Stopped after 1 iterations, 260 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q69                                                 261            261           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q70
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#18447 DESC NULLS LAST,CASE WHEN (cast(lochierarchy#18447 as int) = 0) THEN s_state#18466 END ASC NULLS FIRST,rank_within_parent#18448 ASC NULLS FIRST], output=[total_sum#18446,s_state#18466,s_county#18467,lochierarchy#18447,rank_within_parent#18448])
[info] +- *(13) Project [total_sum#18446, s_state#18466, s_county#18467, lochierarchy#18447, rank_within_parent#18448]
[info]    +- Window [rank(_w3#18482) windowspecdefinition(_w1#18480, _w2#18481, _w3#18482 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#18448], [_w1#18480, _w2#18481], [_w3#18482 DESC NULLS LAST]
[info]       +- *(12) Sort [_w1#18480 ASC NULLS FIRST, _w2#18481 ASC NULLS FIRST, _w3#18482 DESC NULLS LAST], false, 0
[info]          +- Exchange hashpartitioning(_w1#18480, _w2#18481, 4), true, [id=#41973]
[info]             +- *(11) HashAggregate(keys=[s_state#18466, s_county#18467, spark_grouping_id#18463], functions=[sum(UnscaledValue(ss_net_profit#1185))])
[info]                +- Exchange hashpartitioning(s_state#18466, s_county#18467, spark_grouping_id#18463, 4), true, [id=#41969]
[info]                   +- *(10) HashAggregate(keys=[s_state#18466, s_county#18467, spark_grouping_id#18463], functions=[partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]                      +- *(10) Expand [List(ss_net_profit#1185, s_state#694, s_county#693, 0), List(ss_net_profit#1185, s_state#694, null, 1), List(ss_net_profit#1185, null, null, 3)], [ss_net_profit#1185, s_state#18466, s_county#18467, spark_grouping_id#18463]
[info]                         +- *(10) Project [ss_net_profit#1185, s_state#694, s_county#693]
[info]                            +- *(10) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :- *(10) Project [ss_store_sk#1170, ss_net_profit#1185]
[info]                               :  +- *(10) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :- *(10) Project [ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                               :     :  +- *(10) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]                               :     :     +- *(10) ColumnarToRow
[info]                               :     :        +- BatchScan[ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_net_profit:decimal(7,2)>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41788]
[info]                               :        +- *(1) Project [d_date_sk#331]
[info]                               :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                               :              +- *(1) ColumnarToRow
[info]                               :                 +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41897]
[info]                                  +- SortMergeJoin [s_state#694], [s_state#18443], LeftSemi
[info]                                     :- *(3) Sort [s_state#694 ASC NULLS FIRST], false, 0
[info]                                     :  +- Exchange hashpartitioning(s_state#694, 4), true, [id=#41797]
[info]                                     :     +- *(2) Project [s_store_sk#670, s_county#693, s_state#694]
[info]                                     :        +- *(2) Filter isnotnull(s_store_sk#670)
[info]                                     :           +- *(2) ColumnarToRow
[info]                                     :              +- BatchScan[s_store_sk#670, s_county#693, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_county:string,s_state:string>
[info]                                     +- *(9) Sort [s_state#18443 ASC NULLS FIRST], false, 0
[info]                                        +- Exchange hashpartitioning(s_state#18443, 4), true, [id=#41892]
[info]                                           +- *(8) Project [s_state#18443]
[info]                                              +- *(8) Filter (isnotnull(ranking#18444) AND (ranking#18444 <= 5))
[info]                                                 +- Window [rank(_w1#18454) windowspecdefinition(s_state#694, _w1#18454 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS ranking#18444], [s_state#694], [_w1#18454 DESC NULLS LAST]
[info]                                                    +- *(7) Sort [s_state#694 ASC NULLS FIRST, _w1#18454 DESC NULLS LAST], false, 0
[info]                                                       +- *(7) HashAggregate(keys=[s_state#694], functions=[sum(UnscaledValue(ss_net_profit#1185))])
[info]                                                          +- Exchange hashpartitioning(s_state#694, 4), true, [id=#41882]
[info]                                                             +- *(6) HashAggregate(keys=[s_state#694], functions=[partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]                                                                +- *(6) Project [ss_net_profit#1185, s_state#694]
[info]                                                                   +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                                                                      :- *(6) Project [ss_net_profit#1185, ss_sold_date_sk#1186, s_state#694]
[info]                                                                      :  +- *(6) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                                                                      :     :- *(6) Project [ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                                                                      :     :  +- *(6) Filter (isnotnull(ss_store_sk#1170) AND isnotnull(ss_sold_date_sk#1186))
[info]                                                                      :     :     +- *(6) ColumnarToRow
[info]                                                                      :     :        +- BatchScan[ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_net_profit:decimal(7,2)>
[info]                                                                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41810]
[info]                                                                      :        +- *(4) Project [s_store_sk#670, s_state#694]
[info]                                                                      :           +- *(4) Filter isnotnull(s_store_sk#670)
[info]                                                                      :              +- *(4) ColumnarToRow
[info]                                                                      :                 +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]                                                                      +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41788]
[info] 
[info] 
[info]   Stopped after 1 iterations, 248 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q70                                                 248            248           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q71
[info] == Physical Plan ==
[info] *(11) Sort [ext_price#18569 DESC NULLS LAST, brand_id#18567 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(ext_price#18569 DESC NULLS LAST, brand_id#18567 ASC NULLS FIRST, 4), true, [id=#42288]
[info]    +- *(10) HashAggregate(keys=[i_brand#504, i_brand_id#503, t_hour#1731, t_minute#1732], functions=[sum(UnscaledValue(ext_price#18555))])
[info]       +- Exchange hashpartitioning(i_brand#504, i_brand_id#503, t_hour#1731, t_minute#1732, 4), true, [id=#42284]
[info]          +- *(9) HashAggregate(keys=[i_brand#504, i_brand_id#503, t_hour#1731, t_minute#1732], functions=[partial_sum(UnscaledValue(ext_price#18555))])
[info]             +- *(9) Project [i_brand_id#503, i_brand#504, ext_price#18555, t_hour#1731, t_minute#1732]
[info]                +- *(9) BroadcastHashJoin [time_sk#18558], [t_time_sk#1728], Inner, BuildRight
[info]                   :- *(9) Project [i_brand_id#503, i_brand#504, ext_price#18555, time_sk#18558]
[info]                   :  +- *(9) BroadcastHashJoin [i_item_sk#496], [sold_item_sk#18557], Inner, BuildLeft
[info]                   :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42175]
[info]                   :     :  +- *(1) Project [i_item_sk#496, i_brand_id#503, i_brand#504]
[info]                   :     :     +- *(1) Filter ((isnotnull(i_manager_id#516) AND (i_manager_id#516 = 1)) AND isnotnull(i_item_sk#496))
[info]                   :     :        +- *(1) ColumnarToRow
[info]                   :     :           +- BatchScan[i_item_sk#496, i_brand_id#503, i_brand#504, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manager_id:int>
[info]                   :     +- Union
[info]                   :        :- *(3) Project [ws_ext_sales_price#1043 AS ext_price#18555, ws_item_sk#1023 AS sold_item_sk#18557, ws_sold_time_sk#1021 AS time_sk#18558]
[info]                   :        :  +- *(3) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                   :        :     :- *(3) Project [ws_sold_time_sk#1021, ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                   :        :     :  +- *(3) Filter ((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_item_sk#1023)) AND isnotnull(ws_sold_time_sk#1021))
[info]                   :        :     :     +- *(3) ColumnarToRow
[info]                   :        :     :        +- BatchScan[ws_sold_time_sk#1021, ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                   :        :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42186]
[info]                   :        :        +- *(2) Project [d_date_sk#331]
[info]                   :        :           +- *(2) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 11)) AND (d_year#337 = 1999)) AND isnotnull(d_date_sk#331))
[info]                   :        :              +- *(2) ColumnarToRow
[info]                   :        :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                   :        :- *(5) Project [cs_ext_sales_price#900 AS ext_price#18559, cs_item_sk#892 AS sold_item_sk#18561, cs_sold_time_sk#878 AS time_sk#18562]
[info]                   :        :  +- *(5) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                   :        :     :- *(5) Project [cs_sold_time_sk#878, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]                   :        :     :  +- *(5) Filter ((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_sold_time_sk#878))
[info]                   :        :     :     +- *(5) ColumnarToRow
[info]                   :        :     :        +- BatchScan[cs_sold_time_sk#878, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_sold_time_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]                   :        :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42186]
[info]                   :        +- *(7) Project [ss_ext_sales_price#1178 AS ext_price#18563, ss_item_sk#1165 AS sold_item_sk#18565, ss_sold_time_sk#1164 AS time_sk#18566]
[info]                   :           +- *(7) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                   :              :- *(7) Project [ss_sold_time_sk#1164, ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                   :              :  +- *(7) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_sold_time_sk#1164))
[info]                   :              :     +- *(7) ColumnarToRow
[info]                   :              :        +- BatchScan[ss_sold_time_sk#1164, ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                   :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42186]
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42228]
[info]                      +- *(8) Project [t_time_sk#1728, t_hour#1731, t_minute#1732]
[info]                         +- *(8) Filter (((t_meal_time#1737 = breakfast) OR (t_meal_time#1737 = dinner)) AND isnotnull(t_time_sk#1728))
[info]                            +- *(8) ColumnarToRow
[info]                               +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732, t_meal_time#1737] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int,t_meal_time:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 239 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q71                                                 239            239           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q72
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[total_cnt#18686L DESC NULLS LAST,i_item_desc#500 ASC NULLS FIRST,w_warehouse_name#1623 ASC NULLS FIRST,d_week_seq#335 ASC NULLS FIRST], output=[i_item_desc#500,w_warehouse_name#1623,d_week_seq#335,no_promo#18684L,promo#18685L,total_cnt#18686L])
[info] +- *(18) HashAggregate(keys=[i_item_desc#500, w_warehouse_name#1623, d_week_seq#335], functions=[count(1)])
[info]    +- Exchange hashpartitioning(i_item_desc#500, w_warehouse_name#1623, d_week_seq#335, 4), true, [id=#42707]
[info]       +- *(17) HashAggregate(keys=[i_item_desc#500, w_warehouse_name#1623, d_week_seq#335], functions=[partial_count(1)])
[info]          +- *(17) Project [w_warehouse_name#1623, i_item_desc#500, d_week_seq#335]
[info]             +- SortMergeJoin [cs_item_sk#892, cs_order_number#894L], [cr_item_sk#42, cr_order_number#56L], LeftOuter
[info]                :- *(14) Sort [cs_item_sk#892 ASC NULLS FIRST, cs_order_number#894L ASC NULLS FIRST], false, 0
[info]                :  +- Exchange hashpartitioning(cs_item_sk#892, cs_order_number#894L, 4), true, [id=#42689]
[info]                :     +- *(13) Project [cs_item_sk#892, cs_order_number#894L, w_warehouse_name#1623, i_item_desc#500, d_week_seq#335]
[info]                :        +- *(13) BroadcastHashJoin [cs_promo_sk#893], [p_promo_sk#589], LeftOuter, BuildRight
[info]                :           :- *(13) Project [cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, w_warehouse_name#1623, i_item_desc#500, d_week_seq#335]
[info]                :           :  +- *(13) BroadcastHashJoin [cs_ship_date_sk#879], [d_date_sk#18716], Inner, BuildRight, (d_date#18718 > cast(cast(d_date#333 as timestamp) + CalendarInterval(months= 0, days = 5, microsecond = 0) as date))
[info]                :           :     :- *(13) Project [cs_ship_date_sk#879, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, w_warehouse_name#1623, i_item_desc#500, d_date#333, d_week_seq#335]
[info]                :           :     :  +- *(13) BroadcastHashJoin [d_week_seq#335, inv_date_sk#476], [d_week_seq#18691, d_date_sk#18687], Inner, BuildRight
[info]                :           :     :     :- *(13) Project [cs_ship_date_sk#879, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500, d_date#333, d_week_seq#335]
[info]                :           :     :     :  +- *(13) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :           :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500]
[info]                :           :     :     :     :  +- *(13) BroadcastHashJoin [cs_bill_hdemo_sk#882], [hd_demo_sk#448], Inner, BuildRight
[info]                :           :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500]
[info]                :           :     :     :     :     :  +- *(13) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]                :           :     :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500]
[info]                :           :     :     :     :     :     :  +- *(13) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                :           :     :     :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623]
[info]                :           :     :     :     :     :     :     :  +- *(13) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#1621], Inner, BuildRight
[info]                :           :     :     :     :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_warehouse_sk#474, inv_date_sk#476]
[info]                :           :     :     :     :     :     :     :     :  +- *(13) SortMergeJoin [cs_item_sk#892], [inv_item_sk#473], Inner, (inv_quantity_on_hand#475 < cs_quantity#895)
[info]                :           :     :     :     :     :     :     :     :     :- *(2) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                :           :     :     :     :     :     :     :     :     :  +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#42599]
[info]                :           :     :     :     :     :     :     :     :     :     +- *(1) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_sold_date_sk#911]
[info]                :           :     :     :     :     :     :     :     :     :        +- *(1) Filter (((((isnotnull(cs_quantity#895) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_bill_cdemo_sk#881)) AND isnotnull(cs_bill_hdemo_sk#882)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_ship_date_sk#879))
[info]                :           :     :     :     :     :     :     :     :     :           +- *(1) ColumnarToRow
[info]                :           :     :     :     :     :     :     :     :     :              +- BatchScan[cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ship_date_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_item_sk:int,cs_promo_sk:i...
[info]                :           :     :     :     :     :     :     :     :     +- *(4) Sort [inv_item_sk#473 ASC NULLS FIRST], false, 0
[info]                :           :     :     :     :     :     :     :     :        +- Exchange hashpartitioning(inv_item_sk#473, 4), true, [id=#42609]
[info]                :           :     :     :     :     :     :     :     :           +- *(3) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]                :           :     :     :     :     :     :     :     :              +- *(3) Filter (((isnotnull(inv_quantity_on_hand#475) AND isnotnull(inv_item_sk#473)) AND isnotnull(inv_warehouse_sk#474)) AND isnotnull(inv_date_sk#476))
[info]                :           :     :     :     :     :     :     :     :                 +- *(3) ColumnarToRow
[info]                :           :     :     :     :     :     :     :     :                    +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]                :           :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42621]
[info]                :           :     :     :     :     :     :     :        +- *(5) Project [w_warehouse_sk#1621, w_warehouse_name#1623]
[info]                :           :     :     :     :     :     :     :           +- *(5) Filter isnotnull(w_warehouse_sk#1621)
[info]                :           :     :     :     :     :     :     :              +- *(5) ColumnarToRow
[info]                :           :     :     :     :     :     :     :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
[info]                :           :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42630]
[info]                :           :     :     :     :     :     :        +- *(6) Project [i_item_sk#496, i_item_desc#500]
[info]                :           :     :     :     :     :     :           +- *(6) Filter isnotnull(i_item_sk#496)
[info]                :           :     :     :     :     :     :              +- *(6) ColumnarToRow
[info]                :           :     :     :     :     :     :                 +- BatchScan[i_item_sk#496, i_item_desc#500] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
[info]                :           :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42639]
[info]                :           :     :     :     :     :        +- *(7) Project [cd_demo_sk#290]
[info]                :           :     :     :     :     :           +- *(7) Filter ((isnotnull(cd_marital_status#292) AND (cd_marital_status#292 = D)) AND isnotnull(cd_demo_sk#290))
[info]                :           :     :     :     :     :              +- *(7) ColumnarToRow
[info]                :           :     :     :     :     :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>
[info]                :           :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42648]
[info]                :           :     :     :     :        +- *(8) Project [hd_demo_sk#448]
[info]                :           :     :     :     :           +- *(8) Filter ((isnotnull(hd_buy_potential#450) AND (hd_buy_potential#450 = >10000)) AND isnotnull(hd_demo_sk#448))
[info]                :           :     :     :     :              +- *(8) ColumnarToRow
[info]                :           :     :     :     :                 +- BatchScan[hd_demo_sk#448, hd_buy_potential#450] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>
[info]                :           :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42657]
[info]                :           :     :     :        +- *(9) Project [d_date_sk#331, d_date#333, d_week_seq#335]
[info]                :           :     :     :           +- *(9) Filter (((isnotnull(d_year#337) AND (d_year#337 = 1999)) AND isnotnull(d_date_sk#331)) AND isnotnull(d_week_seq#335))
[info]                :           :     :     :              +- *(9) ColumnarToRow
[info]                :           :     :     :                 +- BatchScan[d_date_sk#331, d_date#333, d_week_seq#335, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_week_seq:int,d_year:int>
[info]                :           :     :     +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, true] as bigint), 32) | (cast(input[0, int, true] as bigint) & 4294967295)))), [id=#42666]
[info]                :           :     :        +- *(10) Project [d_date_sk#18687, d_week_seq#18691]
[info]                :           :     :           +- *(10) Filter (isnotnull(d_date_sk#18687) AND isnotnull(d_week_seq#18691))
[info]                :           :     :              +- *(10) ColumnarToRow
[info]                :           :     :                 +- BatchScan[d_date_sk#18687, d_week_seq#18691] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
[info]                :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42675]
[info]                :           :        +- *(11) Project [d_date_sk#18716, d_date#18718]
[info]                :           :           +- *(11) Filter (isnotnull(d_date_sk#18716) AND isnotnull(d_date#18718))
[info]                :           :              +- *(11) ColumnarToRow
[info]                :           :                 +- BatchScan[d_date_sk#18716, d_date#18718] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42684]
[info]                :              +- *(12) Project [p_promo_sk#589]
[info]                :                 +- *(12) Filter isnotnull(p_promo_sk#589)
[info]                :                    +- *(12) ColumnarToRow
[info]                :                       +- BatchScan[p_promo_sk#589] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int>
[info]                +- *(16) Sort [cr_item_sk#42 ASC NULLS FIRST, cr_order_number#56L ASC NULLS FIRST], false, 0
[info]                   +- Exchange hashpartitioning(cr_item_sk#42, cr_order_number#56L, 4), true, [id=#42698]
[info]                      +- *(15) Project [cr_item_sk#42, cr_order_number#56L]
[info]                         +- *(15) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]                            +- *(15) ColumnarToRow
[info]                               +- BatchScan[cr_item_sk#42, cr_order_number#56L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint>
[info] 
[info] 
[info]   Stopped after 1 iterations, 407 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q72                                                 407            407           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q73
[info] == Physical Plan ==
[info] *(7) Sort [cnt#18796L DESC NULLS LAST], true, 0
[info] +- Exchange rangepartitioning(cnt#18796L DESC NULLS LAST, 4), true, [id=#42901]
[info]    +- *(6) Project [c_last_name#165, c_first_name#164, c_salutation#163, c_preferred_cust_flag#166, ss_ticket_number#1172L, cnt#18796L]
[info]       +- *(6) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]          :- *(6) Filter ((cnt#18796L >= 1) AND (cnt#18796L <= 5))
[info]          :  +- *(6) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166], functions=[count(1)])
[info]          :     +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_customer_sk#1166, 4), true, [id=#42887]
[info]          :        +- *(4) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166], functions=[partial_count(1)])
[info]          :           +- *(4) Project [ss_customer_sk#1166, ss_ticket_number#1172L]
[info]          :              +- *(4) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]          :                 :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_ticket_number#1172L]
[info]          :                 :  +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]          :                 :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L]
[info]          :                 :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]          :                 :     :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186]
[info]          :                 :     :     :  +- *(4) Filter (((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_customer_sk#1166))
[info]          :                 :     :     :     +- *(4) ColumnarToRow
[info]          :                 :     :     :        +- BatchScan[ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_hdemo_sk:int,ss_store_sk:int,ss_ticket_number:bigint>
[info]          :                 :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42863]
[info]          :                 :     :        +- *(1) Project [d_date_sk#331]
[info]          :                 :     :           +- *(1) Filter ((((isnotnull(d_dom#340) AND (d_dom#340 >= 1)) AND (d_dom#340 <= 2)) AND d_year#337 IN (1999,2000,2001)) AND isnotnull(d_date_sk#331))
[info]          :                 :     :              +- *(1) ColumnarToRow
[info]          :                 :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_dom:int>
[info]          :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42872]
[info]          :                 :        +- *(2) Project [s_store_sk#670]
[info]          :                 :           +- *(2) Filter (s_county#693 IN (Williamson County,Franklin Parish,Bronx County,Orange County) AND isnotnull(s_store_sk#670))
[info]          :                 :              +- *(2) ColumnarToRow
[info]          :                 :                 +- BatchScan[s_store_sk#670, s_county#693] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_county:string>
[info]          :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42881]
[info]          :                    +- *(3) Project [hd_demo_sk#448]
[info]          :                       +- *(3) Filter (((((CASE WHEN (hd_vehicle_count#452 > 0) THEN (cast(hd_dep_count#451 as double) / cast(hd_vehicle_count#452 as double)) ELSE null END > 1.0) AND isnotnull(hd_vehicle_count#452)) AND ((hd_buy_potential#450 = >10000) OR (hd_buy_potential#450 = unknown))) AND (hd_vehicle_count#452 > 0)) AND isnotnull(hd_demo_sk#448))
[info]          :                          +- *(3) ColumnarToRow
[info]          :                             +- BatchScan[hd_demo_sk#448, hd_buy_potential#450, hd_dep_count#451, hd_vehicle_count#452] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string,hd_dep_count:int,hd_vehicle_count:int>
[info]          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42896]
[info]             +- *(5) Project [c_customer_sk#156, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166]
[info]                +- *(5) Filter isnotnull(c_customer_sk#156)
[info]                   +- *(5) ColumnarToRow
[info]                      +- BatchScan[c_customer_sk#156, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_c...
[info] 
[info] 
[info]   Stopped after 1 iterations, 207 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q73                                                 208            208           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q74
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[customer_id#18887 ASC NULLS FIRST,customer_id#18887 ASC NULLS FIRST,customer_id#18887 ASC NULLS FIRST], output=[customer_id#18887,customer_first_name#18888,customer_last_name#18889])
[info] +- *(23) Project [customer_id#18887, customer_first_name#18888, customer_last_name#18889]
[info]    +- *(23) SortMergeJoin [customer_id#18867], [customer_id#18899], Inner, (CASE WHEN (year_total#18897 > 0.00) THEN CheckOverflow((promote_precision(year_total#18903) / promote_precision(year_total#18897)), DecimalType(37,20), true) ELSE null END > CASE WHEN (year_total#18871 > 0.00) THEN CheckOverflow((promote_precision(year_total#18891) / promote_precision(year_total#18871)), DecimalType(37,20), true) ELSE null END)
[info]       :- *(17) Project [customer_id#18867, year_total#18871, customer_id#18887, customer_first_name#18888, customer_last_name#18889, year_total#18891, year_total#18897]
[info]       :  +- *(17) SortMergeJoin [customer_id#18867], [customer_id#18893], Inner
[info]       :     :- *(11) SortMergeJoin [customer_id#18867], [customer_id#18887], Inner
[info]       :     :  :- *(5) Sort [customer_id#18867 ASC NULLS FIRST], false, 0
[info]       :     :  :  +- Exchange hashpartitioning(customer_id#18867, 4), true, [id=#43347]
[info]       :     :  :     +- Union
[info]       :     :  :        :- *(4) Filter (isnotnull(year_total#18871) AND (year_total#18871 > 0.00))
[info]       :     :  :        :  +- *(4) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :  :        :     +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#43341]
[info]       :     :  :        :        +- *(3) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :  :        :           +- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, d_year#337]
[info]       :     :  :        :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :  :        :                 :- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :  :        :                 :  +- *(3) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :  :        :                 :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43322]
[info]       :     :  :        :                 :     :  +- *(1) Project [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165]
[info]       :     :  :        :                 :     :     +- *(1) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_customer_id#157))
[info]       :     :  :        :                 :     :        +- *(1) ColumnarToRow
[info]       :     :  :        :                 :     :           +- BatchScan[c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string>
[info]       :     :  :        :                 :     +- *(3) Project [ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :  :        :                 :        +- *(3) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :  :        :                 :           +- *(3) ColumnarToRow
[info]       :     :  :        :                 :              +- BatchScan[ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_net_paid:decimal(7,2)>
[info]       :     :  :        :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43335]
[info]       :     :  :        :                    +- *(2) Project [d_date_sk#331, d_year#337]
[info]       :     :  :        :                       +- *(2) Filter (((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND d_year#337 IN (2001,2002)) AND isnotnull(d_date_sk#331))
[info]       :     :  :        :                          +- *(2) ColumnarToRow
[info]       :     :  :        :                             +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :  :        +- LocalTableScan <empty>, [customer_id#18873, year_total#18877]
[info]       :     :  +- *(10) Sort [customer_id#18887 ASC NULLS FIRST], false, 0
[info]       :     :     +- Exchange hashpartitioning(customer_id#18887, 4), true, [id=#43553]
[info]       :     :        +- Union
[info]       :     :           :- *(9) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :           :  +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#43506]
[info]       :     :           :     +- *(8) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :           :        +- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, d_year#337]
[info]       :     :           :           +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :           :              :- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :           :              :  +- *(8) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :           :              :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43322]
[info]       :     :           :              :     +- *(8) Project [ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :           :              :        +- *(8) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :           :              :           +- *(8) ColumnarToRow
[info]       :     :           :              :              +- BatchScan[ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_net_paid:decimal(7,2)>
[info]       :     :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43370]
[info]       :     :           :                 +- *(7) Project [d_date_sk#331, d_year#337]
[info]       :     :           :                    +- *(7) Filter (((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND d_year#337 IN (2001,2002)) AND isnotnull(d_date_sk#331))
[info]       :     :           :                       +- *(7) ColumnarToRow
[info]       :     :           :                          +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :           +- LocalTableScan <empty>, [customer_id#18873, customer_first_name#18874, customer_last_name#18875, year_total#18877]
[info]       :     +- *(16) Sort [customer_id#18893 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(customer_id#18893, 4), true, [id=#43614]
[info]       :           +- Union
[info]       :              :- LocalTableScan <empty>, [customer_id#18893, year_total#18897]
[info]       :              +- *(15) Filter (isnotnull(year_total#18877) AND (year_total#18877 > 0.00))
[info]       :                 +- *(15) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]       :                    +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#43587]
[info]       :                       +- *(14) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ws_net_paid#1049))])
[info]       :                          +- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, d_year#337]
[info]       :                             +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                                :- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]       :                                :  +- *(14) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]       :                                :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43322]
[info]       :                                :     +- *(14) Project [ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]       :                                :        +- *(14) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]       :                                :           +- *(14) ColumnarToRow
[info]       :                                :              +- BatchScan[ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_net_paid:decimal(7,2)>
[info]       :                                +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43335]
[info]       +- *(22) Sort [customer_id#18899 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(customer_id#18899, 4), true, [id=#43695]
[info]             +- Union
[info]                :- LocalTableScan <empty>, [customer_id#18899, year_total#18903]
[info]                +- *(21) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]                   +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#43669]
[info]                      +- *(20) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ws_net_paid#1049))])
[info]                         +- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, d_year#337]
[info]                            +- *(20) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]                               :  +- *(20) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]                               :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43322]
[info]                               :     +- *(20) Project [ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]                               :        +- *(20) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]                               :           +- *(20) ColumnarToRow
[info]                               :              +- BatchScan[ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_net_paid:decimal(7,2)>
[info]                               +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43370]
[info] 
[info] 
[info]   Stopped after 1 iterations, 614 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q74                                                 614            614           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q75
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[sales_cnt_diff#19429L ASC NULLS FIRST], output=[prev_year#19425,year#19426,i_brand_id#503,i_class_id#505,i_category_id#507,i_manufact_id#509,prev_yr_cnt#19427L,curr_yr_cnt#19428L,sales_cnt_diff#19429L,sales_amt_diff#19430])
[info] +- *(51) Project [d_year#19779 AS prev_year#19425, d_year#337 AS year#19426, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#19471L AS prev_yr_cnt#19427L, sales_cnt#19437L AS curr_yr_cnt#19428L, (sales_cnt#19437L - sales_cnt#19471L) AS sales_cnt_diff#19429L, CheckOverflow((promote_precision(cast(sales_amt#19438 as decimal(19,2))) - promote_precision(cast(sales_amt#19472 as decimal(19,2)))), DecimalType(19,2), true) AS sales_amt_diff#19430]
[info]    +- *(51) SortMergeJoin [i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], [i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636], Inner, (CheckOverflow((promote_precision(cast(sales_cnt#19437L as decimal(17,2))) / promote_precision(cast(sales_cnt#19471L as decimal(17,2)))), DecimalType(37,20), true) < 0.90000000000000000000)
[info]       :- *(25) Sort [i_brand_id#503 ASC NULLS FIRST, i_class_id#505 ASC NULLS FIRST, i_category_id#507 ASC NULLS FIRST, i_manufact_id#509 ASC NULLS FIRST], false, 0
[info]       :  +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, 4), true, [id=#44751]
[info]       :     +- *(24) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], functions=[sum(cast(sales_cnt#19431 as bigint)), sum(UnscaledValue(sales_amt#19432))])
[info]       :        +- Exchange hashpartitioning(d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, 4), true, [id=#44747]
[info]       :           +- *(23) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], functions=[partial_sum(cast(sales_cnt#19431 as bigint)), partial_sum(UnscaledValue(sales_amt#19432))])
[info]       :              +- *(23) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#19431, sales_amt#19432], functions=[])
[info]       :                 +- Exchange hashpartitioning(d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#19431, sales_amt#19432, 4), true, [id=#44742]
[info]       :                    +- *(22) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#19431, sales_amt#19432], functions=[])
[info]       :                       +- Union
[info]       :                          :- *(7) Project [d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, (cs_quantity#895 - coalesce(cr_return_quantity#57, 0)) AS sales_cnt#19431, CheckOverflow((promote_precision(cast(cs_ext_sales_price#900 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#58, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19432]
[info]       :                          :  +- SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], LeftOuter
[info]       :                          :     :- *(4) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]       :                          :     :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#44399]
[info]       :                          :     :     +- *(3) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, d_year#337]
[info]       :                          :     :        +- *(3) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :                          :     :           :- *(3) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                          :     :           :  +- *(3) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]       :                          :     :           :     :- *(3) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]       :                          :     :           :     :  +- *(3) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]       :                          :     :           :     :     +- *(3) ColumnarToRow
[info]       :                          :     :           :     :        +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>
[info]       :                          :     :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44385]
[info]       :                          :     :           :        +- *(1) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                          :     :           :           +- *(1) Filter ((((((isnotnull(i_category#508) AND (i_category#508 = Books)) AND isnotnull(i_item_sk#496)) AND isnotnull(i_category_id#507)) AND isnotnull(i_manufact_id#509)) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505))
[info]       :                          :     :           :              +- *(1) ColumnarToRow
[info]       :                          :     :           :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_category#508, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
[info]       :                          :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44394]
[info]       :                          :     :              +- *(2) Project [d_date_sk#331, d_year#337]
[info]       :                          :     :                 +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND isnotnull(d_date_sk#331))
[info]       :                          :     :                    +- *(2) ColumnarToRow
[info]       :                          :     :                       +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :                          :     +- *(6) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]       :                          :        +- Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#44408]
[info]       :                          :           +- *(5) Project [cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58]
[info]       :                          :              +- *(5) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]       :                          :                 +- *(5) ColumnarToRow
[info]       :                          :                    +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
[info]       :                          :- *(14) Project [d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, (ss_quantity#1173 - coalesce(sr_return_quantity#800, 0)) AS sales_cnt#19444, CheckOverflow((promote_precision(cast(ss_ext_sales_price#1178 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#801, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19445]
[info]       :                          :  +- SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], LeftOuter
[info]       :                          :     :- *(11) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]       :                          :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#44697]
[info]       :                          :     :     +- *(10) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, d_year#337]
[info]       :                          :     :        +- *(10) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :                          :     :           :- *(10) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                          :     :           :  +- *(10) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]       :                          :     :           :     :- *(10) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]       :                          :     :           :     :  +- *(10) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]       :                          :     :           :     :     +- *(10) ColumnarToRow
[info]       :                          :     :           :     :        +- BatchScan[ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>
[info]       :                          :     :           :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44385]
[info]       :                          :     :           +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44394]
[info]       :                          :     +- *(13) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]       :                          :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#44448]
[info]       :                          :           +- *(12) Project [sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801]
[info]       :                          :              +- *(12) Filter (isnotnull(sr_item_sk#792) AND isnotnull(sr_ticket_number#799L))
[info]       :                          :                 +- *(12) ColumnarToRow
[info]       :                          :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
[info]       :                          +- *(21) Project [d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, (ws_quantity#1038 - coalesce(wr_return_quantity#1276, 0)) AS sales_cnt#19451, CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#1277, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19452]
[info]       :                             +- SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], LeftOuter
[info]       :                                :- *(18) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]       :                                :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#44730]
[info]       :                                :     +- *(17) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, d_year#337]
[info]       :                                :        +- *(17) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                                :           :- *(17) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                                :           :  +- *(17) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]       :                                :           :     :- *(17) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]       :                                :           :     :  +- *(17) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]       :                                :           :     :     +- *(17) ColumnarToRow
[info]       :                                :           :     :        +- BatchScan[ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>
[info]       :                                :           :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44385]
[info]       :                                :           +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44394]
[info]       :                                +- *(20) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]       :                                   +- Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#44488]
[info]       :                                      +- *(19) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277]
[info]       :                                         +- *(19) Filter (isnotnull(wr_item_sk#1264) AND isnotnull(wr_order_number#1275L))
[info]       :                                            +- *(19) ColumnarToRow
[info]       :                                               +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
[info]       +- *(50) Sort [i_brand_id#19630 ASC NULLS FIRST, i_class_id#19632 ASC NULLS FIRST, i_category_id#19634 ASC NULLS FIRST, i_manufact_id#19636 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636, 4), true, [id=#45160]
[info]             +- *(49) HashAggregate(keys=[d_year#19779, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636], functions=[sum(cast(sales_cnt#19431 as bigint)), sum(UnscaledValue(sales_amt#19432))])
[info]                +- Exchange hashpartitioning(d_year#19779, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636, 4), true, [id=#45140]
[info]                   +- *(48) HashAggregate(keys=[d_year#19779, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636], functions=[partial_sum(cast(sales_cnt#19431 as bigint)), partial_sum(UnscaledValue(sales_amt#19432))])
[info]                      +- *(48) HashAggregate(keys=[d_year#19779, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636, sales_cnt#19431, sales_amt#19432], functions=[])
[info]                         +- Exchange hashpartitioning(d_year#19779, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636, sales_cnt#19431, sales_amt#19432, 4), true, [id=#45037]
[info]                            +- *(47) HashAggregate(keys=[d_year#19779, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636, sales_cnt#19431, sales_amt#19432], functions=[])
[info]                               +- Union
[info]                                  :- *(32) Project [d_year#19779, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636, (cs_quantity#895 - coalesce(cr_return_quantity#57, 0)) AS sales_cnt#19431, CheckOverflow((promote_precision(cast(cs_ext_sales_price#900 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#58, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19432]
[info]                                  :  +- SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], LeftOuter
[info]                                  :     :- *(29) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                                  :     :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#44779]
[info]                                  :     :     +- *(28) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636, d_year#19779]
[info]                                  :     :        +- *(28) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#19773], Inner, BuildRight
[info]                                  :     :           :- *(28) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636]
[info]                                  :     :           :  +- *(28) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#19623], Inner, BuildRight
[info]                                  :     :           :     :- *(28) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]                                  :     :           :     :  +- *(28) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]                                  :     :           :     :     +- *(28) ColumnarToRow
[info]                                  :     :           :     :        +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>
[info]                                  :     :           :     +- ReusedExchange [i_item_sk#19623, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44385]
[info]                                  :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44532]
[info]                                  :     :              +- *(27) Project [d_date_sk#19773, d_year#19779]
[info]                                  :     :                 +- *(27) Filter ((isnotnull(d_year#19779) AND (d_year#19779 = 2001)) AND isnotnull(d_date_sk#19773))
[info]                                  :     :                    +- *(27) ColumnarToRow
[info]                                  :     :                       +- BatchScan[d_date_sk#19773, d_year#19779] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                                  :     +- *(31) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]                                  :        +- ReusedExchange [cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58], Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#44408]
[info]                                  :- *(39) Project [d_year#19779, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636, (ss_quantity#1173 - coalesce(sr_return_quantity#800, 0)) AS sales_cnt#19458, CheckOverflow((promote_precision(cast(ss_ext_sales_price#1178 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#801, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19459]
[info]                                  :  +- SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], LeftOuter
[info]                                  :     :- *(36) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                                  :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#44872]
[info]                                  :     :     +- *(35) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636, d_year#19779]
[info]                                  :     :        +- *(35) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#19773], Inner, BuildRight
[info]                                  :     :           :- *(35) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636]
[info]                                  :     :           :  +- *(35) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#19623], Inner, BuildRight
[info]                                  :     :           :     :- *(35) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                                  :     :           :     :  +- *(35) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                                  :     :           :     :     +- *(35) ColumnarToRow
[info]                                  :     :           :     :        +- BatchScan[ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>
[info]                                  :     :           :     +- ReusedExchange [i_item_sk#19623, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44385]
[info]                                  :     :           +- ReusedExchange [d_date_sk#19773, d_year#19779], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44532]
[info]                                  :     +- *(38) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                                  :        +- ReusedExchange [sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801], Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#44448]
[info]                                  +- *(46) Project [d_year#19779, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636, (ws_quantity#1038 - coalesce(wr_return_quantity#1276, 0)) AS sales_cnt#19465, CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#1277, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19466]
[info]                                     +- SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], LeftOuter
[info]                                        :- *(43) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]                                        :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#44965]
[info]                                        :     +- *(42) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636, d_year#19779]
[info]                                        :        +- *(42) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#19773], Inner, BuildRight
[info]                                        :           :- *(42) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636]
[info]                                        :           :  +- *(42) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#19623], Inner, BuildRight
[info]                                        :           :     :- *(42) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                                        :           :     :  +- *(42) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                                        :           :     :     +- *(42) ColumnarToRow
[info]                                        :           :     :        +- BatchScan[ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>
[info]                                        :           :     +- ReusedExchange [i_item_sk#19623, i_brand_id#19630, i_class_id#19632, i_category_id#19634, i_manufact_id#19636], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44385]
[info]                                        :           +- ReusedExchange [d_date_sk#19773, d_year#19779], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44532]
[info]                                        +- *(45) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]                                           +- ReusedExchange [wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277], Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#44488]
[info] 
[info] 
[info]   Stopped after 1 iterations, 886 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q75                                                 887            887           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q76
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#20034 ASC NULLS FIRST,col_name#20035 ASC NULLS FIRST,d_year#337 ASC NULLS FIRST,d_qoy#341 ASC NULLS FIRST,i_category#508 ASC NULLS FIRST], output=[channel#20034,col_name#20035,d_year#337,d_qoy#341,i_category#508,sales_cnt#20043L,sales_amt#20044])
[info] +- *(11) HashAggregate(keys=[channel#20034, col_name#20035, d_year#337, d_qoy#341, i_category#508], functions=[count(1), sum(UnscaledValue(ext_sales_price#20036))])
[info]    +- Exchange hashpartitioning(channel#20034, col_name#20035, d_year#337, d_qoy#341, i_category#508, 4), true, [id=#45539]
[info]       +- *(10) HashAggregate(keys=[channel#20034, col_name#20035, d_year#337, d_qoy#341, i_category#508], functions=[partial_count(1), partial_sum(UnscaledValue(ext_sales_price#20036))])
[info]          +- Union
[info]             :- *(3) Project [store AS channel#20034, ss_store_sk#1170 AS col_name#20035, d_year#337, d_qoy#341, i_category#508, ss_ext_sales_price#1178 AS ext_sales_price#20036]
[info]             :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :     :- *(3) Project [ss_store_sk#1170, ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_category#508]
[info]             :     :  +- *(3) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :     :     :- *(3) Project [ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]             :     :     :  +- *(3) Filter ((isnull(ss_store_sk#1170) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_sold_date_sk#1186))
[info]             :     :     :     +- *(3) ColumnarToRow
[info]             :     :     :        +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]             :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45400]
[info]             :     :        +- *(1) Project [i_item_sk#496, i_category#508]
[info]             :     :           +- *(1) Filter isnotnull(i_item_sk#496)
[info]             :     :              +- *(1) ColumnarToRow
[info]             :     :                 +- BatchScan[i_item_sk#496, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_category:string>
[info]             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45409]
[info]             :        +- *(2) Project [d_date_sk#331, d_year#337, d_qoy#341]
[info]             :           +- *(2) Filter isnotnull(d_date_sk#331)
[info]             :              +- *(2) ColumnarToRow
[info]             :                 +- BatchScan[d_date_sk#331, d_year#337, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info]             :- *(6) Project [web AS channel#20045, ws_ship_customer_sk#1028 AS col_name#20046, d_year#337, d_qoy#341, i_category#508, ws_ext_sales_price#1043 AS ext_sales_price#20050]
[info]             :  +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :     :- *(6) Project [ws_ship_customer_sk#1028, ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_category#508]
[info]             :     :  +- *(6) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]             :     :     :- *(6) Project [ws_item_sk#1023, ws_ship_customer_sk#1028, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]             :     :     :  +- *(6) Filter ((isnull(ws_ship_customer_sk#1028) AND isnotnull(ws_item_sk#1023)) AND isnotnull(ws_sold_date_sk#1054))
[info]             :     :     :     +- *(6) ColumnarToRow
[info]             :     :     :        +- BatchScan[ws_item_sk#1023, ws_ship_customer_sk#1028, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_ship_customer_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]             :     :     +- ReusedExchange [i_item_sk#496, i_category#508], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45400]
[info]             :     +- ReusedExchange [d_date_sk#331, d_year#337, d_qoy#341], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45409]
[info]             +- *(9) Project [catalog AS channel#20051, cs_ship_addr_sk#887 AS col_name#20052, d_year#337, d_qoy#341, i_category#508, cs_ext_sales_price#900 AS ext_sales_price#20056]
[info]                +- *(9) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                   :- *(9) Project [cs_ship_addr_sk#887, cs_ext_sales_price#900, cs_sold_date_sk#911, i_category#508]
[info]                   :  +- *(9) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                   :     :- *(9) Project [cs_ship_addr_sk#887, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]                   :     :  +- *(9) Filter ((isnull(cs_ship_addr_sk#887) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_sold_date_sk#911))
[info]                   :     :     +- *(9) ColumnarToRow
[info]                   :     :        +- BatchScan[cs_ship_addr_sk#887, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ship_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]                   :     +- ReusedExchange [i_item_sk#496, i_category#508], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45400]
[info]                   +- ReusedExchange [d_date_sk#331, d_year#337, d_qoy#341], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45409]
[info] 
[info] 
[info]   Stopped after 1 iterations, 250 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q76                                                 250            250           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q77
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#20292 ASC NULLS FIRST,id#20293 ASC NULLS FIRST], output=[channel#20292,id#20293,sales#20214,returns#20215,profit#20216])
[info] +- *(27) HashAggregate(keys=[channel#20292, id#20293, spark_grouping_id#20289], functions=[sum(sales#20217), sum(returns#20205), sum(profit#20284)])
[info]    +- Exchange hashpartitioning(channel#20292, id#20293, spark_grouping_id#20289, 4), true, [id=#46451]
[info]       +- *(26) HashAggregate(keys=[channel#20292, id#20293, spark_grouping_id#20289], functions=[partial_sum(sales#20217), partial_sum(returns#20205), partial_sum(profit#20284)])
[info]          +- *(26) Expand [List(sales#20217, returns#20205, profit#20284, channel#20203, id#20204, 0), List(sales#20217, returns#20205, profit#20284, channel#20203, null, 1), List(sales#20217, returns#20205, profit#20284, null, null, 3)], [sales#20217, returns#20205, profit#20284, channel#20292, id#20293, spark_grouping_id#20289]
[info]             +- Union
[info]                :- *(9) Project [sales#20217, coalesce(returns#20219, 0.00) AS returns#20205, CheckOverflow((promote_precision(cast(profit#20218 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#20220, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS profit#20284, store channel AS channel#20203, s_store_sk#670 AS id#20204]
[info]                :  +- SortMergeJoin [s_store_sk#670], [s_store_sk#20241], LeftOuter
[info]                :     :- *(4) Sort [s_store_sk#670 ASC NULLS FIRST], false, 0
[info]                :     :  +- *(4) HashAggregate(keys=[s_store_sk#670], functions=[sum(UnscaledValue(ss_ext_sales_price#1178)), sum(UnscaledValue(ss_net_profit#1185))])
[info]                :     :     +- Exchange hashpartitioning(s_store_sk#670, 4), true, [id=#46053]
[info]                :     :        +- *(3) HashAggregate(keys=[s_store_sk#670], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178)), partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]                :     :           +- *(3) Project [ss_ext_sales_price#1178, ss_net_profit#1185, s_store_sk#670]
[info]                :     :              +- *(3) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :     :                 :- *(3) Project [ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185]
[info]                :     :                 :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :                 :     :- *(3) Project [ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                :     :                 :     :  +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]                :     :                 :     :     +- *(3) ColumnarToRow
[info]                :     :                 :     :        +- BatchScan[ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>
[info]                :     :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46038]
[info]                :     :                 :        +- *(1) Project [d_date_sk#331]
[info]                :     :                 :           +- *(1) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 11172)) AND (d_date#333 <= 11202)) AND isnotnull(d_date_sk#331))
[info]                :     :                 :              +- *(1) ColumnarToRow
[info]                :     :                 :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46047]
[info]                :     :                    +- *(2) Project [s_store_sk#670]
[info]                :     :                       +- *(2) Filter isnotnull(s_store_sk#670)
[info]                :     :                          +- *(2) ColumnarToRow
[info]                :     :                             +- BatchScan[s_store_sk#670] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int>
[info]                :     +- *(8) Sort [s_store_sk#20241 ASC NULLS FIRST], false, 0
[info]                :        +- *(8) HashAggregate(keys=[s_store_sk#20241], functions=[sum(UnscaledValue(sr_return_amt#801)), sum(UnscaledValue(sr_net_loss#809))])
[info]                :           +- Exchange hashpartitioning(s_store_sk#20241, 4), true, [id=#46248]
[info]                :              +- *(7) HashAggregate(keys=[s_store_sk#20241], functions=[partial_sum(UnscaledValue(sr_return_amt#801)), partial_sum(UnscaledValue(sr_net_loss#809))])
[info]                :                 +- *(7) Project [sr_return_amt#801, sr_net_loss#809, s_store_sk#20241]
[info]                :                    +- *(7) BroadcastHashJoin [sr_store_sk#797], [s_store_sk#20241], Inner, BuildRight
[info]                :                       :- *(7) Project [sr_store_sk#797, sr_return_amt#801, sr_net_loss#809]
[info]                :                       :  +- *(7) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#331], Inner, BuildRight
[info]                :                       :     :- *(7) Project [sr_store_sk#797, sr_return_amt#801, sr_net_loss#809, sr_returned_date_sk#810]
[info]                :                       :     :  +- *(7) Filter (isnotnull(sr_returned_date_sk#810) AND isnotnull(sr_store_sk#797))
[info]                :                       :     :     +- *(7) ColumnarToRow
[info]                :                       :     :        +- BatchScan[sr_store_sk#797, sr_return_amt#801, sr_net_loss#809, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
[info]                :                       :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46038]
[info]                :                       +- ReusedExchange [s_store_sk#20241], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46047]
[info]                :- *(16) Project [sales#20221, returns#20223, CheckOverflow((promote_precision(cast(profit#20222 as decimal(18,2))) - promote_precision(cast(profit_loss#20224 as decimal(18,2)))), DecimalType(18,2), true) AS profit#20209, catalog channel AS channel#20207, cs_call_center_sk#888 AS id#20208]
[info]                :  +- BroadcastNestedLoopJoin BuildRight, Inner
[info]                :     :- *(12) HashAggregate(keys=[cs_call_center_sk#888], functions=[sum(UnscaledValue(cs_ext_sales_price#900)), sum(UnscaledValue(cs_net_profit#910))])
[info]                :     :  +- Exchange hashpartitioning(cs_call_center_sk#888, 4), true, [id=#46313]
[info]                :     :     +- *(11) HashAggregate(keys=[cs_call_center_sk#888], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900)), partial_sum(UnscaledValue(cs_net_profit#910))])
[info]                :     :        +- *(11) Project [cs_call_center_sk#888, cs_ext_sales_price#900, cs_net_profit#910]
[info]                :     :           +- *(11) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :              :- *(11) Project [cs_call_center_sk#888, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911]
[info]                :     :              :  +- *(11) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :              :     +- *(11) ColumnarToRow
[info]                :     :              :        +- BatchScan[cs_call_center_sk#888, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_call_center_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>
[info]                :     :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46038]
[info]                :     +- BroadcastExchange IdentityBroadcastMode, [id=#46335]
[info]                :        +- *(15) HashAggregate(keys=[], functions=[sum(UnscaledValue(cr_return_amount#58)), sum(UnscaledValue(cr_net_loss#66))])
[info]                :           +- Exchange SinglePartition, true, [id=#46331]
[info]                :              +- *(14) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(cr_return_amount#58)), partial_sum(UnscaledValue(cr_net_loss#66))])
[info]                :                 +- *(14) Project [cr_return_amount#58, cr_net_loss#66]
[info]                :                    +- *(14) BroadcastHashJoin [cr_returned_date_sk#67], [d_date_sk#331], Inner, BuildRight
[info]                :                       :- *(14) Project [cr_return_amount#58, cr_net_loss#66, cr_returned_date_sk#67]
[info]                :                       :  +- *(14) Filter isnotnull(cr_returned_date_sk#67)
[info]                :                       :     +- *(14) ColumnarToRow
[info]                :                       :        +- BatchScan[cr_return_amount#58, cr_net_loss#66, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
[info]                :                       +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46038]
[info]                +- *(25) Project [sales#20225, coalesce(returns#20227, 0.00) AS returns#20212, CheckOverflow((promote_precision(cast(profit#20226 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#20228, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS profit#20285, web channel AS channel#20301, wp_web_page_sk#1773 AS id#20302]
[info]                   +- SortMergeJoin [wp_web_page_sk#1773], [wp_web_page_sk#20270], LeftOuter
[info]                      :- *(20) Sort [wp_web_page_sk#1773 ASC NULLS FIRST], false, 0
[info]                      :  +- *(20) HashAggregate(keys=[wp_web_page_sk#1773], functions=[sum(UnscaledValue(ws_ext_sales_price#1043)), sum(UnscaledValue(ws_net_profit#1053))])
[info]                      :     +- Exchange hashpartitioning(wp_web_page_sk#1773, 4), true, [id=#46356]
[info]                      :        +- *(19) HashAggregate(keys=[wp_web_page_sk#1773], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043)), partial_sum(UnscaledValue(ws_net_profit#1053))])
[info]                      :           +- *(19) Project [ws_ext_sales_price#1043, ws_net_profit#1053, wp_web_page_sk#1773]
[info]                      :              +- *(19) BroadcastHashJoin [ws_web_page_sk#1032], [wp_web_page_sk#1773], Inner, BuildRight
[info]                      :                 :- *(19) Project [ws_web_page_sk#1032, ws_ext_sales_price#1043, ws_net_profit#1053]
[info]                      :                 :  +- *(19) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                      :                 :     :- *(19) Project [ws_web_page_sk#1032, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054]
[info]                      :                 :     :  +- *(19) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_web_page_sk#1032))
[info]                      :                 :     :     +- *(19) ColumnarToRow
[info]                      :                 :     :        +- BatchScan[ws_web_page_sk#1032, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_web_page_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>
[info]                      :                 :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46038]
[info]                      :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46152]
[info]                      :                    +- *(18) Project [wp_web_page_sk#1773]
[info]                      :                       +- *(18) Filter isnotnull(wp_web_page_sk#1773)
[info]                      :                          +- *(18) ColumnarToRow
[info]                      :                             +- BatchScan[wp_web_page_sk#1773] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_page], ReadSchema: struct<wp_web_page_sk:int>
[info]                      +- *(24) Sort [wp_web_page_sk#20270 ASC NULLS FIRST], false, 0
[info]                         +- *(24) HashAggregate(keys=[wp_web_page_sk#20270], functions=[sum(UnscaledValue(wr_return_amt#1277)), sum(UnscaledValue(wr_net_loss#1285))])
[info]                            +- Exchange hashpartitioning(wp_web_page_sk#20270, 4), true, [id=#46395]
[info]                               +- *(23) HashAggregate(keys=[wp_web_page_sk#20270], functions=[partial_sum(UnscaledValue(wr_return_amt#1277)), partial_sum(UnscaledValue(wr_net_loss#1285))])
[info]                                  +- *(23) Project [wr_return_amt#1277, wr_net_loss#1285, wp_web_page_sk#20270]
[info]                                     +- *(23) BroadcastHashJoin [wr_web_page_sk#1273], [wp_web_page_sk#20270], Inner, BuildRight
[info]                                        :- *(23) Project [wr_web_page_sk#1273, wr_return_amt#1277, wr_net_loss#1285]
[info]                                        :  +- *(23) BroadcastHashJoin [wr_returned_date_sk#1286], [d_date_sk#331], Inner, BuildRight
[info]                                        :     :- *(23) Project [wr_web_page_sk#1273, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286]
[info]                                        :     :  +- *(23) Filter (isnotnull(wr_returned_date_sk#1286) AND isnotnull(wr_web_page_sk#1273))
[info]                                        :     :     +- *(23) ColumnarToRow
[info]                                        :     :        +- BatchScan[wr_web_page_sk#1273, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_web_page_sk:int,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
[info]                                        :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46038]
[info]                                        +- ReusedExchange [wp_web_page_sk#20270], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46152]
[info] 
[info] 
[info]   Stopped after 1 iterations, 574 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q77                                                 575            575           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q78
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ratio#20423 ASC NULLS FIRST,ss_qty#20441L DESC NULLS LAST,ss_wc#20442 DESC NULLS LAST,ss_sp#20443 DESC NULLS LAST,other_chan_qty#20427L ASC NULLS FIRST,other_chan_wholesale_cost#20428 ASC NULLS FIRST,other_chan_sales_price#20429 ASC NULLS FIRST,round((cast(ss_qty#20441L as double) / cast(coalesce((ws_qty#20432L + cs_qty#20437L), 1) as double)), 2) ASC NULLS FIRST], output=[ratio#20423,store_qty#20424L,store_wholesale_cost#20425,store_sales_price#20426,other_chan_qty#20427L,other_chan_wholesale_cost#20428,other_chan_sales_price#20429])
[info] +- *(26) Project [round((cast(ss_qty#20441L as double) / cast(coalesce((ws_qty#20432L + cs_qty#20437L), 1) as double)), 2) AS ratio#20423, ss_qty#20441L AS store_qty#20424L, ss_wc#20442 AS store_wholesale_cost#20425, ss_sp#20443 AS store_sales_price#20426, (coalesce(ws_qty#20432L, 0) + coalesce(cs_qty#20437L, 0)) AS other_chan_qty#20427L, CheckOverflow((promote_precision(cast(coalesce(ws_wc#20433, 0.00) as decimal(18,2))) + promote_precision(cast(coalesce(cs_wc#20438, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS other_chan_wholesale_cost#20428, CheckOverflow((promote_precision(cast(coalesce(ws_sp#20434, 0.00) as decimal(18,2))) + promote_precision(cast(coalesce(cs_sp#20439, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS other_chan_sales_price#20429, cs_qty#20437L, ss_wc#20442, ss_qty#20441L, ss_sp#20443, ws_qty#20432L]
[info]    +- *(26) SortMergeJoin [ss_sold_year#20440, ss_item_sk#1165, ss_customer_sk#1166], [cs_sold_year#20435, cs_item_sk#892, cs_customer_sk#20436], Inner
[info]       :- *(17) Project [ss_sold_year#20440, ss_item_sk#1165, ss_customer_sk#1166, ss_qty#20441L, ss_wc#20442, ss_sp#20443, ws_qty#20432L, ws_wc#20433, ws_sp#20434]
[info]       :  +- *(17) SortMergeJoin [ss_sold_year#20440, ss_item_sk#1165, ss_customer_sk#1166], [ws_sold_year#20430, ws_item_sk#1023, ws_customer_sk#20431], Inner
[info]       :     :- *(8) Sort [ss_sold_year#20440 ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST, ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(ss_sold_year#20440, ss_item_sk#1165, ss_customer_sk#1166, 4), true, [id=#46816]
[info]       :     :     +- *(7) HashAggregate(keys=[d_year#337, ss_item_sk#1165, ss_customer_sk#1166], functions=[sum(cast(ss_quantity#1173 as bigint)), sum(UnscaledValue(ss_wholesale_cost#1174)), sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :        +- Exchange hashpartitioning(d_year#337, ss_item_sk#1165, ss_customer_sk#1166, 4), true, [id=#46812]
[info]       :     :           +- *(6) HashAggregate(keys=[d_year#337, ss_item_sk#1165, ss_customer_sk#1166], functions=[partial_sum(cast(ss_quantity#1173 as bigint)), partial_sum(UnscaledValue(ss_wholesale_cost#1174)), partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :              +- *(6) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, d_year#337]
[info]       :     :                 +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :                    :- *(6) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                    :  +- *(6) Filter isnull(sr_ticket_number#799L)
[info]       :     :                    :     +- SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], LeftOuter
[info]       :     :                    :        :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]       :     :                    :        :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#46784]
[info]       :     :                    :        :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                    :        :        +- *(1) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_item_sk#1165))
[info]       :     :                    :        :           +- *(1) ColumnarToRow
[info]       :     :                    :        :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_wholesale_cos...
[info]       :     :                    :        +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]       :     :                    :           +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#46793]
[info]       :     :                    :              +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]       :     :                    :                 +- *(3) Filter (isnotnull(sr_ticket_number#799L) AND isnotnull(sr_item_sk#792))
[info]       :     :                    :                    +- *(3) ColumnarToRow
[info]       :     :                    :                       +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]       :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46806]
[info]       :     :                       +- *(5) Project [d_date_sk#331, d_year#337]
[info]       :     :                          +- *(5) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]       :     :                             +- *(5) ColumnarToRow
[info]       :     :                                +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     +- *(16) Sort [ws_sold_year#20430 ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST, ws_customer_sk#20431 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(ws_sold_year#20430, ws_item_sk#1023, ws_customer_sk#20431, 4), true, [id=#46942]
[info]       :           +- *(15) Filter (coalesce(ws_qty#20432L, 0) > 0)
[info]       :              +- *(15) HashAggregate(keys=[d_year#337, ws_item_sk#1023, ws_bill_customer_sk#1024], functions=[sum(cast(ws_quantity#1038 as bigint)), sum(UnscaledValue(ws_wholesale_cost#1039)), sum(UnscaledValue(ws_sales_price#1041))])
[info]       :                 +- Exchange hashpartitioning(d_year#337, ws_item_sk#1023, ws_bill_customer_sk#1024, 4), true, [id=#46937]
[info]       :                    +- *(14) HashAggregate(keys=[d_year#337, ws_item_sk#1023, ws_bill_customer_sk#1024], functions=[partial_sum(cast(ws_quantity#1038 as bigint)), partial_sum(UnscaledValue(ws_wholesale_cost#1039)), partial_sum(UnscaledValue(ws_sales_price#1041))])
[info]       :                       +- *(14) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, d_year#337]
[info]       :                          +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                             :- *(14) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, ws_sold_date_sk#1054]
[info]       :                             :  +- *(14) Filter isnull(wr_order_number#1275L)
[info]       :                             :     +- SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], LeftOuter
[info]       :                             :        :- *(10) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]       :                             :        :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#46826]
[info]       :                             :        :     +- *(9) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, ws_sold_date_sk#1054]
[info]       :                             :        :        +- *(9) Filter ((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_item_sk#1023)) AND isnotnull(ws_bill_customer_sk#1024))
[info]       :                             :        :           +- *(9) ColumnarToRow
[info]       :                             :        :              +- BatchScan[ws_item_sk#1023, ws_bill_customer_sk#1024, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_order_number:bigint,ws_quantity:int,ws_wholesale...
[info]       :                             :        +- *(12) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]       :                             :           +- Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#46835]
[info]       :                             :              +- *(11) Project [wr_item_sk#1264, wr_order_number#1275L]
[info]       :                             :                 +- *(11) Filter (isnotnull(wr_order_number#1275L) AND isnotnull(wr_item_sk#1264))
[info]       :                             :                    +- *(11) ColumnarToRow
[info]       :                             :                       +- BatchScan[wr_item_sk#1264, wr_order_number#1275L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint>
[info]       :                             +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46806]
[info]       +- *(25) Sort [cs_sold_year#20435 ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST, cs_customer_sk#20436 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(cs_sold_year#20435, cs_item_sk#892, cs_customer_sk#20436, 4), true, [id=#46970]
[info]             +- *(24) Filter (coalesce(cs_qty#20437L, 0) > 0)
[info]                +- *(24) HashAggregate(keys=[d_year#337, cs_item_sk#892, cs_bill_customer_sk#880], functions=[sum(cast(cs_quantity#895 as bigint)), sum(UnscaledValue(cs_wholesale_cost#896)), sum(UnscaledValue(cs_sales_price#898))])
[info]                   +- Exchange hashpartitioning(d_year#337, cs_item_sk#892, cs_bill_customer_sk#880, 4), true, [id=#46965]
[info]                      +- *(23) HashAggregate(keys=[d_year#337, cs_item_sk#892, cs_bill_customer_sk#880], functions=[partial_sum(cast(cs_quantity#895 as bigint)), partial_sum(UnscaledValue(cs_wholesale_cost#896)), partial_sum(UnscaledValue(cs_sales_price#898))])
[info]                         +- *(23) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, d_year#337]
[info]                            +- *(23) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(23) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, cs_sold_date_sk#911]
[info]                               :  +- *(23) Filter isnull(cr_order_number#56L)
[info]                               :     +- SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], LeftOuter
[info]                               :        :- *(19) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                               :        :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#46873]
[info]                               :        :     +- *(18) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, cs_sold_date_sk#911]
[info]                               :        :        +- *(18) Filter ((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_item_sk#892))
[info]                               :        :           +- *(18) ColumnarToRow
[info]                               :        :              +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_wholesale...
[info]                               :        +- *(21) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]                               :           +- Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#46882]
[info]                               :              +- *(20) Project [cr_item_sk#42, cr_order_number#56L]
[info]                               :                 +- *(20) Filter (isnotnull(cr_order_number#56L) AND isnotnull(cr_item_sk#42))
[info]                               :                    +- *(20) ColumnarToRow
[info]                               :                       +- BatchScan[cr_item_sk#42, cr_order_number#56L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint>
[info]                               +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46806]
[info] 
[info] 
[info]   Stopped after 1 iterations, 383 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q78                                                 384            384           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q79
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_last_name#165 ASC NULLS FIRST,c_first_name#164 ASC NULLS FIRST,substring(s_city#692, 1, 30) ASC NULLS FIRST,profit#20529 ASC NULLS FIRST], output=[c_last_name#165,c_first_name#164,substring(s_city, 1, 30)#20532,ss_ticket_number#1172L,amt#20528,profit#20529])
[info] +- *(6) Project [c_last_name#165, c_first_name#164, substring(s_city#692, 1, 30) AS substring(s_city, 1, 30)#20532, ss_ticket_number#1172L, amt#20528, profit#20529, s_city#692]
[info]    +- *(6) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]       :- *(6) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, s_city#692], functions=[sum(UnscaledValue(ss_coupon_amt#1182)), sum(UnscaledValue(ss_net_profit#1185))])
[info]       :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, s_city#692, 4), true, [id=#47144]
[info]       :     +- *(4) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, s_city#692], functions=[partial_sum(UnscaledValue(ss_coupon_amt#1182)), partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]       :        +- *(4) Project [ss_customer_sk#1166, ss_addr_sk#1169, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185, s_city#692]
[info]       :           +- *(4) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]       :              :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185, s_city#692]
[info]       :              :  +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]       :              :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185]
[info]       :              :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :              :     :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]       :              :     :     :  +- *(4) Filter (((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_customer_sk#1166))
[info]       :              :     :     :     +- *(4) ColumnarToRow
[info]       :              :     :     :        +- BatchScan[ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_ticket_number:bigint,...
[info]       :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47120]
[info]       :              :     :        +- *(1) Project [d_date_sk#331]
[info]       :              :     :           +- *(1) Filter (((isnotnull(d_dow#338) AND (d_dow#338 = 1)) AND d_year#337 IN (1999,2000,2001)) AND isnotnull(d_date_sk#331))
[info]       :              :     :              +- *(1) ColumnarToRow
[info]       :              :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_dow#338] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_dow:int>
[info]       :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47129]
[info]       :              :        +- *(2) Project [s_store_sk#670, s_city#692]
[info]       :              :           +- *(2) Filter (((isnotnull(s_number_employees#676) AND (s_number_employees#676 >= 200)) AND (s_number_employees#676 <= 295)) AND isnotnull(s_store_sk#670))
[info]       :              :              +- *(2) ColumnarToRow
[info]       :              :                 +- BatchScan[s_store_sk#670, s_number_employees#676, s_city#692] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_number_employees:int,s_city:string>
[info]       :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47138]
[info]       :                 +- *(3) Project [hd_demo_sk#448]
[info]       :                    +- *(3) Filter (((hd_dep_count#451 = 6) OR (hd_vehicle_count#452 > 2)) AND isnotnull(hd_demo_sk#448))
[info]       :                       +- *(3) ColumnarToRow
[info]       :                          +- BatchScan[hd_demo_sk#448, hd_dep_count#451, hd_vehicle_count#452] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
[info]       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47152]
[info]          +- *(5) Project [c_customer_sk#156, c_first_name#164, c_last_name#165]
[info]             +- *(5) Filter isnotnull(c_customer_sk#156)
[info]                +- *(5) ColumnarToRow
[info]                   +- BatchScan[c_customer_sk#156, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 164 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q79                                                 165            165           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q80
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#20643 ASC NULLS FIRST,id#20644 ASC NULLS FIRST], output=[channel#20643,id#20644,sales#20614,returns#20615,profit#20616])
[info] +- *(32) HashAggregate(keys=[channel#20643, id#20644, spark_grouping_id#20640], functions=[sum(sales#20618), sum(returns#20619), sum(profit#20620)])
[info]    +- Exchange hashpartitioning(channel#20643, id#20644, spark_grouping_id#20640, 4), true, [id=#47987]
[info]       +- *(31) HashAggregate(keys=[channel#20643, id#20644, spark_grouping_id#20640], functions=[partial_sum(sales#20618), partial_sum(returns#20619), partial_sum(profit#20620)])
[info]          +- *(31) Expand [List(sales#20618, returns#20619, profit#20620, channel#20641, id#20642, 0), List(sales#20618, returns#20619, profit#20620, channel#20641, null, 1), List(sales#20618, returns#20619, profit#20620, null, null, 3)], [sales#20618, returns#20619, profit#20620, channel#20643, id#20644, spark_grouping_id#20640]
[info]             +- Union
[info]                :- *(10) HashAggregate(keys=[s_store_id#671], functions=[sum(UnscaledValue(ss_ext_sales_price#1178)), sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ss_net_profit#1185 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#809 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]                :  +- Exchange hashpartitioning(s_store_id#671, 4), true, [id=#47730]
[info]                :     +- *(9) HashAggregate(keys=[s_store_id#671], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178)), partial_sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ss_net_profit#1185 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#809 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]                :        +- *(9) Project [ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809, s_store_id#671]
[info]                :           +- *(9) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]                :              :- *(9) Project [ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809, s_store_id#671]
[info]                :              :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :              :     :- *(9) Project [ss_item_sk#1165, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809, s_store_id#671]
[info]                :              :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :              :     :     :- *(9) Project [ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809]
[info]                :              :     :     :  +- *(9) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :              :     :     :     :- *(9) Project [ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186, sr_return_amt#801, sr_net_loss#809]
[info]                :              :     :     :     :  +- SortMergeJoin [ss_item_sk#1165, ss_ticket_number#1172L], [sr_item_sk#792, sr_ticket_number#799L], LeftOuter
[info]                :              :     :     :     :     :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]                :              :     :     :     :     :  +- Exchange hashpartitioning(ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#47676]
[info]                :              :     :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                :              :     :     :     :     :        +- *(1) Filter (((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_promo_sk#1171))
[info]                :              :     :     :     :     :           +- *(1) ColumnarToRow
[info]                :              :     :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:bigint,ss_ext_sales_price:...
[info]                :              :     :     :     :     +- *(4) Sort [sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]                :              :     :     :     :        +- Exchange hashpartitioning(sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#47685]
[info]                :              :     :     :     :           +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L, sr_return_amt#801, sr_net_loss#809]
[info]                :              :     :     :     :              +- *(3) Filter (isnotnull(sr_item_sk#792) AND isnotnull(sr_ticket_number#799L))
[info]                :              :     :     :     :                 +- *(3) ColumnarToRow
[info]                :              :     :     :     :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L, sr_return_amt#801, sr_net_loss#809] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
[info]                :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47697]
[info]                :              :     :     :        +- *(5) Project [d_date_sk#331]
[info]                :              :     :     :           +- *(5) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 11192)) AND (d_date#333 <= 11222)) AND isnotnull(d_date_sk#331))
[info]                :              :     :     :              +- *(5) ColumnarToRow
[info]                :              :     :     :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47706]
[info]                :              :     :        +- *(6) Project [s_store_sk#670, s_store_id#671]
[info]                :              :     :           +- *(6) Filter isnotnull(s_store_sk#670)
[info]                :              :     :              +- *(6) ColumnarToRow
[info]                :              :     :                 +- BatchScan[s_store_sk#670, s_store_id#671] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string>
[info]                :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47715]
[info]                :              :        +- *(7) Project [i_item_sk#496]
[info]                :              :           +- *(7) Filter ((isnotnull(i_current_price#501) AND (i_current_price#501 > 50.00)) AND isnotnull(i_item_sk#496))
[info]                :              :              +- *(7) ColumnarToRow
[info]                :              :                 +- BatchScan[i_item_sk#496, i_current_price#501] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2)>
[info]                :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47724]
[info]                :                 +- *(8) Project [p_promo_sk#589]
[info]                :                    +- *(8) Filter ((isnotnull(p_channel_tv#600) AND (p_channel_tv#600 = N)) AND isnotnull(p_promo_sk#589))
[info]                :                       +- *(8) ColumnarToRow
[info]                :                          +- BatchScan[p_promo_sk#589, p_channel_tv#600] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int,p_channel_tv:string>
[info]                :- *(20) HashAggregate(keys=[cp_catalog_page_id#1], functions=[sum(UnscaledValue(cs_ext_sales_price#900)), sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(cs_net_profit#910 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#66 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]                :  +- Exchange hashpartitioning(cp_catalog_page_id#1, 4), true, [id=#47934]
[info]                :     +- *(19) HashAggregate(keys=[cp_catalog_page_id#1], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900)), partial_sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(cs_net_profit#910 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#66 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]                :        +- *(19) Project [cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66, cp_catalog_page_id#1]
[info]                :           +- *(19) BroadcastHashJoin [cs_promo_sk#893], [p_promo_sk#589], Inner, BuildRight
[info]                :              :- *(19) Project [cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66, cp_catalog_page_id#1]
[info]                :              :  +- *(19) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                :              :     :- *(19) Project [cs_item_sk#892, cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66, cp_catalog_page_id#1]
[info]                :              :     :  +- *(19) BroadcastHashJoin [cs_catalog_page_sk#889], [cp_catalog_page_sk#0], Inner, BuildRight
[info]                :              :     :     :- *(19) Project [cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66]
[info]                :              :     :     :  +- *(19) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :              :     :     :     :- *(19) Project [cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911, cr_return_amount#58, cr_net_loss#66]
[info]                :              :     :     :     :  +- SortMergeJoin [cs_item_sk#892, cs_order_number#894L], [cr_item_sk#42, cr_order_number#56L], LeftOuter
[info]                :              :     :     :     :     :- *(12) Sort [cs_item_sk#892 ASC NULLS FIRST, cs_order_number#894L ASC NULLS FIRST], false, 0
[info]                :              :     :     :     :     :  +- Exchange hashpartitioning(cs_item_sk#892, cs_order_number#894L, 4), true, [id=#47739]
[info]                :              :     :     :     :     :     +- *(11) Project [cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911]
[info]                :              :     :     :     :     :        +- *(11) Filter (((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_catalog_page_sk#889)) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_promo_sk#893))
[info]                :              :     :     :     :     :           +- *(11) ColumnarToRow
[info]                :              :     :     :     :     :              +- BatchScan[cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_catalog_page_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:bigint,cs_ext_sales_...
[info]                :              :     :     :     :     +- *(14) Sort [cr_item_sk#42 ASC NULLS FIRST, cr_order_number#56L ASC NULLS FIRST], false, 0
[info]                :              :     :     :     :        +- Exchange hashpartitioning(cr_item_sk#42, cr_order_number#56L, 4), true, [id=#47748]
[info]                :              :     :     :     :           +- *(13) Project [cr_item_sk#42, cr_order_number#56L, cr_return_amount#58, cr_net_loss#66]
[info]                :              :     :     :     :              +- *(13) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]                :              :     :     :     :                 +- *(13) ColumnarToRow
[info]                :              :     :     :     :                    +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_return_amount#58, cr_net_loss#66] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
[info]                :              :     :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47697]
[info]                :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47769]
[info]                :              :     :        +- *(16) Project [cp_catalog_page_sk#0, cp_catalog_page_id#1]
[info]                :              :     :           +- *(16) Filter isnotnull(cp_catalog_page_sk#0)
[info]                :              :     :              +- *(16) ColumnarToRow
[info]                :              :     :                 +- BatchScan[cp_catalog_page_sk#0, cp_catalog_page_id#1] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_page], ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>
[info]                :              :     +- ReusedExchange [i_item_sk#496], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47715]
[info]                :              +- ReusedExchange [p_promo_sk#589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47724]
[info]                +- *(30) HashAggregate(keys=[web_site_id#1367], functions=[sum(UnscaledValue(ws_ext_sales_price#1043)), sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ws_net_profit#1053 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#1285 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]                   +- Exchange hashpartitioning(web_site_id#1367, 4), true, [id=#47978]
[info]                      +- *(29) HashAggregate(keys=[web_site_id#1367], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043)), partial_sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ws_net_profit#1053 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#1285 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]                         +- *(29) Project [ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285, web_site_id#1367]
[info]                            +- *(29) BroadcastHashJoin [ws_promo_sk#1036], [p_promo_sk#589], Inner, BuildRight
[info]                               :- *(29) Project [ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285, web_site_id#1367]
[info]                               :  +- *(29) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                               :     :- *(29) Project [ws_item_sk#1023, ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285, web_site_id#1367]
[info]                               :     :  +- *(29) BroadcastHashJoin [ws_web_site_sk#1033], [web_site_sk#1366], Inner, BuildRight
[info]                               :     :     :- *(29) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285]
[info]                               :     :     :  +- *(29) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :     :     :     :- *(29) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054, wr_return_amt#1277, wr_net_loss#1285]
[info]                               :     :     :     :  +- SortMergeJoin [ws_item_sk#1023, ws_order_number#1037L], [wr_item_sk#1264, wr_order_number#1275L], LeftOuter
[info]                               :     :     :     :     :- *(22) Sort [ws_item_sk#1023 ASC NULLS FIRST, ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]                               :     :     :     :     :  +- Exchange hashpartitioning(ws_item_sk#1023, ws_order_number#1037L, 4), true, [id=#47802]
[info]                               :     :     :     :     :     +- *(21) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_order_number#1037L, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054]
[info]                               :     :     :     :     :        +- *(21) Filter (((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_web_site_sk#1033)) AND isnotnull(ws_item_sk#1023)) AND isnotnull(ws_promo_sk#1036))
[info]                               :     :     :     :     :           +- *(21) ColumnarToRow
[info]                               :     :     :     :     :              +- BatchScan[ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_order_number#1037L, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_promo_sk:int,ws_order_number:bigint,ws_ext_sales_pric...
[info]                               :     :     :     :     +- *(24) Sort [wr_item_sk#1264 ASC NULLS FIRST, wr_order_number#1275L ASC NULLS FIRST], false, 0
[info]                               :     :     :     :        +- Exchange hashpartitioning(wr_item_sk#1264, wr_order_number#1275L, 4), true, [id=#47811]
[info]                               :     :     :     :           +- *(23) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285]
[info]                               :     :     :     :              +- *(23) Filter (isnotnull(wr_item_sk#1264) AND isnotnull(wr_order_number#1275L))
[info]                               :     :     :     :                 +- *(23) ColumnarToRow
[info]                               :     :     :     :                    +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
[info]                               :     :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47697]
[info]                               :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47832]
[info]                               :     :        +- *(26) Project [web_site_sk#1366, web_site_id#1367]
[info]                               :     :           +- *(26) Filter isnotnull(web_site_sk#1366)
[info]                               :     :              +- *(26) ColumnarToRow
[info]                               :     :                 +- BatchScan[web_site_sk#1366, web_site_id#1367] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_site], ReadSchema: struct<web_site_sk:int,web_site_id:string>
[info]                               :     +- ReusedExchange [i_item_sk#496], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47715]
[info]                               +- ReusedExchange [p_promo_sk#589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47724]
[info] 
[info] 
[info]   Stopped after 1 iterations, 624 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q80                                                 624            624           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q81
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#157 ASC NULLS FIRST,c_salutation#163 ASC NULLS FIRST,c_first_name#164 ASC NULLS FIRST,c_last_name#165 ASC NULLS FIRST,ca_street_number#235 ASC NULLS FIRST,ca_street_name#236 ASC NULLS FIRST,ca_street_type#237 ASC NULLS FIRST,ca_suite_number#238 ASC NULLS FIRST,ca_city#239 ASC NULLS FIRST,ca_county#240 ASC NULLS FIRST,ca_state#241 ASC NULLS FIRST,ca_zip#242 ASC NULLS FIRST,ca_country#243 ASC NULLS FIRST,ca_gmt_offset#244 ASC NULLS FIRST,ca_location_type#245 ASC NULLS FIRST,ctr_total_return#20770 ASC NULLS FIRST], output=[c_customer_id#157,c_salutation#163,c_first_name#164,c_last_name#165,ca_street_number#235,ca_street_name#236,ca_street_type#237,ca_suite_number#238,ca_city#239,ca_county#240,ca_state#241,ca_zip#242,ca_country#243,ca_gmt_offset#244,ca_location_type#245,ctr_total_return#20770])
[info] +- *(14) Project [c_customer_id#157, c_salutation#163, c_first_name#164, c_last_name#165, ca_street_number#235, ca_street_name#236, ca_street_type#237, ca_suite_number#238, ca_city#239, ca_county#240, ca_state#241, ca_zip#242, ca_country#243, ca_gmt_offset#244, ca_location_type#245, ctr_total_return#20770]
[info]    +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]       :- *(14) Project [ctr_total_return#20770, c_customer_id#157, c_current_addr_sk#160, c_salutation#163, c_first_name#164, c_last_name#165]
[info]       :  +- *(14) BroadcastHashJoin [ctr_customer_sk#20768], [c_customer_sk#156], Inner, BuildRight
[info]       :     :- *(14) Project [ctr_customer_sk#20768, ctr_total_return#20770]
[info]       :     :  +- *(14) SortMergeJoin [ctr_state#20769], [ctr_state#20769#20791], Inner, (cast(ctr_total_return#20770 as decimal(24,7)) > (CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#20774)
[info]       :     :     :- *(5) Sort [ctr_state#20769 ASC NULLS FIRST], false, 0
[info]       :     :     :  +- Exchange hashpartitioning(ctr_state#20769, 4), true, [id=#48277]
[info]       :     :     :     +- *(4) Filter isnotnull(ctr_total_return#20770)
[info]       :     :     :        +- *(4) HashAggregate(keys=[cr_returning_customer_sk#47, ca_state#241], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#60))])
[info]       :     :     :           +- Exchange hashpartitioning(cr_returning_customer_sk#47, ca_state#241, 4), true, [id=#48272]
[info]       :     :     :              +- *(3) HashAggregate(keys=[cr_returning_customer_sk#47, ca_state#241], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#60))])
[info]       :     :     :                 +- *(3) Project [cr_returning_customer_sk#47, cr_return_amt_inc_tax#60, ca_state#241]
[info]       :     :     :                    +- *(3) BroadcastHashJoin [cr_returning_addr_sk#50], [ca_address_sk#233], Inner, BuildRight
[info]       :     :     :                       :- *(3) Project [cr_returning_customer_sk#47, cr_returning_addr_sk#50, cr_return_amt_inc_tax#60]
[info]       :     :     :                       :  +- *(3) BroadcastHashJoin [cr_returned_date_sk#67], [d_date_sk#331], Inner, BuildRight
[info]       :     :     :                       :     :- *(3) Project [cr_returning_customer_sk#47, cr_returning_addr_sk#50, cr_return_amt_inc_tax#60, cr_returned_date_sk#67]
[info]       :     :     :                       :     :  +- *(3) Filter ((isnotnull(cr_returned_date_sk#67) AND isnotnull(cr_returning_addr_sk#50)) AND isnotnull(cr_returning_customer_sk#47))
[info]       :     :     :                       :     :     +- *(3) ColumnarToRow
[info]       :     :     :                       :     :        +- BatchScan[cr_returning_customer_sk#47, cr_returning_addr_sk#50, cr_return_amt_inc_tax#60, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>
[info]       :     :     :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48257]
[info]       :     :     :                       :        +- *(1) Project [d_date_sk#331]
[info]       :     :     :                       :           +- *(1) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]       :     :     :                       :              +- *(1) ColumnarToRow
[info]       :     :     :                       :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48266]
[info]       :     :     :                          +- *(2) Project [ca_address_sk#233, ca_state#241]
[info]       :     :     :                             +- *(2) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_state#241))
[info]       :     :     :                                +- *(2) ColumnarToRow
[info]       :     :     :                                   +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]       :     :     +- *(11) Sort [ctr_state#20769#20791 ASC NULLS FIRST], false, 0
[info]       :     :        +- Exchange hashpartitioning(ctr_state#20769#20791, 4), true, [id=#48435]
[info]       :     :           +- *(10) Filter isnotnull((CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#20774)
[info]       :     :              +- *(10) HashAggregate(keys=[ctr_state#20769], functions=[avg(ctr_total_return#20770)])
[info]       :     :                 +- Exchange hashpartitioning(ctr_state#20769, 4), true, [id=#48430]
[info]       :     :                    +- *(9) HashAggregate(keys=[ctr_state#20769], functions=[partial_avg(ctr_total_return#20770)])
[info]       :     :                       +- *(9) HashAggregate(keys=[cr_returning_customer_sk#47, ca_state#241], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#60))])
[info]       :     :                          +- Exchange hashpartitioning(cr_returning_customer_sk#47, ca_state#241, 4), true, [id=#48383]
[info]       :     :                             +- *(8) HashAggregate(keys=[cr_returning_customer_sk#47, ca_state#241], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#60))])
[info]       :     :                                +- *(8) Project [cr_returning_customer_sk#47, cr_return_amt_inc_tax#60, ca_state#241]
[info]       :     :                                   +- *(8) BroadcastHashJoin [cr_returning_addr_sk#50], [ca_address_sk#233], Inner, BuildRight
[info]       :     :                                      :- *(8) Project [cr_returning_customer_sk#47, cr_returning_addr_sk#50, cr_return_amt_inc_tax#60]
[info]       :     :                                      :  +- *(8) BroadcastHashJoin [cr_returned_date_sk#67], [d_date_sk#331], Inner, BuildRight
[info]       :     :                                      :     :- *(8) Project [cr_returning_customer_sk#47, cr_returning_addr_sk#50, cr_return_amt_inc_tax#60, cr_returned_date_sk#67]
[info]       :     :                                      :     :  +- *(8) Filter (isnotnull(cr_returned_date_sk#67) AND isnotnull(cr_returning_addr_sk#50))
[info]       :     :                                      :     :     +- *(8) ColumnarToRow
[info]       :     :                                      :     :        +- BatchScan[cr_returning_customer_sk#47, cr_returning_addr_sk#50, cr_return_amt_inc_tax#60, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>
[info]       :     :                                      :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48257]
[info]       :     :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48300]
[info]       :     :                                         +- *(7) Project [ca_address_sk#233, ca_state#241]
[info]       :     :                                            +- *(7) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_state#241))
[info]       :     :                                               +- *(7) ColumnarToRow
[info]       :     :                                                  +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48328]
[info]       :        +- *(12) Project [c_customer_sk#156, c_customer_id#157, c_current_addr_sk#160, c_salutation#163, c_first_name#164, c_last_name#165]
[info]       :           +- *(12) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]       :              +- *(12) ColumnarToRow
[info]       :                 +- BatchScan[c_customer_sk#156, c_customer_id#157, c_current_addr_sk#160, c_salutation#163, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_n...
[info]       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48337]
[info]          +- *(13) Project [ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_street_type#237, ca_suite_number#238, ca_city#239, ca_county#240, ca_state#241, ca_zip#242, ca_country#243, ca_gmt_offset#244, ca_location_type#245]
[info]             +- *(13) Filter ((isnotnull(ca_state#241) AND (ca_state#241 = GA)) AND isnotnull(ca_address_sk#233))
[info]                +- *(13) ColumnarToRow
[info]                   +- BatchScan[ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_street_type#237, ca_suite_number#238, ca_city#239, ca_county#240, ca_state#241, ca_zip#242, ca_country#243, ca_gmt_offset#244, ca_location_type#245] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_s...
[info] 
[info] 
[info]   Stopped after 1 iterations, 344 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q81                                                 345            345           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q82
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST], output=[i_item_id#497,i_item_desc#500,i_current_price#501])
[info] +- *(8) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_current_price#501], functions=[])
[info]    +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_current_price#501, 4), true, [id=#48603]
[info]       +- *(7) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_current_price#501], functions=[])
[info]          +- *(7) Project [i_item_id#497, i_item_desc#500, i_current_price#501]
[info]             +- *(7) SortMergeJoin [i_item_sk#496], [ss_item_sk#1165], Inner
[info]                :- *(4) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]                :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#48584]
[info]                :     +- *(3) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501]
[info]                :        +- *(3) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]                :           :- *(3) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, inv_date_sk#476]
[info]                :           :  +- *(3) BroadcastHashJoin [i_item_sk#496], [inv_item_sk#473], Inner, BuildLeft
[info]                :           :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48566]
[info]                :           :     :  +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501]
[info]                :           :     :     +- *(1) Filter (((((cast(i_current_price#501 as decimal(12,2)) <= 92.00) AND isnotnull(i_current_price#501)) AND (i_current_price#501 >= 62.00)) AND i_manufact_id#509 IN (129,270,821,423)) AND isnotnull(i_item_sk#496))
[info]                :           :     :        +- *(1) ColumnarToRow
[info]                :           :     :           +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_manufact_...
[info]                :           :     +- *(3) Project [inv_item_sk#473, inv_date_sk#476]
[info]                :           :        +- *(3) Filter ((((isnotnull(inv_quantity_on_hand#475) AND (inv_quantity_on_hand#475 >= 100)) AND (inv_quantity_on_hand#475 <= 500)) AND isnotnull(inv_item_sk#473)) AND isnotnull(inv_date_sk#476))
[info]                :           :           +- *(3) ColumnarToRow
[info]                :           :              +- BatchScan[inv_item_sk#473, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_quantity_on_hand:int>
[info]                :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48579]
[info]                :              +- *(2) Project [d_date_sk#331]
[info]                :                 +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 11102)) AND (d_date#333 <= 11162)) AND isnotnull(d_date_sk#331))
[info]                :                    +- *(2) ColumnarToRow
[info]                :                       +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                +- *(6) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                   +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#48594]
[info]                      +- *(5) Project [ss_item_sk#1165]
[info]                         +- *(5) Filter isnotnull(ss_item_sk#1165)
[info]                            +- *(5) ColumnarToRow
[info]                               +- BatchScan[ss_item_sk#1165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 122 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q82                                                 122            122           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q83
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[item_id#20890 ASC NULLS FIRST,sr_item_qty#20891L ASC NULLS FIRST], output=[item_id#20890,sr_item_qty#20891L,sr_dev#20884,cr_item_qty#20895L,cr_dev#20885,wr_item_qty#20899L,wr_dev#20886,average#20887])
[info] +- *(23) Project [item_id#20890, sr_item_qty#20891L, (((cast(sr_item_qty#20891L as double) / cast(((sr_item_qty#20891L + cr_item_qty#20895L) + wr_item_qty#20899L) as double)) / 3.0) * 100.0) AS sr_dev#20884, cr_item_qty#20895L, (((cast(cr_item_qty#20895L as double) / cast(((sr_item_qty#20891L + cr_item_qty#20895L) + wr_item_qty#20899L) as double)) / 3.0) * 100.0) AS cr_dev#20885, wr_item_qty#20899L, (((cast(wr_item_qty#20899L as double) / cast(((sr_item_qty#20891L + cr_item_qty#20895L) + wr_item_qty#20899L) as double)) / 3.0) * 100.0) AS wr_dev#20886, CheckOverflow((promote_precision(cast(cast(((sr_item_qty#20891L + cr_item_qty#20895L) + wr_item_qty#20899L) as decimal(20,0)) as decimal(21,1))) / 3.0), DecimalType(27,6), true) AS average#20887]
[info]    +- *(23) SortMergeJoin [item_id#20890], [item_id#20898], Inner
[info]       :- *(15) Project [item_id#20890, sr_item_qty#20891L, cr_item_qty#20895L]
[info]       :  +- *(15) SortMergeJoin [item_id#20890], [item_id#20894], Inner
[info]       :     :- *(7) Sort [item_id#20890 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(item_id#20890, 4), true, [id=#49094]
[info]       :     :     +- *(6) HashAggregate(keys=[i_item_id#497], functions=[sum(cast(sr_return_quantity#800 as bigint))])
[info]       :     :        +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#49090]
[info]       :     :           +- *(5) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(cast(sr_return_quantity#800 as bigint))])
[info]       :     :              +- *(5) Project [sr_return_quantity#800, i_item_id#497]
[info]       :     :                 +- *(5) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#331], Inner, BuildRight
[info]       :     :                    :- *(5) Project [sr_return_quantity#800, sr_returned_date_sk#810, i_item_id#497]
[info]       :     :                    :  +- *(5) BroadcastHashJoin [sr_item_sk#792], [i_item_sk#496], Inner, BuildRight
[info]       :     :                    :     :- *(5) Project [sr_item_sk#792, sr_return_quantity#800, sr_returned_date_sk#810]
[info]       :     :                    :     :  +- *(5) Filter (isnotnull(sr_item_sk#792) AND isnotnull(sr_returned_date_sk#810))
[info]       :     :                    :     :     +- *(5) ColumnarToRow
[info]       :     :                    :     :        +- BatchScan[sr_item_sk#792, sr_return_quantity#800, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_return_quantity:int>
[info]       :     :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49059]
[info]       :     :                    :        +- *(1) Project [i_item_sk#496, i_item_id#497]
[info]       :     :                    :           +- *(1) Filter (isnotnull(i_item_sk#496) AND isnotnull(i_item_id#497))
[info]       :     :                    :              +- *(1) ColumnarToRow
[info]       :     :                    :                 +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]       :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49084]
[info]       :     :                       +- *(4) Project [d_date_sk#331]
[info]       :     :                          +- *(4) BroadcastHashJoin [d_date#333], [d_date#333#20947], LeftSemi, BuildRight
[info]       :     :                             :- *(4) Project [d_date_sk#331, d_date#333]
[info]       :     :                             :  +- *(4) Filter isnotnull(d_date_sk#331)
[info]       :     :                             :     +- *(4) ColumnarToRow
[info]       :     :                             :        +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]       :     :                             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, date, true])), [id=#49079]
[info]       :     :                                +- *(3) Project [d_date#333 AS d_date#333#20947]
[info]       :     :                                   +- *(3) BroadcastHashJoin [d_week_seq#335], [d_week_seq#335#20915], LeftSemi, BuildRight
[info]       :     :                                      :- *(3) ColumnarToRow
[info]       :     :                                      :  +- BatchScan[d_date#333, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date:date,d_week_seq:int>
[info]       :     :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49074]
[info]       :     :                                         +- *(2) Project [d_week_seq#335 AS d_week_seq#335#20915]
[info]       :     :                                            +- *(2) Filter cast(d_date#333 as string) IN (2000-06-30,2000-09-27,2000-11-17)
[info]       :     :                                               +- *(2) ColumnarToRow
[info]       :     :                                                  +- BatchScan[d_date#333, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date:date,d_week_seq:int>
[info]       :     +- *(14) Sort [item_id#20894 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(item_id#20894, 4), true, [id=#49351]
[info]       :           +- *(13) HashAggregate(keys=[i_item_id#497], functions=[sum(cast(cr_return_quantity#57 as bigint))])
[info]       :              +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#49305]
[info]       :                 +- *(12) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(cast(cr_return_quantity#57 as bigint))])
[info]       :                    +- *(12) Project [cr_return_quantity#57, i_item_id#497]
[info]       :                       +- *(12) BroadcastHashJoin [cr_returned_date_sk#67], [d_date_sk#331], Inner, BuildRight
[info]       :                          :- *(12) Project [cr_return_quantity#57, cr_returned_date_sk#67, i_item_id#497]
[info]       :                          :  +- *(12) BroadcastHashJoin [cr_item_sk#42], [i_item_sk#496], Inner, BuildRight
[info]       :                          :     :- *(12) Project [cr_item_sk#42, cr_return_quantity#57, cr_returned_date_sk#67]
[info]       :                          :     :  +- *(12) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_returned_date_sk#67))
[info]       :                          :     :     +- *(12) ColumnarToRow
[info]       :                          :     :        +- BatchScan[cr_item_sk#42, cr_return_quantity#57, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_return_quantity:int>
[info]       :                          :     +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49059]
[info]       :                          +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49084]
[info]       +- *(22) Sort [item_id#20898 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(item_id#20898, 4), true, [id=#49446]
[info]             +- *(21) HashAggregate(keys=[i_item_id#497], functions=[sum(cast(wr_return_quantity#1276 as bigint))])
[info]                +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#49421]
[info]                   +- *(20) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(cast(wr_return_quantity#1276 as bigint))])
[info]                      +- *(20) Project [wr_return_quantity#1276, i_item_id#497]
[info]                         +- *(20) BroadcastHashJoin [wr_returned_date_sk#1286], [d_date_sk#331], Inner, BuildRight
[info]                            :- *(20) Project [wr_return_quantity#1276, wr_returned_date_sk#1286, i_item_id#497]
[info]                            :  +- *(20) BroadcastHashJoin [wr_item_sk#1264], [i_item_sk#496], Inner, BuildRight
[info]                            :     :- *(20) Project [wr_item_sk#1264, wr_return_quantity#1276, wr_returned_date_sk#1286]
[info]                            :     :  +- *(20) Filter (isnotnull(wr_item_sk#1264) AND isnotnull(wr_returned_date_sk#1286))
[info]                            :     :     +- *(20) ColumnarToRow
[info]                            :     :        +- BatchScan[wr_item_sk#1264, wr_return_quantity#1276, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_return_quantity:int>
[info]                            :     +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49059]
[info]                            +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49084]
[info] 
[info] 
[info]   Stopped after 1 iterations, 499 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q83                                                 499            499           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q84
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#157 ASC NULLS FIRST], output=[customer_id#20966,customername#20967])
[info] +- *(9) Project [c_customer_id#157 AS customer_id#20966, concat(c_last_name#165, , , c_first_name#164) AS customername#20967, c_customer_id#157]
[info]    +- *(9) SortMergeJoin [cd_demo_sk#290], [sr_cdemo_sk#794], Inner
[info]       :- *(6) Sort [cd_demo_sk#290 ASC NULLS FIRST], false, 0
[info]       :  +- Exchange hashpartitioning(cd_demo_sk#290, 4), true, [id=#49647]
[info]       :     +- *(5) Project [c_customer_id#157, c_first_name#164, c_last_name#165, cd_demo_sk#290]
[info]       :        +- *(5) BroadcastHashJoin [hd_income_band_sk#449], [ib_income_band_sk#1711], Inner, BuildRight
[info]       :           :- *(5) Project [c_customer_id#157, c_first_name#164, c_last_name#165, cd_demo_sk#290, hd_income_band_sk#449]
[info]       :           :  +- *(5) BroadcastHashJoin [c_current_hdemo_sk#159], [hd_demo_sk#448], Inner, BuildRight
[info]       :           :     :- *(5) Project [c_customer_id#157, c_current_hdemo_sk#159, c_first_name#164, c_last_name#165, cd_demo_sk#290]
[info]       :           :     :  +- *(5) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]       :           :     :     :- *(5) Project [c_customer_id#157, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_first_name#164, c_last_name#165]
[info]       :           :     :     :  +- *(5) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]       :           :     :     :     :- *(5) Project [c_customer_id#157, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_name#164, c_last_name#165]
[info]       :           :     :     :     :  +- *(5) Filter ((isnotnull(c_current_addr_sk#160) AND isnotnull(c_current_cdemo_sk#158)) AND isnotnull(c_current_hdemo_sk#159))
[info]       :           :     :     :     :     +- *(5) ColumnarToRow
[info]       :           :     :     :     :        +- BatchScan[c_customer_id#157, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_id:string,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int,c...
[info]       :           :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49615]
[info]       :           :     :     :        +- *(1) Project [ca_address_sk#233]
[info]       :           :     :     :           +- *(1) Filter ((isnotnull(ca_city#239) AND (ca_city#239 = Edgewood)) AND isnotnull(ca_address_sk#233))
[info]       :           :     :     :              +- *(1) ColumnarToRow
[info]       :           :     :     :                 +- BatchScan[ca_address_sk#233, ca_city#239] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_city:string>
[info]       :           :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49624]
[info]       :           :     :        +- *(2) Project [cd_demo_sk#290]
[info]       :           :     :           +- *(2) Filter isnotnull(cd_demo_sk#290)
[info]       :           :     :              +- *(2) ColumnarToRow
[info]       :           :     :                 +- BatchScan[cd_demo_sk#290] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int>
[info]       :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49633]
[info]       :           :        +- *(3) Project [hd_demo_sk#448, hd_income_band_sk#449]
[info]       :           :           +- *(3) Filter (isnotnull(hd_demo_sk#448) AND isnotnull(hd_income_band_sk#449))
[info]       :           :              +- *(3) ColumnarToRow
[info]       :           :                 +- BatchScan[hd_demo_sk#448, hd_income_band_sk#449] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_income_band_sk:int>
[info]       :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49642]
[info]       :              +- *(4) Project [ib_income_band_sk#1711]
[info]       :                 +- *(4) Filter ((((isnotnull(ib_lower_bound#1712) AND isnotnull(ib_upper_bound#1713)) AND (ib_lower_bound#1712 >= 38128)) AND (ib_upper_bound#1713 <= 88128)) AND isnotnull(ib_income_band_sk#1711))
[info]       :                    +- *(4) ColumnarToRow
[info]       :                       +- BatchScan[ib_income_band_sk#1711, ib_lower_bound#1712, ib_upper_bound#1713] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/income_band], ReadSchema: struct<ib_income_band_sk:int,ib_lower_bound:int,ib_upper_bound:int>
[info]       +- *(8) Sort [sr_cdemo_sk#794 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(sr_cdemo_sk#794, 4), true, [id=#49657]
[info]             +- *(7) Project [sr_cdemo_sk#794]
[info]                +- *(7) Filter isnotnull(sr_cdemo_sk#794)
[info]                   +- *(7) ColumnarToRow
[info]                      +- BatchScan[sr_cdemo_sk#794] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_cdemo_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 169 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q84                                                 169            169           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q85
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[substring(r_reason_desc, 1, 20)#21022 ASC NULLS FIRST,aggOrder#21027 ASC NULLS FIRST,avg(wr_refunded_cash)#21024 ASC NULLS FIRST,avg(wr_fee)#21025 ASC NULLS FIRST], output=[substring(r_reason_desc, 1, 20)#21022,avg(ws_quantity)#21023,avg(wr_refunded_cash)#21024,avg(wr_fee)#21025])
[info] +- *(12) HashAggregate(keys=[r_reason_desc#1477], functions=[avg(cast(ws_quantity#1038 as bigint)), avg(UnscaledValue(wr_refunded_cash#1282)), avg(UnscaledValue(wr_fee#1280))])
[info]    +- Exchange hashpartitioning(r_reason_desc#1477, 4), true, [id=#49961]
[info]       +- *(11) HashAggregate(keys=[r_reason_desc#1477], functions=[partial_avg(cast(ws_quantity#1038 as bigint)), partial_avg(UnscaledValue(wr_refunded_cash#1282)), partial_avg(UnscaledValue(wr_fee#1280))])
[info]          +- *(11) Project [ws_quantity#1038, wr_fee#1280, wr_refunded_cash#1282, r_reason_desc#1477]
[info]             +- *(11) BroadcastHashJoin [wr_reason_sk#1274], [r_reason_sk#1475], Inner, BuildRight
[info]                :- *(11) Project [ws_quantity#1038, wr_reason_sk#1274, wr_fee#1280, wr_refunded_cash#1282]
[info]                :  +- *(11) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :- *(11) Project [ws_quantity#1038, ws_sold_date_sk#1054, wr_reason_sk#1274, wr_fee#1280, wr_refunded_cash#1282]
[info]                :     :  +- *(11) BroadcastHashJoin [wr_refunded_addr_sk#1268], [ca_address_sk#233], Inner, BuildRight, ((((ca_state#241 IN (IN,OH,NJ) AND (ws_net_profit#1053 >= 100.00)) AND (ws_net_profit#1053 <= 200.00)) OR ((ca_state#241 IN (WI,CT,KY) AND (ws_net_profit#1053 >= 150.00)) AND (ws_net_profit#1053 <= 300.00))) OR ((ca_state#241 IN (LA,IA,AR) AND (ws_net_profit#1053 >= 50.00)) AND (ws_net_profit#1053 <= 250.00)))
[info]                :     :     :- *(11) Project [ws_quantity#1038, ws_net_profit#1053, ws_sold_date_sk#1054, wr_refunded_addr_sk#1268, wr_reason_sk#1274, wr_fee#1280, wr_refunded_cash#1282]
[info]                :     :     :  +- *(11) BroadcastHashJoin [wr_returning_cdemo_sk#1270, cd_marital_status#292, cd_education_status#293], [cd_demo_sk#21010, cd_marital_status#21012, cd_education_status#21013], Inner, BuildRight
[info]                :     :     :     :- *(11) Project [ws_quantity#1038, ws_net_profit#1053, ws_sold_date_sk#1054, wr_refunded_addr_sk#1268, wr_returning_cdemo_sk#1270, wr_reason_sk#1274, wr_fee#1280, wr_refunded_cash#1282, cd_marital_status#292, cd_education_status#293]
[info]                :     :     :     :  +- *(11) BroadcastHashJoin [wr_refunded_cdemo_sk#1266], [cd_demo_sk#290], Inner, BuildRight, ((((((cd_marital_status#292 = M) AND (cd_education_status#293 = Advanced Degree)) AND (ws_sales_price#1041 >= 100.00)) AND (ws_sales_price#1041 <= 150.00)) OR ((((cd_marital_status#292 = S) AND (cd_education_status#293 = College)) AND (ws_sales_price#1041 >= 50.00)) AND (ws_sales_price#1041 <= 100.00))) OR ((((cd_marital_status#292 = W) AND (cd_education_status#293 = 2 yr Degree)) AND (ws_sales_price#1041 >= 150.00)) AND (ws_sales_price#1041 <= 200.00)))
[info]                :     :     :     :     :- *(11) Project [ws_quantity#1038, ws_sales_price#1041, ws_net_profit#1053, ws_sold_date_sk#1054, wr_refunded_cdemo_sk#1266, wr_refunded_addr_sk#1268, wr_returning_cdemo_sk#1270, wr_reason_sk#1274, wr_fee#1280, wr_refunded_cash#1282]
[info]                :     :     :     :     :  +- *(11) BroadcastHashJoin [ws_web_page_sk#1032], [wp_web_page_sk#1773], Inner, BuildRight
[info]                :     :     :     :     :     :- *(11) Project [ws_web_page_sk#1032, ws_quantity#1038, ws_sales_price#1041, ws_net_profit#1053, ws_sold_date_sk#1054, wr_refunded_cdemo_sk#1266, wr_refunded_addr_sk#1268, wr_returning_cdemo_sk#1270, wr_reason_sk#1274, wr_fee#1280, wr_refunded_cash#1282]
[info]                :     :     :     :     :     :  +- *(11) SortMergeJoin [ws_item_sk#1023, ws_order_number#1037L], [wr_item_sk#1264, wr_order_number#1275L], Inner
[info]                :     :     :     :     :     :     :- *(2) Sort [ws_item_sk#1023 ASC NULLS FIRST, ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :     :  +- Exchange hashpartitioning(ws_item_sk#1023, ws_order_number#1037L, 4), true, [id=#49888]
[info]                :     :     :     :     :     :     :     +- *(1) Project [ws_item_sk#1023, ws_web_page_sk#1032, ws_order_number#1037L, ws_quantity#1038, ws_sales_price#1041, ws_net_profit#1053, ws_sold_date_sk#1054]
[info]                :     :     :     :     :     :     :        +- *(1) Filter (((isnotnull(ws_item_sk#1023) AND isnotnull(ws_order_number#1037L)) AND isnotnull(ws_web_page_sk#1032)) AND isnotnull(ws_sold_date_sk#1054))
[info]                :     :     :     :     :     :     :           +- *(1) ColumnarToRow
[info]                :     :     :     :     :     :     :              +- BatchScan[ws_item_sk#1023, ws_web_page_sk#1032, ws_order_number#1037L, ws_quantity#1038, ws_sales_price#1041, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_web_page_sk:int,ws_order_number:bigint,ws_quantity:int,ws_sales_price:de...
[info]                :     :     :     :     :     :     +- *(4) Sort [wr_item_sk#1264 ASC NULLS FIRST, wr_order_number#1275L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :        +- Exchange hashpartitioning(wr_item_sk#1264, wr_order_number#1275L, 4), true, [id=#49898]
[info]                :     :     :     :     :     :           +- *(3) Project [wr_item_sk#1264, wr_refunded_cdemo_sk#1266, wr_refunded_addr_sk#1268, wr_returning_cdemo_sk#1270, wr_reason_sk#1274, wr_order_number#1275L, wr_fee#1280, wr_refunded_cash#1282]
[info]                :     :     :     :     :     :              +- *(3) Filter (((((isnotnull(wr_item_sk#1264) AND isnotnull(wr_order_number#1275L)) AND isnotnull(wr_refunded_cdemo_sk#1266)) AND isnotnull(wr_returning_cdemo_sk#1270)) AND isnotnull(wr_refunded_addr_sk#1268)) AND isnotnull(wr_reason_sk#1274))
[info]                :     :     :     :     :     :                 +- *(3) ColumnarToRow
[info]                :     :     :     :     :     :                    +- BatchScan[wr_item_sk#1264, wr_refunded_cdemo_sk#1266, wr_refunded_addr_sk#1268, wr_returning_cdemo_sk#1270, wr_reason_sk#1274, wr_order_number#1275L, wr_fee#1280, wr_refunded_cash#1282] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_refunded_cdemo_sk:int,wr_refunded_addr_sk:int,wr_returning_cdemo_sk:int,...
[info]                :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49910]
[info]                :     :     :     :     :        +- *(5) Project [wp_web_page_sk#1773]
[info]                :     :     :     :     :           +- *(5) Filter isnotnull(wp_web_page_sk#1773)
[info]                :     :     :     :     :              +- *(5) ColumnarToRow
[info]                :     :     :     :     :                 +- BatchScan[wp_web_page_sk#1773] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_page], ReadSchema: struct<wp_web_page_sk:int>
[info]                :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49919]
[info]                :     :     :     :        +- *(6) Project [cd_demo_sk#290, cd_marital_status#292, cd_education_status#293]
[info]                :     :     :     :           +- *(6) Filter ((isnotnull(cd_demo_sk#290) AND isnotnull(cd_marital_status#292)) AND isnotnull(cd_education_status#293))
[info]                :     :     :     :              +- *(6) ColumnarToRow
[info]                :     :     :     :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, true], input[1, string, true], input[2, string, true])), [id=#49928]
[info]                :     :     :        +- *(7) Project [cd_demo_sk#21010, cd_marital_status#21012, cd_education_status#21013]
[info]                :     :     :           +- *(7) Filter ((isnotnull(cd_marital_status#21012) AND isnotnull(cd_demo_sk#21010)) AND isnotnull(cd_education_status#21013))
[info]                :     :     :              +- *(7) ColumnarToRow
[info]                :     :     :                 +- BatchScan[cd_demo_sk#21010, cd_marital_status#21012, cd_education_status#21013] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49937]
[info]                :     :        +- *(8) Project [ca_address_sk#233, ca_state#241]
[info]                :     :           +- *(8) Filter ((isnotnull(ca_country#243) AND (ca_country#243 = United States)) AND isnotnull(ca_address_sk#233))
[info]                :     :              +- *(8) ColumnarToRow
[info]                :     :                 +- BatchScan[ca_address_sk#233, ca_state#241, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49946]
[info]                :        +- *(9) Project [d_date_sk#331]
[info]                :           +- *(9) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                :              +- *(9) ColumnarToRow
[info]                :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49955]
[info]                   +- *(10) Project [r_reason_sk#1475, r_reason_desc#1477]
[info]                      +- *(10) Filter isnotnull(r_reason_sk#1475)
[info]                         +- *(10) ColumnarToRow
[info]                            +- BatchScan[r_reason_sk#1475, r_reason_desc#1477] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/reason], ReadSchema: struct<r_reason_sk:int,r_reason_desc:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 336 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q85                                                 336            336           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q86
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#21122 DESC NULLS LAST,CASE WHEN (cast(lochierarchy#21122 as int) = 0) THEN i_category#21131 END ASC NULLS FIRST,rank_within_parent#21123 ASC NULLS FIRST], output=[total_sum#21121,i_category#21131,i_class#21132,lochierarchy#21122,rank_within_parent#21123])
[info] +- *(6) Project [total_sum#21121, i_category#21131, i_class#21132, lochierarchy#21122, rank_within_parent#21123]
[info]    +- Window [rank(_w3#21147) windowspecdefinition(_w1#21145, _w2#21146, _w3#21147 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#21123], [_w1#21145, _w2#21146], [_w3#21147 DESC NULLS LAST]
[info]       +- *(5) Sort [_w1#21145 ASC NULLS FIRST, _w2#21146 ASC NULLS FIRST, _w3#21147 DESC NULLS LAST], false, 0
[info]          +- Exchange hashpartitioning(_w1#21145, _w2#21146, 4), true, [id=#50114]
[info]             +- *(4) HashAggregate(keys=[i_category#21131, i_class#21132, spark_grouping_id#21128], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]                +- Exchange hashpartitioning(i_category#21131, i_class#21132, spark_grouping_id#21128, 4), true, [id=#50110]
[info]                   +- *(3) HashAggregate(keys=[i_category#21131, i_class#21132, spark_grouping_id#21128], functions=[partial_sum(UnscaledValue(ws_net_paid#1049))])
[info]                      +- *(3) Expand [List(ws_net_paid#1049, i_category#508, i_class#506, 0), List(ws_net_paid#1049, i_category#508, null, 1), List(ws_net_paid#1049, null, null, 3)], [ws_net_paid#1049, i_category#21131, i_class#21132, spark_grouping_id#21128]
[info]                         +- *(3) Project [ws_net_paid#1049, i_category#508, i_class#506]
[info]                            +- *(3) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                               :- *(3) Project [ws_item_sk#1023, ws_net_paid#1049]
[info]                               :  +- *(3) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :     :- *(3) Project [ws_item_sk#1023, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]                               :     :  +- *(3) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_item_sk#1023))
[info]                               :     :     +- *(3) ColumnarToRow
[info]                               :     :        +- BatchScan[ws_item_sk#1023, ws_net_paid#1049, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_net_paid:decimal(7,2)>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#50094]
[info]                               :        +- *(1) Project [d_date_sk#331]
[info]                               :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                               :              +- *(1) ColumnarToRow
[info]                               :                 +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#50103]
[info]                                  +- *(2) Project [i_item_sk#496, i_class#506, i_category#508]
[info]                                     +- *(2) Filter isnotnull(i_item_sk#496)
[info]                                        +- *(2) ColumnarToRow
[info]                                           +- BatchScan[i_item_sk#496, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 182 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q86                                                 182            182           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q87
[info] == Physical Plan ==
[info] *(17) HashAggregate(keys=[], functions=[count(1)])
[info] +- Exchange SinglePartition, true, [id=#50726]
[info]    +- *(16) HashAggregate(keys=[], functions=[partial_count(1)])
[info]       +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]          +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]             +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                   +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                      +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, d_date#333, 4), true, [id=#50674]
[info]                         +- *(15) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                            +- *(15) Project [c_last_name#165, c_first_name#164, d_date#333]
[info]                               +- SortMergeJoin [coalesce(c_last_name#165, ), isnull(c_last_name#165), coalesce(c_first_name#164, ), isnull(c_first_name#164), coalesce(d_date#333, 0), isnull(d_date#333)], [coalesce(c_last_name#21424, ), isnull(c_last_name#21424), coalesce(c_first_name#21423, ), isnull(c_first_name#21423), coalesce(d_date#21371, 0), isnull(d_date#21371)], LeftAnti
[info]                                  :- SortMergeJoin [coalesce(c_last_name#165, ), isnull(c_last_name#165), coalesce(c_first_name#164, ), isnull(c_first_name#164), coalesce(d_date#333, 0), isnull(d_date#333)], [coalesce(c_last_name#21360, ), isnull(c_last_name#21360), coalesce(c_first_name#21359, ), isnull(c_first_name#21359), coalesce(d_date#21306, 0), isnull(d_date#21306)], LeftAnti
[info]                                  :  :- *(4) Sort [coalesce(c_last_name#165, ) ASC NULLS FIRST, isnull(c_last_name#165) ASC NULLS FIRST, coalesce(c_first_name#164, ) ASC NULLS FIRST, isnull(c_first_name#164) ASC NULLS FIRST, coalesce(d_date#333, 0) ASC NULLS FIRST, isnull(d_date#333) ASC NULLS FIRST], false, 0
[info]                                  :  :  +- Exchange hashpartitioning(coalesce(c_last_name#165, ), isnull(c_last_name#165), coalesce(c_first_name#164, ), isnull(c_first_name#164), coalesce(d_date#333, 0), isnull(d_date#333), 4), true, [id=#50443]
[info]                                  :  :     +- *(3) Project [d_date#333, c_first_name#164, c_last_name#165]
[info]                                  :  :        +- *(3) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                                  :  :           :- *(3) Project [ss_customer_sk#1166, d_date#333]
[info]                                  :  :           :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                                  :  :           :     :- *(3) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                                  :  :           :     :  +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_customer_sk#1166))
[info]                                  :  :           :     :     +- *(3) ColumnarToRow
[info]                                  :  :           :     :        +- BatchScan[ss_customer_sk#1166, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int>
[info]                                  :  :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#50429]
[info]                                  :  :           :        +- *(1) Project [d_date_sk#331, d_date#333]
[info]                                  :  :           :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                                  :  :           :              +- *(1) ColumnarToRow
[info]                                  :  :           :                 +- BatchScan[d_date_sk#331, d_date#333, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>
[info]                                  :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#50438]
[info]                                  :  :              +- *(2) Project [c_customer_sk#156, c_first_name#164, c_last_name#165]
[info]                                  :  :                 +- *(2) Filter isnotnull(c_customer_sk#156)
[info]                                  :  :                    +- *(2) ColumnarToRow
[info]                                  :  :                       +- BatchScan[c_customer_sk#156, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
[info]                                  :  +- *(9) Sort [coalesce(c_last_name#21360, ) ASC NULLS FIRST, isnull(c_last_name#21360) ASC NULLS FIRST, coalesce(c_first_name#21359, ) ASC NULLS FIRST, isnull(c_first_name#21359) ASC NULLS FIRST, coalesce(d_date#21306, 0) ASC NULLS FIRST, isnull(d_date#21306) ASC NULLS FIRST], false, 0
[info]                                  :     +- Exchange hashpartitioning(coalesce(c_last_name#21360, ), isnull(c_last_name#21360), coalesce(c_first_name#21359, ), isnull(c_first_name#21359), coalesce(d_date#21306, 0), isnull(d_date#21306), 4), true, [id=#50576]
[info]                                  :        +- *(8) HashAggregate(keys=[c_last_name#21360, c_first_name#21359, d_date#21306], functions=[])
[info]                                  :           +- Exchange hashpartitioning(c_last_name#21360, c_first_name#21359, d_date#21306, 4), true, [id=#50572]
[info]                                  :              +- *(7) HashAggregate(keys=[c_last_name#21360, c_first_name#21359, d_date#21306], functions=[])
[info]                                  :                 +- *(7) Project [c_last_name#21360, c_first_name#21359, d_date#21306]
[info]                                  :                    +- *(7) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#21351], Inner, BuildRight
[info]                                  :                       :- *(7) Project [cs_bill_customer_sk#880, d_date#21306]
[info]                                  :                       :  +- *(7) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#21304], Inner, BuildRight
[info]                                  :                       :     :- *(7) Project [cs_bill_customer_sk#880, cs_sold_date_sk#911]
[info]                                  :                       :     :  +- *(7) Filter (isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_bill_customer_sk#880))
[info]                                  :                       :     :     +- *(7) ColumnarToRow
[info]                                  :                       :     :        +- BatchScan[cs_bill_customer_sk#880, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int>
[info]                                  :                       :     +- ReusedExchange [d_date_sk#21304, d_date#21306], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#50429]
[info]                                  :                       +- ReusedExchange [c_customer_sk#21351, c_first_name#21359, c_last_name#21360], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#50438]
[info]                                  +- *(14) Sort [coalesce(c_last_name#21424, ) ASC NULLS FIRST, isnull(c_last_name#21424) ASC NULLS FIRST, coalesce(c_first_name#21423, ) ASC NULLS FIRST, isnull(c_first_name#21423) ASC NULLS FIRST, coalesce(d_date#21371, 0) ASC NULLS FIRST, isnull(d_date#21371) ASC NULLS FIRST], false, 0
[info]                                     +- Exchange hashpartitioning(coalesce(c_last_name#21424, ), isnull(c_last_name#21424), coalesce(c_first_name#21423, ), isnull(c_first_name#21423), coalesce(d_date#21371, 0), isnull(d_date#21371), 4), true, [id=#50659]
[info]                                        +- *(13) HashAggregate(keys=[c_last_name#21424, c_first_name#21423, d_date#21371], functions=[])
[info]                                           +- Exchange hashpartitioning(c_last_name#21424, c_first_name#21423, d_date#21371, 4), true, [id=#50634]
[info]                                              +- *(12) HashAggregate(keys=[c_last_name#21424, c_first_name#21423, d_date#21371], functions=[])
[info]                                                 +- *(12) Project [c_last_name#21424, c_first_name#21423, d_date#21371]
[info]                                                    +- *(12) BroadcastHashJoin [ws_bill_customer_sk#1024], [c_customer_sk#21415], Inner, BuildRight
[info]                                                       :- *(12) Project [ws_bill_customer_sk#1024, d_date#21371]
[info]                                                       :  +- *(12) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#21369], Inner, BuildRight
[info]                                                       :     :- *(12) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                                                       :     :  +- *(12) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_customer_sk#1024))
[info]                                                       :     :     +- *(12) ColumnarToRow
[info]                                                       :     :        +- BatchScan[ws_bill_customer_sk#1024, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int>
[info]                                                       :     +- ReusedExchange [d_date_sk#21369, d_date#21371], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#50429]
[info]                                                       +- ReusedExchange [c_customer_sk#21415, c_first_name#21423, c_last_name#21424], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#50438]
[info] 
[info] 
[info]   Stopped after 1 iterations, 278 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q87                                                 278            278           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q88
[info] == Physical Plan ==
[info] BroadcastNestedLoopJoin BuildRight, Inner
[info] :- BroadcastNestedLoopJoin BuildRight, Inner
[info] :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info] :  :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info] :  :  :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info] :  :  :  :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info] :  :  :  :  :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info] :  :  :  :  :  :  :- *(5) HashAggregate(keys=[], functions=[count(1)])
[info] :  :  :  :  :  :  :  +- Exchange SinglePartition, true, [id=#51641]
[info] :  :  :  :  :  :  :     +- *(4) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :  :  :  :  :  :        +- *(4) Project
[info] :  :  :  :  :  :  :           +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info] :  :  :  :  :  :  :              :- *(4) Project [ss_store_sk#1170]
[info] :  :  :  :  :  :  :              :  +- *(4) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info] :  :  :  :  :  :  :              :     :- *(4) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info] :  :  :  :  :  :  :              :     :  +- *(4) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info] :  :  :  :  :  :  :              :     :     :- *(4) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info] :  :  :  :  :  :  :              :     :     :  +- *(4) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info] :  :  :  :  :  :  :              :     :     :     +- *(4) ColumnarToRow
[info] :  :  :  :  :  :  :              :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info] :  :  :  :  :  :  :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51617]
[info] :  :  :  :  :  :  :              :     :        +- *(1) Project [hd_demo_sk#448]
[info] :  :  :  :  :  :  :              :     :           +- *(1) Filter (((((hd_dep_count#451 = 4) AND (hd_vehicle_count#452 <= 6)) OR ((hd_dep_count#451 = 2) AND (hd_vehicle_count#452 <= 4))) OR ((hd_dep_count#451 = 0) AND (hd_vehicle_count#452 <= 2))) AND isnotnull(hd_demo_sk#448))
[info] :  :  :  :  :  :  :              :     :              +- *(1) ColumnarToRow
[info] :  :  :  :  :  :  :              :     :                 +- BatchScan[hd_demo_sk#448, hd_dep_count#451, hd_vehicle_count#452] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
[info] :  :  :  :  :  :  :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51626]
[info] :  :  :  :  :  :  :              :        +- *(2) Project [t_time_sk#1728]
[info] :  :  :  :  :  :  :              :           +- *(2) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 8)) AND (t_minute#1732 >= 30)) AND isnotnull(t_time_sk#1728))
[info] :  :  :  :  :  :  :              :              +- *(2) ColumnarToRow
[info] :  :  :  :  :  :  :              :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info] :  :  :  :  :  :  :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51635]
[info] :  :  :  :  :  :  :                 +- *(3) Project [s_store_sk#670]
[info] :  :  :  :  :  :  :                    +- *(3) Filter ((isnotnull(s_store_name#675) AND (s_store_name#675 = ese)) AND isnotnull(s_store_sk#670))
[info] :  :  :  :  :  :  :                       +- *(3) ColumnarToRow
[info] :  :  :  :  :  :  :                          +- BatchScan[s_store_sk#670, s_store_name#675] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string>
[info] :  :  :  :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#52030]
[info] :  :  :  :  :  :     +- *(10) HashAggregate(keys=[], functions=[count(1)])
[info] :  :  :  :  :  :        +- Exchange SinglePartition, true, [id=#51978]
[info] :  :  :  :  :  :           +- *(9) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :  :  :  :  :              +- *(9) Project
[info] :  :  :  :  :  :                 +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info] :  :  :  :  :  :                    :- *(9) Project [ss_store_sk#1170]
[info] :  :  :  :  :  :                    :  +- *(9) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info] :  :  :  :  :  :                    :     :- *(9) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info] :  :  :  :  :  :                    :     :  +- *(9) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info] :  :  :  :  :  :                    :     :     :- *(9) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info] :  :  :  :  :  :                    :     :     :  +- *(9) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info] :  :  :  :  :  :                    :     :     :     +- *(9) ColumnarToRow
[info] :  :  :  :  :  :                    :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info] :  :  :  :  :  :                    :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51617]
[info] :  :  :  :  :  :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51663]
[info] :  :  :  :  :  :                    :        +- *(7) Project [t_time_sk#1728]
[info] :  :  :  :  :  :                    :           +- *(7) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 9)) AND (t_minute#1732 < 30)) AND isnotnull(t_time_sk#1728))
[info] :  :  :  :  :  :                    :              +- *(7) ColumnarToRow
[info] :  :  :  :  :  :                    :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info] :  :  :  :  :  :                    +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51635]
[info] :  :  :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#52096]
[info] :  :  :  :  :     +- *(15) HashAggregate(keys=[], functions=[count(1)])
[info] :  :  :  :  :        +- Exchange SinglePartition, true, [id=#52068]
[info] :  :  :  :  :           +- *(14) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :  :  :  :              +- *(14) Project
[info] :  :  :  :  :                 +- *(14) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info] :  :  :  :  :                    :- *(14) Project [ss_store_sk#1170]
[info] :  :  :  :  :                    :  +- *(14) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info] :  :  :  :  :                    :     :- *(14) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info] :  :  :  :  :                    :     :  +- *(14) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info] :  :  :  :  :                    :     :     :- *(14) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info] :  :  :  :  :                    :     :     :  +- *(14) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info] :  :  :  :  :                    :     :     :     +- *(14) ColumnarToRow
[info] :  :  :  :  :                    :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info] :  :  :  :  :                    :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51617]
[info] :  :  :  :  :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51702]
[info] :  :  :  :  :                    :        +- *(12) Project [t_time_sk#1728]
[info] :  :  :  :  :                    :           +- *(12) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 9)) AND (t_minute#1732 >= 30)) AND isnotnull(t_time_sk#1728))
[info] :  :  :  :  :                    :              +- *(12) ColumnarToRow
[info] :  :  :  :  :                    :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info] :  :  :  :  :                    +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51635]
[info] :  :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#52162]
[info] :  :  :  :     +- *(20) HashAggregate(keys=[], functions=[count(1)])
[info] :  :  :  :        +- Exchange SinglePartition, true, [id=#52134]
[info] :  :  :  :           +- *(19) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :  :  :              +- *(19) Project
[info] :  :  :  :                 +- *(19) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info] :  :  :  :                    :- *(19) Project [ss_store_sk#1170]
[info] :  :  :  :                    :  +- *(19) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info] :  :  :  :                    :     :- *(19) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info] :  :  :  :                    :     :  +- *(19) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info] :  :  :  :                    :     :     :- *(19) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info] :  :  :  :                    :     :     :  +- *(19) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info] :  :  :  :                    :     :     :     +- *(19) ColumnarToRow
[info] :  :  :  :                    :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info] :  :  :  :                    :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51617]
[info] :  :  :  :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51741]
[info] :  :  :  :                    :        +- *(17) Project [t_time_sk#1728]
[info] :  :  :  :                    :           +- *(17) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 10)) AND (t_minute#1732 < 30)) AND isnotnull(t_time_sk#1728))
[info] :  :  :  :                    :              +- *(17) ColumnarToRow
[info] :  :  :  :                    :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info] :  :  :  :                    +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51635]
[info] :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#52228]
[info] :  :  :     +- *(25) HashAggregate(keys=[], functions=[count(1)])
[info] :  :  :        +- Exchange SinglePartition, true, [id=#52200]
[info] :  :  :           +- *(24) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :  :              +- *(24) Project
[info] :  :  :                 +- *(24) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info] :  :  :                    :- *(24) Project [ss_store_sk#1170]
[info] :  :  :                    :  +- *(24) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info] :  :  :                    :     :- *(24) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info] :  :  :                    :     :  +- *(24) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info] :  :  :                    :     :     :- *(24) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info] :  :  :                    :     :     :  +- *(24) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info] :  :  :                    :     :     :     +- *(24) ColumnarToRow
[info] :  :  :                    :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info] :  :  :                    :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51617]
[info] :  :  :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51780]
[info] :  :  :                    :        +- *(22) Project [t_time_sk#1728]
[info] :  :  :                    :           +- *(22) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 10)) AND (t_minute#1732 >= 30)) AND isnotnull(t_time_sk#1728))
[info] :  :  :                    :              +- *(22) ColumnarToRow
[info] :  :  :                    :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info] :  :  :                    +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51635]
[info] :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#52294]
[info] :  :     +- *(30) HashAggregate(keys=[], functions=[count(1)])
[info] :  :        +- Exchange SinglePartition, true, [id=#52266]
[info] :  :           +- *(29) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :              +- *(29) Project
[info] :  :                 +- *(29) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info] :  :                    :- *(29) Project [ss_store_sk#1170]
[info] :  :                    :  +- *(29) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info] :  :                    :     :- *(29) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info] :  :                    :     :  +- *(29) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info] :  :                    :     :     :- *(29) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info] :  :                    :     :     :  +- *(29) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info] :  :                    :     :     :     +- *(29) ColumnarToRow
[info] :  :                    :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info] :  :                    :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51617]
[info] :  :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51819]
[info] :  :                    :        +- *(27) Project [t_time_sk#1728]
[info] :  :                    :           +- *(27) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 11)) AND (t_minute#1732 < 30)) AND isnotnull(t_time_sk#1728))
[info] :  :                    :              +- *(27) ColumnarToRow
[info] :  :                    :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info] :  :                    +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51635]
[info] :  +- BroadcastExchange IdentityBroadcastMode, [id=#52360]
[info] :     +- *(35) HashAggregate(keys=[], functions=[count(1)])
[info] :        +- Exchange SinglePartition, true, [id=#52332]
[info] :           +- *(34) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :              +- *(34) Project
[info] :                 +- *(34) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info] :                    :- *(34) Project [ss_store_sk#1170]
[info] :                    :  +- *(34) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info] :                    :     :- *(34) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info] :                    :     :  +- *(34) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info] :                    :     :     :- *(34) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info] :                    :     :     :  +- *(34) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info] :                    :     :     :     +- *(34) ColumnarToRow
[info] :                    :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info] :                    :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51617]
[info] :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51858]
[info] :                    :        +- *(32) Project [t_time_sk#1728]
[info] :                    :           +- *(32) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 11)) AND (t_minute#1732 >= 30)) AND isnotnull(t_time_sk#1728))
[info] :                    :              +- *(32) ColumnarToRow
[info] :                    :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info] :                    +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51635]
[info] +- BroadcastExchange IdentityBroadcastMode, [id=#52426]
[info]    +- *(40) HashAggregate(keys=[], functions=[count(1)])
[info]       +- Exchange SinglePartition, true, [id=#52398]
[info]          +- *(39) HashAggregate(keys=[], functions=[partial_count(1)])
[info]             +- *(39) Project
[info]                +- *(39) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                   :- *(39) Project [ss_store_sk#1170]
[info]                   :  +- *(39) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info]                   :     :- *(39) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info]                   :     :  +- *(39) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]                   :     :     :- *(39) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info]                   :     :     :  +- *(39) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info]                   :     :     :     +- *(39) ColumnarToRow
[info]                   :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info]                   :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51617]
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51897]
[info]                   :        +- *(37) Project [t_time_sk#1728]
[info]                   :           +- *(37) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 12)) AND (t_minute#1732 < 30)) AND isnotnull(t_time_sk#1728))
[info]                   :              +- *(37) ColumnarToRow
[info]                   :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info]                   +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51635]
[info] 
[info] 
[info]   Stopped after 1 iterations, 978 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q88                                                 979            979           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q89
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#21638 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#21639 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,s_store_name#675 ASC NULLS FIRST], output=[i_category#508,i_class#506,i_brand#504,s_store_name#675,s_company_name#687,d_moy#339,sum_sales#21638,avg_monthly_sales#21639])
[info] +- *(7) Project [i_category#508, i_class#506, i_brand#504, s_store_name#675, s_company_name#687, d_moy#339, sum_sales#21638, avg_monthly_sales#21639]
[info]    +- *(7) Filter (CASE WHEN NOT (avg_monthly_sales#21639 = 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#21638 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#21639 as decimal(22,6)))), DecimalType(22,6), true))) / promote_precision(cast(avg_monthly_sales#21639 as decimal(22,6)))), DecimalType(38,16), true) ELSE null END > 0.1000000000000000)
[info]       +- Window [avg(_w0#21643) windowspecdefinition(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#21639], [i_category#508, i_brand#504, s_store_name#675, s_company_name#687]
[info]          +- *(6) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, s_store_name#675 ASC NULLS FIRST, s_company_name#687 ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, 4), true, [id=#52594]
[info]                +- *(5) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, s_store_name#675, s_company_name#687, d_moy#339], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]                   +- Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, s_store_name#675, s_company_name#687, d_moy#339, 4), true, [id=#52590]
[info]                      +- *(4) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, s_store_name#675, s_company_name#687, d_moy#339], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]                         +- *(4) Project [i_brand#504, i_class#506, i_category#508, ss_sales_price#1176, d_moy#339, s_store_name#675, s_company_name#687]
[info]                            +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :- *(4) Project [i_brand#504, i_class#506, i_category#508, ss_store_sk#1170, ss_sales_price#1176, d_moy#339]
[info]                               :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :- *(4) Project [i_brand#504, i_class#506, i_category#508, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                               :     :  +- *(4) BroadcastHashJoin [i_item_sk#496], [ss_item_sk#1165], Inner, BuildLeft
[info]                               :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52562]
[info]                               :     :     :  +- *(1) Project [i_item_sk#496, i_brand#504, i_class#506, i_category#508]
[info]                               :     :     :     +- *(1) Filter (((i_category#508 IN (Books,Electronics,Sports) AND i_class#506 IN (computers,stereo,football)) OR (i_category#508 IN (Men,Jewelry,Women) AND i_class#506 IN (shirts,birdal,dresses))) AND isnotnull(i_item_sk#496))
[info]                               :     :     :        +- *(1) ColumnarToRow
[info]                               :     :     :           +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string>
[info]                               :     :     +- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                               :     :        +- *(4) Filter ((isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]                               :     :           +- *(4) ColumnarToRow
[info]                               :     :              +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52575]
[info]                               :        +- *(2) Project [d_date_sk#331, d_moy#339]
[info]                               :           +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 1999)) AND isnotnull(d_date_sk#331))
[info]                               :              +- *(2) ColumnarToRow
[info]                               :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52584]
[info]                                  +- *(3) Project [s_store_sk#670, s_store_name#675, s_company_name#687]
[info]                                     +- *(3) Filter isnotnull(s_store_sk#670)
[info]                                        +- *(3) ColumnarToRow
[info]                                           +- BatchScan[s_store_sk#670, s_store_name#675, s_company_name#687] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 165 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q89                                                 166            166           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q90
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[am_pm_ratio#21677 ASC NULLS FIRST], output=[am_pm_ratio#21677])
[info] +- *(11) Project [CheckOverflow((promote_precision(cast(amc#21675L as decimal(15,4))) / promote_precision(cast(pmc#21676L as decimal(15,4)))), DecimalType(35,20), true) AS am_pm_ratio#21677]
[info]    +- BroadcastNestedLoopJoin BuildRight, Inner
[info]       :- *(5) HashAggregate(keys=[], functions=[count(1)])
[info]       :  +- Exchange SinglePartition, true, [id=#52860]
[info]       :     +- *(4) HashAggregate(keys=[], functions=[partial_count(1)])
[info]       :        +- *(4) Project
[info]       :           +- *(4) BroadcastHashJoin [ws_web_page_sk#1032], [wp_web_page_sk#1773], Inner, BuildRight
[info]       :              :- *(4) Project [ws_web_page_sk#1032]
[info]       :              :  +- *(4) BroadcastHashJoin [ws_sold_time_sk#1021], [t_time_sk#1728], Inner, BuildRight
[info]       :              :     :- *(4) Project [ws_sold_time_sk#1021, ws_web_page_sk#1032]
[info]       :              :     :  +- *(4) BroadcastHashJoin [ws_ship_hdemo_sk#1030], [hd_demo_sk#448], Inner, BuildRight
[info]       :              :     :     :- *(4) Project [ws_sold_time_sk#1021, ws_ship_hdemo_sk#1030, ws_web_page_sk#1032]
[info]       :              :     :     :  +- *(4) Filter ((isnotnull(ws_ship_hdemo_sk#1030) AND isnotnull(ws_sold_time_sk#1021)) AND isnotnull(ws_web_page_sk#1032))
[info]       :              :     :     :     +- *(4) ColumnarToRow
[info]       :              :     :     :        +- BatchScan[ws_sold_time_sk#1021, ws_ship_hdemo_sk#1030, ws_web_page_sk#1032] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_hdemo_sk:int,ws_web_page_sk:int>
[info]       :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52836]
[info]       :              :     :        +- *(1) Project [hd_demo_sk#448]
[info]       :              :     :           +- *(1) Filter ((isnotnull(hd_dep_count#451) AND (hd_dep_count#451 = 6)) AND isnotnull(hd_demo_sk#448))
[info]       :              :     :              +- *(1) ColumnarToRow
[info]       :              :     :                 +- BatchScan[hd_demo_sk#448, hd_dep_count#451] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int>
[info]       :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52845]
[info]       :              :        +- *(2) Project [t_time_sk#1728]
[info]       :              :           +- *(2) Filter (((isnotnull(t_hour#1731) AND (t_hour#1731 >= 8)) AND (t_hour#1731 <= 9)) AND isnotnull(t_time_sk#1728))
[info]       :              :              +- *(2) ColumnarToRow
[info]       :              :                 +- BatchScan[t_time_sk#1728, t_hour#1731] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int>
[info]       :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52854]
[info]       :                 +- *(3) Project [wp_web_page_sk#1773]
[info]       :                    +- *(3) Filter (((isnotnull(wp_char_count#1783) AND (wp_char_count#1783 >= 5000)) AND (wp_char_count#1783 <= 5200)) AND isnotnull(wp_web_page_sk#1773))
[info]       :                       +- *(3) ColumnarToRow
[info]       :                          +- BatchScan[wp_web_page_sk#1773, wp_char_count#1783] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_page], ReadSchema: struct<wp_web_page_sk:int,wp_char_count:int>
[info]       +- BroadcastExchange IdentityBroadcastMode, [id=#53019]
[info]          +- *(10) HashAggregate(keys=[], functions=[count(1)])
[info]             +- Exchange SinglePartition, true, [id=#52967]
[info]                +- *(9) HashAggregate(keys=[], functions=[partial_count(1)])
[info]                   +- *(9) Project
[info]                      +- *(9) BroadcastHashJoin [ws_web_page_sk#1032], [wp_web_page_sk#1773], Inner, BuildRight
[info]                         :- *(9) Project [ws_web_page_sk#1032]
[info]                         :  +- *(9) BroadcastHashJoin [ws_sold_time_sk#1021], [t_time_sk#1728], Inner, BuildRight
[info]                         :     :- *(9) Project [ws_sold_time_sk#1021, ws_web_page_sk#1032]
[info]                         :     :  +- *(9) BroadcastHashJoin [ws_ship_hdemo_sk#1030], [hd_demo_sk#448], Inner, BuildRight
[info]                         :     :     :- *(9) Project [ws_sold_time_sk#1021, ws_ship_hdemo_sk#1030, ws_web_page_sk#1032]
[info]                         :     :     :  +- *(9) Filter ((isnotnull(ws_ship_hdemo_sk#1030) AND isnotnull(ws_sold_time_sk#1021)) AND isnotnull(ws_web_page_sk#1032))
[info]                         :     :     :     +- *(9) ColumnarToRow
[info]                         :     :     :        +- BatchScan[ws_sold_time_sk#1021, ws_ship_hdemo_sk#1030, ws_web_page_sk#1032] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_hdemo_sk:int,ws_web_page_sk:int>
[info]                         :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52836]
[info]                         :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52882]
[info]                         :        +- *(7) Project [t_time_sk#1728]
[info]                         :           +- *(7) Filter (((isnotnull(t_hour#1731) AND (t_hour#1731 >= 19)) AND (t_hour#1731 <= 20)) AND isnotnull(t_time_sk#1728))
[info]                         :              +- *(7) ColumnarToRow
[info]                         :                 +- BatchScan[t_time_sk#1728, t_hour#1731] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int>
[info]                         +- ReusedExchange [wp_web_page_sk#1773], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52854]
[info] 
[info] 
[info]   Stopped after 1 iterations, 245 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q90                                                 246            246           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q91
[info] == Physical Plan ==
[info] *(9) Sort [Returns_Loss#21719 DESC NULLS LAST], true, 0
[info] +- Exchange rangepartitioning(Returns_Loss#21719 DESC NULLS LAST, 4), true, [id=#53277]
[info]    +- *(8) HashAggregate(keys=[cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cd_marital_status#292, cd_education_status#293], functions=[sum(UnscaledValue(cr_net_loss#66))])
[info]       +- Exchange hashpartitioning(cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cd_marital_status#292, cd_education_status#293, 4), true, [id=#53273]
[info]          +- *(7) HashAggregate(keys=[cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cd_marital_status#292, cd_education_status#293], functions=[partial_sum(UnscaledValue(cr_net_loss#66))])
[info]             +- *(7) Project [cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cr_net_loss#66, cd_marital_status#292, cd_education_status#293]
[info]                +- *(7) BroadcastHashJoin [c_current_hdemo_sk#159], [hd_demo_sk#448], Inner, BuildRight
[info]                   :- *(7) Project [cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cr_net_loss#66, c_current_hdemo_sk#159, cd_marital_status#292, cd_education_status#293]
[info]                   :  +- *(7) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]                   :     :- *(7) Project [cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cr_net_loss#66, c_current_cdemo_sk#158, c_current_hdemo_sk#159]
[info]                   :     :  +- *(7) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                   :     :     :- *(7) Project [cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cr_net_loss#66, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160]
[info]                   :     :     :  +- *(7) BroadcastHashJoin [cr_returning_customer_sk#47], [c_customer_sk#156], Inner, BuildRight
[info]                   :     :     :     :- *(7) Project [cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cr_returning_customer_sk#47, cr_net_loss#66]
[info]                   :     :     :     :  +- *(7) BroadcastHashJoin [cr_returned_date_sk#67], [d_date_sk#331], Inner, BuildRight
[info]                   :     :     :     :     :- *(7) Project [cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cr_returning_customer_sk#47, cr_net_loss#66, cr_returned_date_sk#67]
[info]                   :     :     :     :     :  +- *(7) BroadcastHashJoin [cc_call_center_sk#1492], [cr_call_center_sk#51], Inner, BuildLeft
[info]                   :     :     :     :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53218]
[info]                   :     :     :     :     :     :  +- *(1) Project [cc_call_center_sk#1492, cc_call_center_id#1493, cc_name#1498, cc_manager#1503]
[info]                   :     :     :     :     :     :     +- *(1) Filter isnotnull(cc_call_center_sk#1492)
[info]                   :     :     :     :     :     :        +- *(1) ColumnarToRow
[info]                   :     :     :     :     :     :           +- BatchScan[cc_call_center_sk#1492, cc_call_center_id#1493, cc_name#1498, cc_manager#1503] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/call_center], ReadSchema: struct<cc_call_center_sk:int,cc_call_center_id:string,cc_name:string,cc_manager:string>
[info]                   :     :     :     :     :     +- *(7) Project [cr_returning_customer_sk#47, cr_call_center_sk#51, cr_net_loss#66, cr_returned_date_sk#67]
[info]                   :     :     :     :     :        +- *(7) Filter ((isnotnull(cr_call_center_sk#51) AND isnotnull(cr_returned_date_sk#67)) AND isnotnull(cr_returning_customer_sk#47))
[info]                   :     :     :     :     :           +- *(7) ColumnarToRow
[info]                   :     :     :     :     :              +- BatchScan[cr_returning_customer_sk#47, cr_call_center_sk#51, cr_net_loss#66, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_returning_customer_sk:int,cr_call_center_sk:int,cr_net_loss:decimal(7,2)>
[info]                   :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53231]
[info]                   :     :     :     :        +- *(2) Project [d_date_sk#331]
[info]                   :     :     :     :           +- *(2) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 1998)) AND (d_moy#339 = 11)) AND isnotnull(d_date_sk#331))
[info]                   :     :     :     :              +- *(2) ColumnarToRow
[info]                   :     :     :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                   :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53240]
[info]                   :     :     :        +- *(3) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160]
[info]                   :     :     :           +- *(3) Filter (((isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160)) AND isnotnull(c_current_cdemo_sk#158)) AND isnotnull(c_current_hdemo_sk#159))
[info]                   :     :     :              +- *(3) ColumnarToRow
[info]                   :     :     :                 +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int>
[info]                   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53249]
[info]                   :     :        +- *(4) Project [ca_address_sk#233]
[info]                   :     :           +- *(4) Filter ((isnotnull(ca_gmt_offset#244) AND (ca_gmt_offset#244 = -7.00)) AND isnotnull(ca_address_sk#233))
[info]                   :     :              +- *(4) ColumnarToRow
[info]                   :     :                 +- BatchScan[ca_address_sk#233, ca_gmt_offset#244] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53258]
[info]                   :        +- *(5) Project [cd_demo_sk#290, cd_marital_status#292, cd_education_status#293]
[info]                   :           +- *(5) Filter ((((cd_marital_status#292 = M) AND (cd_education_status#293 = Unknown)) OR ((cd_marital_status#292 = W) AND (cd_education_status#293 = Advanced Degree))) AND isnotnull(cd_demo_sk#290))
[info]                   :              +- *(5) ColumnarToRow
[info]                   :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53267]
[info]                      +- *(6) Project [hd_demo_sk#448]
[info]                         +- *(6) Filter ((isnotnull(hd_buy_potential#450) AND StartsWith(hd_buy_potential#450, Unknown)) AND isnotnull(hd_demo_sk#448))
[info]                            +- *(6) ColumnarToRow
[info]                               +- BatchScan[hd_demo_sk#448, hd_buy_potential#450] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 262 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q91                                                 262            262           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q92
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[Excess Discount Amount #21761 ASC NULLS FIRST], output=[Excess Discount Amount #21761])
[info] +- *(10) HashAggregate(keys=[], functions=[sum(UnscaledValue(ws_ext_discount_amt#1042))])
[info]    +- Exchange SinglePartition, true, [id=#53523]
[info]       +- *(9) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ws_ext_discount_amt#1042))])
[info]          +- *(9) Project [ws_ext_discount_amt#1042]
[info]             +- *(9) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :- *(9) Project [ws_ext_discount_amt#1042, ws_sold_date_sk#1054]
[info]                :  +- *(9) SortMergeJoin [i_item_sk#496], [ws_item_sk#1023#21768], Inner, (cast(ws_ext_discount_amt#1042 as decimal(14,7)) > (CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#21763)
[info]                :     :- *(3) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]                :     :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#53453]
[info]                :     :     +- *(2) Project [ws_ext_discount_amt#1042, ws_sold_date_sk#1054, i_item_sk#496]
[info]                :     :        +- *(2) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                :     :           :- *(2) Project [ws_item_sk#1023, ws_ext_discount_amt#1042, ws_sold_date_sk#1054]
[info]                :     :           :  +- *(2) Filter ((isnotnull(ws_item_sk#1023) AND isnotnull(ws_ext_discount_amt#1042)) AND isnotnull(ws_sold_date_sk#1054))
[info]                :     :           :     +- *(2) ColumnarToRow
[info]                :     :           :        +- BatchScan[ws_item_sk#1023, ws_ext_discount_amt#1042, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_ext_discount_amt:decimal(7,2)>
[info]                :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53448]
[info]                :     :              +- *(1) Project [i_item_sk#496]
[info]                :     :                 +- *(1) Filter ((isnotnull(i_manufact_id#509) AND (i_manufact_id#509 = 350)) AND isnotnull(i_item_sk#496))
[info]                :     :                    +- *(1) ColumnarToRow
[info]                :     :                       +- BatchScan[i_item_sk#496, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>
[info]                :     +- *(7) Sort [ws_item_sk#1023#21768 ASC NULLS FIRST], false, 0
[info]                :        +- Exchange hashpartitioning(ws_item_sk#1023#21768, 4), true, [id=#53478]
[info]                :           +- *(6) Filter isnotnull((CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#21763)
[info]                :              +- *(6) HashAggregate(keys=[ws_item_sk#1023], functions=[avg(UnscaledValue(ws_ext_discount_amt#1042))])
[info]                :                 +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#53473]
[info]                :                    +- *(5) HashAggregate(keys=[ws_item_sk#1023], functions=[partial_avg(UnscaledValue(ws_ext_discount_amt#1042))])
[info]                :                       +- *(5) Project [ws_item_sk#1023, ws_ext_discount_amt#1042]
[info]                :                          +- *(5) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :                             :- *(5) Project [ws_item_sk#1023, ws_ext_discount_amt#1042, ws_sold_date_sk#1054]
[info]                :                             :  +- *(5) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_item_sk#1023))
[info]                :                             :     +- *(5) ColumnarToRow
[info]                :                             :        +- BatchScan[ws_item_sk#1023, ws_ext_discount_amt#1042, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_ext_discount_amt:decimal(7,2)>
[info]                :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53467]
[info]                :                                +- *(4) Project [d_date_sk#331]
[info]                :                                   +- *(4) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10983)) AND (d_date#333 <= 11073)) AND isnotnull(d_date_sk#331))
[info]                :                                      +- *(4) ColumnarToRow
[info]                :                                         +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53467]
[info] 
[info] 
[info]   Stopped after 1 iterations, 201 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q92                                                 201            201           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q93
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[sumsales#21797 ASC NULLS FIRST,ss_customer_sk#1166 ASC NULLS FIRST], output=[ss_customer_sk#1166,sumsales#21797])
[info] +- *(7) HashAggregate(keys=[ss_customer_sk#1166], functions=[sum(act_sales#21796)])
[info]    +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#53640]
[info]       +- *(6) HashAggregate(keys=[ss_customer_sk#1166], functions=[partial_sum(act_sales#21796)])
[info]          +- *(6) Project [ss_customer_sk#1166, CASE WHEN isnotnull(sr_return_quantity#800) THEN CheckOverflow((promote_precision(cast(cast((ss_quantity#1173 - sr_return_quantity#800) as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true) ELSE CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true) END AS act_sales#21796]
[info]             +- *(6) BroadcastHashJoin [sr_reason_sk#798], [r_reason_sk#1475], Inner, BuildRight
[info]                :- *(6) Project [ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176, sr_reason_sk#798, sr_return_quantity#800]
[info]                :  +- *(6) SortMergeJoin [ss_item_sk#1165, ss_ticket_number#1172L], [sr_item_sk#792, sr_ticket_number#799L], Inner
[info]                :     :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]                :     :  +- Exchange hashpartitioning(ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#53612]
[info]                :     :     +- *(1) ColumnarToRow
[info]                :     :        +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_ticket_number#1172L, ss_quantity#1173, ss_sales_price#1176] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_sales_price:d...
[info]                :     +- *(4) Sort [sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]                :        +- Exchange hashpartitioning(sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#53622]
[info]                :           +- *(3) Project [sr_item_sk#792, sr_reason_sk#798, sr_ticket_number#799L, sr_return_quantity#800]
[info]                :              +- *(3) Filter ((isnotnull(sr_item_sk#792) AND isnotnull(sr_ticket_number#799L)) AND isnotnull(sr_reason_sk#798))
[info]                :                 +- *(3) ColumnarToRow
[info]                :                    +- BatchScan[sr_item_sk#792, sr_reason_sk#798, sr_ticket_number#799L, sr_return_quantity#800] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_reason_sk:int,sr_ticket_number:bigint,sr_return_quantity:int>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53634]
[info]                   +- *(5) Project [r_reason_sk#1475]
[info]                      +- *(5) Filter ((isnotnull(r_reason_desc#1477) AND (r_reason_desc#1477 = reason 28)) AND isnotnull(r_reason_sk#1475))
[info]                         +- *(5) ColumnarToRow
[info]                            +- BatchScan[r_reason_sk#1475, r_reason_desc#1477] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/reason], ReadSchema: struct<r_reason_sk:int,r_reason_desc:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 142 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q93                                                 142            142           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q94
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[order count #21834L ASC NULLS FIRST], output=[order count #21834L,total shipping cost #21835,total net profit #21836])
[info] +- *(10) HashAggregate(keys=[], functions=[sum(UnscaledValue(ws_ext_ship_cost#1048)), sum(UnscaledValue(ws_net_profit#1053)), count(distinct ws_order_number#1037L)])
[info]    +- Exchange SinglePartition, true, [id=#53866]
[info]       +- *(9) HashAggregate(keys=[], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#1048)), merge_sum(UnscaledValue(ws_net_profit#1053)), partial_count(distinct ws_order_number#1037L)])
[info]          +- *(9) HashAggregate(keys=[ws_order_number#1037L], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#1048)), merge_sum(UnscaledValue(ws_net_profit#1053))])
[info]             +- *(9) HashAggregate(keys=[ws_order_number#1037L], functions=[partial_sum(UnscaledValue(ws_ext_ship_cost#1048)), partial_sum(UnscaledValue(ws_net_profit#1053))])
[info]                +- *(9) Project [ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                   +- *(9) BroadcastHashJoin [ws_web_site_sk#1033], [web_site_sk#1366], Inner, BuildRight
[info]                      :- *(9) Project [ws_web_site_sk#1033, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                      :  +- *(9) BroadcastHashJoin [ws_ship_addr_sk#1031], [ca_address_sk#233], Inner, BuildRight
[info]                      :     :- *(9) Project [ws_ship_addr_sk#1031, ws_web_site_sk#1033, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                      :     :  +- *(9) BroadcastHashJoin [ws_ship_date_sk#1022], [d_date_sk#331], Inner, BuildRight
[info]                      :     :     :- *(9) BroadcastHashJoin [ws_order_number#1037L], [wr_order_number#1275L], LeftAnti, BuildRight
[info]                      :     :     :  :- *(9) Project [ws_ship_date_sk#1022, ws_ship_addr_sk#1031, ws_web_site_sk#1033, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                      :     :     :  :  +- SortMergeJoin [ws_order_number#1037L], [ws_order_number#1037L#21874L], LeftSemi, NOT (ws_warehouse_sk#1035 = ws_warehouse_sk#1035#21853)
[info]                      :     :     :  :     :- *(2) Sort [ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :     :  +- Exchange hashpartitioning(ws_order_number#1037L, 4), true, [id=#53813]
[info]                      :     :     :  :     :     +- *(1) Project [ws_ship_date_sk#1022, ws_ship_addr_sk#1031, ws_web_site_sk#1033, ws_warehouse_sk#1035, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                      :     :     :  :     :        +- *(1) Filter ((isnotnull(ws_ship_date_sk#1022) AND isnotnull(ws_ship_addr_sk#1031)) AND isnotnull(ws_web_site_sk#1033))
[info]                      :     :     :  :     :           +- *(1) ColumnarToRow
[info]                      :     :     :  :     :              +- BatchScan[ws_ship_date_sk#1022, ws_ship_addr_sk#1031, ws_web_site_sk#1033, ws_warehouse_sk#1035, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_ship_date_sk:int,ws_ship_addr_sk:int,ws_web_site_sk:int,ws_warehouse_sk:int,ws_order_nu...
[info]                      :     :     :  :     +- *(4) Sort [ws_order_number#1037L#21874L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :        +- Exchange hashpartitioning(ws_order_number#1037L#21874L, 4), true, [id=#53821]
[info]                      :     :     :  :           +- *(3) Project [ws_warehouse_sk#1035 AS ws_warehouse_sk#1035#21853, ws_order_number#1037L AS ws_order_number#1037L#21874L]
[info]                      :     :     :  :              +- *(3) ColumnarToRow
[info]                      :     :     :  :                 +- BatchScan[ws_sold_time_sk#1021, ws_ship_date_sk#1022, ws_item_sk#1023, ws_bill_customer_sk#1024, ws_bill_cdemo_sk#1025, ws_bill_hdemo_sk#1026, ws_bill_addr_sk#1027, ws_ship_customer_sk#1028, ws_ship_cdemo_sk#1029, ws_ship_hdemo_sk#1030, ws_ship_addr_sk#1031, ws_web_page_sk#1032, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_promo_sk#1036, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_list_price#1040, ws_sales_price#1041, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cde...
[info]                      :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true])), [id=#53832]
[info]                      :     :     :     +- *(5) Project [wr_order_number#1275L]
[info]                      :     :     :        +- *(5) ColumnarToRow
[info]                      :     :     :           +- BatchScan[wr_returned_time_sk#1263, wr_item_sk#1264, wr_refunded_customer_sk#1265, wr_refunded_cdemo_sk#1266, wr_refunded_hdemo_sk#1267, wr_refunded_addr_sk#1268, wr_returning_customer_sk#1269, wr_returning_cdemo_sk#1270, wr_returning_hdemo_sk#1271, wr_returning_addr_sk#1272, wr_web_page_sk#1273, wr_reason_sk#1274, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277, wr_return_tax#1278, wr_return_amt_inc_tax#1279, wr_fee#1280, wr_return_ship_cost#1281, wr_refunded_cash#1282, wr_reversed_charge#1283, wr_account_credit#1284, wr_net_loss#1285, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_returned_time_sk:int,wr_item_sk:int,wr_refunded_customer_sk:int,wr_refunded_cdemo_sk:in...
[info]                      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53840]
[info]                      :     :        +- *(6) Project [d_date_sk#331]
[info]                      :     :           +- *(6) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10623)) AND (d_date#333 <= 10683)) AND isnotnull(d_date_sk#331))
[info]                      :     :              +- *(6) ColumnarToRow
[info]                      :     :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53849]
[info]                      :        +- *(7) Project [ca_address_sk#233]
[info]                      :           +- *(7) Filter ((isnotnull(ca_state#241) AND (ca_state#241 = IL)) AND isnotnull(ca_address_sk#233))
[info]                      :              +- *(7) ColumnarToRow
[info]                      :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53858]
[info]                         +- *(8) Project [web_site_sk#1366]
[info]                            +- *(8) Filter ((isnotnull(web_company_name#1380) AND (web_company_name#1380 = pri)) AND isnotnull(web_site_sk#1366))
[info]                               +- *(8) ColumnarToRow
[info]                                  +- BatchScan[web_site_sk#1366, web_company_name#1380] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_site], ReadSchema: struct<web_site_sk:int,web_company_name:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 234 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q94                                                 235            235           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q95
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[order count #21988L ASC NULLS FIRST], output=[order count #21988L,total shipping cost #21989,total net profit #21990])
[info] +- *(21) HashAggregate(keys=[], functions=[sum(UnscaledValue(ws_ext_ship_cost#1048)), sum(UnscaledValue(ws_net_profit#1053)), count(distinct ws_order_number#1037L)])
[info]    +- Exchange SinglePartition, true, [id=#54316]
[info]       +- *(20) HashAggregate(keys=[], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#1048)), merge_sum(UnscaledValue(ws_net_profit#1053)), partial_count(distinct ws_order_number#1037L)])
[info]          +- *(20) HashAggregate(keys=[ws_order_number#1037L], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#1048)), merge_sum(UnscaledValue(ws_net_profit#1053))])
[info]             +- *(20) HashAggregate(keys=[ws_order_number#1037L], functions=[partial_sum(UnscaledValue(ws_ext_ship_cost#1048)), partial_sum(UnscaledValue(ws_net_profit#1053))])
[info]                +- *(20) Project [ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                   +- *(20) BroadcastHashJoin [ws_web_site_sk#1033], [web_site_sk#1366], Inner, BuildRight
[info]                      :- *(20) Project [ws_web_site_sk#1033, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                      :  +- *(20) BroadcastHashJoin [ws_ship_addr_sk#1031], [ca_address_sk#233], Inner, BuildRight
[info]                      :     :- *(20) Project [ws_ship_addr_sk#1031, ws_web_site_sk#1033, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                      :     :  +- *(20) BroadcastHashJoin [ws_ship_date_sk#1022], [d_date_sk#331], Inner, BuildRight
[info]                      :     :     :- SortMergeJoin [ws_order_number#1037L], [wr_order_number#1275L], LeftSemi
[info]                      :     :     :  :- SortMergeJoin [ws_order_number#1037L], [ws_order_number#1037L#22090L], LeftSemi
[info]                      :     :     :  :  :- *(2) Sort [ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :  :  +- Exchange hashpartitioning(ws_order_number#1037L, 4), true, [id=#54131]
[info]                      :     :     :  :  :     +- *(1) Project [ws_ship_date_sk#1022, ws_ship_addr_sk#1031, ws_web_site_sk#1033, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                      :     :     :  :  :        +- *(1) Filter ((isnotnull(ws_ship_date_sk#1022) AND isnotnull(ws_ship_addr_sk#1031)) AND isnotnull(ws_web_site_sk#1033))
[info]                      :     :     :  :  :           +- *(1) ColumnarToRow
[info]                      :     :     :  :  :              +- BatchScan[ws_ship_date_sk#1022, ws_ship_addr_sk#1031, ws_web_site_sk#1033, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_ship_date_sk:int,ws_ship_addr_sk:int,ws_web_site_sk:int,ws_order_number:bigint,ws_ext_s...
[info]                      :     :     :  :  +- *(8) Sort [ws_order_number#1037L#22090L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :     +- Exchange hashpartitioning(ws_order_number#1037L#22090L, 4), true, [id=#54264]
[info]                      :     :     :  :        +- *(7) Project [ws_order_number#1037L AS ws_order_number#1037L#22090L]
[info]                      :     :     :  :           +- *(7) SortMergeJoin [ws_order_number#1037L], [ws_order_number#22009L], Inner, NOT (ws_warehouse_sk#1035 = ws_warehouse_sk#22007)
[info]                      :     :     :  :              :- *(4) Sort [ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :              :  +- Exchange hashpartitioning(ws_order_number#1037L, 4), true, [id=#54140]
[info]                      :     :     :  :              :     +- *(3) Project [ws_warehouse_sk#1035, ws_order_number#1037L]
[info]                      :     :     :  :              :        +- *(3) Filter (isnotnull(ws_order_number#1037L) AND isnotnull(ws_warehouse_sk#1035))
[info]                      :     :     :  :              :           +- *(3) ColumnarToRow
[info]                      :     :     :  :              :              +- BatchScan[ws_warehouse_sk#1035, ws_order_number#1037L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_warehouse_sk:int,ws_order_number:bigint>
[info]                      :     :     :  :              +- *(6) Sort [ws_order_number#22009L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :                 +- ReusedExchange [ws_warehouse_sk#22007, ws_order_number#22009L], Exchange hashpartitioning(ws_order_number#1037L, 4), true, [id=#54140]
[info]                      :     :     :  +- *(16) Project [wr_order_number#1275L]
[info]                      :     :     :     +- *(16) SortMergeJoin [wr_order_number#1275L], [ws_order_number#1037L], Inner
[info]                      :     :     :        :- *(10) Sort [wr_order_number#1275L ASC NULLS FIRST], false, 0
[info]                      :     :     :        :  +- Exchange hashpartitioning(wr_order_number#1275L, 4), true, [id=#54168]
[info]                      :     :     :        :     +- *(9) Project [wr_order_number#1275L]
[info]                      :     :     :        :        +- *(9) Filter isnotnull(wr_order_number#1275L)
[info]                      :     :     :        :           +- *(9) ColumnarToRow
[info]                      :     :     :        :              +- BatchScan[wr_order_number#1275L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_order_number:bigint>
[info]                      :     :     :        +- *(15) Project [ws_order_number#1037L]
[info]                      :     :     :           +- *(15) SortMergeJoin [ws_order_number#1037L], [ws_order_number#22043L], Inner, NOT (ws_warehouse_sk#1035 = ws_warehouse_sk#22041)
[info]                      :     :     :              :- *(12) Sort [ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]                      :     :     :              :  +- ReusedExchange [ws_warehouse_sk#1035, ws_order_number#1037L], Exchange hashpartitioning(ws_order_number#1037L, 4), true, [id=#54140]
[info]                      :     :     :              +- *(14) Sort [ws_order_number#22043L ASC NULLS FIRST], false, 0
[info]                      :     :     :                 +- ReusedExchange [ws_warehouse_sk#22041, ws_order_number#22043L], Exchange hashpartitioning(ws_order_number#1037L, 4), true, [id=#54140]
[info]                      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54207]
[info]                      :     :        +- *(17) Project [d_date_sk#331]
[info]                      :     :           +- *(17) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10623)) AND (d_date#333 <= 10683)) AND isnotnull(d_date_sk#331))
[info]                      :     :              +- *(17) ColumnarToRow
[info]                      :     :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54216]
[info]                      :        +- *(18) Project [ca_address_sk#233]
[info]                      :           +- *(18) Filter ((isnotnull(ca_state#241) AND (ca_state#241 = IL)) AND isnotnull(ca_address_sk#233))
[info]                      :              +- *(18) ColumnarToRow
[info]                      :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54225]
[info]                         +- *(19) Project [web_site_sk#1366]
[info]                            +- *(19) Filter ((isnotnull(web_company_name#1380) AND (web_company_name#1380 = pri)) AND isnotnull(web_site_sk#1366))
[info]                               +- *(19) ColumnarToRow
[info]                                  +- BatchScan[web_site_sk#1366, web_company_name#1380] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_site], ReadSchema: struct<web_site_sk:int,web_company_name:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 367 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q95                                                 368            368           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q96
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[count(1)#22112L ASC NULLS FIRST], output=[count(1)#22112L])
[info] +- *(5) HashAggregate(keys=[], functions=[count(1)])
[info]    +- Exchange SinglePartition, true, [id=#54460]
[info]       +- *(4) HashAggregate(keys=[], functions=[partial_count(1)])
[info]          +- *(4) Project
[info]             +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :- *(4) Project [ss_store_sk#1170]
[info]                :  +- *(4) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info]                :     :- *(4) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info]                :     :  +- *(4) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]                :     :     :- *(4) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info]                :     :     :  +- *(4) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info]                :     :     :     +- *(4) ColumnarToRow
[info]                :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54436]
[info]                :     :        +- *(1) Project [hd_demo_sk#448]
[info]                :     :           +- *(1) Filter ((isnotnull(hd_dep_count#451) AND (hd_dep_count#451 = 7)) AND isnotnull(hd_demo_sk#448))
[info]                :     :              +- *(1) ColumnarToRow
[info]                :     :                 +- BatchScan[hd_demo_sk#448, hd_dep_count#451] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54445]
[info]                :        +- *(2) Project [t_time_sk#1728]
[info]                :           +- *(2) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 20)) AND (t_minute#1732 >= 30)) AND isnotnull(t_time_sk#1728))
[info]                :              +- *(2) ColumnarToRow
[info]                :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54454]
[info]                   +- *(3) Project [s_store_sk#670]
[info]                      +- *(3) Filter ((isnotnull(s_store_name#675) AND (s_store_name#675 = ese)) AND isnotnull(s_store_sk#670))
[info]                         +- *(3) ColumnarToRow
[info]                            +- BatchScan[s_store_sk#670, s_store_name#675] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 251 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q96                                                 252            252           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q97
[info] == Physical Plan ==
[info] CollectLimit 100
[info] +- *(10) HashAggregate(keys=[], functions=[sum(cast(CASE WHEN (isnotnull(customer_sk#22144) AND isnull(customer_sk#22146)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (isnull(customer_sk#22144) AND isnotnull(customer_sk#22146)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (isnotnull(customer_sk#22144) AND isnotnull(customer_sk#22146)) THEN 1 ELSE 0 END as bigint))])
[info]    +- Exchange SinglePartition, true, [id=#54740]
[info]       +- *(9) HashAggregate(keys=[], functions=[partial_sum(cast(CASE WHEN (isnotnull(customer_sk#22144) AND isnull(customer_sk#22146)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (isnull(customer_sk#22144) AND isnotnull(customer_sk#22146)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (isnotnull(customer_sk#22144) AND isnotnull(customer_sk#22146)) THEN 1 ELSE 0 END as bigint))])
[info]          +- *(9) Project [customer_sk#22144, customer_sk#22146]
[info]             +- SortMergeJoin [customer_sk#22144, item_sk#22145], [customer_sk#22146, item_sk#22147], FullOuter
[info]                :- *(4) Sort [customer_sk#22144 ASC NULLS FIRST, item_sk#22145 ASC NULLS FIRST], false, 0
[info]                :  +- Exchange hashpartitioning(customer_sk#22144, item_sk#22145, 4), true, [id=#54624]
[info]                :     +- *(3) HashAggregate(keys=[ss_customer_sk#1166, ss_item_sk#1165], functions=[])
[info]                :        +- Exchange hashpartitioning(ss_customer_sk#1166, ss_item_sk#1165, 4), true, [id=#54620]
[info]                :           +- *(2) HashAggregate(keys=[ss_customer_sk#1166, ss_item_sk#1165], functions=[])
[info]                :              +- *(2) Project [ss_item_sk#1165, ss_customer_sk#1166]
[info]                :                 +- *(2) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :                    :- *(2) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                :                    :  +- *(2) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :                    :     +- *(2) ColumnarToRow
[info]                :                    :        +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int>
[info]                :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54614]
[info]                :                       +- *(1) Project [d_date_sk#331]
[info]                :                          +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                :                             +- *(1) ColumnarToRow
[info]                :                                +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                +- *(8) Sort [customer_sk#22146 ASC NULLS FIRST, item_sk#22147 ASC NULLS FIRST], false, 0
[info]                   +- Exchange hashpartitioning(customer_sk#22146, item_sk#22147, 4), true, [id=#54687]
[info]                      +- *(7) HashAggregate(keys=[cs_bill_customer_sk#880, cs_item_sk#892], functions=[])
[info]                         +- Exchange hashpartitioning(cs_bill_customer_sk#880, cs_item_sk#892, 4), true, [id=#54683]
[info]                            +- *(6) HashAggregate(keys=[cs_bill_customer_sk#880, cs_item_sk#892], functions=[])
[info]                               +- *(6) Project [cs_bill_customer_sk#880, cs_item_sk#892]
[info]                                  +- *(6) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                                     :- *(6) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_sold_date_sk#911]
[info]                                     :  +- *(6) Filter isnotnull(cs_sold_date_sk#911)
[info]                                     :     +- *(6) ColumnarToRow
[info]                                     :        +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int>
[info]                                     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54614]
[info] 
[info] 
[info]   Stopped after 1 iterations, 131 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q97                                                 131            131           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q98
[info] == Physical Plan ==
[info] *(7) Project [i_item_desc#500, i_category#508, i_class#506, i_current_price#501, itemrevenue#22187, revenueratio#22188]
[info] +- *(7) Sort [i_category#508 ASC NULLS FIRST, i_class#506 ASC NULLS FIRST, i_item_id#497 ASC NULLS FIRST, i_item_desc#500 ASC NULLS FIRST, revenueratio#22188 ASC NULLS FIRST], true, 0
[info]    +- Exchange rangepartitioning(i_category#508 ASC NULLS FIRST, i_class#506 ASC NULLS FIRST, i_item_id#497 ASC NULLS FIRST, i_item_desc#500 ASC NULLS FIRST, revenueratio#22188 ASC NULLS FIRST, 4), true, [id=#54888]
[info]       +- *(6) Project [i_item_desc#500, i_category#508, i_class#506, i_current_price#501, itemrevenue#22187, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#22193) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#22195)), DecimalType(38,17), true) AS revenueratio#22188, i_item_id#497]
[info]          +- Window [sum(_w1#22194) windowspecdefinition(i_class#506, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#22195], [i_class#506]
[info]             +- *(5) Sort [i_class#506 ASC NULLS FIRST], false, 0
[info]                +- Exchange hashpartitioning(i_class#506, 4), true, [id=#54880]
[info]                   +- *(4) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                      +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, 4), true, [id=#54876]
[info]                         +- *(3) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                            +- *(3) Project [ss_ext_sales_price#1178, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                               +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                                  :- *(3) Project [ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                                  :  +- *(3) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                                  :     :- *(3) Project [ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                                  :     :  +- *(3) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                                  :     :     +- *(3) ColumnarToRow
[info]                                  :     :        +- BatchScan[ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54861]
[info]                                  :        +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                                  :           +- *(1) Filter (i_category#508 IN (Sports,Books,Home) AND isnotnull(i_item_sk#496))
[info]                                  :              +- *(1) ColumnarToRow
[info]                                  :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
[info]                                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54870]
[info]                                     +- *(2) Project [d_date_sk#331]
[info]                                        +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10644)) AND (d_date#333 <= 10674)) AND isnotnull(d_date_sk#331))
[info]                                           +- *(2) ColumnarToRow
[info]                                              +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 127 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q98                                                 127            127           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q99
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[substring(w_warehouse_name, 1, 20)#22248 ASC NULLS FIRST,sm_type#1684 ASC NULLS FIRST,cc_name#1498 ASC NULLS FIRST], output=[substring(w_warehouse_name, 1, 20)#22248,sm_type#1684,cc_name#1498,30 days #22238L,31 - 60 days #22239L,61 - 90 days #22240L,91 - 120 days #22241L,>120 days #22242L])
[info] +- *(6) HashAggregate(keys=[substring(w_warehouse_name#1623, 1, 20)#22273, sm_type#1684, cc_name#1498], functions=[sum(cast(CASE WHEN ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 30) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 30) AND ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 60)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 60) AND ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 90)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 90) AND ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 120)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN ((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 120) THEN 1 ELSE 0 END as bigint))])
[info]    +- Exchange hashpartitioning(substring(w_warehouse_name#1623, 1, 20)#22273, sm_type#1684, cc_name#1498, 4), true, [id=#55067]
[info]       +- *(5) HashAggregate(keys=[substring(w_warehouse_name#1623, 1, 20) AS substring(w_warehouse_name#1623, 1, 20)#22273, sm_type#1684, cc_name#1498], functions=[partial_sum(cast(CASE WHEN ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 30) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 30) AND ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 60)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 60) AND ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 90)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 90) AND ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 120)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN ((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 120) THEN 1 ELSE 0 END as bigint))])
[info]          +- *(5) Project [cs_ship_date_sk#879, cs_sold_date_sk#911, w_warehouse_name#1623, sm_type#1684, cc_name#1498]
[info]             +- *(5) BroadcastHashJoin [cs_ship_date_sk#879], [d_date_sk#331], Inner, BuildRight
[info]                :- *(5) Project [cs_ship_date_sk#879, cs_sold_date_sk#911, w_warehouse_name#1623, sm_type#1684, cc_name#1498]
[info]                :  +- *(5) BroadcastHashJoin [cs_call_center_sk#888], [cc_call_center_sk#1492], Inner, BuildRight
[info]                :     :- *(5) Project [cs_ship_date_sk#879, cs_call_center_sk#888, cs_sold_date_sk#911, w_warehouse_name#1623, sm_type#1684]
[info]                :     :  +- *(5) BroadcastHashJoin [cs_ship_mode_sk#890], [sm_ship_mode_sk#1682], Inner, BuildRight
[info]                :     :     :- *(5) Project [cs_ship_date_sk#879, cs_call_center_sk#888, cs_ship_mode_sk#890, cs_sold_date_sk#911, w_warehouse_name#1623]
[info]                :     :     :  +- *(5) BroadcastHashJoin [cs_warehouse_sk#891], [w_warehouse_sk#1621], Inner, BuildRight
[info]                :     :     :     :- *(5) Project [cs_ship_date_sk#879, cs_call_center_sk#888, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_sold_date_sk#911]
[info]                :     :     :     :  +- *(5) Filter (((isnotnull(cs_warehouse_sk#891) AND isnotnull(cs_ship_mode_sk#890)) AND isnotnull(cs_call_center_sk#888)) AND isnotnull(cs_ship_date_sk#879))
[info]                :     :     :     :     +- *(5) ColumnarToRow
[info]                :     :     :     :        +- BatchScan[cs_ship_date_sk#879, cs_call_center_sk#888, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ship_date_sk:int,cs_call_center_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int>
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#55034]
[info]                :     :     :        +- *(1) Project [w_warehouse_sk#1621, w_warehouse_name#1623]
[info]                :     :     :           +- *(1) Filter isnotnull(w_warehouse_sk#1621)
[info]                :     :     :              +- *(1) ColumnarToRow
[info]                :     :     :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#55043]
[info]                :     :        +- *(2) Project [sm_ship_mode_sk#1682, sm_type#1684]
[info]                :     :           +- *(2) Filter isnotnull(sm_ship_mode_sk#1682)
[info]                :     :              +- *(2) ColumnarToRow
[info]                :     :                 +- BatchScan[sm_ship_mode_sk#1682, sm_type#1684] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/ship_mode], ReadSchema: struct<sm_ship_mode_sk:int,sm_type:string>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#55052]
[info]                :        +- *(3) Project [cc_call_center_sk#1492, cc_name#1498]
[info]                :           +- *(3) Filter isnotnull(cc_call_center_sk#1492)
[info]                :              +- *(3) ColumnarToRow
[info]                :                 +- BatchScan[cc_call_center_sk#1492, cc_name#1498] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/call_center], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#55061]
[info]                   +- *(4) Project [d_date_sk#331]
[info]                      +- *(4) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                         +- *(4) ColumnarToRow
[info]                            +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 159 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q99                                                 160            160           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q5a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#22472 ASC NULLS FIRST,id#22473 ASC NULLS FIRST], output=[channel#22472,id#22473,sales#22541,returns#22542,profit#22543])
[info] +- *(78) HashAggregate(keys=[channel#22472, id#22473, sales#22541, returns#22542, profit#22543], functions=[])
[info]    +- Exchange hashpartitioning(channel#22472, id#22473, sales#22541, returns#22542, profit#22543, 4), true, [id=#57313]
[info]       +- *(77) HashAggregate(keys=[channel#22472, id#22473, sales#22541, returns#22542, profit#22543], functions=[])
[info]          +- Union
[info]             :- *(51) HashAggregate(keys=[channel#22472, id#22473, sales#22541, returns#22542, profit#22543], functions=[])
[info]             :  +- Exchange hashpartitioning(channel#22472, id#22473, sales#22541, returns#22542, profit#22543, 4), true, [id=#57045]
[info]             :     +- *(50) HashAggregate(keys=[channel#22472, id#22473, sales#22541, returns#22542, profit#22543], functions=[])
[info]             :        +- Union
[info]             :           :- *(24) HashAggregate(keys=[channel#22472, id#22473], functions=[sum(sales#22436), sum(returns#22438), sum(profit#22474)])
[info]             :           :  +- Exchange hashpartitioning(channel#22472, id#22473, 4), true, [id=#56615]
[info]             :           :     +- *(23) HashAggregate(keys=[channel#22472, id#22473], functions=[partial_sum(sales#22436), partial_sum(returns#22438), partial_sum(profit#22474)])
[info]             :           :        +- Union
[info]             :           :           :- *(6) HashAggregate(keys=[s_store_id#671], functions=[sum(UnscaledValue(sales_price#22426)), sum(UnscaledValue(return_amt#22428)), sum(UnscaledValue(profit#22427)), sum(UnscaledValue(net_loss#22429))])
[info]             :           :           :  +- Exchange hashpartitioning(s_store_id#671, 4), true, [id=#56166]
[info]             :           :           :     +- *(5) HashAggregate(keys=[s_store_id#671], functions=[partial_sum(UnscaledValue(sales_price#22426)), partial_sum(UnscaledValue(return_amt#22428)), partial_sum(UnscaledValue(profit#22427)), partial_sum(UnscaledValue(net_loss#22429))])
[info]             :           :           :        +- *(5) Project [sales_price#22426, profit#22427, return_amt#22428, net_loss#22429, s_store_id#671]
[info]             :           :           :           +- *(5) BroadcastHashJoin [store_sk#22424], [s_store_sk#670], Inner, BuildRight
[info]             :           :           :              :- *(5) Project [store_sk#22424, sales_price#22426, profit#22427, return_amt#22428, net_loss#22429]
[info]             :           :           :              :  +- *(5) BroadcastHashJoin [date_sk#22425], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :              :     :- Union
[info]             :           :           :              :     :  :- *(1) Project [ss_store_sk#1170 AS store_sk#22424, ss_sold_date_sk#1186 AS date_sk#22425, ss_ext_sales_price#1178 AS sales_price#22426, ss_net_profit#1185 AS profit#22427, 0.00 AS return_amt#22428, 0.00 AS net_loss#22429]
[info]             :           :           :              :     :  :  +- *(1) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]             :           :           :              :     :  :     +- *(1) ColumnarToRow
[info]             :           :           :              :     :  :        +- BatchScan[ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>
[info]             :           :           :              :     :  +- *(2) Project [sr_store_sk#797 AS store_sk#22430, sr_returned_date_sk#810 AS date_sk#22431, 0.00 AS sales_price#22432, 0.00 AS profit#22433, sr_return_amt#801 AS return_amt#22434, sr_net_loss#809 AS net_loss#22435]
[info]             :           :           :              :     :     +- *(2) Filter (isnotnull(sr_returned_date_sk#810) AND isnotnull(sr_store_sk#797))
[info]             :           :           :              :     :        +- *(2) ColumnarToRow
[info]             :           :           :              :     :           +- BatchScan[sr_store_sk#797, sr_return_amt#801, sr_net_loss#809, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
[info]             :           :           :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#56151]
[info]             :           :           :              :        +- *(3) Project [d_date_sk#331]
[info]             :           :           :              :           +- *(3) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10442)) AND (d_date#333 <= 10456)) AND isnotnull(d_date_sk#331))
[info]             :           :           :              :              +- *(3) ColumnarToRow
[info]             :           :           :              :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]             :           :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#56160]
[info]             :           :           :                 +- *(4) Project [s_store_sk#670, s_store_id#671]
[info]             :           :           :                    +- *(4) Filter isnotnull(s_store_sk#670)
[info]             :           :           :                       +- *(4) ColumnarToRow
[info]             :           :           :                          +- BatchScan[s_store_sk#670, s_store_id#671] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string>
[info]             :           :           :- *(12) HashAggregate(keys=[cp_catalog_page_id#1], functions=[sum(UnscaledValue(sales_price#22442)), sum(UnscaledValue(return_amt#22444)), sum(UnscaledValue(profit#22443)), sum(UnscaledValue(net_loss#22445))])
[info]             :           :           :  +- Exchange hashpartitioning(cp_catalog_page_id#1, 4), true, [id=#56587]
[info]             :           :           :     +- *(11) HashAggregate(keys=[cp_catalog_page_id#1], functions=[partial_sum(UnscaledValue(sales_price#22442)), partial_sum(UnscaledValue(return_amt#22444)), partial_sum(UnscaledValue(profit#22443)), partial_sum(UnscaledValue(net_loss#22445))])
[info]             :           :           :        +- *(11) Project [sales_price#22442, profit#22443, return_amt#22444, net_loss#22445, cp_catalog_page_id#1]
[info]             :           :           :           +- *(11) BroadcastHashJoin [page_sk#22440], [cp_catalog_page_sk#0], Inner, BuildRight
[info]             :           :           :              :- *(11) Project [page_sk#22440, sales_price#22442, profit#22443, return_amt#22444, net_loss#22445]
[info]             :           :           :              :  +- *(11) BroadcastHashJoin [date_sk#22441], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :              :     :- Union
[info]             :           :           :              :     :  :- *(7) Project [cs_catalog_page_sk#889 AS page_sk#22440, cs_sold_date_sk#911 AS date_sk#22441, cs_ext_sales_price#900 AS sales_price#22442, cs_net_profit#910 AS profit#22443, 0.00 AS return_amt#22444, 0.00 AS net_loss#22445]
[info]             :           :           :              :     :  :  +- *(7) Filter (isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_catalog_page_sk#889))
[info]             :           :           :              :     :  :     +- *(7) ColumnarToRow
[info]             :           :           :              :     :  :        +- BatchScan[cs_catalog_page_sk#889, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_catalog_page_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>
[info]             :           :           :              :     :  +- *(8) Project [cr_catalog_page_sk#52 AS page_sk#22446, cr_returned_date_sk#67 AS date_sk#22447, 0.00 AS sales_price#22448, 0.00 AS profit#22449, cr_return_amount#58 AS return_amt#22450, cr_net_loss#66 AS net_loss#22451]
[info]             :           :           :              :     :     +- *(8) Filter (isnotnull(cr_returned_date_sk#67) AND isnotnull(cr_catalog_page_sk#52))
[info]             :           :           :              :     :        +- *(8) ColumnarToRow
[info]             :           :           :              :     :           +- BatchScan[cr_catalog_page_sk#52, cr_return_amount#58, cr_net_loss#66, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_catalog_page_sk:int,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
[info]             :           :           :              :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#56151]
[info]             :           :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#56196]
[info]             :           :           :                 +- *(10) Project [cp_catalog_page_sk#0, cp_catalog_page_id#1]
[info]             :           :           :                    +- *(10) Filter isnotnull(cp_catalog_page_sk#0)
[info]             :           :           :                       +- *(10) ColumnarToRow
[info]             :           :           :                          +- BatchScan[cp_catalog_page_sk#0, cp_catalog_page_id#1] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_page], ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>
[info]             :           :           +- *(22) HashAggregate(keys=[web_site_id#1367], functions=[sum(UnscaledValue(sales_price#22458)), sum(UnscaledValue(return_amt#22460)), sum(UnscaledValue(profit#22459)), sum(UnscaledValue(net_loss#22461))])
[info]             :           :              +- Exchange hashpartitioning(web_site_id#1367, 4), true, [id=#56607]
[info]             :           :                 +- *(21) HashAggregate(keys=[web_site_id#1367], functions=[partial_sum(UnscaledValue(sales_price#22458)), partial_sum(UnscaledValue(return_amt#22460)), partial_sum(UnscaledValue(profit#22459)), partial_sum(UnscaledValue(net_loss#22461))])
[info]             :           :                    +- *(21) Project [sales_price#22458, profit#22459, return_amt#22460, net_loss#22461, web_site_id#1367]
[info]             :           :                       +- *(21) BroadcastHashJoin [wsr_web_site_sk#22456], [web_site_sk#1366], Inner, BuildRight
[info]             :           :                          :- *(21) Project [wsr_web_site_sk#22456, sales_price#22458, profit#22459, return_amt#22460, net_loss#22461]
[info]             :           :                          :  +- *(21) BroadcastHashJoin [date_sk#22457], [d_date_sk#331], Inner, BuildRight
[info]             :           :                          :     :- Union
[info]             :           :                          :     :  :- *(13) Project [ws_web_site_sk#1033 AS wsr_web_site_sk#22456, ws_sold_date_sk#1054 AS date_sk#22457, ws_ext_sales_price#1043 AS sales_price#22458, ws_net_profit#1053 AS profit#22459, 0.00 AS return_amt#22460, 0.00 AS net_loss#22461]
[info]             :           :                          :     :  :  +- *(13) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_web_site_sk#1033))
[info]             :           :                          :     :  :     +- *(13) ColumnarToRow
[info]             :           :                          :     :  :        +- BatchScan[ws_web_site_sk#1033, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_web_site_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>
[info]             :           :                          :     :  +- *(18) Project [ws_web_site_sk#1033 AS wsr_web_site_sk#22462, wr_returned_date_sk#1286 AS date_sk#22463, 0.00 AS sales_price#22464, 0.00 AS profit#22465, wr_return_amt#1277 AS return_amt#22466, wr_net_loss#1285 AS net_loss#22467]
[info]             :           :                          :     :     +- *(18) SortMergeJoin [wr_item_sk#1264, wr_order_number#1275L], [ws_item_sk#1023, ws_order_number#1037L], Inner
[info]             :           :                          :     :        :- *(15) Sort [wr_item_sk#1264 ASC NULLS FIRST, wr_order_number#1275L ASC NULLS FIRST], false, 0
[info]             :           :                          :     :        :  +- Exchange hashpartitioning(wr_item_sk#1264, wr_order_number#1275L, 4), true, [id=#56216]
[info]             :           :                          :     :        :     +- *(14) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286]
[info]             :           :                          :     :        :        +- *(14) Filter isnotnull(wr_returned_date_sk#1286)
[info]             :           :                          :     :        :           +- *(14) ColumnarToRow
[info]             :           :                          :     :        :              +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
[info]             :           :                          :     :        +- *(17) Sort [ws_item_sk#1023 ASC NULLS FIRST, ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]             :           :                          :     :           +- Exchange hashpartitioning(ws_item_sk#1023, ws_order_number#1037L, 4), true, [id=#56226]
[info]             :           :                          :     :              +- *(16) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_order_number#1037L]
[info]             :           :                          :     :                 +- *(16) Filter ((isnotnull(ws_item_sk#1023) AND isnotnull(ws_order_number#1037L)) AND isnotnull(ws_web_site_sk#1033))
[info]             :           :                          :     :                    +- *(16) ColumnarToRow
[info]             :           :                          :     :                       +- BatchScan[ws_item_sk#1023, ws_web_site_sk#1033, ws_order_number#1037L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_order_number:bigint>
[info]             :           :                          :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#56151]
[info]             :           :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#56250]
[info]             :           :                             +- *(20) Project [web_site_sk#1366, web_site_id#1367]
[info]             :           :                                +- *(20) Filter isnotnull(web_site_sk#1366)
[info]             :           :                                   +- *(20) ColumnarToRow
[info]             :           :                                      +- BatchScan[web_site_sk#1366, web_site_id#1367] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_site], ReadSchema: struct<web_site_sk:int,web_site_id:string>
[info]             :           +- *(49) HashAggregate(keys=[channel#22472], functions=[sum(sales#22481), sum(returns#22482), sum(profit#22483)])
[info]             :              +- Exchange hashpartitioning(channel#22472, 4), true, [id=#57037]
[info]             :                 +- *(48) HashAggregate(keys=[channel#22472], functions=[partial_sum(sales#22481), partial_sum(returns#22482), partial_sum(profit#22483)])
[info]             :                    +- *(48) HashAggregate(keys=[channel#22472, id#22473], functions=[sum(sales#22436), sum(returns#22438), sum(profit#22474)])
[info]             :                       +- ReusedExchange [channel#22472, id#22473, sum#22716, sum#22717, sum#22718], Exchange hashpartitioning(channel#22472, id#22473, 4), true, [id=#56615]
[info]             +- *(76) HashAggregate(keys=[], functions=[sum(sales#22481), sum(returns#22482), sum(profit#22483)])
[info]                +- Exchange SinglePartition, true, [id=#57305]
[info]                   +- *(75) HashAggregate(keys=[], functions=[partial_sum(sales#22481), partial_sum(returns#22482), partial_sum(profit#22483)])
[info]                      +- *(75) HashAggregate(keys=[channel#22472, id#22473], functions=[sum(sales#22436), sum(returns#22438), sum(profit#22474)])
[info]                         +- ReusedExchange [channel#22472, id#22473, sum#22752, sum#22753, sum#22754], Exchange hashpartitioning(channel#22472, id#22473, 4), true, [id=#56615]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1615 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q5a-v2.7                                           1615           1615           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q6-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[cnt#22897L ASC NULLS FIRST,ca_state#241 ASC NULLS FIRST], output=[state#22896,cnt#22897L])
[info] +- *(13) Project [state#22896, cnt#22897L, ca_state#241]
[info]    +- *(13) Filter (count(1)#22903L >= 10)
[info]       +- *(13) HashAggregate(keys=[ca_state#241], functions=[count(1)])
[info]          +- Exchange hashpartitioning(ca_state#241, 4), true, [id=#57626]
[info]             +- *(12) HashAggregate(keys=[ca_state#241], functions=[partial_count(1)])
[info]                +- *(12) Project [ca_state#241]
[info]                   +- *(12) SortMergeJoin [ss_item_sk#1165], [i_item_sk#496], Inner
[info]                      :- *(8) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                      :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#57595]
[info]                      :     +- *(7) Project [ca_state#241, ss_item_sk#1165]
[info]                      :        +- *(7) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                      :           :- *(7) Project [ca_state#241, ss_item_sk#1165, ss_sold_date_sk#1186]
[info]                      :           :  +- *(7) SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner
[info]                      :           :     :- *(3) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                      :           :     :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#57568]
[info]                      :           :     :     +- *(2) Project [ca_state#241, c_customer_sk#156]
[info]                      :           :     :        +- *(2) BroadcastHashJoin [ca_address_sk#233], [c_current_addr_sk#160], Inner, BuildLeft
[info]                      :           :     :           :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57559]
[info]                      :           :     :           :  +- *(1) Project [ca_address_sk#233, ca_state#241]
[info]                      :           :     :           :     +- *(1) Filter isnotnull(ca_address_sk#233)
[info]                      :           :     :           :        +- *(1) ColumnarToRow
[info]                      :           :     :           :           +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                      :           :     :           +- *(2) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]                      :           :     :              +- *(2) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_customer_sk#156))
[info]                      :           :     :                 +- *(2) ColumnarToRow
[info]                      :           :     :                    +- BatchScan[c_customer_sk#156, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
[info]                      :           :     +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                      :           :        +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#57578]
[info]                      :           :           +- *(4) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                      :           :              +- *(4) Filter ((isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_item_sk#1165))
[info]                      :           :                 +- *(4) ColumnarToRow
[info]                      :           :                    +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int>
[info]                      :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57590]
[info]                      :              +- *(6) Project [d_date_sk#331]
[info]                      :                 +- *(6) Filter ((isnotnull(d_month_seq#334) AND isnotnull(d_date_sk#331)) AND (d_month_seq#334 = Subquery scalar-subquery#22894, [id=#57460]))
[info]                      :                    :  +- Subquery scalar-subquery#22894, [id=#57460]
[info]                      :                    :     +- *(1) HashAggregate(keys=[d_month_seq#334], functions=[])
[info]                      :                    :        +- *(1) HashAggregate(keys=[d_month_seq#334], functions=[])
[info]                      :                    :           +- *(1) Project [d_month_seq#334]
[info]                      :                    :              +- *(1) Filter (((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2000)) AND (d_moy#339 = 1))
[info]                      :                    :                 +- *(1) ColumnarToRow
[info]                      :                    :                    +- BatchScan[d_month_seq#334, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>
[info]                      :                    +- *(6) ColumnarToRow
[info]                      :                       +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                      +- *(11) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]                         +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#57617]
[info]                            +- *(10) Project [i_item_sk#496]
[info]                               +- *(10) Filter (cast(i_current_price#501 as decimal(14,7)) > CheckOverflow((1.200000 * promote_precision(avg(i_current_price)#22901)), DecimalType(14,7), true))
[info]                                  +- *(10) BroadcastHashJoin [i_category#508], [i_category#508#22907], LeftOuter, BuildRight
[info]                                     :- *(10) Project [i_item_sk#496, i_current_price#501, i_category#508]
[info]                                     :  +- *(10) Filter (isnotnull(i_current_price#501) AND isnotnull(i_item_sk#496))
[info]                                     :     +- *(10) ColumnarToRow
[info]                                     :        +- BatchScan[i_item_sk#496, i_current_price#501, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_category:string>
[info]                                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true])), [id=#57611]
[info]                                        +- *(9) HashAggregate(keys=[i_category#508], functions=[avg(UnscaledValue(i_current_price#501))])
[info]                                           +- *(9) HashAggregate(keys=[i_category#508], functions=[partial_avg(UnscaledValue(i_current_price#501))])
[info]                                              +- *(9) Project [i_current_price#501, i_category#508]
[info]                                                 +- *(9) Filter isnotnull(i_category#508)
[info]                                                    +- *(9) ColumnarToRow
[info]                                                       +- BatchScan[i_current_price#501, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_current_price:decimal(7,2),i_category:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 273 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q6-v2.7                                             274            274           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q10a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[cd_gender#291 ASC NULLS FIRST,cd_marital_status#292 ASC NULLS FIRST,cd_education_status#293 ASC NULLS FIRST,cd_purchase_estimate#294 ASC NULLS FIRST,cd_credit_rating#295 ASC NULLS FIRST,cd_dep_count#296 ASC NULLS FIRST,cd_dep_employed_count#297 ASC NULLS FIRST,cd_dep_college_count#298 ASC NULLS FIRST], output=[cd_gender#291,cd_marital_status#292,cd_education_status#293,cnt1#22969L,cd_purchase_estimate#294,cnt2#22970L,cd_credit_rating#295,cnt3#22971L,cd_dep_count#296,cnt4#22972L,cd_dep_employed_count#297,cnt5#22973L,cd_dep_college_count#298,cnt6#22974L])
[info] +- *(14) HashAggregate(keys=[cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[count(1)])
[info]    +- Exchange hashpartitioning(cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298, 4), true, [id=#57994]
[info]       +- *(13) HashAggregate(keys=[cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[partial_count(1)])
[info]          +- *(13) Project [cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]             +- *(13) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]                :- *(13) Project [c_current_cdemo_sk#158]
[info]                :  +- *(13) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                :     :- *(13) Project [c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :  +- SortMergeJoin [c_customer_sk#156], [customer_sk#22966], LeftSemi
[info]                :     :     :- SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], LeftSemi
[info]                :     :     :  :- *(2) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                :     :     :  :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#57867]
[info]                :     :     :  :     +- *(1) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :     :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_current_cdemo_sk#158))
[info]                :     :     :  :           +- *(1) ColumnarToRow
[info]                :     :     :  :              +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
[info]                :     :     :  +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                :     :     :     +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#57885]
[info]                :     :     :        +- *(4) Project [ss_customer_sk#1166]
[info]                :     :     :           +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :              :- *(4) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                :     :     :              :  +- *(4) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :     :     :              :     +- *(4) ColumnarToRow
[info]                :     :     :              :        +- BatchScan[ss_sold_time_sk#1164, ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_sales_price#1176, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_ext_tax#1181, ss_coupon_amt#1182, ss_net_paid#1183, ss_net_paid_inc_tax#1184, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_a...
[info]                :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57880]
[info]                :     :     :                 +- *(3) Project [d_date_sk#331]
[info]                :     :     :                    +- *(3) Filter (((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2002)) AND (d_moy#339 >= 4)) AND (d_moy#339 <= 7)) AND isnotnull(d_date_sk#331))
[info]                :     :     :                       +- *(3) ColumnarToRow
[info]                :     :     :                          +- BatchScan[d_date_sk#331, d_date_id#332, d_date#333, d_month_seq#334, d_week_seq#335, d_quarter_seq#336, d_year#337, d_dow#338, d_moy#339, d_dom#340, d_qoy#341, d_fy_year#342, d_fy_quarter_seq#343, d_fy_week_seq#344, d_day_name#345, d_quarter_name#346, d_holiday#347, d_weekend#348, d_following_holiday#349, d_first_dom#350, d_last_dom#351, d_same_day_ly#352, d_same_day_lq#353, d_current_day#354, ... 4 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:in...
[info]                :     :     +- *(10) Sort [customer_sk#22966 ASC NULLS FIRST], false, 0
[info]                :     :        +- Exchange hashpartitioning(customer_sk#22966, 4), true, [id=#57981]
[info]                :     :           +- Union
[info]                :     :              :- *(7) Project [ws_bill_customer_sk#1024 AS customer_sk#22966]
[info]                :     :              :  +- *(7) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :              :     :- *(7) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                :     :              :     :  +- *(7) Filter isnotnull(ws_sold_date_sk#1054)
[info]                :     :              :     :     +- *(7) ColumnarToRow
[info]                :     :              :     :        +- BatchScan[ws_bill_customer_sk#1024, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int>
[info]                :     :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57899]
[info]                :     :              :        +- *(6) Project [d_date_sk#331]
[info]                :     :              :           +- *(6) Filter (((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2002)) AND (d_moy#339 >= 4)) AND (d_moy#339 <= 7)) AND isnotnull(d_date_sk#331))
[info]                :     :              :              +- *(6) ColumnarToRow
[info]                :     :              :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     :              +- *(9) Project [cs_ship_customer_sk#884 AS customer_sk#22981]
[info]                :     :                 +- *(9) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :                    :- *(9) Project [cs_ship_customer_sk#884, cs_sold_date_sk#911]
[info]                :     :                    :  +- *(9) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :                    :     +- *(9) ColumnarToRow
[info]                :     :                    :        +- BatchScan[cs_ship_customer_sk#884, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ship_customer_sk:int>
[info]                :     :                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57899]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57931]
[info]                :        +- *(11) Project [ca_address_sk#233]
[info]                :           +- *(11) Filter (ca_county#240 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#233))
[info]                :              +- *(11) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_county#240] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_county:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57940]
[info]                   +- *(12) Project [cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]                      +- *(12) Filter isnotnull(cd_demo_sk#290)
[info]                         +- *(12) ColumnarToRow
[info]                            +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_pur...
[info] 
[info] 
[info]   Stopped after 1 iterations, 328 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q10a-v2.7                                           329            329           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q11-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[customer_id#23108 ASC NULLS FIRST,customer_first_name#23109 ASC NULLS FIRST,customer_last_name#23110 ASC NULLS FIRST,customer_email_address#23114 ASC NULLS FIRST], output=[customer_id#23108,customer_first_name#23109,customer_last_name#23110,customer_email_address#23114])
[info] +- *(23) Project [customer_id#23108, customer_first_name#23109, customer_last_name#23110, customer_email_address#23114]
[info]    +- *(23) SortMergeJoin [customer_id#23080], [customer_id#23128], Inner, (CASE WHEN (year_total#23126 > 0.00) THEN CheckOverflow((promote_precision(year_total#23136) / promote_precision(year_total#23126)), DecimalType(38,20), true) ELSE 0E-20 END > CASE WHEN (year_total#23088 > 0.00) THEN CheckOverflow((promote_precision(year_total#23116) / promote_precision(year_total#23088)), DecimalType(38,20), true) ELSE 0E-20 END)
[info]       :- *(17) Project [customer_id#23080, year_total#23088, customer_id#23108, customer_first_name#23109, customer_last_name#23110, customer_email_address#23114, year_total#23116, year_total#23126]
[info]       :  +- *(17) SortMergeJoin [customer_id#23080], [customer_id#23118], Inner
[info]       :     :- *(11) SortMergeJoin [customer_id#23080], [customer_id#23108], Inner
[info]       :     :  :- *(5) Sort [customer_id#23080 ASC NULLS FIRST], false, 0
[info]       :     :  :  +- Exchange hashpartitioning(customer_id#23080, 4), true, [id=#58441]
[info]       :     :  :     +- Union
[info]       :     :  :        :- *(4) Filter (isnotnull(year_total#23088) AND (year_total#23088 > 0.00))
[info]       :     :  :        :  +- *(4) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :  :        :     +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, 4), true, [id=#58435]
[info]       :     :  :        :        +- *(3) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :  :        :           +- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, d_year#337]
[info]       :     :  :        :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :  :        :                 :- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :  :        :                 :  +- *(3) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :  :        :                 :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#58416]
[info]       :     :  :        :                 :     :  +- *(1) Project [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172]
[info]       :     :  :        :                 :     :     +- *(1) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_customer_id#157))
[info]       :     :  :        :                 :     :        +- *(1) ColumnarToRow
[info]       :     :  :        :                 :     :           +- BatchScan[c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
[info]       :     :  :        :                 :     +- *(3) Project [ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :  :        :                 :        +- *(3) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :  :        :                 :           +- *(3) ColumnarToRow
[info]       :     :  :        :                 :              +- BatchScan[ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:decimal(7,2)>
[info]       :     :  :        :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#58429]
[info]       :     :  :        :                    +- *(2) Project [d_date_sk#331, d_year#337]
[info]       :     :  :        :                       +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]       :     :  :        :                          +- *(2) ColumnarToRow
[info]       :     :  :        :                             +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :  :        +- LocalTableScan <empty>, [customer_id#23090, year_total#23098]
[info]       :     :  +- *(10) Sort [customer_id#23108 ASC NULLS FIRST], false, 0
[info]       :     :     +- Exchange hashpartitioning(customer_id#23108, 4), true, [id=#58647]
[info]       :     :        +- Union
[info]       :     :           :- *(9) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :           :  +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, 4), true, [id=#58600]
[info]       :     :           :     +- *(8) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :           :        +- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, d_year#337]
[info]       :     :           :           +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :           :              :- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :           :              :  +- *(8) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :           :              :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#58416]
[info]       :     :           :              :     +- *(8) Project [ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :           :              :        +- *(8) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :           :              :           +- *(8) ColumnarToRow
[info]       :     :           :              :              +- BatchScan[ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:decimal(7,2)>
[info]       :     :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#58464]
[info]       :     :           :                 +- *(7) Project [d_date_sk#331, d_year#337]
[info]       :     :           :                    +- *(7) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND isnotnull(d_date_sk#331))
[info]       :     :           :                       +- *(7) ColumnarToRow
[info]       :     :           :                          +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :           +- LocalTableScan <empty>, [customer_id#23090, customer_first_name#23091, customer_last_name#23092, customer_email_address#23096, year_total#23098]
[info]       :     +- *(16) Sort [customer_id#23118 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(customer_id#23118, 4), true, [id=#58687]
[info]       :           +- Union
[info]       :              :- LocalTableScan <empty>, [customer_id#23118, year_total#23126]
[info]       :              +- *(15) Filter (isnotnull(year_total#23098) AND (year_total#23098 > 0.00))
[info]       :                 +- *(15) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :                    +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#58681]
[info]       :                       +- *(14) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :                          +- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, d_year#337]
[info]       :                             +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                                :- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]       :                                :  +- *(14) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]       :                                :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#58416]
[info]       :                                :     +- *(14) Project [ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]       :                                :        +- *(14) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]       :                                :           +- *(14) ColumnarToRow
[info]       :                                :              +- BatchScan[ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_price:decimal(7,2)>
[info]       :                                +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#58429]
[info]       +- *(22) Sort [customer_id#23128 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(customer_id#23128, 4), true, [id=#58789]
[info]             +- Union
[info]                :- LocalTableScan <empty>, [customer_id#23128, year_total#23136]
[info]                +- *(21) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]                   +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#58763]
[info]                      +- *(20) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]                         +- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, d_year#337]
[info]                            +- *(20) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]                               :  +- *(20) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]                               :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#58416]
[info]                               :     +- *(20) Project [ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]                               :        +- *(20) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]                               :           +- *(20) ColumnarToRow
[info]                               :              +- BatchScan[ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_price:decimal(7,2)>
[info]                               +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#58464]
[info] 
[info] 
[info]   Stopped after 1 iterations, 911 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q11-v2.7                                            911            911           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q12-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_category#508 ASC NULLS FIRST,i_class#506 ASC NULLS FIRST,i_item_id#497 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST,revenueratio#23258 ASC NULLS FIRST], output=[i_item_id#497,i_item_desc#500,i_category#508,i_class#506,i_current_price#501,itemrevenue#23257,revenueratio#23258])
[info] +- *(6) Project [i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, itemrevenue#23257, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#23263) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#23265)), DecimalType(38,17), true) AS revenueratio#23258]
[info]    +- Window [sum(_w1#23264) windowspecdefinition(i_class#506, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#23265], [i_class#506]
[info]       +- *(5) Sort [i_class#506 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_class#506, 4), true, [id=#58931]
[info]             +- *(4) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, 4), true, [id=#58927]
[info]                   +- *(3) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                      +- *(3) Project [ws_ext_sales_price#1043, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                         +- *(3) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                            :- *(3) Project [ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :  +- *(3) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                            :     :- *(3) Project [ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                            :     :  +- *(3) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                            :     :     +- *(3) ColumnarToRow
[info]                            :     :        +- BatchScan[ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#58912]
[info]                            :        +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :           +- *(1) Filter (i_category#508 IN (Sports,Books,Home) AND isnotnull(i_item_sk#496))
[info]                            :              +- *(1) ColumnarToRow
[info]                            :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#58921]
[info]                               +- *(2) Project [d_date_sk#331]
[info]                                  +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10644)) AND (d_date#333 <= 10674)) AND isnotnull(d_date_sk#331))
[info]                                     +- *(2) ColumnarToRow
[info]                                        +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 112 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q12-v2.7                                            112            112           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q14-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#23362 ASC NULLS FIRST,i_brand_id#503 ASC NULLS FIRST,i_class_id#505 ASC NULLS FIRST,i_category_id#507 ASC NULLS FIRST], output=[channel#23362,i_brand_id#503,i_class_id#505,i_category_id#507,sales#23363,number_sales#23364L,channel#23368,i_brand_id#23402,i_class_id#23404,i_category_id#23406,sales#23369,number_sales#23370L])
[info] +- *(79) SortMergeJoin [i_brand_id#503, i_class_id#505, i_category_id#507], [i_brand_id#23402, i_class_id#23404, i_category_id#23406], Inner
[info]    :- *(39) Sort [i_brand_id#503 ASC NULLS FIRST, i_class_id#505 ASC NULLS FIRST, i_category_id#507 ASC NULLS FIRST], false, 0
[info]    :  +- *(39) Project [channel#23362, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23363, number_sales#23364L]
[info]    :     +- *(39) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#23391) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#23391 as decimal(32,6)) > cast(Subquery scalar-subquery#23365, [id=#61677] as decimal(32,6))))
[info]    :        :  +- Subquery scalar-subquery#23365, [id=#61677]
[info]    :        :     +- *(8) HashAggregate(keys=[], functions=[avg(CheckOverflow((promote_precision(cast(cast(quantity#23376 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#23377 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :        :        +- Exchange SinglePartition, true, [id=#61673]
[info]    :        :           +- *(7) HashAggregate(keys=[], functions=[partial_avg(CheckOverflow((promote_precision(cast(cast(quantity#23376 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#23377 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :        :              +- Union
[info]    :        :                 :- *(2) Project [ss_quantity#1173 AS quantity#23376, ss_list_price#1175 AS list_price#23377]
[info]    :        :                 :  +- *(2) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :        :                 :     :- *(2) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]    :        :                 :     :  +- *(2) Filter isnotnull(ss_sold_date_sk#1186)
[info]    :        :                 :     :     +- *(2) ColumnarToRow
[info]    :        :                 :     :        +- BatchScan[ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>
[info]    :        :                 :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60700]
[info]    :        :                 :- *(4) Project [cs_quantity#895 AS quantity#23378, cs_list_price#897 AS list_price#23379]
[info]    :        :                 :  +- *(4) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :        :                 :     :- *(4) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]    :        :                 :     :  +- *(4) Filter isnotnull(cs_sold_date_sk#911)
[info]    :        :                 :     :     +- *(4) ColumnarToRow
[info]    :        :                 :     :        +- BatchScan[cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>
[info]    :        :                 :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60700]
[info]    :        :                 +- *(6) Project [ws_quantity#1038 AS quantity#23380, ws_list_price#1040 AS list_price#23381]
[info]    :        :                    +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]    :        :                       :- *(6) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]    :        :                       :  +- *(6) Filter isnotnull(ws_sold_date_sk#1054)
[info]    :        :                       :     +- *(6) ColumnarToRow
[info]    :        :                       :        +- BatchScan[ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>
[info]    :        :                       +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60700]
[info]    :        +- *(39) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]    :           +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#61626]
[info]    :              +- *(38) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]    :                 +- *(38) Project [ss_quantity#1173, ss_list_price#1175, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                    +- *(38) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :                       :- *(38) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :  +- *(38) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :- SortMergeJoin [ss_item_sk#1165], [ss_item_sk#23375], LeftSemi
[info]    :                       :     :  :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]    :                       :     :  :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#60671]
[info]    :                       :     :  :     +- *(1) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]    :                       :     :  :        +- *(1) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]    :                       :     :  :           +- *(1) ColumnarToRow
[info]    :                       :     :  :              +- BatchScan[ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>
[info]    :                       :     :  +- *(18) Sort [ss_item_sk#23375 ASC NULLS FIRST], false, 0
[info]    :                       :     :     +- Exchange hashpartitioning(ss_item_sk#23375, 4), true, [id=#61347]
[info]    :                       :     :        +- *(17) Project [i_item_sk#496 AS ss_item_sk#23375]
[info]    :                       :     :           +- *(17) BroadcastHashJoin [i_brand_id#503, i_class_id#505, i_category_id#507], [brand_id#23372, class_id#23373, category_id#23374], Inner, BuildLeft
[info]    :                       :     :              :- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, true], input[2, int, true], input[3, int, true])), [id=#60680]
[info]    :                       :     :              :  +- *(3) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :              :     +- *(3) Filter ((isnotnull(i_category_id#507) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505))
[info]    :                       :     :              :        +- *(3) ColumnarToRow
[info]    :                       :     :              :           +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :     :              +- *(17) HashAggregate(keys=[brand_id#23372, class_id#23373, category_id#23374], functions=[])
[info]    :                       :     :                 +- *(17) HashAggregate(keys=[brand_id#23372, class_id#23373, category_id#23374], functions=[])
[info]    :                       :     :                    +- *(17) HashAggregate(keys=[brand_id#23372, class_id#23373, category_id#23374], functions=[])
[info]    :                       :     :                       +- Exchange hashpartitioning(brand_id#23372, class_id#23373, category_id#23374, 4), true, [id=#61298]
[info]    :                       :     :                          +- *(16) HashAggregate(keys=[brand_id#23372, class_id#23373, category_id#23374], functions=[])
[info]    :                       :     :                             +- SortMergeJoin [coalesce(brand_id#23372, 0), isnull(brand_id#23372), coalesce(class_id#23373, 0), isnull(class_id#23373), coalesce(category_id#23374, 0), isnull(category_id#23374)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]    :                       :     :                                :- SortMergeJoin [coalesce(brand_id#23372, 0), isnull(brand_id#23372), coalesce(class_id#23373, 0), isnull(class_id#23373), coalesce(category_id#23374, 0), isnull(category_id#23374)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]    :                       :     :                                :  :- *(7) Sort [coalesce(brand_id#23372, 0) ASC NULLS FIRST, isnull(brand_id#23372) ASC NULLS FIRST, coalesce(class_id#23373, 0) ASC NULLS FIRST, isnull(class_id#23373) ASC NULLS FIRST, coalesce(category_id#23374, 0) ASC NULLS FIRST, isnull(category_id#23374) ASC NULLS FIRST], false, 0
[info]    :                       :     :                                :  :  +- Exchange hashpartitioning(coalesce(brand_id#23372, 0), isnull(brand_id#23372), coalesce(class_id#23373, 0), isnull(class_id#23373), coalesce(category_id#23374, 0), isnull(category_id#23374), 4), true, [id=#60705]
[info]    :                       :     :                                :  :     +- *(6) Project [i_brand_id#503 AS brand_id#23372, i_class_id#505 AS class_id#23373, i_category_id#507 AS category_id#23374]
[info]    :                       :     :                                :  :        +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :                       :     :                                :  :           :- *(6) Project [ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :  :           :  +- *(6) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :                                :  :           :     :- *(6) Project [ss_item_sk#1165, ss_sold_date_sk#1186]
[info]    :                       :     :                                :  :           :     :  +- *(6) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]    :                       :     :                                :  :           :     :     +- *(6) ColumnarToRow
[info]    :                       :     :                                :  :           :     :        +- BatchScan[ss_item_sk#1165, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int>
[info]    :                       :     :                                :  :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60691]
[info]    :                       :     :                                :  :           :        +- *(4) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :  :           :           +- *(4) Filter (((isnotnull(i_item_sk#496) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505)) AND isnotnull(i_category_id#507))
[info]    :                       :     :                                :  :           :              +- *(4) ColumnarToRow
[info]    :                       :     :                                :  :           :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :     :                                :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60700]
[info]    :                       :     :                                :  :              +- *(5) Project [d_date_sk#331]
[info]    :                       :     :                                :  :                 +- *(5) Filter (((isnotnull(d_year#337) AND (d_year#337 >= 1998)) AND (d_year#337 <= 2000)) AND isnotnull(d_date_sk#331))
[info]    :                       :     :                                :  :                    +- *(5) ColumnarToRow
[info]    :                       :     :                                :  :                       +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]    :                       :     :                                :  +- *(11) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]    :                       :     :                                :     +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#61222]
[info]    :                       :     :                                :        +- *(10) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :           +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :                       :     :                                :              :- *(10) Project [cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :              :  +- *(10) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :                                :              :     :- *(10) Project [cs_item_sk#892, cs_sold_date_sk#911]
[info]    :                       :     :                                :              :     :  +- *(10) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]    :                       :     :                                :              :     :     +- *(10) ColumnarToRow
[info]    :                       :     :                                :              :     :        +- BatchScan[cs_item_sk#892, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int>
[info]    :                       :     :                                :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60718]
[info]    :                       :     :                                :              :        +- *(8) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :              :           +- *(8) Filter isnotnull(i_item_sk#496)
[info]    :                       :     :                                :              :              +- *(8) ColumnarToRow
[info]    :                       :     :                                :              :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :     :                                :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60700]
[info]    :                       :     :                                +- *(15) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]    :                       :     :                                   +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#61252]
[info]    :                       :     :                                      +- *(14) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                         +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]    :                       :     :                                            :- *(14) Project [ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                            :  +- *(14) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :                                            :     :- *(14) Project [ws_item_sk#1023, ws_sold_date_sk#1054]
[info]    :                       :     :                                            :     :  +- *(14) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]    :                       :     :                                            :     :     +- *(14) ColumnarToRow
[info]    :                       :     :                                            :     :        +- BatchScan[ws_item_sk#1023, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int>
[info]    :                       :     :                                            :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60718]
[info]    :                       :     :                                            +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60700]
[info]    :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#61591]
[info]    :                       :        +- SortMergeJoin [i_item_sk#496], [ss_item_sk#23375], LeftSemi
[info]    :                       :           :- *(20) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]    :                       :           :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#60787]
[info]    :                       :           :     +- *(19) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :           :        +- *(19) Filter (((isnotnull(i_item_sk#496) AND isnotnull(i_brand_id#503)) AND isnotnull(i_category_id#507)) AND isnotnull(i_class_id#505))
[info]    :                       :           :           +- *(19) ColumnarToRow
[info]    :                       :           :              +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :           +- *(36) Sort [ss_item_sk#23375 ASC NULLS FIRST], false, 0
[info]    :                       :              +- ReusedExchange [ss_item_sk#23375], Exchange hashpartitioning(ss_item_sk#23375, 4), true, [id=#61347]
[info]    :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60906]
[info]    :                          +- *(37) Project [d_date_sk#331]
[info]    :                             +- *(37) Filter ((isnotnull(d_week_seq#335) AND isnotnull(d_date_sk#331)) AND (d_week_seq#335 = Subquery scalar-subquery#23361, [id=#59898]))
[info]    :                                :  +- Subquery scalar-subquery#23361, [id=#59898]
[info]    :                                :     +- *(1) Project [d_week_seq#335]
[info]    :                                :        +- *(1) Filter (((((isnotnull(d_dom#340) AND isnotnull(d_year#337)) AND isnotnull(d_moy#339)) AND (d_year#337 = 1999)) AND (d_moy#339 = 12)) AND (d_dom#340 = 16))
[info]    :                                :           +- *(1) ColumnarToRow
[info]    :                                :              +- BatchScan[d_week_seq#335, d_year#337, d_moy#339, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>
[info]    :                                +- *(37) ColumnarToRow
[info]    :                                   +- BatchScan[d_date_sk#331, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
[info]    +- *(78) Sort [i_brand_id#23402 ASC NULLS FIRST, i_class_id#23404 ASC NULLS FIRST, i_category_id#23406 ASC NULLS FIRST], false, 0
[info]       +- *(78) Project [channel#23368, i_brand_id#23402, i_class_id#23404, i_category_id#23406, sales#23369, number_sales#23370L]
[info]          +- *(78) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#23394) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#23394 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23365, [id=#61677] as decimal(32,6))))
[info]             :  +- ReusedSubquery Subquery scalar-subquery#23365, [id=#61677]
[info]             +- *(78) HashAggregate(keys=[i_brand_id#23402, i_class_id#23404, i_category_id#23406], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]                +- Exchange hashpartitioning(i_brand_id#23402, i_class_id#23404, i_category_id#23406, 4), true, [id=#62183]
[info]                   +- *(77) HashAggregate(keys=[i_brand_id#23402, i_class_id#23404, i_category_id#23406], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]                      +- *(77) Project [ss_quantity#1173, ss_list_price#1175, i_brand_id#23402, i_class_id#23404, i_category_id#23406]
[info]                         +- *(77) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                            :- *(77) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186, i_brand_id#23402, i_class_id#23404, i_category_id#23406]
[info]                            :  +- *(77) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#23395], Inner, BuildRight
[info]                            :     :- SortMergeJoin [ss_item_sk#1165], [ss_item_sk#23375], LeftSemi
[info]                            :     :  :- *(41) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                            :     :  :  +- ReusedExchange [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186], Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#60671]
[info]                            :     :  +- *(57) Sort [ss_item_sk#23375 ASC NULLS FIRST], false, 0
[info]                            :     :     +- ReusedExchange [ss_item_sk#23375], Exchange hashpartitioning(ss_item_sk#23375, 4), true, [id=#61347]
[info]                            :     +- ReusedExchange [i_item_sk#23395, i_brand_id#23402, i_class_id#23404, i_category_id#23406], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#61591]
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#61160]
[info]                               +- *(76) Project [d_date_sk#331]
[info]                                  +- *(76) Filter ((isnotnull(d_week_seq#335) AND isnotnull(d_date_sk#331)) AND (d_week_seq#335 = Subquery scalar-subquery#23367, [id=#60101]))
[info]                                     :  +- Subquery scalar-subquery#23367, [id=#60101]
[info]                                     :     +- *(1) Project [d_week_seq#335]
[info]                                     :        +- *(1) Filter (((((isnotnull(d_dom#340) AND isnotnull(d_year#337)) AND isnotnull(d_moy#339)) AND (d_year#337 = 1998)) AND (d_moy#339 = 12)) AND (d_dom#340 = 16))
[info]                                     :           +- *(1) ColumnarToRow
[info]                                     :              +- BatchScan[d_week_seq#335, d_year#337, d_moy#339, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>
[info]                                     +- *(76) ColumnarToRow
[info]                                        +- BatchScan[d_date_sk#331, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 1662 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q14-v2.7                                           1663           1663           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q14a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#23923 ASC NULLS FIRST,i_brand_id#503 ASC NULLS FIRST,i_class_id#505 ASC NULLS FIRST,i_category_id#507 ASC NULLS FIRST], output=[channel#23923,i_brand_id#503,i_class_id#505,i_category_id#507,sum_sales#23937,number_sales#23938L])
[info] +- *(607) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23937, number_sales#23938L], functions=[])
[info]    +- Exchange hashpartitioning(channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23937, number_sales#23938L, 4), true, [id=#88551]
[info]       +- *(606) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23937, number_sales#23938L], functions=[])
[info]          +- Union
[info]             :- *(485) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23937, number_sales#23938L], functions=[])
[info]             :  +- Exchange hashpartitioning(channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23937, number_sales#23938L, 4), true, [id=#88543]
[info]             :     +- *(484) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23937, number_sales#23938L], functions=[])
[info]             :        +- Union
[info]             :           :- *(363) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23937, number_sales#23938L], functions=[])
[info]             :           :  +- Exchange hashpartitioning(channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23937, number_sales#23938L, 4), true, [id=#88535]
[info]             :           :     +- *(362) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23937, number_sales#23938L], functions=[])
[info]             :           :        +- Union
[info]             :           :           :- *(241) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23937, number_sales#23938L], functions=[])
[info]             :           :           :  +- Exchange hashpartitioning(channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23937, number_sales#23938L, 4), true, [id=#88527]
[info]             :           :           :     +- *(240) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23937, number_sales#23938L], functions=[])
[info]             :           :           :        +- Union
[info]             :           :           :           :- *(119) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(sales#23924), sum(number_sales#23925L)])
[info]             :           :           :           :  +- Exchange hashpartitioning(channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#88519]
[info]             :           :           :           :     +- *(118) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(sales#23924), partial_sum(number_sales#23925L)])
[info]             :           :           :           :        +- Union
[info]             :           :           :           :           :- *(39) Project [channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23924, number_sales#23925L]
[info]             :           :           :           :           :  +- *(39) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#23986) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#23986 as decimal(32,6)) > cast(Subquery scalar-subquery#23926, [id=#79500] as decimal(32,6))))
[info]             :           :           :           :           :     :  +- Subquery scalar-subquery#23926, [id=#79500]
[info]             :           :           :           :           :     :     +- *(8) HashAggregate(keys=[], functions=[avg(CheckOverflow((promote_precision(cast(cast(quantity#23915 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#23916 as decimal(12,2)))), DecimalType(18,2), true))])
[info]             :           :           :           :           :     :        +- Exchange SinglePartition, true, [id=#79496]
[info]             :           :           :           :           :     :           +- *(7) HashAggregate(keys=[], functions=[partial_avg(CheckOverflow((promote_precision(cast(cast(quantity#23915 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#23916 as decimal(12,2)))), DecimalType(18,2), true))])
[info]             :           :           :           :           :     :              +- Union
[info]             :           :           :           :           :     :                 :- *(2) Project [ss_quantity#1173 AS quantity#23915, ss_list_price#1175 AS list_price#23916]
[info]             :           :           :           :           :     :                 :  +- *(2) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :     :                 :     :- *(2) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]             :           :           :           :           :     :                 :     :  +- *(2) Filter isnotnull(ss_sold_date_sk#1186)
[info]             :           :           :           :           :     :                 :     :     +- *(2) ColumnarToRow
[info]             :           :           :           :           :     :                 :     :        +- BatchScan[ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>
[info]             :           :           :           :           :     :                 :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75174]
[info]             :           :           :           :           :     :                 :- *(4) Project [cs_quantity#895 AS quantity#23917, cs_list_price#897 AS list_price#23918]
[info]             :           :           :           :           :     :                 :  +- *(4) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :     :                 :     :- *(4) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]             :           :           :           :           :     :                 :     :  +- *(4) Filter isnotnull(cs_sold_date_sk#911)
[info]             :           :           :           :           :     :                 :     :     +- *(4) ColumnarToRow
[info]             :           :           :           :           :     :                 :     :        +- BatchScan[cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>
[info]             :           :           :           :           :     :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#68363]
[info]             :           :           :           :           :     :                 :        +- *(3) Project [d_date_sk#331]
[info]             :           :           :           :           :     :                 :           +- *(3) Filter (((isnotnull(d_year#337) AND (d_year#337 >= 1998)) AND (d_year#337 <= 2000)) AND isnotnull(d_date_sk#331))
[info]             :           :           :           :           :     :                 :              +- *(3) ColumnarToRow
[info]             :           :           :           :           :     :                 :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]             :           :           :           :           :     :                 +- *(6) Project [ws_quantity#1038 AS quantity#23919, ws_list_price#1040 AS list_price#23920]
[info]             :           :           :           :           :     :                    +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :     :                       :- *(6) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]             :           :           :           :           :     :                       :  +- *(6) Filter isnotnull(ws_sold_date_sk#1054)
[info]             :           :           :           :           :     :                       :     +- *(6) ColumnarToRow
[info]             :           :           :           :           :     :                       :        +- BatchScan[ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>
[info]             :           :           :           :           :     :                       +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#68363]
[info]             :           :           :           :           :     +- *(39) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :           :           :           :           :        +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#79454]
[info]             :           :           :           :           :           +- *(38) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]             :           :           :           :           :              +- *(38) Project [ss_quantity#1173, ss_list_price#1175, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                 +- *(38) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :                    :- *(38) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :  +- *(38) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :           :           :                    :     :- SortMergeJoin [ss_item_sk#1165], [ss_item_sk#23914], LeftSemi
[info]             :           :           :           :           :                    :     :  :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :     :  :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#75145]
[info]             :           :           :           :           :                    :     :  :     +- *(1) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]             :           :           :           :           :                    :     :  :        +- *(1) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]             :           :           :           :           :                    :     :  :           +- *(1) ColumnarToRow
[info]             :           :           :           :           :                    :     :  :              +- BatchScan[ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>
[info]             :           :           :           :           :                    :     :  +- *(18) Sort [ss_item_sk#23914 ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :     :     +- Exchange hashpartitioning(ss_item_sk#23914, 4), true, [id=#79183]
[info]             :           :           :           :           :                    :     :        +- *(17) Project [i_item_sk#496 AS ss_item_sk#23914]
[info]             :           :           :           :           :                    :     :           +- *(17) BroadcastHashJoin [i_brand_id#503, i_class_id#505, i_category_id#507], [brand_id#23911, class_id#23912, category_id#23913], Inner, BuildLeft
[info]             :           :           :           :           :                    :     :              :- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, true], input[2, int, true], input[3, int, true])), [id=#75154]
[info]             :           :           :           :           :                    :     :              :  +- *(3) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :              :     +- *(3) Filter ((isnotnull(i_category_id#507) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505))
[info]             :           :           :           :           :                    :     :              :        +- *(3) ColumnarToRow
[info]             :           :           :           :           :                    :     :              :           +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]             :           :           :           :           :                    :     :              +- *(17) HashAggregate(keys=[brand_id#23911, class_id#23912, category_id#23913], functions=[])
[info]             :           :           :           :           :                    :     :                 +- *(17) HashAggregate(keys=[brand_id#23911, class_id#23912, category_id#23913], functions=[])
[info]             :           :           :           :           :                    :     :                    +- *(17) HashAggregate(keys=[brand_id#23911, class_id#23912, category_id#23913], functions=[])
[info]             :           :           :           :           :                    :     :                       +- Exchange hashpartitioning(brand_id#23911, class_id#23912, category_id#23913, 4), true, [id=#79134]
[info]             :           :           :           :           :                    :     :                          +- *(16) HashAggregate(keys=[brand_id#23911, class_id#23912, category_id#23913], functions=[])
[info]             :           :           :           :           :                    :     :                             +- SortMergeJoin [coalesce(brand_id#23911, 0), isnull(brand_id#23911), coalesce(class_id#23912, 0), isnull(class_id#23912), coalesce(category_id#23913, 0), isnull(category_id#23913)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]             :           :           :           :           :                    :     :                                :- SortMergeJoin [coalesce(brand_id#23911, 0), isnull(brand_id#23911), coalesce(class_id#23912, 0), isnull(class_id#23912), coalesce(category_id#23913, 0), isnull(category_id#23913)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]             :           :           :           :           :                    :     :                                :  :- *(7) Sort [coalesce(brand_id#23911, 0) ASC NULLS FIRST, isnull(brand_id#23911) ASC NULLS FIRST, coalesce(class_id#23912, 0) ASC NULLS FIRST, isnull(class_id#23912) ASC NULLS FIRST, coalesce(category_id#23913, 0) ASC NULLS FIRST, isnull(category_id#23913) ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :     :                                :  :  +- Exchange hashpartitioning(coalesce(brand_id#23911, 0), isnull(brand_id#23911), coalesce(class_id#23912, 0), isnull(class_id#23912), coalesce(category_id#23913, 0), isnull(category_id#23913), 4), true, [id=#75179]
[info]             :           :           :           :           :                    :     :                                :  :     +- *(6) Project [i_brand_id#503 AS brand_id#23911, i_class_id#505 AS class_id#23912, i_category_id#507 AS category_id#23913]
[info]             :           :           :           :           :                    :     :                                :  :        +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :                    :     :                                :  :           :- *(6) Project [ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :                                :  :           :  +- *(6) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :           :           :                    :     :                                :  :           :     :- *(6) Project [ss_item_sk#1165, ss_sold_date_sk#1186]
[info]             :           :           :           :           :                    :     :                                :  :           :     :  +- *(6) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]             :           :           :           :           :                    :     :                                :  :           :     :     +- *(6) ColumnarToRow
[info]             :           :           :           :           :                    :     :                                :  :           :     :        +- BatchScan[ss_item_sk#1165, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int>
[info]             :           :           :           :           :                    :     :                                :  :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75165]
[info]             :           :           :           :           :                    :     :                                :  :           :        +- *(4) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :                                :  :           :           +- *(4) Filter (((isnotnull(i_item_sk#496) AND isnotnull(i_category_id#507)) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505))
[info]             :           :           :           :           :                    :     :                                :  :           :              +- *(4) ColumnarToRow
[info]             :           :           :           :           :                    :     :                                :  :           :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]             :           :           :           :           :                    :     :                                :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75174]
[info]             :           :           :           :           :                    :     :                                :  :              +- *(5) Project [d_date_sk#331]
[info]             :           :           :           :           :                    :     :                                :  :                 +- *(5) Filter (((isnotnull(d_year#337) AND (d_year#337 >= 1999)) AND (d_year#337 <= 2001)) AND isnotnull(d_date_sk#331))
[info]             :           :           :           :           :                    :     :                                :  :                    +- *(5) ColumnarToRow
[info]             :           :           :           :           :                    :     :                                :  :                       +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]             :           :           :           :           :                    :     :                                :  +- *(11) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :     :                                :     +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#79058]
[info]             :           :           :           :           :                    :     :                                :        +- *(10) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :                                :           +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :                    :     :                                :              :- *(10) Project [cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :                                :              :  +- *(10) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :           :           :                    :     :                                :              :     :- *(10) Project [cs_item_sk#892, cs_sold_date_sk#911]
[info]             :           :           :           :           :                    :     :                                :              :     :  +- *(10) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]             :           :           :           :           :                    :     :                                :              :     :     +- *(10) ColumnarToRow
[info]             :           :           :           :           :                    :     :                                :              :     :        +- BatchScan[cs_item_sk#892, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int>
[info]             :           :           :           :           :                    :     :                                :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75192]
[info]             :           :           :           :           :                    :     :                                :              :        +- *(8) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :                                :              :           +- *(8) Filter isnotnull(i_item_sk#496)
[info]             :           :           :           :           :                    :     :                                :              :              +- *(8) ColumnarToRow
[info]             :           :           :           :           :                    :     :                                :              :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]             :           :           :           :           :                    :     :                                :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75174]
[info]             :           :           :           :           :                    :     :                                +- *(15) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :     :                                   +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#79088]
[info]             :           :           :           :           :                    :     :                                      +- *(14) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :                                         +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :                    :     :                                            :- *(14) Project [ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :                                            :  +- *(14) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :           :           :                    :     :                                            :     :- *(14) Project [ws_item_sk#1023, ws_sold_date_sk#1054]
[info]             :           :           :           :           :                    :     :                                            :     :  +- *(14) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]             :           :           :           :           :                    :     :                                            :     :     +- *(14) ColumnarToRow
[info]             :           :           :           :           :                    :     :                                            :     :        +- BatchScan[ws_item_sk#1023, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int>
[info]             :           :           :           :           :                    :     :                                            :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75192]
[info]             :           :           :           :           :                    :     :                                            +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75174]
[info]             :           :           :           :           :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#79427]
[info]             :           :           :           :           :                    :        +- SortMergeJoin [i_item_sk#496], [ss_item_sk#23914], LeftSemi
[info]             :           :           :           :           :                    :           :- *(20) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :           :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#75261]
[info]             :           :           :           :           :                    :           :     +- *(19) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :           :        +- *(19) Filter isnotnull(i_item_sk#496)
[info]             :           :           :           :           :                    :           :           +- *(19) ColumnarToRow
[info]             :           :           :           :           :                    :           :              +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]             :           :           :           :           :                    :           +- *(36) Sort [ss_item_sk#23914 ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :              +- ReusedExchange [ss_item_sk#23914], Exchange hashpartitioning(ss_item_sk#23914, 4), true, [id=#79183]
[info]             :           :           :           :           :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75380]
[info]             :           :           :           :           :                       +- *(37) Project [d_date_sk#331]
[info]             :           :           :           :           :                          +- *(37) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2000)) AND (d_moy#339 = 11)) AND isnotnull(d_date_sk#331))
[info]             :           :           :           :           :                             +- *(37) ColumnarToRow
[info]             :           :           :           :           :                                +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             :           :           :           :           :- *(78) Project [channel#23928, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23929, number_sales#23930L]
[info]             :           :           :           :           :  +- *(78) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#23989) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#23989 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23926, [id=#79500] as decimal(32,6))))
[info]             :           :           :           :           :     :  +- ReusedSubquery Subquery scalar-subquery#23926, [id=#79500]
[info]             :           :           :           :           :     +- *(78) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :           :           :           :           :        +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#79976]
[info]             :           :           :           :           :           +- *(77) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]             :           :           :           :           :              +- *(77) Project [cs_quantity#895, cs_list_price#897, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                 +- *(77) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :                    :- *(77) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :  +- *(77) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :           :           :                    :     :- SortMergeJoin [cs_item_sk#892], [ss_item_sk#23914], LeftSemi
[info]             :           :           :           :           :                    :     :  :- *(41) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :     :  :  +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#75397]
[info]             :           :           :           :           :                    :     :  :     +- *(40) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]             :           :           :           :           :                    :     :  :        +- *(40) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]             :           :           :           :           :                    :     :  :           +- *(40) ColumnarToRow
[info]             :           :           :           :           :                    :     :  :              +- BatchScan[cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>
[info]             :           :           :           :           :                    :     :  +- *(57) Sort [ss_item_sk#23914 ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :     :     +- ReusedExchange [ss_item_sk#23914], Exchange hashpartitioning(ss_item_sk#23914, 4), true, [id=#79183]
[info]             :           :           :           :           :                    :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#79427]
[info]             :           :           :           :           :                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75380]
[info]             :           :           :           :           +- *(117) Project [channel#23933, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23934, number_sales#23935L]
[info]             :           :           :           :              +- *(117) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#23992) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#23992 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23926, [id=#79500] as decimal(32,6))))
[info]             :           :           :           :                 :  +- ReusedSubquery Subquery scalar-subquery#23926, [id=#79500]
[info]             :           :           :           :                 +- *(117) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :           :           :           :                    +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#80658]
[info]             :           :           :           :                       +- *(116) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]             :           :           :           :                          +- *(116) Project [ws_quantity#1038, ws_list_price#1040, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :                             +- *(116) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :                                :- *(116) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :                                :  +- *(116) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :           :                                :     :- SortMergeJoin [ws_item_sk#1023], [ss_item_sk#23914], LeftSemi
[info]             :           :           :           :                                :     :  :- *(80) Sort [ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]             :           :           :           :                                :     :  :  +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#75649]
[info]             :           :           :           :                                :     :  :     +- *(79) Project [ws_item_sk#1023, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]             :           :           :           :                                :     :  :        +- *(79) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]             :           :           :           :                                :     :  :           +- *(79) ColumnarToRow
[info]             :           :           :           :                                :     :  :              +- BatchScan[ws_item_sk#1023, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>
[info]             :           :           :           :                                :     :  +- *(96) Sort [ss_item_sk#23914 ASC NULLS FIRST], false, 0
[info]             :           :           :           :                                :     :     +- ReusedExchange [ss_item_sk#23914], Exchange hashpartitioning(ss_item_sk#23914, 4), true, [id=#79183]
[info]             :           :           :           :                                :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#79427]
[info]             :           :           :           :                                +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75380]
[info]             :           :           :           +- *(239) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505], functions=[sum(sum_sales#23937), sum(number_sales#23938L)])
[info]             :           :           :              +- Exchange hashpartitioning(channel#23923, i_brand_id#503, i_class_id#505, 4), true, [id=#82731]
[info]             :           :           :                 +- *(238) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505], functions=[partial_sum(sum_sales#23937), partial_sum(number_sales#23938L)])
[info]             :           :           :                    +- *(238) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(sales#23924), sum(number_sales#23925L)])
[info]             :           :           :                       +- ReusedExchange [channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum#25041, sum#25042L], Exchange hashpartitioning(channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#80795]
[info]             :           :           +- *(361) HashAggregate(keys=[channel#23923, i_brand_id#503], functions=[sum(sum_sales#23937), sum(number_sales#23938L)])
[info]             :           :              +- Exchange hashpartitioning(channel#23923, i_brand_id#503, 4), true, [id=#84629]
[info]             :           :                 +- *(360) HashAggregate(keys=[channel#23923, i_brand_id#503], functions=[partial_sum(sum_sales#23937), partial_sum(number_sales#23938L)])
[info]             :           :                    +- *(360) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(sales#23924), sum(number_sales#23925L)])
[info]             :           :                       +- ReusedExchange [channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum#25061, sum#25062L], Exchange hashpartitioning(channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#80795]
[info]             :           +- *(483) HashAggregate(keys=[channel#23923], functions=[sum(sum_sales#23937), sum(number_sales#23938L)])
[info]             :              +- Exchange hashpartitioning(channel#23923, 4), true, [id=#86573]
[info]             :                 +- *(482) HashAggregate(keys=[channel#23923], functions=[partial_sum(sum_sales#23937), partial_sum(number_sales#23938L)])
[info]             :                    +- *(482) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(sales#23924), sum(number_sales#23925L)])
[info]             :                       +- ReusedExchange [channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum#25081, sum#25082L], Exchange hashpartitioning(channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#80795]
[info]             +- *(605) HashAggregate(keys=[], functions=[sum(sum_sales#23937), sum(number_sales#23938L)])
[info]                +- Exchange SinglePartition, true, [id=#88494]
[info]                   +- *(604) HashAggregate(keys=[], functions=[partial_sum(sum_sales#23937), partial_sum(number_sales#23938L)])
[info]                      +- *(604) HashAggregate(keys=[channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(sales#23924), sum(number_sales#23925L)])
[info]                         +- ReusedExchange [channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, sum#25101, sum#25102L], Exchange hashpartitioning(channel#23923, i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#80795]
[info] 
[info] 
[info]   Stopped after 1 iterations, 11831 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q14a-v2.7                                         11832          11832           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q18a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ca_country#243 ASC NULLS FIRST,ca_state#241 ASC NULLS FIRST,ca_county#240 ASC NULLS FIRST,i_item_id#497 ASC NULLS FIRST], output=[i_item_id#497,ca_country#243,ca_state#241,ca_county#240,agg1#25631,agg2#25632,agg3#25633,agg4#25634,agg5#25635,agg6#25636,agg7#25637])
[info] +- Union
[info]    :- *(8) HashAggregate(keys=[i_item_id#497, ca_country#243, ca_state#241, ca_county#240], functions=[avg(agg1#25676), avg(agg2#25677), avg(agg3#25678), avg(agg4#25679), avg(agg5#25680), avg(agg6#25681), avg(agg7#25682)])
[info]    :  +- Exchange hashpartitioning(i_item_id#497, ca_country#243, ca_state#241, ca_county#240, 4), true, [id=#89526]
[info]    :     +- *(7) HashAggregate(keys=[i_item_id#497, ca_country#243, ca_state#241, ca_county#240], functions=[partial_avg(agg1#25676), partial_avg(agg2#25677), partial_avg(agg3#25678), partial_avg(agg4#25679), partial_avg(agg5#25680), partial_avg(agg6#25681), partial_avg(agg7#25682)])
[info]    :        +- *(7) Project [i_item_id#497, ca_country#243, ca_state#241, ca_county#240, cast(cs_quantity#895 as decimal(12,2)) AS agg1#25676, cast(cs_list_price#897 as decimal(12,2)) AS agg2#25677, cast(cs_coupon_amt#904 as decimal(12,2)) AS agg3#25678, cast(cs_sales_price#898 as decimal(12,2)) AS agg4#25679, cast(cs_net_profit#910 as decimal(12,2)) AS agg5#25680, cast(c_birth_year#169 as decimal(12,2)) AS agg6#25681, cast(cd_dep_count#296 as decimal(12,2)) AS agg7#25682]
[info]    :           +- *(7) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]    :              :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, ca_county#240, ca_state#241, ca_country#243]
[info]    :              :  +- *(7) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_birth_year#169, ca_county#240, ca_state#241, ca_country#243]
[info]    :              :     :  +- *(7) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]    :              :     :     :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :  +- *(7) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#25683], Inner, BuildRight
[info]    :              :     :     :     :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :     :  +- *(7) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]    :              :     :     :     :     :- *(7) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296]
[info]    :              :     :     :     :     :  +- *(7) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]    :              :     :     :     :     :     :- *(7) Project [cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911]
[info]    :              :     :     :     :     :     :  +- *(7) Filter (((isnotnull(cs_bill_cdemo_sk#881) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_item_sk#892))
[info]    :              :     :     :     :     :     :     +- *(7) ColumnarToRow
[info]    :              :     :     :     :     :     :        +- BatchScan[cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...
[info]    :              :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89475]
[info]    :              :     :     :     :     :        +- *(1) Project [cd_demo_sk#290, cd_dep_count#296]
[info]    :              :     :     :     :     :           +- *(1) Filter ((((isnotnull(cd_gender#291) AND isnotnull(cd_education_status#293)) AND (cd_gender#291 = M)) AND (cd_education_status#293 = College)) AND isnotnull(cd_demo_sk#290))
[info]    :              :     :     :     :     :              +- *(1) ColumnarToRow
[info]    :              :     :     :     :     :                 +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_education_status#293, cd_dep_count#296] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_education_status:string,cd_dep_count:int>
[info]    :              :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89484]
[info]    :              :     :     :     :        +- *(2) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :     :           +- *(2) Filter (((c_birth_month#168 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#156)) AND isnotnull(c_current_cdemo_sk#158)) AND isnotnull(c_current_addr_sk#160))
[info]    :              :     :     :     :              +- *(2) ColumnarToRow
[info]    :              :     :     :     :                 +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_month#168, c_birth_year#169] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int,c_birth_month:int,c_birth_y...
[info]    :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89493]
[info]    :              :     :     :        +- *(3) Project [cd_demo_sk#25683]
[info]    :              :     :     :           +- *(3) Filter isnotnull(cd_demo_sk#25683)
[info]    :              :     :     :              +- *(3) ColumnarToRow
[info]    :              :     :     :                 +- BatchScan[cd_demo_sk#25683] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int>
[info]    :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89502]
[info]    :              :     :        +- *(4) Project [ca_address_sk#233, ca_county#240, ca_state#241, ca_country#243]
[info]    :              :     :           +- *(4) Filter (ca_state#241 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#233))
[info]    :              :     :              +- *(4) ColumnarToRow
[info]    :              :     :                 +- BatchScan[ca_address_sk#233, ca_county#240, ca_state#241, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string,ca_country:string>
[info]    :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89511]
[info]    :              :        +- *(5) Project [d_date_sk#331]
[info]    :              :           +- *(5) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]    :              :              +- *(5) ColumnarToRow
[info]    :              :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]    :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89520]
[info]    :                 +- *(6) Project [i_item_sk#496, i_item_id#497]
[info]    :                    +- *(6) Filter isnotnull(i_item_sk#496)
[info]    :                       +- *(6) ColumnarToRow
[info]    :                          +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]    :- *(16) HashAggregate(keys=[i_item_id#497, ca_country#243, ca_state#241], functions=[avg(agg1#25676), avg(agg2#25677), avg(agg3#25678), avg(agg4#25679), avg(agg5#25680), avg(agg6#25681), avg(agg7#25682)])
[info]    :  +- Exchange hashpartitioning(i_item_id#497, ca_country#243, ca_state#241, 4), true, [id=#89892]
[info]    :     +- *(15) HashAggregate(keys=[i_item_id#497, ca_country#243, ca_state#241], functions=[partial_avg(agg1#25676), partial_avg(agg2#25677), partial_avg(agg3#25678), partial_avg(agg4#25679), partial_avg(agg5#25680), partial_avg(agg6#25681), partial_avg(agg7#25682)])
[info]    :        +- *(15) Project [i_item_id#497, ca_country#243, ca_state#241, cast(cs_quantity#895 as decimal(12,2)) AS agg1#25676, cast(cs_list_price#897 as decimal(12,2)) AS agg2#25677, cast(cs_coupon_amt#904 as decimal(12,2)) AS agg3#25678, cast(cs_sales_price#898 as decimal(12,2)) AS agg4#25679, cast(cs_net_profit#910 as decimal(12,2)) AS agg5#25680, cast(c_birth_year#169 as decimal(12,2)) AS agg6#25681, cast(cd_dep_count#296 as decimal(12,2)) AS agg7#25682]
[info]    :           +- *(15) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]    :              :- *(15) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, ca_state#241, ca_country#243]
[info]    :              :  +- *(15) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :- *(15) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_birth_year#169, ca_state#241, ca_country#243]
[info]    :              :     :  +- *(15) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]    :              :     :     :- *(15) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :  +- *(15) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#25692], Inner, BuildRight
[info]    :              :     :     :     :- *(15) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :     :  +- *(15) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]    :              :     :     :     :     :- *(15) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296]
[info]    :              :     :     :     :     :  +- *(15) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]    :              :     :     :     :     :     :- *(15) Project [cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911]
[info]    :              :     :     :     :     :     :  +- *(15) Filter (((isnotnull(cs_bill_cdemo_sk#881) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_item_sk#892))
[info]    :              :     :     :     :     :     :     +- *(15) ColumnarToRow
[info]    :              :     :     :     :     :     :        +- BatchScan[cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...
[info]    :              :     :     :     :     :     +- ReusedExchange [cd_demo_sk#290, cd_dep_count#296], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89475]
[info]    :              :     :     :     :     +- ReusedExchange [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89484]
[info]    :              :     :     :     +- ReusedExchange [cd_demo_sk#25692], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89493]
[info]    :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89566]
[info]    :              :     :        +- *(12) Project [ca_address_sk#233, ca_state#241, ca_country#243]
[info]    :              :     :           +- *(12) Filter (ca_state#241 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#233))
[info]    :              :     :              +- *(12) ColumnarToRow
[info]    :              :     :                 +- BatchScan[ca_address_sk#233, ca_state#241, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
[info]    :              :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89511]
[info]    :              +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89520]
[info]    :- *(24) HashAggregate(keys=[i_item_id#497, ca_country#243], functions=[avg(agg1#25676), avg(agg2#25677), avg(agg3#25678), avg(agg4#25679), avg(agg5#25680), avg(agg6#25681), avg(agg7#25682)])
[info]    :  +- Exchange hashpartitioning(i_item_id#497, ca_country#243, 4), true, [id=#89960]
[info]    :     +- *(23) HashAggregate(keys=[i_item_id#497, ca_country#243], functions=[partial_avg(agg1#25676), partial_avg(agg2#25677), partial_avg(agg3#25678), partial_avg(agg4#25679), partial_avg(agg5#25680), partial_avg(agg6#25681), partial_avg(agg7#25682)])
[info]    :        +- *(23) Project [i_item_id#497, ca_country#243, cast(cs_quantity#895 as decimal(12,2)) AS agg1#25676, cast(cs_list_price#897 as decimal(12,2)) AS agg2#25677, cast(cs_coupon_amt#904 as decimal(12,2)) AS agg3#25678, cast(cs_sales_price#898 as decimal(12,2)) AS agg4#25679, cast(cs_net_profit#910 as decimal(12,2)) AS agg5#25680, cast(c_birth_year#169 as decimal(12,2)) AS agg6#25681, cast(cd_dep_count#296 as decimal(12,2)) AS agg7#25682]
[info]    :           +- *(23) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]    :              :- *(23) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, ca_country#243]
[info]    :              :  +- *(23) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :- *(23) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_birth_year#169, ca_country#243]
[info]    :              :     :  +- *(23) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]    :              :     :     :- *(23) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :  +- *(23) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#25701], Inner, BuildRight
[info]    :              :     :     :     :- *(23) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :     :  +- *(23) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]    :              :     :     :     :     :- *(23) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296]
[info]    :              :     :     :     :     :  +- *(23) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]    :              :     :     :     :     :     :- *(23) Project [cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911]
[info]    :              :     :     :     :     :     :  +- *(23) Filter (((isnotnull(cs_bill_cdemo_sk#881) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_item_sk#892))
[info]    :              :     :     :     :     :     :     +- *(23) ColumnarToRow
[info]    :              :     :     :     :     :     :        +- BatchScan[cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...
[info]    :              :     :     :     :     :     +- ReusedExchange [cd_demo_sk#290, cd_dep_count#296], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89475]
[info]    :              :     :     :     :     +- ReusedExchange [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89484]
[info]    :              :     :     :     +- ReusedExchange [cd_demo_sk#25701], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89493]
[info]    :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89630]
[info]    :              :     :        +- *(20) Project [ca_address_sk#233, ca_country#243]
[info]    :              :     :           +- *(20) Filter (ca_state#241 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#233))
[info]    :              :     :              +- *(20) ColumnarToRow
[info]    :              :     :                 +- BatchScan[ca_address_sk#233, ca_state#241, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
[info]    :              :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89511]
[info]    :              +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89520]
[info]    :- *(32) HashAggregate(keys=[i_item_id#497], functions=[avg(agg1#25676), avg(agg2#25677), avg(agg3#25678), avg(agg4#25679), avg(agg5#25680), avg(agg6#25681), avg(agg7#25682)])
[info]    :  +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#90028]
[info]    :     +- *(31) HashAggregate(keys=[i_item_id#497], functions=[partial_avg(agg1#25676), partial_avg(agg2#25677), partial_avg(agg3#25678), partial_avg(agg4#25679), partial_avg(agg5#25680), partial_avg(agg6#25681), partial_avg(agg7#25682)])
[info]    :        +- *(31) Project [i_item_id#497, cast(cs_quantity#895 as decimal(12,2)) AS agg1#25676, cast(cs_list_price#897 as decimal(12,2)) AS agg2#25677, cast(cs_coupon_amt#904 as decimal(12,2)) AS agg3#25678, cast(cs_sales_price#898 as decimal(12,2)) AS agg4#25679, cast(cs_net_profit#910 as decimal(12,2)) AS agg5#25680, cast(c_birth_year#169 as decimal(12,2)) AS agg6#25681, cast(cd_dep_count#296 as decimal(12,2)) AS agg7#25682]
[info]    :           +- *(31) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]    :              :- *(31) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169]
[info]    :              :  +- *(31) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :- *(31) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_birth_year#169]
[info]    :              :     :  +- *(31) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]    :              :     :     :- *(31) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :  +- *(31) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#25710], Inner, BuildRight
[info]    :              :     :     :     :- *(31) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :     :  +- *(31) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]    :              :     :     :     :     :- *(31) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296]
[info]    :              :     :     :     :     :  +- *(31) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]    :              :     :     :     :     :     :- *(31) Project [cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911]
[info]    :              :     :     :     :     :     :  +- *(31) Filter (((isnotnull(cs_bill_cdemo_sk#881) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_item_sk#892))
[info]    :              :     :     :     :     :     :     +- *(31) ColumnarToRow
[info]    :              :     :     :     :     :     :        +- BatchScan[cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...
[info]    :              :     :     :     :     :     +- ReusedExchange [cd_demo_sk#290, cd_dep_count#296], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89475]
[info]    :              :     :     :     :     +- ReusedExchange [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89484]
[info]    :              :     :     :     +- ReusedExchange [cd_demo_sk#25710], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89493]
[info]    :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89694]
[info]    :              :     :        +- *(28) Project [ca_address_sk#233]
[info]    :              :     :           +- *(28) Filter (ca_state#241 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#233))
[info]    :              :     :              +- *(28) ColumnarToRow
[info]    :              :     :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]    :              :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89511]
[info]    :              +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89520]
[info]    +- *(40) HashAggregate(keys=[], functions=[avg(agg1#25676), avg(agg2#25677), avg(agg3#25678), avg(agg4#25679), avg(agg5#25680), avg(agg6#25681), avg(agg7#25682)])
[info]       +- Exchange SinglePartition, true, [id=#90104]
[info]          +- *(39) HashAggregate(keys=[], functions=[partial_avg(agg1#25676), partial_avg(agg2#25677), partial_avg(agg3#25678), partial_avg(agg4#25679), partial_avg(agg5#25680), partial_avg(agg6#25681), partial_avg(agg7#25682)])
[info]             +- *(39) Project [cast(cs_quantity#895 as decimal(12,2)) AS agg1#25676, cast(cs_list_price#897 as decimal(12,2)) AS agg2#25677, cast(cs_coupon_amt#904 as decimal(12,2)) AS agg3#25678, cast(cs_sales_price#898 as decimal(12,2)) AS agg4#25679, cast(cs_net_profit#910 as decimal(12,2)) AS agg5#25680, cast(c_birth_year#169 as decimal(12,2)) AS agg6#25681, cast(cd_dep_count#296 as decimal(12,2)) AS agg7#25682]
[info]                +- *(39) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                   :- *(39) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169]
[info]                   :  +- *(39) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                   :     :- *(39) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_birth_year#169]
[info]                   :     :  +- *(39) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                   :     :     :- *(39) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_addr_sk#160, c_birth_year#169]
[info]                   :     :     :  +- *(39) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#25719], Inner, BuildRight
[info]                   :     :     :     :- *(39) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]                   :     :     :     :  +- *(39) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]                   :     :     :     :     :- *(39) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296]
[info]                   :     :     :     :     :  +- *(39) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]                   :     :     :     :     :     :- *(39) Project [cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911]
[info]                   :     :     :     :     :     :  +- *(39) Filter (((isnotnull(cs_bill_cdemo_sk#881) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_item_sk#892))
[info]                   :     :     :     :     :     :     +- *(39) ColumnarToRow
[info]                   :     :     :     :     :     :        +- BatchScan[cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...
[info]                   :     :     :     :     :     +- ReusedExchange [cd_demo_sk#290, cd_dep_count#296], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89475]
[info]                   :     :     :     :     +- ReusedExchange [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89484]
[info]                   :     :     :     +- ReusedExchange [cd_demo_sk#25719], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89493]
[info]                   :     :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89694]
[info]                   :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89511]
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89776]
[info]                      +- *(38) Project [i_item_sk#496]
[info]                         +- *(38) Filter isnotnull(i_item_sk#496)
[info]                            +- *(38) ColumnarToRow
[info]                               +- BatchScan[i_item_sk#496] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 1077 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q18a-v2.7                                          1078           1078           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q20-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_category#508 ASC NULLS FIRST,i_class#506 ASC NULLS FIRST,i_item_id#497 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST,revenueratio#26107 ASC NULLS FIRST], output=[i_item_id#497,i_item_desc#500,i_category#508,i_class#506,i_current_price#501,itemrevenue#26106,revenueratio#26107])
[info] +- *(6) Project [i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, itemrevenue#26106, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#26112) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#26114)), DecimalType(38,17), true) AS revenueratio#26107]
[info]    +- Window [sum(_w1#26113) windowspecdefinition(i_class#506, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#26114], [i_class#506]
[info]       +- *(5) Sort [i_class#506 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_class#506, 4), true, [id=#90235]
[info]             +- *(4) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[sum(UnscaledValue(cs_ext_sales_price#900))])
[info]                +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, 4), true, [id=#90231]
[info]                   +- *(3) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900))])
[info]                      +- *(3) Project [cs_ext_sales_price#900, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                         +- *(3) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                            :- *(3) Project [cs_ext_sales_price#900, cs_sold_date_sk#911, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :  +- *(3) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                            :     :- *(3) Project [cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]                            :     :  +- *(3) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]                            :     :     +- *(3) ColumnarToRow
[info]                            :     :        +- BatchScan[cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#90216]
[info]                            :        +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :           +- *(1) Filter (i_category#508 IN (Sports,Books,Home) AND isnotnull(i_item_sk#496))
[info]                            :              +- *(1) ColumnarToRow
[info]                            :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#90225]
[info]                               +- *(2) Project [d_date_sk#331]
[info]                                  +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10644)) AND (d_date#333 <= 10674)) AND isnotnull(d_date_sk#331))
[info]                                     +- *(2) ColumnarToRow
[info]                                        +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 111 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q20-v2.7                                            112            112           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q22-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[qoh#26157 ASC NULLS FIRST,i_product_name#26164 ASC NULLS FIRST,i_brand#26165 ASC NULLS FIRST,i_class#26166 ASC NULLS FIRST,i_category#26167 ASC NULLS FIRST], output=[i_product_name#26164,i_brand#26165,i_class#26166,i_category#26167,qoh#26157])
[info] +- *(6) HashAggregate(keys=[i_product_name#26164, i_brand#26165, i_class#26166, i_category#26167, spark_grouping_id#26159], functions=[avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]    +- Exchange hashpartitioning(i_product_name#26164, i_brand#26165, i_class#26166, i_category#26167, spark_grouping_id#26159, 4), true, [id=#90383]
[info]       +- *(5) HashAggregate(keys=[i_product_name#26164, i_brand#26165, i_class#26166, i_category#26167, spark_grouping_id#26159], functions=[partial_avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]          +- *(5) Expand [List(inv_quantity_on_hand#475, i_product_name#517, i_brand#504, i_class#506, i_category#508, 0), List(inv_quantity_on_hand#475, i_product_name#517, i_brand#504, i_class#506, null, 1), List(inv_quantity_on_hand#475, i_product_name#517, i_brand#504, null, null, 3), List(inv_quantity_on_hand#475, i_product_name#517, null, null, null, 7), List(inv_quantity_on_hand#475, null, null, null, null, 15)], [inv_quantity_on_hand#475, i_product_name#26164, i_brand#26165, i_class#26166, i_category#26167, spark_grouping_id#26159]
[info]             +- *(5) Project [inv_quantity_on_hand#475, i_product_name#517, i_brand#504, i_class#506, i_category#508]
[info]                +- BroadcastNestedLoopJoin BuildRight, Inner
[info]                   :- *(3) Project [inv_quantity_on_hand#475, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]                   :  +- *(3) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#496], Inner, BuildRight
[info]                   :     :- *(3) Project [inv_item_sk#473, inv_quantity_on_hand#475]
[info]                   :     :  +- *(3) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]                   :     :     :- *(3) Project [inv_item_sk#473, inv_quantity_on_hand#475, inv_date_sk#476]
[info]                   :     :     :  +- *(3) Filter (isnotnull(inv_date_sk#476) AND isnotnull(inv_item_sk#473))
[info]                   :     :     :     +- *(3) ColumnarToRow
[info]                   :     :     :        +- BatchScan[inv_item_sk#473, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_quantity_on_hand:int>
[info]                   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#90359]
[info]                   :     :        +- *(1) Project [d_date_sk#331]
[info]                   :     :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                   :     :              +- *(1) ColumnarToRow
[info]                   :     :                 +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#90368]
[info]                   :        +- *(2) Project [i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]                   :           +- *(2) Filter isnotnull(i_item_sk#496)
[info]                   :              +- *(2) ColumnarToRow
[info]                   :                 +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
[info]                   +- BroadcastExchange IdentityBroadcastMode, [id=#90376]
[info]                      +- *(4) ColumnarToRow
[info]                         +- BatchScan[] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<>
[info] 
[info] 
[info]   Stopped after 1 iterations, 141 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q22-v2.7                                            142            142           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q22a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[qoh#26250 ASC NULLS FIRST,i_product_name#517 ASC NULLS FIRST,i_brand#504 ASC NULLS FIRST,i_class#506 ASC NULLS FIRST,i_category#508 ASC NULLS FIRST], output=[i_product_name#517,i_brand#504,i_class#506,i_category#508,qoh#26250])
[info] +- Union
[info]    :- *(5) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[avg(qoh#26249)])
[info]    :  +- *(5) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[partial_avg(qoh#26249)])
[info]    :     +- *(5) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]    :        +- Exchange hashpartitioning(i_product_name#517, i_brand#504, i_class#506, i_category#508, 4), true, [id=#91008]
[info]    :           +- *(4) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[partial_avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]    :              +- *(4) Project [inv_quantity_on_hand#475, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]    :                 +- *(4) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#1621], Inner, BuildRight
[info]    :                    :- *(4) Project [inv_warehouse_sk#474, inv_quantity_on_hand#475, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]    :                    :  +- *(4) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#496], Inner, BuildRight
[info]    :                    :     :- *(4) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475]
[info]    :                    :     :  +- *(4) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]    :                    :     :     :- *(4) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]    :                    :     :     :  +- *(4) Filter ((isnotnull(inv_date_sk#476) AND isnotnull(inv_item_sk#473)) AND isnotnull(inv_warehouse_sk#474))
[info]    :                    :     :     :     +- *(4) ColumnarToRow
[info]    :                    :     :     :        +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]    :                    :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#90984]
[info]    :                    :     :        +- *(1) Project [d_date_sk#331]
[info]    :                    :     :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1212)) AND (d_month_seq#334 <= 1223)) AND isnotnull(d_date_sk#331))
[info]    :                    :     :              +- *(1) ColumnarToRow
[info]    :                    :     :                 +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]    :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#90993]
[info]    :                    :        +- *(2) Project [i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]    :                    :           +- *(2) Filter isnotnull(i_item_sk#496)
[info]    :                    :              +- *(2) ColumnarToRow
[info]    :                    :                 +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
[info]    :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91002]
[info]    :                       +- *(3) Project [w_warehouse_sk#1621]
[info]    :                          +- *(3) Filter isnotnull(w_warehouse_sk#1621)
[info]    :                             +- *(3) ColumnarToRow
[info]    :                                +- BatchScan[w_warehouse_sk#1621] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int>
[info]    :- *(11) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506], functions=[avg(qoh#26249)])
[info]    :  +- Exchange hashpartitioning(i_product_name#517, i_brand#504, i_class#506, 4), true, [id=#91304]
[info]    :     +- *(10) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506], functions=[partial_avg(qoh#26249)])
[info]    :        +- *(10) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]    :           +- ReusedExchange [i_product_name#517, i_brand#504, i_class#506, i_category#508, sum#26359, count#26360L], Exchange hashpartitioning(i_product_name#517, i_brand#504, i_class#506, i_category#508, 4), true, [id=#91008]
[info]    :- *(17) HashAggregate(keys=[i_product_name#517, i_brand#504], functions=[avg(qoh#26249)])
[info]    :  +- Exchange hashpartitioning(i_product_name#517, i_brand#504, 4), true, [id=#91378]
[info]    :     +- *(16) HashAggregate(keys=[i_product_name#517, i_brand#504], functions=[partial_avg(qoh#26249)])
[info]    :        +- *(16) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]    :           +- ReusedExchange [i_product_name#517, i_brand#504, i_class#506, i_category#508, sum#26367, count#26368L], Exchange hashpartitioning(i_product_name#517, i_brand#504, i_class#506, i_category#508, 4), true, [id=#91008]
[info]    :- *(23) HashAggregate(keys=[i_product_name#517], functions=[avg(qoh#26249)])
[info]    :  +- Exchange hashpartitioning(i_product_name#517, 4), true, [id=#91452]
[info]    :     +- *(22) HashAggregate(keys=[i_product_name#517], functions=[partial_avg(qoh#26249)])
[info]    :        +- *(22) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]    :           +- ReusedExchange [i_product_name#517, i_brand#504, i_class#506, i_category#508, sum#26375, count#26376L], Exchange hashpartitioning(i_product_name#517, i_brand#504, i_class#506, i_category#508, 4), true, [id=#91008]
[info]    +- *(29) HashAggregate(keys=[], functions=[avg(qoh#26249)])
[info]       +- Exchange SinglePartition, true, [id=#91526]
[info]          +- *(28) HashAggregate(keys=[], functions=[partial_avg(qoh#26249)])
[info]             +- *(28) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]                +- ReusedExchange [i_product_name#517, i_brand#504, i_class#506, i_category#508, sum#26383, count#26384L], Exchange hashpartitioning(i_product_name#517, i_brand#504, i_class#506, i_category#508, 4), true, [id=#91008]
[info] 
[info] 
[info]   Stopped after 1 iterations, 560 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q22a-v2.7                                           560            560           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q24-v2.7
[info] == Physical Plan ==
[info] *(12) Sort [c_last_name#165 ASC NULLS FIRST, c_first_name#164 ASC NULLS FIRST, s_store_name#675 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(c_last_name#165 ASC NULLS FIRST, c_first_name#164 ASC NULLS FIRST, s_store_name#675 ASC NULLS FIRST, 4), true, [id=#92268]
[info]    +- *(11) Project [c_last_name#165, c_first_name#164, s_store_name#675, paid#26417]
[info]       +- *(11) Filter (isnotnull(sum(netpaid#26419)#26427) AND (cast(sum(netpaid#26419)#26427 as decimal(33,8)) > cast(Subquery scalar-subquery#26418, [id=#92264] as decimal(33,8))))
[info]          :  +- Subquery scalar-subquery#26418, [id=#92264]
[info]          :     +- *(11) HashAggregate(keys=[], functions=[avg(netpaid#26419)])
[info]          :        +- Exchange SinglePartition, true, [id=#92260]
[info]          :           +- *(10) HashAggregate(keys=[], functions=[partial_avg(netpaid#26419)])
[info]          :              +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]          :                 +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511, 4), true, [id=#92177]
[info]          :                    +- *(9) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]          :                       +- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, ca_state#241]
[info]          :                          +- *(9) BroadcastHashJoin [c_current_addr_sk#160, c_birth_country#170, s_zip#695], [ca_address_sk#233, upper(ca_country#243), ca_zip#242], Inner, BuildRight
[info]          :                             :- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_current_addr_sk#160, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]          :                             :  +- *(9) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]          :                             :     :- *(9) Project [ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]          :                             :     :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]          :                             :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695]
[info]          :                             :     :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]          :                             :     :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_net_paid#1183]
[info]          :                             :     :     :     :  +- *(9) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]          :                             :     :     :     :     :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]          :                             :     :     :     :     :  +- ReusedExchange [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183], Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#91979]
[info]          :                             :     :     :     :     +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]          :                             :     :     :     :        +- ReusedExchange [sr_item_sk#792, sr_ticket_number#799L], Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#91989]
[info]          :                             :     :     :     +- ReusedExchange [s_store_sk#670, s_store_name#675, s_state#694, s_zip#695], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92001]
[info]          :                             :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91855]
[info]          :                             :     :        +- *(6) Project [i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]          :                             :     :           +- *(6) Filter isnotnull(i_item_sk#496)
[info]          :                             :     :              +- *(6) ColumnarToRow
[info]          :                             :     :                 +- BatchScan[i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
[info]          :                             :     +- ReusedExchange [c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165, c_birth_country#170], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92019]
[info]          :                             +- ReusedExchange [ca_address_sk#233, ca_state#241, ca_zip#242, ca_country#243], BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, true], upper(input[3, string, true]), input[2, string, true])), [id=#92028]
[info]          +- *(11) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675], functions=[sum(netpaid#26419)])
[info]             +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, 4), true, [id=#92039]
[info]                +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675], functions=[partial_sum(netpaid#26419)])
[info]                   +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]                      +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511, 4), true, [id=#92034]
[info]                         +- *(9) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]                            +- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, ca_state#241]
[info]                               +- *(9) BroadcastHashJoin [c_current_addr_sk#160, c_birth_country#170, s_zip#695], [ca_address_sk#233, upper(ca_country#243), ca_zip#242], Inner, BuildRight
[info]                                  :- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_current_addr_sk#160, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]                                  :  +- *(9) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                                  :     :- *(9) Project [ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]                                  :     :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                                  :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695]
[info]                                  :     :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                                  :     :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_net_paid#1183]
[info]                                  :     :     :     :  +- *(9) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]                                  :     :     :     :     :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                                  :     :     :     :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#91979]
[info]                                  :     :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183]
[info]                                  :     :     :     :     :        +- *(1) Filter (((isnotnull(ss_ticket_number#1172L) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_customer_sk#1166))
[info]                                  :     :     :     :     :           +- *(1) ColumnarToRow
[info]                                  :     :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_paid:deci...
[info]                                  :     :     :     :     +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                                  :     :     :     :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#91989]
[info]                                  :     :     :     :           +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]                                  :     :     :     :              +- *(3) Filter (isnotnull(sr_ticket_number#799L) AND isnotnull(sr_item_sk#792))
[info]                                  :     :     :     :                 +- *(3) ColumnarToRow
[info]                                  :     :     :     :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]                                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92001]
[info]                                  :     :     :        +- *(5) Project [s_store_sk#670, s_store_name#675, s_state#694, s_zip#695]
[info]                                  :     :     :           +- *(5) Filter (((isnotnull(s_market_id#680) AND (s_market_id#680 = 8)) AND isnotnull(s_store_sk#670)) AND isnotnull(s_zip#695))
[info]                                  :     :     :              +- *(5) ColumnarToRow
[info]                                  :     :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_market_id#680, s_state#694, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
[info]                                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92010]
[info]                                  :     :        +- *(6) Project [i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]                                  :     :           +- *(6) Filter ((isnotnull(i_color#513) AND (i_color#513 = pale)) AND isnotnull(i_item_sk#496))
[info]                                  :     :              +- *(6) ColumnarToRow
[info]                                  :     :                 +- BatchScan[i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
[info]                                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92019]
[info]                                  :        +- *(7) Project [c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]                                  :           +- *(7) Filter ((isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160)) AND isnotnull(c_birth_country#170))
[info]                                  :              +- *(7) ColumnarToRow
[info]                                  :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165, c_birth_country#170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string,c_birth_cou...
[info]                                  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, true], upper(input[3, string, true]), input[2, string, true])), [id=#92028]
[info]                                     +- *(8) Project [ca_address_sk#233, ca_state#241, ca_zip#242, ca_country#243]
[info]                                        +- *(8) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_zip#242))
[info]                                           +- *(8) ColumnarToRow
[info]                                              +- BatchScan[ca_address_sk#233, ca_state#241, ca_zip#242, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string,ca_country:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 486 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q24-v2.7                                            486            486           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q27a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST,s_state#694 ASC NULLS FIRST], output=[i_item_id#497,s_state#694,g_state#26556,agg1#26557,agg2#26558,agg3#26559,agg4#26560])
[info] +- Union
[info]    :- *(6) HashAggregate(keys=[i_item_id#497, s_state#694], functions=[avg(cast(agg1#26575 as bigint)), avg(UnscaledValue(agg2#26576)), avg(UnscaledValue(agg3#26577)), avg(UnscaledValue(agg4#26578))])
[info]    :  +- Exchange hashpartitioning(i_item_id#497, s_state#694, 4), true, [id=#92708]
[info]    :     +- *(5) HashAggregate(keys=[i_item_id#497, s_state#694], functions=[partial_avg(cast(agg1#26575 as bigint)), partial_avg(UnscaledValue(agg2#26576)), partial_avg(UnscaledValue(agg3#26577)), partial_avg(UnscaledValue(agg4#26578))])
[info]    :        +- *(5) Project [i_item_id#497, s_state#694, ss_quantity#1173 AS agg1#26575, ss_list_price#1175 AS agg2#26576, ss_coupon_amt#1182 AS agg3#26577, ss_sales_price#1176 AS agg4#26578]
[info]    :           +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :              :- *(5) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, s_state#694]
[info]    :              :  +- *(5) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]    :              :     :- *(5) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182]
[info]    :              :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :     :- *(5) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]    :              :     :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]    :              :     :     :     :- *(5) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]    :              :     :     :     :  +- *(5) Filter (((isnotnull(ss_cdemo_sk#1167) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165))
[info]    :              :     :     :     :     +- *(5) ColumnarToRow
[info]    :              :     :     :     :        +- BatchScan[ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),...
[info]    :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92675]
[info]    :              :     :     :        +- *(1) Project [cd_demo_sk#290]
[info]    :              :     :     :           +- *(1) Filter ((((((isnotnull(cd_education_status#293) AND isnotnull(cd_marital_status#292)) AND isnotnull(cd_gender#291)) AND (cd_gender#291 = F)) AND (cd_marital_status#292 = W)) AND (cd_education_status#293 = Primary)) AND isnotnull(cd_demo_sk#290))
[info]    :              :     :     :              +- *(1) ColumnarToRow
[info]    :              :     :     :                 +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
[info]    :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92684]
[info]    :              :     :        +- *(2) Project [d_date_sk#331]
[info]    :              :     :           +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 1998)) AND isnotnull(d_date_sk#331))
[info]    :              :     :              +- *(2) ColumnarToRow
[info]    :              :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]    :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92693]
[info]    :              :        +- *(3) Project [s_store_sk#670, s_state#694]
[info]    :              :           +- *(3) Filter ((isnotnull(s_state#694) AND (s_state#694 = TN)) AND isnotnull(s_store_sk#670))
[info]    :              :              +- *(3) ColumnarToRow
[info]    :              :                 +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]    :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92702]
[info]    :                 +- *(4) Project [i_item_sk#496, i_item_id#497]
[info]    :                    +- *(4) Filter isnotnull(i_item_sk#496)
[info]    :                       +- *(4) ColumnarToRow
[info]    :                          +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]    :- *(12) HashAggregate(keys=[i_item_id#497], functions=[avg(cast(agg1#26575 as bigint)), avg(UnscaledValue(agg2#26576)), avg(UnscaledValue(agg3#26577)), avg(UnscaledValue(agg4#26578))])
[info]    :  +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#92870]
[info]    :     +- *(11) HashAggregate(keys=[i_item_id#497], functions=[partial_avg(cast(agg1#26575 as bigint)), partial_avg(UnscaledValue(agg2#26576)), partial_avg(UnscaledValue(agg3#26577)), partial_avg(UnscaledValue(agg4#26578))])
[info]    :        +- *(11) Project [i_item_id#497, ss_quantity#1173 AS agg1#26575, ss_list_price#1175 AS agg2#26576, ss_coupon_amt#1182 AS agg3#26577, ss_sales_price#1176 AS agg4#26578]
[info]    :           +- *(11) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :              :- *(11) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182]
[info]    :              :  +- *(11) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]    :              :     :- *(11) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182]
[info]    :              :     :  +- *(11) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :     :- *(11) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]    :              :     :     :  +- *(11) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]    :              :     :     :     :- *(11) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]    :              :     :     :     :  +- *(11) Filter (((isnotnull(ss_cdemo_sk#1167) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165))
[info]    :              :     :     :     :     +- *(11) ColumnarToRow
[info]    :              :     :     :     :        +- BatchScan[ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),...
[info]    :              :     :     :     +- ReusedExchange [cd_demo_sk#290], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92675]
[info]    :              :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92684]
[info]    :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92739]
[info]    :              :        +- *(9) Project [s_store_sk#670]
[info]    :              :           +- *(9) Filter ((isnotnull(s_state#694) AND (s_state#694 = TN)) AND isnotnull(s_store_sk#670))
[info]    :              :              +- *(9) ColumnarToRow
[info]    :              :                 +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]    :              +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92702]
[info]    +- *(18) HashAggregate(keys=[], functions=[avg(cast(agg1#26575 as bigint)), avg(UnscaledValue(agg2#26576)), avg(UnscaledValue(agg3#26577)), avg(UnscaledValue(agg4#26578))])
[info]       +- Exchange SinglePartition, true, [id=#92922]
[info]          +- *(17) HashAggregate(keys=[], functions=[partial_avg(cast(agg1#26575 as bigint)), partial_avg(UnscaledValue(agg2#26576)), partial_avg(UnscaledValue(agg3#26577)), partial_avg(UnscaledValue(agg4#26578))])
[info]             +- *(17) Project [ss_quantity#1173 AS agg1#26575, ss_list_price#1175 AS agg2#26576, ss_coupon_amt#1182 AS agg3#26577, ss_sales_price#1176 AS agg4#26578]
[info]                +- *(17) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                   :- *(17) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182]
[info]                   :  +- *(17) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                   :     :- *(17) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182]
[info]                   :     :  +- *(17) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                   :     :     :- *(17) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                   :     :     :  +- *(17) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]                   :     :     :     :- *(17) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                   :     :     :     :  +- *(17) Filter (((isnotnull(ss_cdemo_sk#1167) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165))
[info]                   :     :     :     :     +- *(17) ColumnarToRow
[info]                   :     :     :     :        +- BatchScan[ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),...
[info]                   :     :     :     +- ReusedExchange [cd_demo_sk#290], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92675]
[info]                   :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92684]
[info]                   :     +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92739]
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92794]
[info]                      +- *(16) Project [i_item_sk#496]
[info]                         +- *(16) Filter isnotnull(i_item_sk#496)
[info]                            +- *(16) ColumnarToRow
[info]                               +- BatchScan[i_item_sk#496] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 452 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q27a-v2.7                                           452            452           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q34-v2.7
[info] == Physical Plan ==
[info] *(7) Sort [c_last_name#165 ASC NULLS FIRST, c_first_name#164 ASC NULLS FIRST, c_salutation#163 ASC NULLS FIRST, c_preferred_cust_flag#166 DESC NULLS LAST, ss_ticket_number#1172L ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(c_last_name#165 ASC NULLS FIRST, c_first_name#164 ASC NULLS FIRST, c_salutation#163 ASC NULLS FIRST, c_preferred_cust_flag#166 DESC NULLS LAST, ss_ticket_number#1172L ASC NULLS FIRST, 4), true, [id=#93117]
[info]    +- *(6) Project [c_last_name#165, c_first_name#164, c_salutation#163, c_preferred_cust_flag#166, ss_ticket_number#1172L, cnt#26720L]
[info]       +- *(6) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]          :- *(6) Filter ((cnt#26720L >= 15) AND (cnt#26720L <= 20))
[info]          :  +- *(6) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166], functions=[count(1)])
[info]          :     +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_customer_sk#1166, 4), true, [id=#93103]
[info]          :        +- *(4) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166], functions=[partial_count(1)])
[info]          :           +- *(4) Project [ss_customer_sk#1166, ss_ticket_number#1172L]
[info]          :              +- *(4) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]          :                 :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_ticket_number#1172L]
[info]          :                 :  +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]          :                 :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L]
[info]          :                 :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]          :                 :     :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186]
[info]          :                 :     :     :  +- *(4) Filter (((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_customer_sk#1166))
[info]          :                 :     :     :     +- *(4) ColumnarToRow
[info]          :                 :     :     :        +- BatchScan[ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_hdemo_sk:int,ss_store_sk:int,ss_ticket_number:bigint>
[info]          :                 :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93079]
[info]          :                 :     :        +- *(1) Project [d_date_sk#331]
[info]          :                 :     :           +- *(1) Filter (((((d_dom#340 >= 1) AND (d_dom#340 <= 3)) OR ((d_dom#340 >= 25) AND (d_dom#340 <= 28))) AND d_year#337 IN (1999,2000,2001)) AND isnotnull(d_date_sk#331))
[info]          :                 :     :              +- *(1) ColumnarToRow
[info]          :                 :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_dom:int>
[info]          :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93088]
[info]          :                 :        +- *(2) Project [s_store_sk#670]
[info]          :                 :           +- *(2) Filter ((isnotnull(s_county#693) AND (s_county#693 = Williamson County)) AND isnotnull(s_store_sk#670))
[info]          :                 :              +- *(2) ColumnarToRow
[info]          :                 :                 +- BatchScan[s_store_sk#670, s_county#693] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_county:string>
[info]          :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93097]
[info]          :                    +- *(3) Project [hd_demo_sk#448]
[info]          :                       +- *(3) Filter (((((CASE WHEN (hd_vehicle_count#452 > 0) THEN (cast(hd_dep_count#451 as double) / cast(hd_vehicle_count#452 as double)) ELSE null END > 1.2) AND isnotnull(hd_vehicle_count#452)) AND ((hd_buy_potential#450 = >10000) OR (hd_buy_potential#450 = unknown))) AND (hd_vehicle_count#452 > 0)) AND isnotnull(hd_demo_sk#448))
[info]          :                          +- *(3) ColumnarToRow
[info]          :                             +- BatchScan[hd_demo_sk#448, hd_buy_potential#450, hd_dep_count#451, hd_vehicle_count#452] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string,hd_dep_count:int,hd_vehicle_count:int>
[info]          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93112]
[info]             +- *(5) Project [c_customer_sk#156, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166]
[info]                +- *(5) Filter isnotnull(c_customer_sk#156)
[info]                   +- *(5) ColumnarToRow
[info]                      +- BatchScan[c_customer_sk#156, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_c...
[info] 
[info] 
[info]   Stopped after 1 iterations, 161 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q34-v2.7                                            161            161           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q35-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ca_state#241 ASC NULLS FIRST,cd_gender#291 ASC NULLS FIRST,cd_marital_status#292 ASC NULLS FIRST,cd_dep_count#296 ASC NULLS FIRST,cd_dep_employed_count#297 ASC NULLS FIRST,cd_dep_college_count#298 ASC NULLS FIRST], output=[ca_state#241,cd_gender#291,cd_marital_status#292,cd_dep_count#296,cnt1#26804L,avg(cd_dep_count)#26819,max(cd_dep_count)#26820,sum(cd_dep_count)#26821L,cd_dep_employed_count#297,cnt2#26805L,avg(cd_dep_employed_count)#26822,max(cd_dep_employed_count)#26823,sum(cd_dep_employed_count)#26824L,cd_dep_college_count#298,cnt3#26806L,avg(cd_dep_college_count)#26825,max(cd_dep_college_count)#26826,sum(cd_dep_college_count)#26827L])
[info] +- *(15) HashAggregate(keys=[ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[count(1), avg(cast(cd_dep_count#296 as bigint)), max(cd_dep_count#296), sum(cast(cd_dep_count#296 as bigint)), avg(cast(cd_dep_employed_count#297 as bigint)), max(cd_dep_employed_count#297), sum(cast(cd_dep_employed_count#297 as bigint)), avg(cast(cd_dep_college_count#298 as bigint)), max(cd_dep_college_count#298), sum(cast(cd_dep_college_count#298 as bigint))])
[info]    +- Exchange hashpartitioning(ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298, 4), true, [id=#93509]
[info]       +- *(14) HashAggregate(keys=[ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[partial_count(1), partial_avg(cast(cd_dep_count#296 as bigint)), partial_max(cd_dep_count#296), partial_sum(cast(cd_dep_count#296 as bigint)), partial_avg(cast(cd_dep_employed_count#297 as bigint)), partial_max(cd_dep_employed_count#297), partial_sum(cast(cd_dep_employed_count#297 as bigint)), partial_avg(cast(cd_dep_college_count#298 as bigint)), partial_max(cd_dep_college_count#298), partial_sum(cast(cd_dep_college_count#298 as bigint))])
[info]          +- *(14) Project [ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]             +- *(14) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]                :- *(14) Project [c_current_cdemo_sk#158, ca_state#241]
[info]                :  +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                :     :- *(14) Project [c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :  +- *(14) Filter (exists#26863 OR exists#26864)
[info]                :     :     +- SortMergeJoin [c_customer_sk#156], [cs_ship_customer_sk#884], ExistenceJoin(exists#26864)
[info]                :     :        :- SortMergeJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], ExistenceJoin(exists#26863)
[info]                :     :        :  :- SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], LeftSemi
[info]                :     :        :  :  :- *(2) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                :     :        :  :  :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#93367]
[info]                :     :        :  :  :     +- *(1) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :        :  :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_current_cdemo_sk#158))
[info]                :     :        :  :  :           +- *(1) ColumnarToRow
[info]                :     :        :  :  :              +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
[info]                :     :        :  :  +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                :     :        :  :     +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#93385]
[info]                :     :        :  :        +- *(4) Project [ss_customer_sk#1166]
[info]                :     :        :  :           +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :        :  :              :- *(4) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                :     :        :  :              :  +- *(4) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :     :        :  :              :     +- *(4) ColumnarToRow
[info]                :     :        :  :              :        +- BatchScan[ss_sold_time_sk#1164, ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_sales_price#1176, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_ext_tax#1181, ss_coupon_amt#1182, ss_net_paid#1183, ss_net_paid_inc_tax#1184, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_a...
[info]                :     :        :  :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93380]
[info]                :     :        :  :                 +- *(3) Project [d_date_sk#331]
[info]                :     :        :  :                    +- *(3) Filter ((((isnotnull(d_year#337) AND isnotnull(d_qoy#341)) AND (d_year#337 = 2002)) AND (d_qoy#341 < 4)) AND isnotnull(d_date_sk#331))
[info]                :     :        :  :                       +- *(3) ColumnarToRow
[info]                :     :        :  :                          +- BatchScan[d_date_sk#331, d_date_id#332, d_date#333, d_month_seq#334, d_week_seq#335, d_quarter_seq#336, d_year#337, d_dow#338, d_moy#339, d_dom#340, d_qoy#341, d_fy_year#342, d_fy_quarter_seq#343, d_fy_week_seq#344, d_day_name#345, d_quarter_name#346, d_holiday#347, d_weekend#348, d_following_holiday#349, d_first_dom#350, d_last_dom#351, d_same_day_ly#352, d_same_day_lq#353, d_current_day#354, ... 4 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:in...
[info]                :     :        :  +- *(8) Sort [ws_bill_customer_sk#1024 ASC NULLS FIRST], false, 0
[info]                :     :        :     +- Exchange hashpartitioning(ws_bill_customer_sk#1024, 4), true, [id=#93477]
[info]                :     :        :        +- *(7) Project [ws_bill_customer_sk#1024]
[info]                :     :        :           +- *(7) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :        :              :- *(7) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                :     :        :              :  +- *(7) Filter isnotnull(ws_sold_date_sk#1054)
[info]                :     :        :              :     +- *(7) ColumnarToRow
[info]                :     :        :              :        +- BatchScan[ws_sold_time_sk#1021, ws_ship_date_sk#1022, ws_item_sk#1023, ws_bill_customer_sk#1024, ws_bill_cdemo_sk#1025, ws_bill_hdemo_sk#1026, ws_bill_addr_sk#1027, ws_ship_customer_sk#1028, ws_ship_cdemo_sk#1029, ws_ship_hdemo_sk#1030, ws_ship_addr_sk#1031, ws_web_page_sk#1032, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_promo_sk#1036, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_list_price#1040, ws_sales_price#1041, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cde...
[info]                :     :        :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93380]
[info]                :     :        +- *(11) Sort [cs_ship_customer_sk#884 ASC NULLS FIRST], false, 0
[info]                :     :           +- Exchange hashpartitioning(cs_ship_customer_sk#884, 4), true, [id=#93495]
[info]                :     :              +- *(10) Project [cs_ship_customer_sk#884]
[info]                :     :                 +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :                    :- *(10) Project [cs_ship_customer_sk#884, cs_sold_date_sk#911]
[info]                :     :                    :  +- *(10) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :                    :     +- *(10) ColumnarToRow
[info]                :     :                    :        +- BatchScan[cs_sold_time_sk#878, cs_ship_date_sk#879, cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_bill_addr_sk#883, cs_ship_customer_sk#884, cs_ship_cdemo_sk#885, cs_ship_hdemo_sk#886, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_catalog_page_sk#889, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_list_price#897, cs_sales_price#898, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bi...
[info]                :     :                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93380]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93436]
[info]                :        +- *(12) Project [ca_address_sk#233, ca_state#241]
[info]                :           +- *(12) Filter isnotnull(ca_address_sk#233)
[info]                :              +- *(12) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93445]
[info]                   +- *(13) Project [cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]                      +- *(13) Filter isnotnull(cd_demo_sk#290)
[info]                         +- *(13) ColumnarToRow
[info]                            +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_dep_count:int,cd_dep_employed_...
[info] 
[info] 
[info]   Stopped after 1 iterations, 279 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q35-v2.7                                            280            280           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q35a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ca_state#241 ASC NULLS FIRST,cd_gender#291 ASC NULLS FIRST,cd_marital_status#292 ASC NULLS FIRST,cd_dep_count#296 ASC NULLS FIRST,cd_dep_employed_count#297 ASC NULLS FIRST,cd_dep_college_count#298 ASC NULLS FIRST], output=[ca_state#241,cd_gender#291,cd_marital_status#292,cd_dep_count#296,cnt1#26950L,avg(cd_dep_count)#26965,max(cd_dep_count)#26966,sum(cd_dep_count)#26967L,cd_dep_employed_count#297,cnt2#26951L,avg(cd_dep_employed_count)#26968,max(cd_dep_employed_count)#26969,sum(cd_dep_employed_count)#26970L,cd_dep_college_count#298,cnt3#26952L,avg(cd_dep_college_count)#26971,max(cd_dep_college_count)#26972,sum(cd_dep_college_count)#26973L])
[info] +- *(14) HashAggregate(keys=[ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[count(1), avg(cast(cd_dep_count#296 as bigint)), max(cd_dep_count#296), sum(cast(cd_dep_count#296 as bigint)), avg(cast(cd_dep_employed_count#297 as bigint)), max(cd_dep_employed_count#297), sum(cast(cd_dep_employed_count#297 as bigint)), avg(cast(cd_dep_college_count#298 as bigint)), max(cd_dep_college_count#298), sum(cast(cd_dep_college_count#298 as bigint))])
[info]    +- Exchange hashpartitioning(ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298, 4), true, [id=#93875]
[info]       +- *(13) HashAggregate(keys=[ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[partial_count(1), partial_avg(cast(cd_dep_count#296 as bigint)), partial_max(cd_dep_count#296), partial_sum(cast(cd_dep_count#296 as bigint)), partial_avg(cast(cd_dep_employed_count#297 as bigint)), partial_max(cd_dep_employed_count#297), partial_sum(cast(cd_dep_employed_count#297 as bigint)), partial_avg(cast(cd_dep_college_count#298 as bigint)), partial_max(cd_dep_college_count#298), partial_sum(cast(cd_dep_college_count#298 as bigint))])
[info]          +- *(13) Project [ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]             +- *(13) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]                :- *(13) Project [c_current_cdemo_sk#158, ca_state#241]
[info]                :  +- *(13) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                :     :- *(13) Project [c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :  +- SortMergeJoin [c_customer_sk#156], [customsk#26947], LeftSemi
[info]                :     :     :- SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], LeftSemi
[info]                :     :     :  :- *(2) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                :     :     :  :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#93748]
[info]                :     :     :  :     +- *(1) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :     :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_current_cdemo_sk#158))
[info]                :     :     :  :           +- *(1) ColumnarToRow
[info]                :     :     :  :              +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
[info]                :     :     :  +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                :     :     :     +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#93766]
[info]                :     :     :        +- *(4) Project [ss_customer_sk#1166]
[info]                :     :     :           +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :              :- *(4) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                :     :     :              :  +- *(4) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :     :     :              :     +- *(4) ColumnarToRow
[info]                :     :     :              :        +- BatchScan[ss_sold_time_sk#1164, ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_sales_price#1176, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_ext_tax#1181, ss_coupon_amt#1182, ss_net_paid#1183, ss_net_paid_inc_tax#1184, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_a...
[info]                :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93761]
[info]                :     :     :                 +- *(3) Project [d_date_sk#331]
[info]                :     :     :                    +- *(3) Filter ((((isnotnull(d_year#337) AND isnotnull(d_qoy#341)) AND (d_year#337 = 1999)) AND (d_qoy#341 < 4)) AND isnotnull(d_date_sk#331))
[info]                :     :     :                       +- *(3) ColumnarToRow
[info]                :     :     :                          +- BatchScan[d_date_sk#331, d_date_id#332, d_date#333, d_month_seq#334, d_week_seq#335, d_quarter_seq#336, d_year#337, d_dow#338, d_moy#339, d_dom#340, d_qoy#341, d_fy_year#342, d_fy_quarter_seq#343, d_fy_week_seq#344, d_day_name#345, d_quarter_name#346, d_holiday#347, d_weekend#348, d_following_holiday#349, d_first_dom#350, d_last_dom#351, d_same_day_ly#352, d_same_day_lq#353, d_current_day#354, ... 4 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:in...
[info]                :     :     +- *(10) Sort [customsk#26947 ASC NULLS FIRST], false, 0
[info]                :     :        +- Exchange hashpartitioning(customsk#26947, 4), true, [id=#93862]
[info]                :     :           +- Union
[info]                :     :              :- *(7) Project [ws_bill_customer_sk#1024 AS customsk#26947]
[info]                :     :              :  +- *(7) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :              :     :- *(7) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                :     :              :     :  +- *(7) Filter isnotnull(ws_sold_date_sk#1054)
[info]                :     :              :     :     +- *(7) ColumnarToRow
[info]                :     :              :     :        +- BatchScan[ws_bill_customer_sk#1024, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int>
[info]                :     :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93780]
[info]                :     :              :        +- *(6) Project [d_date_sk#331]
[info]                :     :              :           +- *(6) Filter ((((isnotnull(d_year#337) AND isnotnull(d_qoy#341)) AND (d_year#337 = 1999)) AND (d_qoy#341 < 4)) AND isnotnull(d_date_sk#331))
[info]                :     :              :              +- *(6) ColumnarToRow
[info]                :     :              :                 +- BatchScan[d_date_sk#331, d_year#337, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info]                :     :              +- *(9) Project [cs_ship_customer_sk#884 AS customsk#26948]
[info]                :     :                 +- *(9) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :                    :- *(9) Project [cs_ship_customer_sk#884, cs_sold_date_sk#911]
[info]                :     :                    :  +- *(9) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :                    :     +- *(9) ColumnarToRow
[info]                :     :                    :        +- BatchScan[cs_ship_customer_sk#884, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ship_customer_sk:int>
[info]                :     :                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93780]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93812]
[info]                :        +- *(11) Project [ca_address_sk#233, ca_state#241]
[info]                :           +- *(11) Filter isnotnull(ca_address_sk#233)
[info]                :              +- *(11) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93821]
[info]                   +- *(12) Project [cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]                      +- *(12) Filter isnotnull(cd_demo_sk#290)
[info]                         +- *(12) ColumnarToRow
[info]                            +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_dep_count:int,cd_dep_employed_...
[info] 
[info] 
[info]   Stopped after 1 iterations, 246 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q35a-v2.7                                           246            246           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q36a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#27121 DESC NULLS LAST,CASE WHEN (lochierarchy#27121 = 0) THEN i_category#508 END ASC NULLS FIRST,rank_within_parent#27113 ASC NULLS FIRST], output=[gross_margin#27151,i_category#508,i_class#506,lochierarchy#27121,rank_within_parent#27113])
[info] +- *(23) Project [gross_margin#27151, i_category#508, i_class#506, lochierarchy#27121, rank_within_parent#27113]
[info]    +- Window [rank(gross_margin#27151) windowspecdefinition(lochierarchy#27121, _w0#27166, gross_margin#27151 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#27113], [lochierarchy#27121, _w0#27166], [gross_margin#27151 ASC NULLS FIRST]
[info]       +- *(22) Sort [lochierarchy#27121 ASC NULLS FIRST, _w0#27166 ASC NULLS FIRST, gross_margin#27151 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(lochierarchy#27121, _w0#27166, 4), true, [id=#94680]
[info]             +- *(21) HashAggregate(keys=[gross_margin#27151, i_category#508, i_class#506, t_category#27119, t_class#27120, lochierarchy#27121], functions=[])
[info]                +- Exchange hashpartitioning(gross_margin#27151, i_category#508, i_class#506, t_category#27119, t_class#27120, lochierarchy#27121, 4), true, [id=#94631]
[info]                   +- *(20) HashAggregate(keys=[gross_margin#27151, i_category#508, i_class#506, t_category#27119, t_class#27120, lochierarchy#27121], functions=[])
[info]                      +- Union
[info]                         :- *(13) HashAggregate(keys=[gross_margin#27151, i_category#508, i_class#506, t_category#27119, t_class#27120, lochierarchy#27121], functions=[])
[info]                         :  +- Exchange hashpartitioning(gross_margin#27151, i_category#508, i_class#506, t_category#27119, t_class#27120, lochierarchy#27121, 4), true, [id=#94549]
[info]                         :     +- *(12) HashAggregate(keys=[gross_margin#27151, i_category#508, i_class#506, t_category#27119, t_class#27120, lochierarchy#27121], functions=[])
[info]                         :        +- Union
[info]                         :           :- *(5) HashAggregate(keys=[i_category#508, i_class#506], functions=[sum(UnscaledValue(ss_net_profit#1185)), sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                         :           :  +- Exchange hashpartitioning(i_category#508, i_class#506, 4), true, [id=#94308]
[info]                         :           :     +- *(4) HashAggregate(keys=[i_category#508, i_class#506], functions=[partial_sum(UnscaledValue(ss_net_profit#1185)), partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                         :           :        +- *(4) Project [ss_ext_sales_price#1178, ss_net_profit#1185, i_class#506, i_category#508]
[info]                         :           :           +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                         :           :              :- *(4) Project [ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, i_class#506, i_category#508]
[info]                         :           :              :  +- *(4) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                         :           :              :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185]
[info]                         :           :              :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                         :           :              :     :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                         :           :              :     :     :  +- *(4) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_store_sk#1170))
[info]                         :           :              :     :     :     +- *(4) ColumnarToRow
[info]                         :           :              :     :     :        +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>
[info]                         :           :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#94284]
[info]                         :           :              :     :        +- *(1) Project [d_date_sk#331]
[info]                         :           :              :     :           +- *(1) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]                         :           :              :     :              +- *(1) ColumnarToRow
[info]                         :           :              :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                         :           :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#94293]
[info]                         :           :              :        +- *(2) Project [i_item_sk#496, i_class#506, i_category#508]
[info]                         :           :              :           +- *(2) Filter isnotnull(i_item_sk#496)
[info]                         :           :              :              +- *(2) ColumnarToRow
[info]                         :           :              :                 +- BatchScan[i_item_sk#496, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
[info]                         :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#94302]
[info]                         :           :                 +- *(3) Project [s_store_sk#670]
[info]                         :           :                    +- *(3) Filter ((isnotnull(s_state#694) AND (s_state#694 = TN)) AND isnotnull(s_store_sk#670))
[info]                         :           :                       +- *(3) ColumnarToRow
[info]                         :           :                          +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]                         :           +- *(11) HashAggregate(keys=[i_category#508], functions=[sum(ss_net_profit#27114), sum(ss_ext_sales_price#27115)])
[info]                         :              +- Exchange hashpartitioning(i_category#508, 4), true, [id=#94541]
[info]                         :                 +- *(10) HashAggregate(keys=[i_category#508], functions=[partial_sum(ss_net_profit#27114), partial_sum(ss_ext_sales_price#27115)])
[info]                         :                    +- *(10) HashAggregate(keys=[i_category#508, i_class#506], functions=[sum(UnscaledValue(ss_net_profit#1185)), sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                         :                       +- ReusedExchange [i_category#508, i_class#506, sum#27224L, sum#27225L], Exchange hashpartitioning(i_category#508, i_class#506, 4), true, [id=#94308]
[info]                         +- *(19) HashAggregate(keys=[], functions=[sum(ss_net_profit#27114), sum(ss_ext_sales_price#27115)])
[info]                            +- Exchange SinglePartition, true, [id=#94623]
[info]                               +- *(18) HashAggregate(keys=[], functions=[partial_sum(ss_net_profit#27114), partial_sum(ss_ext_sales_price#27115)])
[info]                                  +- *(18) HashAggregate(keys=[i_category#508, i_class#506], functions=[sum(UnscaledValue(ss_net_profit#1185)), sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                                     +- ReusedExchange [i_category#508, i_class#506, sum#27232L, sum#27233L], Exchange hashpartitioning(i_category#508, i_class#506, 4), true, [id=#94308]
[info] 
[info] 
[info]   Stopped after 1 iterations, 368 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q36a-v2.7                                           368            368           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q47-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#28321 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#28322 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,d_moy#339 ASC NULLS FIRST], output=[i_category#508,d_year#337,d_moy#339,avg_monthly_sales#28322,sum_sales#28321,psum#28324,nsum#28325])
[info] +- *(27) Project [i_category#508, d_year#337, d_moy#339, avg_monthly_sales#28322, sum_sales#28321, sum_sales#28545 AS psum#28324, sum_sales#29020 AS nsum#28325]
[info]    +- *(27) SortMergeJoin [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, rn#28323], [i_category#29125, i_brand#29121, s_store_name#29282, s_company_name#29294, (rn#28926 - 1)], Inner
[info]       :- *(18) Project [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, sum_sales#28321, avg_monthly_sales#28322, rn#28323, sum_sales#28545]
[info]       :  +- *(18) SortMergeJoin [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, rn#28323], [i_category#28650, i_brand#28646, s_store_name#28807, s_company_name#28819, (rn#28451 + 1)], Inner
[info]       :     :- *(9) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, s_store_name#675 ASC NULLS FIRST, s_company_name#687 ASC NULLS FIRST, rn#28323 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, rn#28323, 4), true, [id=#95170]
[info]       :     :     +- *(8) Project [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, sum_sales#28321, avg_monthly_sales#28322, rn#28323]
[info]       :     :        +- *(8) Filter (((isnotnull(avg_monthly_sales#28322) AND (avg_monthly_sales#28322 > 0.000000)) AND (CASE WHEN (avg_monthly_sales#28322 > 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#28321 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#28322 as decimal(22,6)))), DecimalType(22,6), true))) / promote_precision(cast(avg_monthly_sales#28322 as decimal(22,6)))), DecimalType(38,16), true) ELSE null END > 0.1000000000000000)) AND isnotnull(rn#28323))
[info]       :     :           +- Window [avg(_w0#28353) windowspecdefinition(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#28322], [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337]
[info]       :     :              +- *(7) Filter (isnotnull(d_year#337) AND (d_year#337 = 1999))
[info]       :     :                 +- Window [rank(d_year#337, d_moy#339) windowspecdefinition(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#28323], [i_category#508, i_brand#504, s_store_name#675, s_company_name#687], [d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST]
[info]       :     :                    +- *(6) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, s_store_name#675 ASC NULLS FIRST, s_company_name#687 ASC NULLS FIRST, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST], false, 0
[info]       :     :                       +- Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, 4), true, [id=#95157]
[info]       :     :                          +- *(5) HashAggregate(keys=[i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :                             +- Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, 4), true, [id=#95153]
[info]       :     :                                +- *(4) HashAggregate(keys=[i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :                                   +- *(4) Project [i_brand#504, i_category#508, ss_sales_price#1176, d_year#337, d_moy#339, s_store_name#675, s_company_name#687]
[info]       :     :                                      +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]       :     :                                         :- *(4) Project [i_brand#504, i_category#508, ss_store_sk#1170, ss_sales_price#1176, d_year#337, d_moy#339]
[info]       :     :                                         :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :                                         :     :- *(4) Project [i_brand#504, i_category#508, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                                         :     :  +- *(4) BroadcastHashJoin [i_item_sk#496], [ss_item_sk#1165], Inner, BuildLeft
[info]       :     :                                         :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#95125]
[info]       :     :                                         :     :     :  +- *(1) Project [i_item_sk#496, i_brand#504, i_category#508]
[info]       :     :                                         :     :     :     +- *(1) Filter ((isnotnull(i_item_sk#496) AND isnotnull(i_brand#504)) AND isnotnull(i_category#508))
[info]       :     :                                         :     :     :        +- *(1) ColumnarToRow
[info]       :     :                                         :     :     :           +- BatchScan[i_item_sk#496, i_brand#504, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
[info]       :     :                                         :     :     +- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                                         :     :        +- *(4) Filter ((isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]       :     :                                         :     :           +- *(4) ColumnarToRow
[info]       :     :                                         :     :              +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]       :     :                                         :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#95138]
[info]       :     :                                         :        +- *(2) Project [d_date_sk#331, d_year#337, d_moy#339]
[info]       :     :                                         :           +- *(2) Filter ((((d_year#337 = 1999) OR ((d_year#337 = 1998) AND (d_moy#339 = 12))) OR ((d_year#337 = 2000) AND (d_moy#339 = 1))) AND isnotnull(d_date_sk#331))
[info]       :     :                                         :              +- *(2) ColumnarToRow
[info]       :     :                                         :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]       :     :                                         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#95147]
[info]       :     :                                            +- *(3) Project [s_store_sk#670, s_store_name#675, s_company_name#687]
[info]       :     :                                               +- *(3) Filter ((isnotnull(s_store_sk#670) AND isnotnull(s_store_name#675)) AND isnotnull(s_company_name#687))
[info]       :     :                                                  +- *(3) ColumnarToRow
[info]       :     :                                                     +- BatchScan[s_store_sk#670, s_store_name#675, s_company_name#687] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
[info]       :     +- *(17) Sort [i_category#28650 ASC NULLS FIRST, i_brand#28646 ASC NULLS FIRST, s_store_name#28807 ASC NULLS FIRST, s_company_name#28819 ASC NULLS FIRST, (rn#28451 + 1) ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(i_category#28650, i_brand#28646, s_store_name#28807, s_company_name#28819, (rn#28451 + 1), 4), true, [id=#95413]
[info]       :           +- *(16) Project [i_category#28650, i_brand#28646, s_store_name#28807, s_company_name#28819, sum_sales#28545, rn#28451]
[info]       :              +- *(16) Filter isnotnull(rn#28451)
[info]       :                 +- Window [rank(d_year#28735, d_moy#28737) windowspecdefinition(i_category#28650, i_brand#28646, s_store_name#28807, s_company_name#28819, d_year#28735 ASC NULLS FIRST, d_moy#28737 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#28451], [i_category#28650, i_brand#28646, s_store_name#28807, s_company_name#28819], [d_year#28735 ASC NULLS FIRST, d_moy#28737 ASC NULLS FIRST]
[info]       :                    +- *(15) Sort [i_category#28650 ASC NULLS FIRST, i_brand#28646 ASC NULLS FIRST, s_store_name#28807 ASC NULLS FIRST, s_company_name#28819 ASC NULLS FIRST, d_year#28735 ASC NULLS FIRST, d_moy#28737 ASC NULLS FIRST], false, 0
[info]       :                       +- Exchange hashpartitioning(i_category#28650, i_brand#28646, s_store_name#28807, s_company_name#28819, 4), true, [id=#95404]
[info]       :                          +- *(14) HashAggregate(keys=[i_category#28650, i_brand#28646, s_store_name#28807, s_company_name#28819, d_year#28735, d_moy#28737], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]       :                             +- ReusedExchange [i_category#28650, i_brand#28646, s_store_name#28807, s_company_name#28819, d_year#28735, d_moy#28737, sum#29427L], Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, 4), true, [id=#95153]
[info]       +- *(26) Sort [i_category#29125 ASC NULLS FIRST, i_brand#29121 ASC NULLS FIRST, s_store_name#29282 ASC NULLS FIRST, s_company_name#29294 ASC NULLS FIRST, (rn#28926 - 1) ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_category#29125, i_brand#29121, s_store_name#29282, s_company_name#29294, (rn#28926 - 1), 4), true, [id=#95513]
[info]             +- *(25) Project [i_category#29125, i_brand#29121, s_store_name#29282, s_company_name#29294, sum_sales#29020, rn#28926]
[info]                +- *(25) Filter isnotnull(rn#28926)
[info]                   +- Window [rank(d_year#29210, d_moy#29212) windowspecdefinition(i_category#29125, i_brand#29121, s_store_name#29282, s_company_name#29294, d_year#29210 ASC NULLS FIRST, d_moy#29212 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#28926], [i_category#29125, i_brand#29121, s_store_name#29282, s_company_name#29294], [d_year#29210 ASC NULLS FIRST, d_moy#29212 ASC NULLS FIRST]
[info]                      +- *(24) Sort [i_category#29125 ASC NULLS FIRST, i_brand#29121 ASC NULLS FIRST, s_store_name#29282 ASC NULLS FIRST, s_company_name#29294 ASC NULLS FIRST, d_year#29210 ASC NULLS FIRST, d_moy#29212 ASC NULLS FIRST], false, 0
[info]                         +- ReusedExchange [i_category#29125, i_brand#29121, s_store_name#29282, s_company_name#29294, d_year#29210, d_moy#29212, sum_sales#29020], Exchange hashpartitioning(i_category#28650, i_brand#28646, s_store_name#28807, s_company_name#28819, 4), true, [id=#95404]
[info] 
[info] 
[info]   Stopped after 1 iterations, 576 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q47-v2.7                                            577            577           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q49-v2.7
[info] 15:05:48.667 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 15:05:48.667 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 15:05:48.676 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 15:05:48.676 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 15:05:48.684 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 15:05:48.685 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#29560 ASC NULLS FIRST,return_rank#29558 ASC NULLS FIRST,currency_rank#29559 ASC NULLS FIRST,item#29555 ASC NULLS FIRST], output=[channel#29560,item#29555,return_ratio#29556,return_rank#29558,currency_rank#29559])
[info] +- *(32) HashAggregate(keys=[channel#29560, item#29555, return_ratio#29556, return_rank#29558, currency_rank#29559], functions=[])
[info]    +- Exchange hashpartitioning(channel#29560, item#29555, return_ratio#29556, return_rank#29558, currency_rank#29559, 4), true, [id=#96308]
[info]       +- *(31) HashAggregate(keys=[channel#29560, item#29555, return_ratio#29556, return_rank#29558, currency_rank#29559], functions=[])
[info]          +- Union
[info]             :- *(10) Project [web AS channel#29560, item#29555, return_ratio#29556, return_rank#29558, currency_rank#29559]
[info]             :  +- *(10) Filter ((return_rank#29558 <= 10) OR (currency_rank#29559 <= 10))
[info]             :     +- Window [rank(return_ratio#29556) windowspecdefinition(return_ratio#29556 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#29558], [return_ratio#29556 ASC NULLS FIRST]
[info]             :        +- *(9) Sort [return_ratio#29556 ASC NULLS FIRST], false, 0
[info]             :           +- *(9) Project [item#29555, return_ratio#29556, currency_rank#29559]
[info]             :              +- Window [rank(currency_ratio#29557) windowspecdefinition(currency_ratio#29557 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#29559], [currency_ratio#29557 ASC NULLS FIRST]
[info]             :                 +- *(8) Sort [currency_ratio#29557 ASC NULLS FIRST], false, 0
[info]             :                    +- Exchange SinglePartition, true, [id=#95968]
[info]             :                       +- *(7) HashAggregate(keys=[ws_item_sk#1023], functions=[sum(cast(coalesce(wr_return_quantity#1276, 0) as bigint)), sum(cast(coalesce(ws_quantity#1038, 0) as bigint)), sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), sum(coalesce(cast(ws_net_paid#1049 as decimal(12,2)), 0.00))])
[info]             :                          +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#95964]
[info]             :                             +- *(6) HashAggregate(keys=[ws_item_sk#1023], functions=[partial_sum(cast(coalesce(wr_return_quantity#1276, 0) as bigint)), partial_sum(cast(coalesce(ws_quantity#1038, 0) as bigint)), partial_sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(ws_net_paid#1049 as decimal(12,2)), 0.00))])
[info]             :                                +- *(6) Project [ws_item_sk#1023, ws_quantity#1038, ws_net_paid#1049, wr_return_quantity#1276, wr_return_amt#1277]
[info]             :                                   +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :                                      :- *(6) Project [ws_item_sk#1023, ws_quantity#1038, ws_net_paid#1049, ws_sold_date_sk#1054, wr_return_quantity#1276, wr_return_amt#1277]
[info]             :                                      :  +- *(6) SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], Inner
[info]             :                                      :     :- *(2) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]             :                                      :     :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#95936]
[info]             :                                      :     :     +- *(1) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]             :                                      :     :        +- *(1) Filter ((((((((isnotnull(ws_quantity#1038) AND isnotnull(ws_net_profit#1053)) AND isnotnull(ws_net_paid#1049)) AND (ws_net_profit#1053 > 1.00)) AND (ws_net_paid#1049 > 0.00)) AND (ws_quantity#1038 > 0)) AND isnotnull(ws_item_sk#1023)) AND isnotnull(ws_order_number#1037L)) AND isnotnull(ws_sold_date_sk#1054))
[info]             :                                      :     :           +- *(1) ColumnarToRow
[info]             :                                      :     :              +- BatchScan[ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_net_paid#1049, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_net_paid:decimal(7,2),ws_net_prof...
[info]             :                                      :     +- *(4) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]             :                                      :        +- Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#95946]
[info]             :                                      :           +- *(3) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277]
[info]             :                                      :              +- *(3) Filter (((isnotnull(wr_return_amt#1277) AND (wr_return_amt#1277 > 10000.00)) AND isnotnull(wr_order_number#1275L)) AND isnotnull(wr_item_sk#1264))
[info]             :                                      :                 +- *(3) ColumnarToRow
[info]             :                                      :                    +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
[info]             :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#95958]
[info]             :                                         +- *(5) Project [d_date_sk#331]
[info]             :                                            +- *(5) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2001)) AND (d_moy#339 = 12)) AND isnotnull(d_date_sk#331))
[info]             :                                               +- *(5) ColumnarToRow
[info]             :                                                  +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             :- *(20) Project [catalog AS channel#29566, item#29561, return_ratio#29562, return_rank#29564, currency_rank#29565]
[info]             :  +- *(20) Filter ((return_rank#29564 <= 10) OR (currency_rank#29565 <= 10))
[info]             :     +- Window [rank(currency_ratio#29563) windowspecdefinition(currency_ratio#29563 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#29565], [currency_ratio#29563 ASC NULLS FIRST]
[info]             :        +- *(19) Sort [currency_ratio#29563 ASC NULLS FIRST], false, 0
[info]             :           +- Window [rank(return_ratio#29562) windowspecdefinition(return_ratio#29562 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#29564], [return_ratio#29562 ASC NULLS FIRST]
[info]             :              +- *(18) Sort [return_ratio#29562 ASC NULLS FIRST], false, 0
[info]             :                 +- Exchange SinglePartition, true, [id=#96118]
[info]             :                    +- *(17) HashAggregate(keys=[cs_item_sk#892], functions=[sum(cast(coalesce(cr_return_quantity#57, 0) as bigint)), sum(cast(coalesce(cs_quantity#895, 0) as bigint)), sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), sum(coalesce(cast(cs_net_paid#906 as decimal(12,2)), 0.00))])
[info]             :                       +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#96114]
[info]             :                          +- *(16) HashAggregate(keys=[cs_item_sk#892], functions=[partial_sum(cast(coalesce(cr_return_quantity#57, 0) as bigint)), partial_sum(cast(coalesce(cs_quantity#895, 0) as bigint)), partial_sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(cs_net_paid#906 as decimal(12,2)), 0.00))])
[info]             :                             +- *(16) Project [cs_item_sk#892, cs_quantity#895, cs_net_paid#906, cr_return_quantity#57, cr_return_amount#58]
[info]             :                                +- *(16) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :                                   :- *(16) Project [cs_item_sk#892, cs_quantity#895, cs_net_paid#906, cs_sold_date_sk#911, cr_return_quantity#57, cr_return_amount#58]
[info]             :                                   :  +- *(16) SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], Inner
[info]             :                                   :     :- *(12) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]             :                                   :     :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#95987]
[info]             :                                   :     :     +- *(11) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_net_paid#906, cs_sold_date_sk#911]
[info]             :                                   :     :        +- *(11) Filter ((((((((isnotnull(cs_net_paid#906) AND isnotnull(cs_quantity#895)) AND isnotnull(cs_net_profit#910)) AND (cs_net_profit#910 > 1.00)) AND (cs_net_paid#906 > 0.00)) AND (cs_quantity#895 > 0)) AND isnotnull(cs_order_number#894L)) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_sold_date_sk#911))
[info]             :                                   :     :           +- *(11) ColumnarToRow
[info]             :                                   :     :              +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_net_paid#906, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_net_paid:decimal(7,2),cs_net_prof...
[info]             :                                   :     +- *(14) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]             :                                   :        +- Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#95997]
[info]             :                                   :           +- *(13) Project [cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58]
[info]             :                                   :              +- *(13) Filter (((isnotnull(cr_return_amount#58) AND (cr_return_amount#58 > 10000.00)) AND isnotnull(cr_item_sk#42)) AND isnotnull(cr_order_number#56L))
[info]             :                                   :                 +- *(13) ColumnarToRow
[info]             :                                   :                    +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
[info]             :                                   +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#95958]
[info]             +- *(30) Project [store AS channel#29572, item#29567, return_ratio#29568, return_rank#29570, currency_rank#29571]
[info]                +- *(30) Filter ((return_rank#29570 <= 10) OR (currency_rank#29571 <= 10))
[info]                   +- Window [rank(return_ratio#29568) windowspecdefinition(return_ratio#29568 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#29570], [return_ratio#29568 ASC NULLS FIRST]
[info]                      +- *(29) Sort [return_ratio#29568 ASC NULLS FIRST], false, 0
[info]                         +- *(29) Project [item#29567, return_ratio#29568, currency_rank#29571]
[info]                            +- Window [rank(currency_ratio#29569) windowspecdefinition(currency_ratio#29569 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#29571], [currency_ratio#29569 ASC NULLS FIRST]
[info]                               +- *(28) Sort [currency_ratio#29569 ASC NULLS FIRST], false, 0
[info]                                  +- Exchange SinglePartition, true, [id=#96243]
[info]                                     +- *(27) HashAggregate(keys=[ss_item_sk#1165], functions=[sum(cast(coalesce(sr_return_quantity#800, 0) as bigint)), sum(cast(coalesce(ss_quantity#1173, 0) as bigint)), sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), sum(coalesce(cast(ss_net_paid#1183 as decimal(12,2)), 0.00))])
[info]                                        +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#96239]
[info]                                           +- *(26) HashAggregate(keys=[ss_item_sk#1165], functions=[partial_sum(cast(coalesce(sr_return_quantity#800, 0) as bigint)), partial_sum(cast(coalesce(ss_quantity#1173, 0) as bigint)), partial_sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(ss_net_paid#1183 as decimal(12,2)), 0.00))])
[info]                                              +- *(26) Project [ss_item_sk#1165, ss_quantity#1173, ss_net_paid#1183, sr_return_quantity#800, sr_return_amt#801]
[info]                                                 +- *(26) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                                                    :- *(26) Project [ss_item_sk#1165, ss_quantity#1173, ss_net_paid#1183, ss_sold_date_sk#1186, sr_return_quantity#800, sr_return_amt#801]
[info]                                                    :  +- *(26) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]                                                    :     :- *(22) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                                                    :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#96037]
[info]                                                    :     :     +- *(21) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]                                                    :     :        +- *(21) Filter ((((((((isnotnull(ss_net_paid#1183) AND isnotnull(ss_quantity#1173)) AND isnotnull(ss_net_profit#1185)) AND (ss_net_profit#1185 > 1.00)) AND (ss_net_paid#1183 > 0.00)) AND (ss_quantity#1173 > 0)) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_sold_date_sk#1186))
[info]                                                    :     :           +- *(21) ColumnarToRow
[info]                                                    :     :              +- BatchScan[ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_net_paid#1183, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_net_paid:decimal(7,2),ss_net_pro...
[info]                                                    :     +- *(24) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                                                    :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#96047]
[info]                                                    :           +- *(23) Project [sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801]
[info]                                                    :              +- *(23) Filter (((isnotnull(sr_return_amt#801) AND (sr_return_amt#801 > 10000.00)) AND isnotnull(sr_item_sk#792)) AND isnotnull(sr_ticket_number#799L))
[info]                                                    :                 +- *(23) ColumnarToRow
[info]                                                    :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
[info]                                                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#95958]
[info] 
[info] 
[info]   Stopped after 1 iterations, 436 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q49-v2.7                                            436            436           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q51a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[item_sk#30225 ASC NULLS FIRST,d_date#30226 ASC NULLS FIRST], output=[item_sk#30225,d_date#30226,web_sales#30227,store_sales#30228,web_cumulative#30215,store_cumulative#30216])
[info] +- *(63) Filter ((isnotnull(web_cumulative#30215) AND isnotnull(store_cumulative#30216)) AND (web_cumulative#30215 > store_cumulative#30216))
[info]    +- *(63) HashAggregate(keys=[item_sk#30225, d_date#30226, web_sales#30227, store_sales#30228], functions=[max(web_sales#30671), max(store_sales#30672)])
[info]       +- *(63) HashAggregate(keys=[item_sk#30225, d_date#30226, web_sales#30227, store_sales#30228], functions=[partial_max(web_sales#30671), partial_max(store_sales#30672)])
[info]          +- *(63) Project [item_sk#30225, d_date#30226, web_sales#30227, store_sales#30228, web_sales#30671, store_sales#30672]
[info]             +- *(63) SortMergeJoin [item_sk#30225], [item_sk#30669], Inner, (rk#30229 >= rk#30664)
[info]                :- *(31) Filter isnotnull(rk#30229)
[info]                :  +- Window [row_number() windowspecdefinition(item_sk#30225, d_date#30226 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#30229], [item_sk#30225], [d_date#30226 ASC NULLS FIRST]
[info]                :     +- *(30) Sort [item_sk#30225 ASC NULLS FIRST, d_date#30226 ASC NULLS FIRST], false, 0
[info]                :        +- Exchange hashpartitioning(item_sk#30225, 4), true, [id=#97812]
[info]                :           +- *(29) Project [CASE WHEN isnotnull(item_sk#30217) THEN item_sk#30217 ELSE item_sk#30221 END AS item_sk#30225, CASE WHEN isnotnull(d_date#333) THEN d_date#333 ELSE d_date#30610 END AS d_date#30226, cume_sales#30220 AS web_sales#30227, cume_sales#30224 AS store_sales#30228]
[info]                :              +- *(29) Filter isnotnull(CASE WHEN isnotnull(item_sk#30217) THEN item_sk#30217 ELSE item_sk#30221 END)
[info]                :                 +- SortMergeJoin [item_sk#30217, d_date#333], [item_sk#30221, d_date#30610], FullOuter
[info]                :                    :- *(14) Sort [item_sk#30217 ASC NULLS FIRST, d_date#333 ASC NULLS FIRST], false, 0
[info]                :                    :  +- Exchange hashpartitioning(item_sk#30217, d_date#333, 4), true, [id=#97586]
[info]                :                    :     +- *(13) HashAggregate(keys=[item_sk#30217, d_date#333, sumws#30218], functions=[sum(sumws#30373)])
[info]                :                    :        +- *(13) HashAggregate(keys=[item_sk#30217, d_date#333, sumws#30218], functions=[partial_sum(sumws#30373)])
[info]                :                    :           +- *(13) Project [item_sk#30217, d_date#333, sumws#30218, sumws#30373]
[info]                :                    :              +- *(13) SortMergeJoin [item_sk#30217], [item_sk#30372], Inner, (rk#30219 >= rk#30248)
[info]                :                    :                 :- *(6) Sort [item_sk#30217 ASC NULLS FIRST], false, 0
[info]                :                    :                 :  +- Exchange hashpartitioning(item_sk#30217, 4), true, [id=#97187]
[info]                :                    :                 :     +- *(5) Project [item_sk#30217, d_date#333, sumws#30218, rk#30219]
[info]                :                    :                 :        +- *(5) Filter isnotnull(rk#30219)
[info]                :                    :                 :           +- Window [row_number() windowspecdefinition(ws_item_sk#1023, d_date#333 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#30219], [ws_item_sk#1023], [d_date#333 ASC NULLS FIRST]
[info]                :                    :                 :              +- *(4) Sort [ws_item_sk#1023 ASC NULLS FIRST, d_date#333 ASC NULLS FIRST], false, 0
[info]                :                    :                 :                 +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#97178]
[info]                :                    :                 :                    +- *(3) HashAggregate(keys=[ws_item_sk#1023, d_date#333], functions=[sum(UnscaledValue(ws_sales_price#1041))])
[info]                :                    :                 :                       +- Exchange hashpartitioning(ws_item_sk#1023, d_date#333, 4), true, [id=#97174]
[info]                :                    :                 :                          +- *(2) HashAggregate(keys=[ws_item_sk#1023, d_date#333], functions=[partial_sum(UnscaledValue(ws_sales_price#1041))])
[info]                :                    :                 :                             +- *(2) Project [ws_item_sk#1023, ws_sales_price#1041, d_date#333]
[info]                :                    :                 :                                +- *(2) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :                    :                 :                                   :- *(2) Project [ws_item_sk#1023, ws_sales_price#1041, ws_sold_date_sk#1054]
[info]                :                    :                 :                                   :  +- *(2) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                :                    :                 :                                   :     +- *(2) ColumnarToRow
[info]                :                    :                 :                                   :        +- BatchScan[ws_item_sk#1023, ws_sales_price#1041, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_sales_price:decimal(7,2)>
[info]                :                    :                 :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#97168]
[info]                :                    :                 :                                      +- *(1) Project [d_date_sk#331, d_date#333]
[info]                :                    :                 :                                         +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1212)) AND (d_month_seq#334 <= 1223)) AND isnotnull(d_date_sk#331))
[info]                :                    :                 :                                            +- *(1) ColumnarToRow
[info]                :                    :                 :                                               +- BatchScan[d_date_sk#331, d_date#333, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>
[info]                :                    :                 +- *(12) Sort [item_sk#30372 ASC NULLS FIRST], false, 0
[info]                :                    :                    +- Exchange hashpartitioning(item_sk#30372, 4), true, [id=#97576]
[info]                :                    :                       +- *(11) Project [item_sk#30372, sumws#30373, rk#30248]
[info]                :                    :                          +- *(11) Filter isnotnull(rk#30248)
[info]                :                    :                             +- Window [row_number() windowspecdefinition(ws_item_sk#1023, d_date#30494 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#30248], [ws_item_sk#1023], [d_date#30494 ASC NULLS FIRST]
[info]                :                    :                                +- *(10) Sort [ws_item_sk#1023 ASC NULLS FIRST, d_date#30494 ASC NULLS FIRST], false, 0
[info]                :                    :                                   +- ReusedExchange [item_sk#30372, d_date#30494, sumws#30373, ws_item_sk#1023], Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#97178]
[info]                :                    +- *(28) Sort [item_sk#30221 ASC NULLS FIRST, d_date#30610 ASC NULLS FIRST], false, 0
[info]                :                       +- Exchange hashpartitioning(item_sk#30221, d_date#30610, 4), true, [id=#97705]
[info]                :                          +- *(27) HashAggregate(keys=[item_sk#30221, d_date#30610, sumss#30222], functions=[sum(sumss#30403)])
[info]                :                             +- *(27) HashAggregate(keys=[item_sk#30221, d_date#30610, sumss#30222], functions=[partial_sum(sumss#30403)])
[info]                :                                +- *(27) Project [item_sk#30221, d_date#30610, sumss#30222, sumss#30403]
[info]                :                                   +- *(27) SortMergeJoin [item_sk#30221], [item_sk#30402], Inner, (rk#30223 >= rk#30279)
[info]                :                                      :- *(20) Sort [item_sk#30221 ASC NULLS FIRST], false, 0
[info]                :                                      :  +- Exchange hashpartitioning(item_sk#30221, 4), true, [id=#97617]
[info]                :                                      :     +- *(19) Project [item_sk#30221, d_date#30610, sumss#30222, rk#30223]
[info]                :                                      :        +- *(19) Filter isnotnull(rk#30223)
[info]                :                                      :           +- Window [row_number() windowspecdefinition(ss_item_sk#1165, d_date#30610 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#30223], [ss_item_sk#1165], [d_date#30610 ASC NULLS FIRST]
[info]                :                                      :              +- *(18) Sort [ss_item_sk#1165 ASC NULLS FIRST, d_date#30610 ASC NULLS FIRST], false, 0
[info]                :                                      :                 +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#97608]
[info]                :                                      :                    +- *(17) HashAggregate(keys=[ss_item_sk#1165, d_date#30610], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]                :                                      :                       +- Exchange hashpartitioning(ss_item_sk#1165, d_date#30610, 4), true, [id=#97604]
[info]                :                                      :                          +- *(16) HashAggregate(keys=[ss_item_sk#1165, d_date#30610], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]                :                                      :                             +- *(16) Project [ss_item_sk#1165, ss_sales_price#1176, d_date#30610]
[info]                :                                      :                                +- *(16) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#30608], Inner, BuildRight
[info]                :                                      :                                   :- *(16) Project [ss_item_sk#1165, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                :                                      :                                   :  +- *(16) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                :                                      :                                   :     +- *(16) ColumnarToRow
[info]                :                                      :                                   :        +- BatchScan[ss_item_sk#1165, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_sales_price:decimal(7,2)>
[info]                :                                      :                                   +- ReusedExchange [d_date_sk#30608, d_date#30610], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#97168]
[info]                :                                      +- *(26) Sort [item_sk#30402 ASC NULLS FIRST], false, 0
[info]                :                                         +- Exchange hashpartitioning(item_sk#30402, 4), true, [id=#97695]
[info]                :                                            +- *(25) Project [item_sk#30402, sumss#30403, rk#30279]
[info]                :                                               +- *(25) Filter isnotnull(rk#30279)
[info]                :                                                  +- Window [row_number() windowspecdefinition(ss_item_sk#1165, d_date#30522 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#30279], [ss_item_sk#1165], [d_date#30522 ASC NULLS FIRST]
[info]                :                                                     +- *(24) Sort [ss_item_sk#1165 ASC NULLS FIRST, d_date#30522 ASC NULLS FIRST], false, 0
[info]                :                                                        +- ReusedExchange [item_sk#30402, d_date#30522, sumss#30403, ss_item_sk#1165], Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#97608]
[info]                +- *(62) Project [item_sk#30669, web_sales#30671, store_sales#30672, rk#30664]
[info]                   +- *(62) Filter isnotnull(rk#30664)
[info]                      +- Window [row_number() windowspecdefinition(item_sk#30669, d_date#30670 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#30664], [item_sk#30669], [d_date#30670 ASC NULLS FIRST]
[info]                         +- *(61) Sort [item_sk#30669 ASC NULLS FIRST, d_date#30670 ASC NULLS FIRST], false, 0
[info]                            +- ReusedExchange [item_sk#30669, d_date#30670, web_sales#30671, store_sales#30672], Exchange hashpartitioning(item_sk#30225, 4), true, [id=#97812]
[info] 
[info] 
[info]   Stopped after 1 iterations, 669 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q51a-v2.7                                           670            670           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q57-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#31878 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#31879 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,d_year#337 ASC NULLS FIRST], output=[i_category#508,i_brand#504,d_year#337,d_moy#339,avg_monthly_sales#31879,sum_sales#31878,psum#31881,nsum#31882])
[info] +- *(27) Project [i_category#508, i_brand#504, d_year#337, d_moy#339, avg_monthly_sales#31879, sum_sales#31878, sum_sales#32106 AS psum#31881, sum_sales#32593 AS nsum#31882]
[info]    +- *(27) SortMergeJoin [i_category#508, i_brand#504, cc_name#1498, rn#31880], [i_category#32700, i_brand#32696, cc_name#32862, (rn#32497 - 1)], Inner
[info]       :- *(18) Project [i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, sum_sales#31878, avg_monthly_sales#31879, rn#31880, sum_sales#32106]
[info]       :  +- *(18) SortMergeJoin [i_category#508, i_brand#504, cc_name#1498, rn#31880], [i_category#32213, i_brand#32209, cc_name#32375, (rn#32010 + 1)], Inner
[info]       :     :- *(9) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, cc_name#1498 ASC NULLS FIRST, rn#31880 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, rn#31880, 4), true, [id=#98707]
[info]       :     :     +- *(8) Project [i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, sum_sales#31878, avg_monthly_sales#31879, rn#31880]
[info]       :     :        +- *(8) Filter (((isnotnull(avg_monthly_sales#31879) AND (avg_monthly_sales#31879 > 0.000000)) AND (CASE WHEN (avg_monthly_sales#31879 > 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#31878 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#31879 as decimal(22,6)))), DecimalType(22,6), true))) / promote_precision(cast(avg_monthly_sales#31879 as decimal(22,6)))), DecimalType(38,16), true) ELSE null END > 0.1000000000000000)) AND isnotnull(rn#31880))
[info]       :     :           +- Window [avg(_w0#31910) windowspecdefinition(i_category#508, i_brand#504, cc_name#1498, d_year#337, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#31879], [i_category#508, i_brand#504, cc_name#1498, d_year#337]
[info]       :     :              +- *(7) Filter (isnotnull(d_year#337) AND (d_year#337 = 1999))
[info]       :     :                 +- Window [rank(d_year#337, d_moy#339) windowspecdefinition(i_category#508, i_brand#504, cc_name#1498, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#31880], [i_category#508, i_brand#504, cc_name#1498], [d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST]
[info]       :     :                    +- *(6) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, cc_name#1498 ASC NULLS FIRST, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST], false, 0
[info]       :     :                       +- Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, 4), true, [id=#98694]
[info]       :     :                          +- *(5) HashAggregate(keys=[i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339], functions=[sum(UnscaledValue(cs_sales_price#898))])
[info]       :     :                             +- Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, 4), true, [id=#98690]
[info]       :     :                                +- *(4) HashAggregate(keys=[i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339], functions=[partial_sum(UnscaledValue(cs_sales_price#898))])
[info]       :     :                                   +- *(4) Project [i_brand#504, i_category#508, cs_sales_price#898, d_year#337, d_moy#339, cc_name#1498]
[info]       :     :                                      +- *(4) BroadcastHashJoin [cs_call_center_sk#888], [cc_call_center_sk#1492], Inner, BuildRight
[info]       :     :                                         :- *(4) Project [i_brand#504, i_category#508, cs_call_center_sk#888, cs_sales_price#898, d_year#337, d_moy#339]
[info]       :     :                                         :  +- *(4) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :     :                                         :     :- *(4) Project [i_brand#504, i_category#508, cs_call_center_sk#888, cs_sales_price#898, cs_sold_date_sk#911]
[info]       :     :                                         :     :  +- *(4) BroadcastHashJoin [i_item_sk#496], [cs_item_sk#892], Inner, BuildLeft
[info]       :     :                                         :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#98662]
[info]       :     :                                         :     :     :  +- *(1) Project [i_item_sk#496, i_brand#504, i_category#508]
[info]       :     :                                         :     :     :     +- *(1) Filter ((isnotnull(i_item_sk#496) AND isnotnull(i_brand#504)) AND isnotnull(i_category#508))
[info]       :     :                                         :     :     :        +- *(1) ColumnarToRow
[info]       :     :                                         :     :     :           +- BatchScan[i_item_sk#496, i_brand#504, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
[info]       :     :                                         :     :     +- *(4) Project [cs_call_center_sk#888, cs_item_sk#892, cs_sales_price#898, cs_sold_date_sk#911]
[info]       :     :                                         :     :        +- *(4) Filter ((isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_call_center_sk#888))
[info]       :     :                                         :     :           +- *(4) ColumnarToRow
[info]       :     :                                         :     :              +- BatchScan[cs_call_center_sk#888, cs_item_sk#892, cs_sales_price#898, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_call_center_sk:int,cs_item_sk:int,cs_sales_price:decimal(7,2)>
[info]       :     :                                         :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#98675]
[info]       :     :                                         :        +- *(2) Project [d_date_sk#331, d_year#337, d_moy#339]
[info]       :     :                                         :           +- *(2) Filter ((((d_year#337 = 1999) OR ((d_year#337 = 1998) AND (d_moy#339 = 12))) OR ((d_year#337 = 2000) AND (d_moy#339 = 1))) AND isnotnull(d_date_sk#331))
[info]       :     :                                         :              +- *(2) ColumnarToRow
[info]       :     :                                         :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]       :     :                                         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#98684]
[info]       :     :                                            +- *(3) Project [cc_call_center_sk#1492, cc_name#1498]
[info]       :     :                                               +- *(3) Filter (isnotnull(cc_call_center_sk#1492) AND isnotnull(cc_name#1498))
[info]       :     :                                                  +- *(3) ColumnarToRow
[info]       :     :                                                     +- BatchScan[cc_call_center_sk#1492, cc_name#1498] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/call_center], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
[info]       :     +- *(17) Sort [i_category#32213 ASC NULLS FIRST, i_brand#32209 ASC NULLS FIRST, cc_name#32375 ASC NULLS FIRST, (rn#32010 + 1) ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(i_category#32213, i_brand#32209, cc_name#32375, (rn#32010 + 1), 4), true, [id=#98950]
[info]       :           +- *(16) Project [i_category#32213, i_brand#32209, cc_name#32375, sum_sales#32106, rn#32010]
[info]       :              +- *(16) Filter isnotnull(rn#32010)
[info]       :                 +- Window [rank(d_year#32300, d_moy#32302) windowspecdefinition(i_category#32213, i_brand#32209, cc_name#32375, d_year#32300 ASC NULLS FIRST, d_moy#32302 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#32010], [i_category#32213, i_brand#32209, cc_name#32375], [d_year#32300 ASC NULLS FIRST, d_moy#32302 ASC NULLS FIRST]
[info]       :                    +- *(15) Sort [i_category#32213 ASC NULLS FIRST, i_brand#32209 ASC NULLS FIRST, cc_name#32375 ASC NULLS FIRST, d_year#32300 ASC NULLS FIRST, d_moy#32302 ASC NULLS FIRST], false, 0
[info]       :                       +- Exchange hashpartitioning(i_category#32213, i_brand#32209, cc_name#32375, 4), true, [id=#98941]
[info]       :                          +- *(14) HashAggregate(keys=[i_category#32213, i_brand#32209, cc_name#32375, d_year#32300, d_moy#32302], functions=[sum(UnscaledValue(cs_sales_price#898))])
[info]       :                             +- ReusedExchange [i_category#32213, i_brand#32209, cc_name#32375, d_year#32300, d_moy#32302, sum#33006L], Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, 4), true, [id=#98690]
[info]       +- *(26) Sort [i_category#32700 ASC NULLS FIRST, i_brand#32696 ASC NULLS FIRST, cc_name#32862 ASC NULLS FIRST, (rn#32497 - 1) ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_category#32700, i_brand#32696, cc_name#32862, (rn#32497 - 1), 4), true, [id=#99050]
[info]             +- *(25) Project [i_category#32700, i_brand#32696, cc_name#32862, sum_sales#32593, rn#32497]
[info]                +- *(25) Filter isnotnull(rn#32497)
[info]                   +- Window [rank(d_year#32787, d_moy#32789) windowspecdefinition(i_category#32700, i_brand#32696, cc_name#32862, d_year#32787 ASC NULLS FIRST, d_moy#32789 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#32497], [i_category#32700, i_brand#32696, cc_name#32862], [d_year#32787 ASC NULLS FIRST, d_moy#32789 ASC NULLS FIRST]
[info]                      +- *(24) Sort [i_category#32700 ASC NULLS FIRST, i_brand#32696 ASC NULLS FIRST, cc_name#32862 ASC NULLS FIRST, d_year#32787 ASC NULLS FIRST, d_moy#32789 ASC NULLS FIRST], false, 0
[info]                         +- ReusedExchange [i_category#32700, i_brand#32696, cc_name#32862, d_year#32787, d_moy#32789, sum_sales#32593], Exchange hashpartitioning(i_category#32213, i_brand#32209, cc_name#32375, 4), true, [id=#98941]
[info] 
[info] 
[info]   Stopped after 1 iterations, 571 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q57-v2.7                                            571            571           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q64-v2.7
[info] == Physical Plan ==
[info] *(62) Sort [product_name#33300 ASC NULLS FIRST, store_name#33302 ASC NULLS FIRST, cnt#33534L ASC NULLS FIRST, s1#33316 ASC NULLS FIRST, s1#33535 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(product_name#33300 ASC NULLS FIRST, store_name#33302 ASC NULLS FIRST, cnt#33534L ASC NULLS FIRST, s1#33316 ASC NULLS FIRST, s1#33535 ASC NULLS FIRST, 4), true, [id=#101355]
[info]    +- *(61) Project [product_name#33300, store_name#33302, store_zip#33303, b_street_number#33304, b_streen_name#33305, b_city#33306, b_zip#33307, c_street_number#33308, c_street_name#33309, c_city#33310, c_zip#33311, syear#33312, cnt#33315L, s1#33316, s2#33317, s3#33318, s1#33535, s2#33536, s3#33537, syear#33531, cnt#33534L]
[info]       +- *(61) SortMergeJoin [item_sk#33301, store_name#33302, store_zip#33303], [item_sk#33520, store_name#33521, store_zip#33522], Inner, (cnt#33534L <= cnt#33315L)
[info]          :- *(30) Sort [item_sk#33301 ASC NULLS FIRST, store_name#33302 ASC NULLS FIRST, store_zip#33303 ASC NULLS FIRST], false, 0
[info]          :  +- Exchange hashpartitioning(item_sk#33301, store_name#33302, store_zip#33303, 4), true, [id=#100738]
[info]          :     +- *(29) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33407, ca_street_name#33408, ca_city#33411, ca_zip#33414, d_year#337, d_year#33341, d_year#33369], functions=[count(1), sum(UnscaledValue(ss_wholesale_cost#1174)), sum(UnscaledValue(ss_list_price#1175)), sum(UnscaledValue(ss_coupon_amt#1182))])
[info]          :        +- Exchange hashpartitioning(i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33407, ca_street_name#33408, ca_city#33411, ca_zip#33414, d_year#337, d_year#33341, d_year#33369, 4), true, [id=#100734]
[info]          :           +- *(28) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33407, ca_street_name#33408, ca_city#33411, ca_zip#33414, d_year#337, d_year#33341, d_year#33369], functions=[partial_count(1), partial_sum(UnscaledValue(ss_wholesale_cost#1174)), partial_sum(UnscaledValue(ss_list_price#1175)), partial_sum(UnscaledValue(ss_coupon_amt#1182))])
[info]          :              +- *(28) Project [ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, d_year#33341, d_year#33369, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33407, ca_street_name#33408, ca_city#33411, ca_zip#33414, i_item_sk#496, i_product_name#517]
[info]          :                 +- *(28) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]          :                    :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#33341, d_year#33369, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33407, ca_street_name#33408, ca_city#33411, ca_zip#33414]
[info]          :                    :  +- *(28) BroadcastHashJoin [hd_income_band_sk#33401], [ib_income_band_sk#33418], Inner, BuildRight
[info]          :                    :     :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#33341, d_year#33369, hd_income_band_sk#33401, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33407, ca_street_name#33408, ca_city#33411, ca_zip#33414]
[info]          :                    :     :  +- *(28) BroadcastHashJoin [hd_income_band_sk#449], [ib_income_band_sk#1711], Inner, BuildRight
[info]          :                    :     :     :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#33341, d_year#33369, hd_income_band_sk#449, hd_income_band_sk#33401, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33407, ca_street_name#33408, ca_city#33411, ca_zip#33414]
[info]          :                    :     :     :  +- *(28) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#33405], Inner, BuildRight
[info]          :                    :     :     :     :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#33341, d_year#33369, hd_income_band_sk#449, hd_income_band_sk#33401, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242]
[info]          :                    :     :     :     :  +- *(28) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]          :                    :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#33341, d_year#33369, hd_income_band_sk#449, hd_income_band_sk#33401]
[info]          :                    :     :     :     :     :  +- *(28) BroadcastHashJoin [c_current_hdemo_sk#159], [hd_demo_sk#33400], Inner, BuildRight
[info]          :                    :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33341, d_year#33369, hd_income_band_sk#449]
[info]          :                    :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33341, d_year#33369]
[info]          :                    :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33341, d_year#33369]
[info]          :                    :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#33391], Inner, BuildRight, NOT (cd_marital_status#292 = cd_marital_status#33393)
[info]          :                    :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33341, d_year#33369, cd_marital_status#292]
[info]          :                    :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33341, d_year#33369]
[info]          :                    :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [c_first_shipto_date_sk#161], [d_date_sk#33363], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, d_year#33341]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [c_first_sales_date_sk#162], [d_date_sk#33335], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) SortMergeJoin [ss_item_sk#1165], [cs_item_sk#892], Inner
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(6) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#100212]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- *(5) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(5) SortMergeJoin [ss_item_sk#1165, ss_ticket_number#1172L], [sr_item_sk#792, sr_ticket_number#799L], Inner
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :  +- Exchange hashpartitioning(ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#100194]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :        +- *(1) Filter ((((((((isnotnull(ss_item_sk#1165) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_cdemo_sk#1167)) AND isnotnull(ss_promo_sk#1171)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_addr_sk#1169))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :           +- *(1) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_...
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(4) Sort [sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- Exchange hashpartitioning(sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#100204]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                    +- *(3) Filter (isnotnull(sr_item_sk#792) AND isnotnull(sr_ticket_number#799L))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                       +- *(3) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                          +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- *(12) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(12) Project [cs_item_sk#892]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(12) Filter (isnotnull(sum(cs_ext_list_price#902)#33328) AND (cast(sum(cs_ext_list_price#902)#33328 as decimal(21,2)) > CheckOverflow((2.00 * promote_precision(sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))#33329)), DecimalType(21,2), true)))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(12) HashAggregate(keys=[cs_item_sk#892], functions=[sum(UnscaledValue(cs_ext_list_price#902)), sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))])
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#100241]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                    +- *(11) HashAggregate(keys=[cs_item_sk#892], functions=[partial_sum(UnscaledValue(cs_ext_list_price#902)), partial_sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))])
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                       +- *(11) Project [cs_item_sk#892, cs_ext_list_price#902, cr_refunded_cash#63, cr_reversed_charge#64, cr_store_credit#65]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                          +- *(11) SortMergeJoin [cs_item_sk#892, cs_order_number#894L], [cr_item_sk#42, cr_order_number#56L], Inner
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :- *(8) Sort [cs_item_sk#892 ASC NULLS FIRST, cs_order_number#894L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :  +- Exchange hashpartitioning(cs_item_sk#892, cs_order_number#894L, 4), true, [id=#100222]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :     +- *(7) Project [cs_item_sk#892, cs_order_number#894L, cs_ext_list_price#902]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :        +- *(7) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_order_number#894L))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :           +- *(7) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :              +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_ext_list_price#902] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_ext_list_price:decimal(7,2)>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             +- *(10) Sort [cr_item_sk#42 ASC NULLS FIRST, cr_order_number#56L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                +- Exchange hashpartitioning(cr_item_sk#42, cr_order_number#56L, 4), true, [id=#100232]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                   +- *(9) Project [cr_item_sk#42, cr_order_number#56L, cr_refunded_cash#63, cr_reversed_charge#64, cr_store_credit#65]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                      +- *(9) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                         +- *(9) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                            +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_refunded_cash#63, cr_reversed_charge#64, cr_store_credit#65] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_refunded_cash:decimal(7,2),cr_reversed_charge:dec...
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100256]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(13) Project [d_date_sk#331, d_year#337]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(13) Filter ((isnotnull(d_year#337) AND (d_year#337 = 1999)) AND isnotnull(d_date_sk#331))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(13) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100265]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(14) Project [s_store_sk#670, s_store_name#675, s_zip#695]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(14) Filter ((isnotnull(s_store_sk#670) AND isnotnull(s_zip#695)) AND isnotnull(s_store_name#675))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(14) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_zip:string>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100274]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :        +- *(15) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :           +- *(15) Filter (((((isnotnull(c_customer_sk#156) AND isnotnull(c_first_sales_date_sk#162)) AND isnotnull(c_first_shipto_date_sk#161)) AND isnotnull(c_current_cdemo_sk#158)) AND isnotnull(c_current_hdemo_sk#159)) AND isnotnull(c_current_addr_sk#160))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :              +- *(15) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int,c_fi...
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100283]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :        +- *(16) Project [d_date_sk#33335, d_year#33341]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :           +- *(16) Filter isnotnull(d_date_sk#33335)
[info]          :                    :     :     :     :     :     :     :     :     :     :     :              +- *(16) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[d_date_sk#33335, d_year#33341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]          :                    :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#33363, d_year#33369], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100283]
[info]          :                    :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100301]
[info]          :                    :     :     :     :     :     :     :     :     :        +- *(18) Project [cd_demo_sk#290, cd_marital_status#292]
[info]          :                    :     :     :     :     :     :     :     :     :           +- *(18) Filter (isnotnull(cd_demo_sk#290) AND isnotnull(cd_marital_status#292))
[info]          :                    :     :     :     :     :     :     :     :     :              +- *(18) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>
[info]          :                    :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#33391, cd_marital_status#33393], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100301]
[info]          :                    :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100319]
[info]          :                    :     :     :     :     :     :     :        +- *(20) Project [p_promo_sk#589]
[info]          :                    :     :     :     :     :     :     :           +- *(20) Filter isnotnull(p_promo_sk#589)
[info]          :                    :     :     :     :     :     :     :              +- *(20) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :                 +- BatchScan[p_promo_sk#589] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int>
[info]          :                    :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100328]
[info]          :                    :     :     :     :     :     :        +- *(21) Project [hd_demo_sk#448, hd_income_band_sk#449]
[info]          :                    :     :     :     :     :     :           +- *(21) Filter (isnotnull(hd_demo_sk#448) AND isnotnull(hd_income_band_sk#449))
[info]          :                    :     :     :     :     :     :              +- *(21) ColumnarToRow
[info]          :                    :     :     :     :     :     :                 +- BatchScan[hd_demo_sk#448, hd_income_band_sk#449] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_income_band_sk:int>
[info]          :                    :     :     :     :     :     +- ReusedExchange [hd_demo_sk#33400, hd_income_band_sk#33401], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100328]
[info]          :                    :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100346]
[info]          :                    :     :     :     :        +- *(23) Project [ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242]
[info]          :                    :     :     :     :           +- *(23) Filter isnotnull(ca_address_sk#233)
[info]          :                    :     :     :     :              +- *(23) ColumnarToRow
[info]          :                    :     :     :     :                 +- BatchScan[ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_city:string,ca_zip:string>
[info]          :                    :     :     :     +- ReusedExchange [ca_address_sk#33405, ca_street_number#33407, ca_street_name#33408, ca_city#33411, ca_zip#33414], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100346]
[info]          :                    :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100364]
[info]          :                    :     :        +- *(25) Project [ib_income_band_sk#1711]
[info]          :                    :     :           +- *(25) Filter isnotnull(ib_income_band_sk#1711)
[info]          :                    :     :              +- *(25) ColumnarToRow
[info]          :                    :     :                 +- BatchScan[ib_income_band_sk#1711] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/income_band], ReadSchema: struct<ib_income_band_sk:int>
[info]          :                    :     +- ReusedExchange [ib_income_band_sk#33418], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100364]
[info]          :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100382]
[info]          :                       +- *(27) Project [i_item_sk#496, i_product_name#517]
[info]          :                          +- *(27) Filter (((((((cast(i_current_price#501 as decimal(12,2)) <= 74.00) AND (cast(i_current_price#501 as decimal(12,2)) >= 65.00)) AND (cast(i_current_price#501 as decimal(12,2)) <= 79.00)) AND isnotnull(i_current_price#501)) AND i_color#513 IN (purple,burlywood,indian,spring,floral,medium)) AND (i_current_price#501 >= 64.00)) AND isnotnull(i_item_sk#496))
[info]          :                             +- *(27) ColumnarToRow
[info]          :                                +- BatchScan[i_item_sk#496, i_current_price#501, i_color#513, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_color:string,i_product_name:string>
[info]          +- *(60) Sort [item_sk#33520 ASC NULLS FIRST, store_name#33521 ASC NULLS FIRST, store_zip#33522 ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning(item_sk#33520, store_name#33521, store_zip#33522, 4), true, [id=#101347]
[info]                +- *(59) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33493, ca_street_name#33494, ca_city#33497, ca_zip#33500, d_year#337, d_year#33427, d_year#33455], functions=[count(1), sum(UnscaledValue(ss_wholesale_cost#1174)), sum(UnscaledValue(ss_list_price#1175)), sum(UnscaledValue(ss_coupon_amt#1182))])
[info]                   +- Exchange hashpartitioning(i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33493, ca_street_name#33494, ca_city#33497, ca_zip#33500, d_year#337, d_year#33427, d_year#33455, 4), true, [id=#101143]
[info]                      +- *(58) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33493, ca_street_name#33494, ca_city#33497, ca_zip#33500, d_year#337, d_year#33427, d_year#33455], functions=[partial_count(1), partial_sum(UnscaledValue(ss_wholesale_cost#1174)), partial_sum(UnscaledValue(ss_list_price#1175)), partial_sum(UnscaledValue(ss_coupon_amt#1182))])
[info]                         +- *(58) Project [ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, d_year#33427, d_year#33455, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33493, ca_street_name#33494, ca_city#33497, ca_zip#33500, i_item_sk#496, i_product_name#517]
[info]                            +- *(58) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                               :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#33427, d_year#33455, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33493, ca_street_name#33494, ca_city#33497, ca_zip#33500]
[info]                               :  +- *(58) BroadcastHashJoin [hd_income_band_sk#33487], [ib_income_band_sk#33504], Inner, BuildRight
[info]                               :     :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#33427, d_year#33455, hd_income_band_sk#33487, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33493, ca_street_name#33494, ca_city#33497, ca_zip#33500]
[info]                               :     :  +- *(58) BroadcastHashJoin [hd_income_band_sk#449], [ib_income_band_sk#1711], Inner, BuildRight
[info]                               :     :     :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#33427, d_year#33455, hd_income_band_sk#449, hd_income_band_sk#33487, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33493, ca_street_name#33494, ca_city#33497, ca_zip#33500]
[info]                               :     :     :  +- *(58) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#33491], Inner, BuildRight
[info]                               :     :     :     :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#33427, d_year#33455, hd_income_band_sk#449, hd_income_band_sk#33487, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242]
[info]                               :     :     :     :  +- *(58) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]                               :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#33427, d_year#33455, hd_income_band_sk#449, hd_income_band_sk#33487]
[info]                               :     :     :     :     :  +- *(58) BroadcastHashJoin [c_current_hdemo_sk#159], [hd_demo_sk#33486], Inner, BuildRight
[info]                               :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33427, d_year#33455, hd_income_band_sk#449]
[info]                               :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]                               :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33427, d_year#33455]
[info]                               :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33427, d_year#33455]
[info]                               :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#33477], Inner, BuildRight, NOT (cd_marital_status#292 = cd_marital_status#33479)
[info]                               :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33427, d_year#33455, cd_marital_status#292]
[info]                               :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33427, d_year#33455]
[info]                               :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [c_first_shipto_date_sk#161], [d_date_sk#33449], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, d_year#33427]
[info]                               :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [c_first_sales_date_sk#162], [d_date_sk#33421], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) SortMergeJoin [ss_item_sk#1165], [cs_item_sk#892], Inner
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(36) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- ReusedExchange [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186], Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#100212]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- *(42) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(42) Project [cs_item_sk#892]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(42) Filter (isnotnull(sum(cs_ext_list_price#902)#33333) AND (cast(sum(cs_ext_list_price#902)#33333 as decimal(21,2)) > CheckOverflow((2.00 * promote_precision(sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))#33334)), DecimalType(21,2), true)))
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(42) HashAggregate(keys=[cs_item_sk#892], functions=[sum(UnscaledValue(cs_ext_list_price#902)), sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))])
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- ReusedExchange [cs_item_sk#892, sum#33709L, sum#33710], Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#100241]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100464]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(43) Project [d_date_sk#331, d_year#337]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(43) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(43) ColumnarToRow
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [s_store_sk#670, s_store_name#675, s_zip#695], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100265]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100274]
[info]                               :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#33421, d_year#33427], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100283]
[info]                               :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#33449, d_year#33455], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100283]
[info]                               :     :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#290, cd_marital_status#292], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100301]
[info]                               :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#33477, cd_marital_status#33479], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100301]
[info]                               :     :     :     :     :     :     :     +- ReusedExchange [p_promo_sk#589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100319]
[info]                               :     :     :     :     :     :     +- ReusedExchange [hd_demo_sk#448, hd_income_band_sk#449], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100328]
[info]                               :     :     :     :     :     +- ReusedExchange [hd_demo_sk#33486, hd_income_band_sk#33487], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100328]
[info]                               :     :     :     :     +- ReusedExchange [ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100346]
[info]                               :     :     :     +- ReusedExchange [ca_address_sk#33491, ca_street_number#33493, ca_street_name#33494, ca_city#33497, ca_zip#33500], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100346]
[info]                               :     :     +- ReusedExchange [ib_income_band_sk#1711], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100364]
[info]                               :     +- ReusedExchange [ib_income_band_sk#33504], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100364]
[info]                               +- ReusedExchange [i_item_sk#496, i_product_name#517], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#100382]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1520 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q64-v2.7                                           1520           1520           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q67a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_category#508 ASC NULLS FIRST,i_class#506 ASC NULLS FIRST,i_brand#504 ASC NULLS FIRST,i_product_name#517 ASC NULLS FIRST,d_year#337 ASC NULLS FIRST,d_qoy#341 ASC NULLS FIRST,d_moy#339 ASC NULLS FIRST,s_store_id#671 ASC NULLS FIRST,sumsales#33982 ASC NULLS FIRST,rk#33917 ASC NULLS FIRST], output=[i_category#508,i_class#506,i_brand#504,i_product_name#517,d_year#337,d_qoy#341,d_moy#339,s_store_id#671,sumsales#33982,rk#33917])
[info] +- *(55) Filter (isnotnull(rk#33917) AND (rk#33917 <= 100))
[info]    +- Window [rank(sumsales#33982) windowspecdefinition(i_category#508, sumsales#33982 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#33917], [i_category#508], [sumsales#33982 DESC NULLS LAST]
[info]       +- *(54) Sort [i_category#508 ASC NULLS FIRST, sumsales#33982 DESC NULLS LAST], false, 0
[info]          +- Exchange hashpartitioning(i_category#508, 4), true, [id=#103442]
[info]             +- Union
[info]                :- *(5) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :  +- Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#102449]
[info]                :     +- *(4) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[partial_sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :        +- *(4) Project [ss_quantity#1173, ss_sales_price#1176, d_year#337, d_moy#339, d_qoy#341, s_store_id#671, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]                :           +- *(4) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :              :- *(4) Project [ss_item_sk#1165, ss_quantity#1173, ss_sales_price#1176, d_year#337, d_moy#339, d_qoy#341, s_store_id#671]
[info]                :              :  +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :              :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, d_year#337, d_moy#339, d_qoy#341]
[info]                :              :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :              :     :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                :              :     :     :  +- *(4) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165))
[info]                :              :     :     :     +- *(4) ColumnarToRow
[info]                :              :     :     :        +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
[info]                :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#102425]
[info]                :              :     :        +- *(1) Project [d_date_sk#331, d_year#337, d_moy#339, d_qoy#341]
[info]                :              :     :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1212)) AND (d_month_seq#334 <= 1223)) AND isnotnull(d_date_sk#331))
[info]                :              :     :              +- *(1) ColumnarToRow
[info]                :              :     :                 +- BatchScan[d_date_sk#331, d_month_seq#334, d_year#337, d_moy#339, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>
[info]                :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#102434]
[info]                :              :        +- *(2) Project [s_store_sk#670, s_store_id#671]
[info]                :              :           +- *(2) Filter isnotnull(s_store_sk#670)
[info]                :              :              +- *(2) ColumnarToRow
[info]                :              :                 +- BatchScan[s_store_sk#670, s_store_id#671] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string>
[info]                :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#102443]
[info]                :                 +- *(3) Project [i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]                :                    +- *(3) Filter isnotnull(i_item_sk#496)
[info]                :                       +- *(3) ColumnarToRow
[info]                :                          +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
[info]                :- *(11) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339], functions=[sum(sumsales#33918)])
[info]                :  +- Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, 4), true, [id=#102919]
[info]                :     +- *(10) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339], functions=[partial_sum(sumsales#33918)])
[info]                :        +- *(10) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :           +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34259], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#102449]
[info]                :- *(17) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341], functions=[sum(sumsales#33918)])
[info]                :  +- Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, 4), true, [id=#102993]
[info]                :     +- *(16) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341], functions=[partial_sum(sumsales#33918)])
[info]                :        +- *(16) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :           +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34263], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#102449]
[info]                :- *(23) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337], functions=[sum(sumsales#33918)])
[info]                :  +- Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, 4), true, [id=#103067]
[info]                :     +- *(22) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337], functions=[partial_sum(sumsales#33918)])
[info]                :        +- *(22) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :           +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34267], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#102449]
[info]                :- *(29) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517], functions=[sum(sumsales#33918)])
[info]                :  +- Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, 4), true, [id=#103141]
[info]                :     +- *(28) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517], functions=[partial_sum(sumsales#33918)])
[info]                :        +- *(28) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :           +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34271], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#102449]
[info]                :- *(35) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504], functions=[sum(sumsales#33918)])
[info]                :  +- Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, 4), true, [id=#103215]
[info]                :     +- *(34) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504], functions=[partial_sum(sumsales#33918)])
[info]                :        +- *(34) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :           +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34275], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#102449]
[info]                :- *(41) HashAggregate(keys=[i_category#508, i_class#506], functions=[sum(sumsales#33918)])
[info]                :  +- Exchange hashpartitioning(i_category#508, i_class#506, 4), true, [id=#103289]
[info]                :     +- *(40) HashAggregate(keys=[i_category#508, i_class#506], functions=[partial_sum(sumsales#33918)])
[info]                :        +- *(40) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :           +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34279], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#102449]
[info]                :- *(47) HashAggregate(keys=[i_category#508], functions=[sum(sumsales#33918)])
[info]                :  +- Exchange hashpartitioning(i_category#508, 4), true, [id=#103363]
[info]                :     +- *(46) HashAggregate(keys=[i_category#508], functions=[partial_sum(sumsales#33918)])
[info]                :        +- *(46) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :           +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34283], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#102449]
[info]                +- *(53) HashAggregate(keys=[], functions=[sum(sumsales#33918)])
[info]                   +- Exchange SinglePartition, true, [id=#103437]
[info]                      +- *(52) HashAggregate(keys=[], functions=[partial_sum(sumsales#33918)])
[info]                         +- *(52) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                            +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34287], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#102449]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1174 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q67a-v2.7                                          1174           1174           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q70a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#34398 DESC NULLS LAST,CASE WHEN (lochierarchy#34398 = 0) THEN s_state#694 END ASC NULLS FIRST,rank_within_parent#34389 ASC NULLS FIRST], output=[total_sum#34447,s_state#694,s_county#693,lochierarchy#34398,rank_within_parent#34389])
[info] +- *(41) Project [total_sum#34447, s_state#694, s_county#693, lochierarchy#34398, rank_within_parent#34389]
[info]    +- Window [rank(total_sum#34447) windowspecdefinition(lochierarchy#34398, _w0#34460, total_sum#34447 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#34389], [lochierarchy#34398, _w0#34460], [total_sum#34447 DESC NULLS LAST]
[info]       +- *(40) Sort [lochierarchy#34398 ASC NULLS FIRST, _w0#34460 ASC NULLS FIRST, total_sum#34447 DESC NULLS LAST], false, 0
[info]          +- Exchange hashpartitioning(lochierarchy#34398, _w0#34460, 4), true, [id=#104857]
[info]             +- *(39) HashAggregate(keys=[total_sum#34447, s_state#694, s_county#693, g_state#34396, g_county#34397, lochierarchy#34398], functions=[])
[info]                +- Exchange hashpartitioning(total_sum#34447, s_state#694, s_county#693, g_state#34396, g_county#34397, lochierarchy#34398, 4), true, [id=#104808]
[info]                   +- *(38) HashAggregate(keys=[total_sum#34447, s_state#694, s_county#693, g_state#34396, g_county#34397, lochierarchy#34398], functions=[])
[info]                      +- Union
[info]                         :- *(25) HashAggregate(keys=[total_sum#34447, s_state#694, s_county#693, g_state#34396, g_county#34397, lochierarchy#34398], functions=[])
[info]                         :  +- Exchange hashpartitioning(total_sum#34447, s_state#694, s_county#693, g_state#34396, g_county#34397, lochierarchy#34398, 4), true, [id=#104646]
[info]                         :     +- *(24) HashAggregate(keys=[total_sum#34447, s_state#694, s_county#693, g_state#34396, g_county#34397, lochierarchy#34398], functions=[])
[info]                         :        +- Union
[info]                         :           :- *(11) HashAggregate(keys=[s_state#694, s_county#693], functions=[sum(UnscaledValue(ss_net_profit#1185))])
[info]                         :           :  +- Exchange hashpartitioning(s_state#694, s_county#693, 4), true, [id=#104463]
[info]                         :           :     +- *(10) HashAggregate(keys=[s_state#694, s_county#693], functions=[partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]                         :           :        +- *(10) Project [ss_net_profit#1185, s_county#693, s_state#694]
[info]                         :           :           +- *(10) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                         :           :              :- *(10) Project [ss_store_sk#1170, ss_net_profit#1185]
[info]                         :           :              :  +- *(10) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                         :           :              :     :- *(10) Project [ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                         :           :              :     :  +- *(10) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]                         :           :              :     :     +- *(10) ColumnarToRow
[info]                         :           :              :     :        +- BatchScan[ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_net_profit:decimal(7,2)>
[info]                         :           :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104116]
[info]                         :           :              :        +- *(1) Project [d_date_sk#331]
[info]                         :           :              :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1212)) AND (d_month_seq#334 <= 1223)) AND isnotnull(d_date_sk#331))
[info]                         :           :              :              +- *(1) ColumnarToRow
[info]                         :           :              :                 +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                         :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104392]
[info]                         :           :                 +- SortMergeJoin [s_state#694], [s_state#34390], LeftSemi
[info]                         :           :                    :- *(3) Sort [s_state#694 ASC NULLS FIRST], false, 0
[info]                         :           :                    :  +- Exchange hashpartitioning(s_state#694, 4), true, [id=#104125]
[info]                         :           :                    :     +- *(2) Project [s_store_sk#670, s_county#693, s_state#694]
[info]                         :           :                    :        +- *(2) Filter isnotnull(s_store_sk#670)
[info]                         :           :                    :           +- *(2) ColumnarToRow
[info]                         :           :                    :              +- BatchScan[s_store_sk#670, s_county#693, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_county:string,s_state:string>
[info]                         :           :                    +- *(9) Sort [s_state#34390 ASC NULLS FIRST], false, 0
[info]                         :           :                       +- Exchange hashpartitioning(s_state#34390, 4), true, [id=#104387]
[info]                         :           :                          +- *(8) Project [s_state#34390]
[info]                         :           :                             +- *(8) Filter (isnotnull(ranking#34391) AND (ranking#34391 <= 5))
[info]                         :           :                                +- Window [rank(_w1#34415) windowspecdefinition(s_state#694, _w1#34415 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS ranking#34391], [s_state#694], [_w1#34415 DESC NULLS LAST]
[info]                         :           :                                   +- *(7) Sort [s_state#694 ASC NULLS FIRST, _w1#34415 DESC NULLS LAST], false, 0
[info]                         :           :                                      +- *(7) HashAggregate(keys=[s_state#694], functions=[sum(UnscaledValue(ss_net_profit#1185))])
[info]                         :           :                                         +- Exchange hashpartitioning(s_state#694, 4), true, [id=#104377]
[info]                         :           :                                            +- *(6) HashAggregate(keys=[s_state#694], functions=[partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]                         :           :                                               +- *(6) Project [ss_net_profit#1185, s_state#694]
[info]                         :           :                                                  +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                         :           :                                                     :- *(6) Project [ss_net_profit#1185, ss_sold_date_sk#1186, s_state#694]
[info]                         :           :                                                     :  +- *(6) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                         :           :                                                     :     :- *(6) Project [ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                         :           :                                                     :     :  +- *(6) Filter (isnotnull(ss_store_sk#1170) AND isnotnull(ss_sold_date_sk#1186))
[info]                         :           :                                                     :     :     +- *(6) ColumnarToRow
[info]                         :           :                                                     :     :        +- BatchScan[ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_net_profit:decimal(7,2)>
[info]                         :           :                                                     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104138]
[info]                         :           :                                                     :        +- *(4) Project [s_store_sk#670, s_state#694]
[info]                         :           :                                                     :           +- *(4) Filter isnotnull(s_store_sk#670)
[info]                         :           :                                                     :              +- *(4) ColumnarToRow
[info]                         :           :                                                     :                 +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]                         :           :                                                     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104116]
[info]                         :           +- *(23) HashAggregate(keys=[s_state#694], functions=[sum(total_sum#34393)])
[info]                         :              +- Exchange hashpartitioning(s_state#694, 4), true, [id=#104638]
[info]                         :                 +- *(22) HashAggregate(keys=[s_state#694], functions=[partial_sum(total_sum#34393)])
[info]                         :                    +- *(22) HashAggregate(keys=[s_state#694, s_county#693], functions=[sum(UnscaledValue(ss_net_profit#1185))])
[info]                         :                       +- ReusedExchange [s_state#694, s_county#693, sum#34542L], Exchange hashpartitioning(s_state#694, s_county#693, 4), true, [id=#104463]
[info]                         +- *(37) HashAggregate(keys=[], functions=[sum(total_sum#34393)])
[info]                            +- Exchange SinglePartition, true, [id=#104800]
[info]                               +- *(36) HashAggregate(keys=[], functions=[partial_sum(total_sum#34393)])
[info]                                  +- *(36) HashAggregate(keys=[s_state#694, s_county#693], functions=[sum(UnscaledValue(ss_net_profit#1185))])
[info]                                     +- ReusedExchange [s_state#694, s_county#693, sum#34548L], Exchange hashpartitioning(s_state#694, s_county#693, 4), true, [id=#104463]
[info] 
[info] 
[info]   Stopped after 1 iterations, 572 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q70a-v2.7                                           572            572           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q72-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[total_cnt#34665L DESC NULLS LAST,i_item_desc#500 ASC NULLS FIRST,w_warehouse_name#1623 ASC NULLS FIRST,d_week_seq#335 ASC NULLS FIRST], output=[i_item_desc#500,w_warehouse_name#1623,d_week_seq#335,no_promo#34663L,promo#34664L,total_cnt#34665L])
[info] +- *(18) HashAggregate(keys=[i_item_desc#500, w_warehouse_name#1623, d_week_seq#335], functions=[count(1)])
[info]    +- Exchange hashpartitioning(i_item_desc#500, w_warehouse_name#1623, d_week_seq#335, 4), true, [id=#105281]
[info]       +- *(17) HashAggregate(keys=[i_item_desc#500, w_warehouse_name#1623, d_week_seq#335], functions=[partial_count(1)])
[info]          +- *(17) Project [w_warehouse_name#1623, i_item_desc#500, d_week_seq#335]
[info]             +- SortMergeJoin [cs_item_sk#892, cs_order_number#894L], [cr_item_sk#42, cr_order_number#56L], LeftOuter
[info]                :- *(14) Sort [cs_item_sk#892 ASC NULLS FIRST, cs_order_number#894L ASC NULLS FIRST], false, 0
[info]                :  +- Exchange hashpartitioning(cs_item_sk#892, cs_order_number#894L, 4), true, [id=#105263]
[info]                :     +- *(13) Project [cs_item_sk#892, cs_order_number#894L, w_warehouse_name#1623, i_item_desc#500, d_week_seq#335]
[info]                :        +- *(13) BroadcastHashJoin [cs_promo_sk#893], [p_promo_sk#589], LeftOuter, BuildRight
[info]                :           :- *(13) Project [cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, w_warehouse_name#1623, i_item_desc#500, d_week_seq#335]
[info]                :           :  +- *(13) BroadcastHashJoin [cs_ship_date_sk#879], [d_date_sk#34695], Inner, BuildRight, (d_date#34697 > cast(cast(d_date#333 as timestamp) + CalendarInterval(months= 0, days = 5, microsecond = 0) as date))
[info]                :           :     :- *(13) Project [cs_ship_date_sk#879, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, w_warehouse_name#1623, i_item_desc#500, d_date#333, d_week_seq#335]
[info]                :           :     :  +- *(13) BroadcastHashJoin [d_week_seq#335, inv_date_sk#476], [d_week_seq#34670, d_date_sk#34666], Inner, BuildRight
[info]                :           :     :     :- *(13) Project [cs_ship_date_sk#879, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500, d_date#333, d_week_seq#335]
[info]                :           :     :     :  +- *(13) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :           :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500]
[info]                :           :     :     :     :  +- *(13) BroadcastHashJoin [cs_bill_hdemo_sk#882], [hd_demo_sk#448], Inner, BuildRight
[info]                :           :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500]
[info]                :           :     :     :     :     :  +- *(13) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]                :           :     :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500]
[info]                :           :     :     :     :     :     :  +- *(13) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                :           :     :     :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623]
[info]                :           :     :     :     :     :     :     :  +- *(13) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#1621], Inner, BuildRight
[info]                :           :     :     :     :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_warehouse_sk#474, inv_date_sk#476]
[info]                :           :     :     :     :     :     :     :     :  +- *(13) SortMergeJoin [cs_item_sk#892], [inv_item_sk#473], Inner, (inv_quantity_on_hand#475 < cs_quantity#895)
[info]                :           :     :     :     :     :     :     :     :     :- *(2) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                :           :     :     :     :     :     :     :     :     :  +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#105173]
[info]                :           :     :     :     :     :     :     :     :     :     +- *(1) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_sold_date_sk#911]
[info]                :           :     :     :     :     :     :     :     :     :        +- *(1) Filter (((((isnotnull(cs_quantity#895) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_bill_cdemo_sk#881)) AND isnotnull(cs_bill_hdemo_sk#882)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_ship_date_sk#879))
[info]                :           :     :     :     :     :     :     :     :     :           +- *(1) ColumnarToRow
[info]                :           :     :     :     :     :     :     :     :     :              +- BatchScan[cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ship_date_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_item_sk:int,cs_promo_sk:i...
[info]                :           :     :     :     :     :     :     :     :     +- *(4) Sort [inv_item_sk#473 ASC NULLS FIRST], false, 0
[info]                :           :     :     :     :     :     :     :     :        +- Exchange hashpartitioning(inv_item_sk#473, 4), true, [id=#105183]
[info]                :           :     :     :     :     :     :     :     :           +- *(3) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]                :           :     :     :     :     :     :     :     :              +- *(3) Filter (((isnotnull(inv_quantity_on_hand#475) AND isnotnull(inv_item_sk#473)) AND isnotnull(inv_warehouse_sk#474)) AND isnotnull(inv_date_sk#476))
[info]                :           :     :     :     :     :     :     :     :                 +- *(3) ColumnarToRow
[info]                :           :     :     :     :     :     :     :     :                    +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]                :           :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105195]
[info]                :           :     :     :     :     :     :     :        +- *(5) Project [w_warehouse_sk#1621, w_warehouse_name#1623]
[info]                :           :     :     :     :     :     :     :           +- *(5) Filter isnotnull(w_warehouse_sk#1621)
[info]                :           :     :     :     :     :     :     :              +- *(5) ColumnarToRow
[info]                :           :     :     :     :     :     :     :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
[info]                :           :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105204]
[info]                :           :     :     :     :     :     :        +- *(6) Project [i_item_sk#496, i_item_desc#500]
[info]                :           :     :     :     :     :     :           +- *(6) Filter isnotnull(i_item_sk#496)
[info]                :           :     :     :     :     :     :              +- *(6) ColumnarToRow
[info]                :           :     :     :     :     :     :                 +- BatchScan[i_item_sk#496, i_item_desc#500] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
[info]                :           :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105213]
[info]                :           :     :     :     :     :        +- *(7) Project [cd_demo_sk#290]
[info]                :           :     :     :     :     :           +- *(7) Filter ((isnotnull(cd_marital_status#292) AND (cd_marital_status#292 = M)) AND isnotnull(cd_demo_sk#290))
[info]                :           :     :     :     :     :              +- *(7) ColumnarToRow
[info]                :           :     :     :     :     :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>
[info]                :           :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105222]
[info]                :           :     :     :     :        +- *(8) Project [hd_demo_sk#448]
[info]                :           :     :     :     :           +- *(8) Filter ((isnotnull(hd_buy_potential#450) AND (hd_buy_potential#450 = 1001-5000)) AND isnotnull(hd_demo_sk#448))
[info]                :           :     :     :     :              +- *(8) ColumnarToRow
[info]                :           :     :     :     :                 +- BatchScan[hd_demo_sk#448, hd_buy_potential#450] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>
[info]                :           :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105231]
[info]                :           :     :     :        +- *(9) Project [d_date_sk#331, d_date#333, d_week_seq#335]
[info]                :           :     :     :           +- *(9) Filter (((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331)) AND isnotnull(d_week_seq#335))
[info]                :           :     :     :              +- *(9) ColumnarToRow
[info]                :           :     :     :                 +- BatchScan[d_date_sk#331, d_date#333, d_week_seq#335, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_week_seq:int,d_year:int>
[info]                :           :     :     +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, true] as bigint), 32) | (cast(input[0, int, true] as bigint) & 4294967295)))), [id=#105240]
[info]                :           :     :        +- *(10) Project [d_date_sk#34666, d_week_seq#34670]
[info]                :           :     :           +- *(10) Filter (isnotnull(d_week_seq#34670) AND isnotnull(d_date_sk#34666))
[info]                :           :     :              +- *(10) ColumnarToRow
[info]                :           :     :                 +- BatchScan[d_date_sk#34666, d_week_seq#34670] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
[info]                :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105249]
[info]                :           :        +- *(11) Project [d_date_sk#34695, d_date#34697]
[info]                :           :           +- *(11) Filter (isnotnull(d_date#34697) AND isnotnull(d_date_sk#34695))
[info]                :           :              +- *(11) ColumnarToRow
[info]                :           :                 +- BatchScan[d_date_sk#34695, d_date#34697] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105258]
[info]                :              +- *(12) Project [p_promo_sk#589]
[info]                :                 +- *(12) Filter isnotnull(p_promo_sk#589)
[info]                :                    +- *(12) ColumnarToRow
[info]                :                       +- BatchScan[p_promo_sk#589] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int>
[info]                +- *(16) Sort [cr_item_sk#42 ASC NULLS FIRST, cr_order_number#56L ASC NULLS FIRST], false, 0
[info]                   +- Exchange hashpartitioning(cr_item_sk#42, cr_order_number#56L, 4), true, [id=#105272]
[info]                      +- *(15) Project [cr_item_sk#42, cr_order_number#56L]
[info]                         +- *(15) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]                            +- *(15) ColumnarToRow
[info]                               +- BatchScan[cr_item_sk#42, cr_order_number#56L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint>
[info] 
[info] 
[info]   Stopped after 1 iterations, 348 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q72-v2.7                                            349            349           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q74-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[customer_first_name#34829 ASC NULLS FIRST,customer_id#34828 ASC NULLS FIRST,customer_last_name#34830 ASC NULLS FIRST], output=[customer_id#34828,customer_first_name#34829,customer_last_name#34830])
[info] +- *(23) Project [customer_id#34828, customer_first_name#34829, customer_last_name#34830]
[info]    +- *(23) SortMergeJoin [customer_id#34808], [customer_id#34840], Inner, (CASE WHEN (year_total#34838 > 0.00) THEN CheckOverflow((promote_precision(year_total#34844) / promote_precision(year_total#34838)), DecimalType(37,20), true) ELSE null END > CASE WHEN (year_total#34812 > 0.00) THEN CheckOverflow((promote_precision(year_total#34832) / promote_precision(year_total#34812)), DecimalType(37,20), true) ELSE null END)
[info]       :- *(17) Project [customer_id#34808, year_total#34812, customer_id#34828, customer_first_name#34829, customer_last_name#34830, year_total#34832, year_total#34838]
[info]       :  +- *(17) SortMergeJoin [customer_id#34808], [customer_id#34834], Inner
[info]       :     :- *(11) SortMergeJoin [customer_id#34808], [customer_id#34828], Inner
[info]       :     :  :- *(5) Sort [customer_id#34808 ASC NULLS FIRST], false, 0
[info]       :     :  :  +- Exchange hashpartitioning(customer_id#34808, 4), true, [id=#105728]
[info]       :     :  :     +- Union
[info]       :     :  :        :- *(4) Filter (isnotnull(year_total#34812) AND (year_total#34812 > 0.00))
[info]       :     :  :        :  +- *(4) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :  :        :     +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#105722]
[info]       :     :  :        :        +- *(3) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :  :        :           +- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, d_year#337]
[info]       :     :  :        :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :  :        :                 :- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :  :        :                 :  +- *(3) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :  :        :                 :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105703]
[info]       :     :  :        :                 :     :  +- *(1) Project [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165]
[info]       :     :  :        :                 :     :     +- *(1) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_customer_id#157))
[info]       :     :  :        :                 :     :        +- *(1) ColumnarToRow
[info]       :     :  :        :                 :     :           +- BatchScan[c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string>
[info]       :     :  :        :                 :     +- *(3) Project [ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :  :        :                 :        +- *(3) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :  :        :                 :           +- *(3) ColumnarToRow
[info]       :     :  :        :                 :              +- BatchScan[ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_net_paid:decimal(7,2)>
[info]       :     :  :        :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105716]
[info]       :     :  :        :                    +- *(2) Project [d_date_sk#331, d_year#337]
[info]       :     :  :        :                       +- *(2) Filter (((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND d_year#337 IN (2001,2002)) AND isnotnull(d_date_sk#331))
[info]       :     :  :        :                          +- *(2) ColumnarToRow
[info]       :     :  :        :                             +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :  :        +- LocalTableScan <empty>, [customer_id#34814, year_total#34818]
[info]       :     :  +- *(10) Sort [customer_id#34828 ASC NULLS FIRST], false, 0
[info]       :     :     +- Exchange hashpartitioning(customer_id#34828, 4), true, [id=#105934]
[info]       :     :        +- Union
[info]       :     :           :- *(9) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :           :  +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#105887]
[info]       :     :           :     +- *(8) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :           :        +- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, d_year#337]
[info]       :     :           :           +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :           :              :- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :           :              :  +- *(8) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :           :              :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105703]
[info]       :     :           :              :     +- *(8) Project [ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :           :              :        +- *(8) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :           :              :           +- *(8) ColumnarToRow
[info]       :     :           :              :              +- BatchScan[ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_net_paid:decimal(7,2)>
[info]       :     :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105751]
[info]       :     :           :                 +- *(7) Project [d_date_sk#331, d_year#337]
[info]       :     :           :                    +- *(7) Filter (((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND d_year#337 IN (2001,2002)) AND isnotnull(d_date_sk#331))
[info]       :     :           :                       +- *(7) ColumnarToRow
[info]       :     :           :                          +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :           +- LocalTableScan <empty>, [customer_id#34814, customer_first_name#34815, customer_last_name#34816, year_total#34818]
[info]       :     +- *(16) Sort [customer_id#34834 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(customer_id#34834, 4), true, [id=#105995]
[info]       :           +- Union
[info]       :              :- LocalTableScan <empty>, [customer_id#34834, year_total#34838]
[info]       :              +- *(15) Filter (isnotnull(year_total#34818) AND (year_total#34818 > 0.00))
[info]       :                 +- *(15) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]       :                    +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#105968]
[info]       :                       +- *(14) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ws_net_paid#1049))])
[info]       :                          +- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, d_year#337]
[info]       :                             +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                                :- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]       :                                :  +- *(14) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]       :                                :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105703]
[info]       :                                :     +- *(14) Project [ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]       :                                :        +- *(14) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]       :                                :           +- *(14) ColumnarToRow
[info]       :                                :              +- BatchScan[ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_net_paid:decimal(7,2)>
[info]       :                                +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105716]
[info]       +- *(22) Sort [customer_id#34840 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(customer_id#34840, 4), true, [id=#106076]
[info]             +- Union
[info]                :- LocalTableScan <empty>, [customer_id#34840, year_total#34844]
[info]                +- *(21) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]                   +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#106050]
[info]                      +- *(20) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ws_net_paid#1049))])
[info]                         +- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, d_year#337]
[info]                            +- *(20) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]                               :  +- *(20) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]                               :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105703]
[info]                               :     +- *(20) Project [ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]                               :        +- *(20) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]                               :           +- *(20) ColumnarToRow
[info]                               :              +- BatchScan[ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_net_paid:decimal(7,2)>
[info]                               +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105751]
[info] 
[info] 
[info]   Stopped after 1 iterations, 572 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q74-v2.7                                            572            572           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q75-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[sales_cnt_diff#35370L ASC NULLS FIRST,sales_amt_diff#35371 ASC NULLS FIRST], output=[prev_year#35366,year#35367,i_brand_id#503,i_class_id#505,i_category_id#507,i_manufact_id#509,prev_yr_cnt#35368L,curr_yr_cnt#35369L,sales_cnt_diff#35370L,sales_amt_diff#35371])
[info] +- *(51) Project [d_year#35720 AS prev_year#35366, d_year#337 AS year#35367, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#35412L AS prev_yr_cnt#35368L, sales_cnt#35378L AS curr_yr_cnt#35369L, (sales_cnt#35378L - sales_cnt#35412L) AS sales_cnt_diff#35370L, CheckOverflow((promote_precision(cast(sales_amt#35379 as decimal(19,2))) - promote_precision(cast(sales_amt#35413 as decimal(19,2)))), DecimalType(19,2), true) AS sales_amt_diff#35371]
[info]    +- *(51) SortMergeJoin [i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], [i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577], Inner, (CheckOverflow((promote_precision(cast(sales_cnt#35378L as decimal(17,2))) / promote_precision(cast(sales_cnt#35412L as decimal(17,2)))), DecimalType(37,20), true) < 0.90000000000000000000)
[info]       :- *(25) Sort [i_brand_id#503 ASC NULLS FIRST, i_class_id#505 ASC NULLS FIRST, i_category_id#507 ASC NULLS FIRST, i_manufact_id#509 ASC NULLS FIRST], false, 0
[info]       :  +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, 4), true, [id=#107132]
[info]       :     +- *(24) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], functions=[sum(cast(sales_cnt#35372 as bigint)), sum(UnscaledValue(sales_amt#35373))])
[info]       :        +- Exchange hashpartitioning(d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, 4), true, [id=#107128]
[info]       :           +- *(23) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], functions=[partial_sum(cast(sales_cnt#35372 as bigint)), partial_sum(UnscaledValue(sales_amt#35373))])
[info]       :              +- *(23) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#35372, sales_amt#35373], functions=[])
[info]       :                 +- Exchange hashpartitioning(d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#35372, sales_amt#35373, 4), true, [id=#107123]
[info]       :                    +- *(22) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#35372, sales_amt#35373], functions=[])
[info]       :                       +- Union
[info]       :                          :- *(7) Project [d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, (cs_quantity#895 - coalesce(cr_return_quantity#57, 0)) AS sales_cnt#35372, CheckOverflow((promote_precision(cast(cs_ext_sales_price#900 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#58, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#35373]
[info]       :                          :  +- SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], LeftOuter
[info]       :                          :     :- *(4) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]       :                          :     :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#106780]
[info]       :                          :     :     +- *(3) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, d_year#337]
[info]       :                          :     :        +- *(3) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :                          :     :           :- *(3) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                          :     :           :  +- *(3) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]       :                          :     :           :     :- *(3) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]       :                          :     :           :     :  +- *(3) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]       :                          :     :           :     :     +- *(3) ColumnarToRow
[info]       :                          :     :           :     :        +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>
[info]       :                          :     :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106766]
[info]       :                          :     :           :        +- *(1) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                          :     :           :           +- *(1) Filter ((((((isnotnull(i_category#508) AND (i_category#508 = Books)) AND isnotnull(i_item_sk#496)) AND isnotnull(i_category_id#507)) AND isnotnull(i_manufact_id#509)) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505))
[info]       :                          :     :           :              +- *(1) ColumnarToRow
[info]       :                          :     :           :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_category#508, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
[info]       :                          :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106775]
[info]       :                          :     :              +- *(2) Project [d_date_sk#331, d_year#337]
[info]       :                          :     :                 +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND isnotnull(d_date_sk#331))
[info]       :                          :     :                    +- *(2) ColumnarToRow
[info]       :                          :     :                       +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :                          :     +- *(6) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]       :                          :        +- Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#106789]
[info]       :                          :           +- *(5) Project [cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58]
[info]       :                          :              +- *(5) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]       :                          :                 +- *(5) ColumnarToRow
[info]       :                          :                    +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
[info]       :                          :- *(14) Project [d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, (ss_quantity#1173 - coalesce(sr_return_quantity#800, 0)) AS sales_cnt#35385, CheckOverflow((promote_precision(cast(ss_ext_sales_price#1178 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#801, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#35386]
[info]       :                          :  +- SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], LeftOuter
[info]       :                          :     :- *(11) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]       :                          :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#107078]
[info]       :                          :     :     +- *(10) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, d_year#337]
[info]       :                          :     :        +- *(10) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :                          :     :           :- *(10) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                          :     :           :  +- *(10) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]       :                          :     :           :     :- *(10) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]       :                          :     :           :     :  +- *(10) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]       :                          :     :           :     :     +- *(10) ColumnarToRow
[info]       :                          :     :           :     :        +- BatchScan[ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>
[info]       :                          :     :           :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106766]
[info]       :                          :     :           +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106775]
[info]       :                          :     +- *(13) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]       :                          :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#106829]
[info]       :                          :           +- *(12) Project [sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801]
[info]       :                          :              +- *(12) Filter (isnotnull(sr_item_sk#792) AND isnotnull(sr_ticket_number#799L))
[info]       :                          :                 +- *(12) ColumnarToRow
[info]       :                          :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
[info]       :                          +- *(21) Project [d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, (ws_quantity#1038 - coalesce(wr_return_quantity#1276, 0)) AS sales_cnt#35392, CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#1277, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#35393]
[info]       :                             +- SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], LeftOuter
[info]       :                                :- *(18) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]       :                                :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#107111]
[info]       :                                :     +- *(17) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, d_year#337]
[info]       :                                :        +- *(17) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                                :           :- *(17) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                                :           :  +- *(17) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]       :                                :           :     :- *(17) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]       :                                :           :     :  +- *(17) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]       :                                :           :     :     +- *(17) ColumnarToRow
[info]       :                                :           :     :        +- BatchScan[ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>
[info]       :                                :           :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106766]
[info]       :                                :           +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106775]
[info]       :                                +- *(20) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]       :                                   +- Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#106869]
[info]       :                                      +- *(19) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277]
[info]       :                                         +- *(19) Filter (isnotnull(wr_item_sk#1264) AND isnotnull(wr_order_number#1275L))
[info]       :                                            +- *(19) ColumnarToRow
[info]       :                                               +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
[info]       +- *(50) Sort [i_brand_id#35571 ASC NULLS FIRST, i_class_id#35573 ASC NULLS FIRST, i_category_id#35575 ASC NULLS FIRST, i_manufact_id#35577 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577, 4), true, [id=#107541]
[info]             +- *(49) HashAggregate(keys=[d_year#35720, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577], functions=[sum(cast(sales_cnt#35372 as bigint)), sum(UnscaledValue(sales_amt#35373))])
[info]                +- Exchange hashpartitioning(d_year#35720, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577, 4), true, [id=#107521]
[info]                   +- *(48) HashAggregate(keys=[d_year#35720, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577], functions=[partial_sum(cast(sales_cnt#35372 as bigint)), partial_sum(UnscaledValue(sales_amt#35373))])
[info]                      +- *(48) HashAggregate(keys=[d_year#35720, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577, sales_cnt#35372, sales_amt#35373], functions=[])
[info]                         +- Exchange hashpartitioning(d_year#35720, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577, sales_cnt#35372, sales_amt#35373, 4), true, [id=#107418]
[info]                            +- *(47) HashAggregate(keys=[d_year#35720, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577, sales_cnt#35372, sales_amt#35373], functions=[])
[info]                               +- Union
[info]                                  :- *(32) Project [d_year#35720, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577, (cs_quantity#895 - coalesce(cr_return_quantity#57, 0)) AS sales_cnt#35372, CheckOverflow((promote_precision(cast(cs_ext_sales_price#900 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#58, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#35373]
[info]                                  :  +- SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], LeftOuter
[info]                                  :     :- *(29) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                                  :     :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#107160]
[info]                                  :     :     +- *(28) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577, d_year#35720]
[info]                                  :     :        +- *(28) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#35714], Inner, BuildRight
[info]                                  :     :           :- *(28) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577]
[info]                                  :     :           :  +- *(28) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#35564], Inner, BuildRight
[info]                                  :     :           :     :- *(28) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]                                  :     :           :     :  +- *(28) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]                                  :     :           :     :     +- *(28) ColumnarToRow
[info]                                  :     :           :     :        +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>
[info]                                  :     :           :     +- ReusedExchange [i_item_sk#35564, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106766]
[info]                                  :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106913]
[info]                                  :     :              +- *(27) Project [d_date_sk#35714, d_year#35720]
[info]                                  :     :                 +- *(27) Filter ((isnotnull(d_year#35720) AND (d_year#35720 = 2001)) AND isnotnull(d_date_sk#35714))
[info]                                  :     :                    +- *(27) ColumnarToRow
[info]                                  :     :                       +- BatchScan[d_date_sk#35714, d_year#35720] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                                  :     +- *(31) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]                                  :        +- ReusedExchange [cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58], Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#106789]
[info]                                  :- *(39) Project [d_year#35720, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577, (ss_quantity#1173 - coalesce(sr_return_quantity#800, 0)) AS sales_cnt#35399, CheckOverflow((promote_precision(cast(ss_ext_sales_price#1178 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#801, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#35400]
[info]                                  :  +- SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], LeftOuter
[info]                                  :     :- *(36) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                                  :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#107253]
[info]                                  :     :     +- *(35) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577, d_year#35720]
[info]                                  :     :        +- *(35) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#35714], Inner, BuildRight
[info]                                  :     :           :- *(35) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577]
[info]                                  :     :           :  +- *(35) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#35564], Inner, BuildRight
[info]                                  :     :           :     :- *(35) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                                  :     :           :     :  +- *(35) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                                  :     :           :     :     +- *(35) ColumnarToRow
[info]                                  :     :           :     :        +- BatchScan[ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>
[info]                                  :     :           :     +- ReusedExchange [i_item_sk#35564, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106766]
[info]                                  :     :           +- ReusedExchange [d_date_sk#35714, d_year#35720], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106913]
[info]                                  :     +- *(38) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                                  :        +- ReusedExchange [sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801], Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#106829]
[info]                                  +- *(46) Project [d_year#35720, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577, (ws_quantity#1038 - coalesce(wr_return_quantity#1276, 0)) AS sales_cnt#35406, CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#1277, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#35407]
[info]                                     +- SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], LeftOuter
[info]                                        :- *(43) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]                                        :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#107346]
[info]                                        :     +- *(42) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577, d_year#35720]
[info]                                        :        +- *(42) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#35714], Inner, BuildRight
[info]                                        :           :- *(42) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577]
[info]                                        :           :  +- *(42) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#35564], Inner, BuildRight
[info]                                        :           :     :- *(42) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                                        :           :     :  +- *(42) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                                        :           :     :     +- *(42) ColumnarToRow
[info]                                        :           :     :        +- BatchScan[ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>
[info]                                        :           :     +- ReusedExchange [i_item_sk#35564, i_brand_id#35571, i_class_id#35573, i_category_id#35575, i_manufact_id#35577], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106766]
[info]                                        :           +- ReusedExchange [d_date_sk#35714, d_year#35720], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106913]
[info]                                        +- *(45) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]                                           +- ReusedExchange [wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277], Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#106869]
[info] 
[info] 
[info]   Stopped after 1 iterations, 817 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q75-v2.7                                            817            817           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q77a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#36196 ASC NULLS FIRST,id#36197 ASC NULLS FIRST], output=[channel#36196,id#36197,sales#36396,returns#36397,profit#36398])
[info] +- *(87) HashAggregate(keys=[channel#36196, id#36197, sales#36396, returns#36397, profit#36398], functions=[])
[info]    +- Exchange hashpartitioning(channel#36196, id#36197, sales#36396, returns#36397, profit#36398, 4), true, [id=#110691]
[info]       +- *(86) HashAggregate(keys=[channel#36196, id#36197, sales#36396, returns#36397, profit#36398], functions=[])
[info]          +- Union
[info]             :- *(57) HashAggregate(keys=[channel#36196, id#36197, sales#36396, returns#36397, profit#36398], functions=[])
[info]             :  +- Exchange hashpartitioning(channel#36196, id#36197, sales#36396, returns#36397, profit#36398, 4), true, [id=#110317]
[info]             :     +- *(56) HashAggregate(keys=[channel#36196, id#36197, sales#36396, returns#36397, profit#36398], functions=[])
[info]             :        +- Union
[info]             :           :- *(27) HashAggregate(keys=[channel#36196, id#36197], functions=[sum(sales#36184), sum(returns#36198), sum(profit#36375)])
[info]             :           :  +- Exchange hashpartitioning(channel#36196, id#36197, 4), true, [id=#109855]
[info]             :           :     +- *(26) HashAggregate(keys=[channel#36196, id#36197], functions=[partial_sum(sales#36184), partial_sum(returns#36198), partial_sum(profit#36375)])
[info]             :           :        +- Union
[info]             :           :           :- *(9) Project [store channel AS channel#36196, s_store_sk#670 AS id#36197, sales#36184, coalesce(returns#36186, 0.00) AS returns#36198, CheckOverflow((promote_precision(cast(profit#36185 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#36187, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS profit#36375]
[info]             :           :           :  +- SortMergeJoin [s_store_sk#670], [s_store_sk#36246], LeftOuter
[info]             :           :           :     :- *(4) Sort [s_store_sk#670 ASC NULLS FIRST], false, 0
[info]             :           :           :     :  +- *(4) HashAggregate(keys=[s_store_sk#670], functions=[sum(UnscaledValue(ss_ext_sales_price#1178)), sum(UnscaledValue(ss_net_profit#1185))])
[info]             :           :           :     :     +- Exchange hashpartitioning(s_store_sk#670, 4), true, [id=#109083]
[info]             :           :           :     :        +- *(3) HashAggregate(keys=[s_store_sk#670], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178)), partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]             :           :           :     :           +- *(3) Project [ss_ext_sales_price#1178, ss_net_profit#1185, s_store_sk#670]
[info]             :           :           :     :              +- *(3) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]             :           :           :     :                 :- *(3) Project [ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185]
[info]             :           :           :     :                 :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :     :                 :     :- *(3) Project [ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]             :           :           :     :                 :     :  +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]             :           :           :     :                 :     :     +- *(3) ColumnarToRow
[info]             :           :           :     :                 :     :        +- BatchScan[ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>
[info]             :           :           :     :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#109068]
[info]             :           :           :     :                 :        +- *(1) Project [d_date_sk#331]
[info]             :           :           :     :                 :           +- *(1) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10442)) AND (d_date#333 <= 10472)) AND isnotnull(d_date_sk#331))
[info]             :           :           :     :                 :              +- *(1) ColumnarToRow
[info]             :           :           :     :                 :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]             :           :           :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#109077]
[info]             :           :           :     :                    +- *(2) Project [s_store_sk#670]
[info]             :           :           :     :                       +- *(2) Filter isnotnull(s_store_sk#670)
[info]             :           :           :     :                          +- *(2) ColumnarToRow
[info]             :           :           :     :                             +- BatchScan[s_store_sk#670] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int>
[info]             :           :           :     +- *(8) Sort [s_store_sk#36246 ASC NULLS FIRST], false, 0
[info]             :           :           :        +- *(8) HashAggregate(keys=[s_store_sk#36246], functions=[sum(UnscaledValue(sr_return_amt#801)), sum(UnscaledValue(sr_net_loss#809))])
[info]             :           :           :           +- Exchange hashpartitioning(s_store_sk#36246, 4), true, [id=#109653]
[info]             :           :           :              +- *(7) HashAggregate(keys=[s_store_sk#36246], functions=[partial_sum(UnscaledValue(sr_return_amt#801)), partial_sum(UnscaledValue(sr_net_loss#809))])
[info]             :           :           :                 +- *(7) Project [sr_return_amt#801, sr_net_loss#809, s_store_sk#36246]
[info]             :           :           :                    +- *(7) BroadcastHashJoin [sr_store_sk#797], [s_store_sk#36246], Inner, BuildRight
[info]             :           :           :                       :- *(7) Project [sr_store_sk#797, sr_return_amt#801, sr_net_loss#809]
[info]             :           :           :                       :  +- *(7) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :                       :     :- *(7) Project [sr_store_sk#797, sr_return_amt#801, sr_net_loss#809, sr_returned_date_sk#810]
[info]             :           :           :                       :     :  +- *(7) Filter (isnotnull(sr_returned_date_sk#810) AND isnotnull(sr_store_sk#797))
[info]             :           :           :                       :     :     +- *(7) ColumnarToRow
[info]             :           :           :                       :     :        +- BatchScan[sr_store_sk#797, sr_return_amt#801, sr_net_loss#809, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
[info]             :           :           :                       :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#109068]
[info]             :           :           :                       +- ReusedExchange [s_store_sk#36246], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#109077]
[info]             :           :           :- *(16) Project [catalog channel AS channel#36200, cs_call_center_sk#888 AS id#36201, sales#36188, returns#36190, CheckOverflow((promote_precision(cast(profit#36189 as decimal(18,2))) - promote_precision(cast(profit_loss#36191 as decimal(18,2)))), DecimalType(18,2), true) AS profit#36202]
[info]             :           :           :  +- BroadcastNestedLoopJoin BuildRight, Inner
[info]             :           :           :     :- *(12) HashAggregate(keys=[cs_call_center_sk#888], functions=[sum(UnscaledValue(cs_ext_sales_price#900)), sum(UnscaledValue(cs_net_profit#910))])
[info]             :           :           :     :  +- Exchange hashpartitioning(cs_call_center_sk#888, 4), true, [id=#109718]
[info]             :           :           :     :     +- *(11) HashAggregate(keys=[cs_call_center_sk#888], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900)), partial_sum(UnscaledValue(cs_net_profit#910))])
[info]             :           :           :     :        +- *(11) Project [cs_call_center_sk#888, cs_ext_sales_price#900, cs_net_profit#910]
[info]             :           :           :     :           +- *(11) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :     :              :- *(11) Project [cs_call_center_sk#888, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911]
[info]             :           :           :     :              :  +- *(11) Filter isnotnull(cs_sold_date_sk#911)
[info]             :           :           :     :              :     +- *(11) ColumnarToRow
[info]             :           :           :     :              :        +- BatchScan[cs_call_center_sk#888, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_call_center_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>
[info]             :           :           :     :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#109068]
[info]             :           :           :     +- BroadcastExchange IdentityBroadcastMode, [id=#109740]
[info]             :           :           :        +- *(15) HashAggregate(keys=[], functions=[sum(UnscaledValue(cr_return_amount#58)), sum(UnscaledValue(cr_net_loss#66))])
[info]             :           :           :           +- Exchange SinglePartition, true, [id=#109736]
[info]             :           :           :              +- *(14) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(cr_return_amount#58)), partial_sum(UnscaledValue(cr_net_loss#66))])
[info]             :           :           :                 +- *(14) Project [cr_return_amount#58, cr_net_loss#66]
[info]             :           :           :                    +- *(14) BroadcastHashJoin [cr_returned_date_sk#67], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :                       :- *(14) Project [cr_return_amount#58, cr_net_loss#66, cr_returned_date_sk#67]
[info]             :           :           :                       :  +- *(14) Filter isnotnull(cr_returned_date_sk#67)
[info]             :           :           :                       :     +- *(14) ColumnarToRow
[info]             :           :           :                       :        +- BatchScan[cr_return_amount#58, cr_net_loss#66, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
[info]             :           :           :                       +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#109068]
[info]             :           :           +- *(25) Project [web channel AS channel#36203, wp_web_page_sk#1773 AS id#36204, sales#36192, coalesce(returns#36194, 0.00) AS returns#36205, CheckOverflow((promote_precision(cast(profit#36193 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#36195, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS profit#36376]
[info]             :           :              +- SortMergeJoin [wp_web_page_sk#1773], [wp_web_page_sk#36275], LeftOuter
[info]             :           :                 :- *(20) Sort [wp_web_page_sk#1773 ASC NULLS FIRST], false, 0
[info]             :           :                 :  +- *(20) HashAggregate(keys=[wp_web_page_sk#1773], functions=[sum(UnscaledValue(ws_ext_sales_price#1043)), sum(UnscaledValue(ws_net_profit#1053))])
[info]             :           :                 :     +- Exchange hashpartitioning(wp_web_page_sk#1773, 4), true, [id=#109761]
[info]             :           :                 :        +- *(19) HashAggregate(keys=[wp_web_page_sk#1773], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043)), partial_sum(UnscaledValue(ws_net_profit#1053))])
[info]             :           :                 :           +- *(19) Project [ws_ext_sales_price#1043, ws_net_profit#1053, wp_web_page_sk#1773]
[info]             :           :                 :              +- *(19) BroadcastHashJoin [ws_web_page_sk#1032], [wp_web_page_sk#1773], Inner, BuildRight
[info]             :           :                 :                 :- *(19) Project [ws_web_page_sk#1032, ws_ext_sales_price#1043, ws_net_profit#1053]
[info]             :           :                 :                 :  +- *(19) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :           :                 :                 :     :- *(19) Project [ws_web_page_sk#1032, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054]
[info]             :           :                 :                 :     :  +- *(19) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_web_page_sk#1032))
[info]             :           :                 :                 :     :     +- *(19) ColumnarToRow
[info]             :           :                 :                 :     :        +- BatchScan[ws_web_page_sk#1032, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_web_page_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>
[info]             :           :                 :                 :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#109068]
[info]             :           :                 :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#109182]
[info]             :           :                 :                    +- *(18) Project [wp_web_page_sk#1773]
[info]             :           :                 :                       +- *(18) Filter isnotnull(wp_web_page_sk#1773)
[info]             :           :                 :                          +- *(18) ColumnarToRow
[info]             :           :                 :                             +- BatchScan[wp_web_page_sk#1773] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_page], ReadSchema: struct<wp_web_page_sk:int>
[info]             :           :                 +- *(24) Sort [wp_web_page_sk#36275 ASC NULLS FIRST], false, 0
[info]             :           :                    +- *(24) HashAggregate(keys=[wp_web_page_sk#36275], functions=[sum(UnscaledValue(wr_return_amt#1277)), sum(UnscaledValue(wr_net_loss#1285))])
[info]             :           :                       +- Exchange hashpartitioning(wp_web_page_sk#36275, 4), true, [id=#109800]
[info]             :           :                          +- *(23) HashAggregate(keys=[wp_web_page_sk#36275], functions=[partial_sum(UnscaledValue(wr_return_amt#1277)), partial_sum(UnscaledValue(wr_net_loss#1285))])
[info]             :           :                             +- *(23) Project [wr_return_amt#1277, wr_net_loss#1285, wp_web_page_sk#36275]
[info]             :           :                                +- *(23) BroadcastHashJoin [wr_web_page_sk#1273], [wp_web_page_sk#36275], Inner, BuildRight
[info]             :           :                                   :- *(23) Project [wr_web_page_sk#1273, wr_return_amt#1277, wr_net_loss#1285]
[info]             :           :                                   :  +- *(23) BroadcastHashJoin [wr_returned_date_sk#1286], [d_date_sk#331], Inner, BuildRight
[info]             :           :                                   :     :- *(23) Project [wr_web_page_sk#1273, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286]
[info]             :           :                                   :     :  +- *(23) Filter (isnotnull(wr_returned_date_sk#1286) AND isnotnull(wr_web_page_sk#1273))
[info]             :           :                                   :     :     +- *(23) ColumnarToRow
[info]             :           :                                   :     :        +- BatchScan[wr_web_page_sk#1273, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_web_page_sk:int,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
[info]             :           :                                   :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#109068]
[info]             :           :                                   +- ReusedExchange [wp_web_page_sk#36275], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#109182]
[info]             :           +- *(55) HashAggregate(keys=[channel#36196], functions=[sum(sales#36207), sum(returns#36208), sum(profit#36209)])
[info]             :              +- Exchange hashpartitioning(channel#36196, 4), true, [id=#110309]
[info]             :                 +- *(54) HashAggregate(keys=[channel#36196], functions=[partial_sum(sales#36207), partial_sum(returns#36208), partial_sum(profit#36209)])
[info]             :                    +- *(54) HashAggregate(keys=[channel#36196, id#36197], functions=[sum(sales#36184), sum(returns#36198), sum(profit#36377)])
[info]             :                       +- ReusedExchange [channel#36196, id#36197, sum#36568, sum#36569, sum#36570], Exchange hashpartitioning(channel#36196, id#36197, 4), true, [id=#109855]
[info]             +- *(85) HashAggregate(keys=[], functions=[sum(sales#36207), sum(returns#36208), sum(profit#36209)])
[info]                +- Exchange SinglePartition, true, [id=#110683]
[info]                   +- *(84) HashAggregate(keys=[], functions=[partial_sum(sales#36207), partial_sum(returns#36208), partial_sum(profit#36209)])
[info]                      +- *(84) HashAggregate(keys=[channel#36196, id#36197], functions=[sum(sales#36184), sum(returns#36198), sum(profit#36379)])
[info]                         +- ReusedExchange [channel#36196, id#36197, sum#36604, sum#36605, sum#36606], Exchange hashpartitioning(channel#36196, id#36197, 4), true, [id=#109855]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1570 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q77a-v2.7                                          1570           1570           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q78-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ss_sold_year#36784 ASC NULLS FIRST,ss_item_sk#1165 ASC NULLS FIRST,ss_customer_sk#1166 ASC NULLS FIRST,ss_qty#36785L DESC NULLS LAST,ss_wc#36786 DESC NULLS LAST,ss_sp#36787 DESC NULLS LAST,other_chan_qty#36771L ASC NULLS FIRST,other_chan_wholesale_cost#36772 ASC NULLS FIRST,other_chan_sales_price#36773 ASC NULLS FIRST,ratio#36767 ASC NULLS FIRST], output=[ratio#36767,store_qty#36768L,store_wholesale_cost#36769,store_sales_price#36770,other_chan_qty#36771L,other_chan_wholesale_cost#36772,other_chan_sales_price#36773])
[info] +- *(26) Project [round((cast(ss_qty#36785L as double) / cast(coalesce((ws_qty#36776L + cs_qty#36781L), 1) as double)), 2) AS ratio#36767, ss_qty#36785L AS store_qty#36768L, ss_wc#36786 AS store_wholesale_cost#36769, ss_sp#36787 AS store_sales_price#36770, (coalesce(ws_qty#36776L, 0) + coalesce(cs_qty#36781L, 0)) AS other_chan_qty#36771L, CheckOverflow((promote_precision(cast(coalesce(ws_wc#36777, 0.00) as decimal(18,2))) + promote_precision(cast(coalesce(cs_wc#36782, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS other_chan_wholesale_cost#36772, CheckOverflow((promote_precision(cast(coalesce(ws_sp#36778, 0.00) as decimal(18,2))) + promote_precision(cast(coalesce(cs_sp#36783, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS other_chan_sales_price#36773, ss_sold_year#36784, ss_wc#36786, ss_item_sk#1165, ss_customer_sk#1166, ss_qty#36785L, ss_sp#36787]
[info]    +- *(26) SortMergeJoin [ss_sold_year#36784, ss_item_sk#1165, ss_customer_sk#1166], [cs_sold_year#36779, cs_item_sk#892, cs_customer_sk#36780], Inner
[info]       :- *(17) Project [ss_sold_year#36784, ss_item_sk#1165, ss_customer_sk#1166, ss_qty#36785L, ss_wc#36786, ss_sp#36787, ws_qty#36776L, ws_wc#36777, ws_sp#36778]
[info]       :  +- *(17) SortMergeJoin [ss_sold_year#36784, ss_item_sk#1165, ss_customer_sk#1166], [ws_sold_year#36774, ws_item_sk#1023, ws_customer_sk#36775], Inner
[info]       :     :- *(8) Sort [ss_sold_year#36784 ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST, ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(ss_sold_year#36784, ss_item_sk#1165, ss_customer_sk#1166, 4), true, [id=#111056]
[info]       :     :     +- *(7) HashAggregate(keys=[d_year#337, ss_item_sk#1165, ss_customer_sk#1166], functions=[sum(cast(ss_quantity#1173 as bigint)), sum(UnscaledValue(ss_wholesale_cost#1174)), sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :        +- Exchange hashpartitioning(d_year#337, ss_item_sk#1165, ss_customer_sk#1166, 4), true, [id=#111052]
[info]       :     :           +- *(6) HashAggregate(keys=[d_year#337, ss_item_sk#1165, ss_customer_sk#1166], functions=[partial_sum(cast(ss_quantity#1173 as bigint)), partial_sum(UnscaledValue(ss_wholesale_cost#1174)), partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :              +- *(6) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, d_year#337]
[info]       :     :                 +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :                    :- *(6) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                    :  +- *(6) Filter isnull(sr_ticket_number#799L)
[info]       :     :                    :     +- SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], LeftOuter
[info]       :     :                    :        :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]       :     :                    :        :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#111024]
[info]       :     :                    :        :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                    :        :        +- *(1) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_item_sk#1165))
[info]       :     :                    :        :           +- *(1) ColumnarToRow
[info]       :     :                    :        :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_wholesale_cos...
[info]       :     :                    :        +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]       :     :                    :           +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#111033]
[info]       :     :                    :              +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]       :     :                    :                 +- *(3) Filter (isnotnull(sr_ticket_number#799L) AND isnotnull(sr_item_sk#792))
[info]       :     :                    :                    +- *(3) ColumnarToRow
[info]       :     :                    :                       +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]       :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#111046]
[info]       :     :                       +- *(5) Project [d_date_sk#331, d_year#337]
[info]       :     :                          +- *(5) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]       :     :                             +- *(5) ColumnarToRow
[info]       :     :                                +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     +- *(16) Sort [ws_sold_year#36774 ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST, ws_customer_sk#36775 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(ws_sold_year#36774, ws_item_sk#1023, ws_customer_sk#36775, 4), true, [id=#111182]
[info]       :           +- *(15) Filter (coalesce(ws_qty#36776L, 0) > 0)
[info]       :              +- *(15) HashAggregate(keys=[d_year#337, ws_item_sk#1023, ws_bill_customer_sk#1024], functions=[sum(cast(ws_quantity#1038 as bigint)), sum(UnscaledValue(ws_wholesale_cost#1039)), sum(UnscaledValue(ws_sales_price#1041))])
[info]       :                 +- Exchange hashpartitioning(d_year#337, ws_item_sk#1023, ws_bill_customer_sk#1024, 4), true, [id=#111177]
[info]       :                    +- *(14) HashAggregate(keys=[d_year#337, ws_item_sk#1023, ws_bill_customer_sk#1024], functions=[partial_sum(cast(ws_quantity#1038 as bigint)), partial_sum(UnscaledValue(ws_wholesale_cost#1039)), partial_sum(UnscaledValue(ws_sales_price#1041))])
[info]       :                       +- *(14) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, d_year#337]
[info]       :                          +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                             :- *(14) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, ws_sold_date_sk#1054]
[info]       :                             :  +- *(14) Filter isnull(wr_order_number#1275L)
[info]       :                             :     +- SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], LeftOuter
[info]       :                             :        :- *(10) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]       :                             :        :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#111066]
[info]       :                             :        :     +- *(9) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, ws_sold_date_sk#1054]
[info]       :                             :        :        +- *(9) Filter ((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_customer_sk#1024)) AND isnotnull(ws_item_sk#1023))
[info]       :                             :        :           +- *(9) ColumnarToRow
[info]       :                             :        :              +- BatchScan[ws_item_sk#1023, ws_bill_customer_sk#1024, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_order_number:bigint,ws_quantity:int,ws_wholesale...
[info]       :                             :        +- *(12) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]       :                             :           +- Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#111075]
[info]       :                             :              +- *(11) Project [wr_item_sk#1264, wr_order_number#1275L]
[info]       :                             :                 +- *(11) Filter (isnotnull(wr_order_number#1275L) AND isnotnull(wr_item_sk#1264))
[info]       :                             :                    +- *(11) ColumnarToRow
[info]       :                             :                       +- BatchScan[wr_item_sk#1264, wr_order_number#1275L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint>
[info]       :                             +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#111046]
[info]       +- *(25) Sort [cs_sold_year#36779 ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST, cs_customer_sk#36780 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(cs_sold_year#36779, cs_item_sk#892, cs_customer_sk#36780, 4), true, [id=#111210]
[info]             +- *(24) Filter (coalesce(cs_qty#36781L, 0) > 0)
[info]                +- *(24) HashAggregate(keys=[d_year#337, cs_item_sk#892, cs_bill_customer_sk#880], functions=[sum(cast(cs_quantity#895 as bigint)), sum(UnscaledValue(cs_wholesale_cost#896)), sum(UnscaledValue(cs_sales_price#898))])
[info]                   +- Exchange hashpartitioning(d_year#337, cs_item_sk#892, cs_bill_customer_sk#880, 4), true, [id=#111205]
[info]                      +- *(23) HashAggregate(keys=[d_year#337, cs_item_sk#892, cs_bill_customer_sk#880], functions=[partial_sum(cast(cs_quantity#895 as bigint)), partial_sum(UnscaledValue(cs_wholesale_cost#896)), partial_sum(UnscaledValue(cs_sales_price#898))])
[info]                         +- *(23) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, d_year#337]
[info]                            +- *(23) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(23) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, cs_sold_date_sk#911]
[info]                               :  +- *(23) Filter isnull(cr_order_number#56L)
[info]                               :     +- SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], LeftOuter
[info]                               :        :- *(19) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                               :        :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#111113]
[info]                               :        :     +- *(18) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, cs_sold_date_sk#911]
[info]                               :        :        +- *(18) Filter ((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_bill_customer_sk#880))
[info]                               :        :           +- *(18) ColumnarToRow
[info]                               :        :              +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_wholesale...
[info]                               :        +- *(21) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]                               :           +- Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#111122]
[info]                               :              +- *(20) Project [cr_item_sk#42, cr_order_number#56L]
[info]                               :                 +- *(20) Filter (isnotnull(cr_order_number#56L) AND isnotnull(cr_item_sk#42))
[info]                               :                    +- *(20) ColumnarToRow
[info]                               :                       +- BatchScan[cr_item_sk#42, cr_order_number#56L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint>
[info]                               +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#111046]
[info] 
[info] 
[info]   Stopped after 1 iterations, 412 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q78-v2.7                                            412            412           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q80a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#36968 ASC NULLS FIRST,id#36969 ASC NULLS FIRST], output=[channel#36968,id#36969,sales#37019,returns#37020,profit#37021])
[info] +- *(102) HashAggregate(keys=[channel#36968, id#36969, sales#37019, returns#37020, profit#37021], functions=[])
[info]    +- Exchange hashpartitioning(channel#36968, id#36969, sales#37019, returns#37020, profit#37021, 4), true, [id=#114559]
[info]       +- *(101) HashAggregate(keys=[channel#36968, id#36969, sales#37019, returns#37020, profit#37021], functions=[])
[info]          +- Union
[info]             :- *(67) HashAggregate(keys=[channel#36968, id#36969, sales#37019, returns#37020, profit#37021], functions=[])
[info]             :  +- Exchange hashpartitioning(channel#36968, id#36969, sales#37019, returns#37020, profit#37021, 4), true, [id=#114152]
[info]             :     +- *(66) HashAggregate(keys=[channel#36968, id#36969, sales#37019, returns#37020, profit#37021], functions=[])
[info]             :        +- Union
[info]             :           :- *(32) HashAggregate(keys=[channel#36968, id#36969], functions=[sum(sales#36958), sum(returns#36959), sum(profit#36960)])
[info]             :           :  +- Exchange hashpartitioning(channel#36968, id#36969, 4), true, [id=#113534]
[info]             :           :     +- *(31) HashAggregate(keys=[channel#36968, id#36969], functions=[partial_sum(sales#36958), partial_sum(returns#36959), partial_sum(profit#36960)])
[info]             :           :        +- Union
[info]             :           :           :- *(10) HashAggregate(keys=[s_store_id#671], functions=[sum(UnscaledValue(ss_ext_sales_price#1178)), sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ss_net_profit#1185 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#809 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]             :           :           :  +- Exchange hashpartitioning(s_store_id#671, 4), true, [id=#112859]
[info]             :           :           :     +- *(9) HashAggregate(keys=[s_store_id#671], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178)), partial_sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ss_net_profit#1185 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#809 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]             :           :           :        +- *(9) Project [ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809, s_store_id#671]
[info]             :           :           :           +- *(9) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]             :           :           :              :- *(9) Project [ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809, s_store_id#671]
[info]             :           :           :              :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :              :     :- *(9) Project [ss_item_sk#1165, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809, s_store_id#671]
[info]             :           :           :              :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]             :           :           :              :     :     :- *(9) Project [ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809]
[info]             :           :           :              :     :     :  +- *(9) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :              :     :     :     :- *(9) Project [ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186, sr_return_amt#801, sr_net_loss#809]
[info]             :           :           :              :     :     :     :  +- SortMergeJoin [ss_item_sk#1165, ss_ticket_number#1172L], [sr_item_sk#792, sr_ticket_number#799L], LeftOuter
[info]             :           :           :              :     :     :     :     :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]             :           :           :              :     :     :     :     :  +- Exchange hashpartitioning(ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#112805]
[info]             :           :           :              :     :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]             :           :           :              :     :     :     :     :        +- *(1) Filter (((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_promo_sk#1171))
[info]             :           :           :              :     :     :     :     :           +- *(1) ColumnarToRow
[info]             :           :           :              :     :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:bigint,ss_ext_sales_price:...
[info]             :           :           :              :     :     :     :     +- *(4) Sort [sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]             :           :           :              :     :     :     :        +- Exchange hashpartitioning(sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#112814]
[info]             :           :           :              :     :     :     :           +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L, sr_return_amt#801, sr_net_loss#809]
[info]             :           :           :              :     :     :     :              +- *(3) Filter (isnotnull(sr_item_sk#792) AND isnotnull(sr_ticket_number#799L))
[info]             :           :           :              :     :     :     :                 +- *(3) ColumnarToRow
[info]             :           :           :              :     :     :     :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L, sr_return_amt#801, sr_net_loss#809] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
[info]             :           :           :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#112826]
[info]             :           :           :              :     :     :        +- *(5) Project [d_date_sk#331]
[info]             :           :           :              :     :     :           +- *(5) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10442)) AND (d_date#333 <= 10472)) AND isnotnull(d_date_sk#331))
[info]             :           :           :              :     :     :              +- *(5) ColumnarToRow
[info]             :           :           :              :     :     :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]             :           :           :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#112835]
[info]             :           :           :              :     :        +- *(6) Project [s_store_sk#670, s_store_id#671]
[info]             :           :           :              :     :           +- *(6) Filter isnotnull(s_store_sk#670)
[info]             :           :           :              :     :              +- *(6) ColumnarToRow
[info]             :           :           :              :     :                 +- BatchScan[s_store_sk#670, s_store_id#671] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string>
[info]             :           :           :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#112844]
[info]             :           :           :              :        +- *(7) Project [i_item_sk#496]
[info]             :           :           :              :           +- *(7) Filter ((isnotnull(i_current_price#501) AND (i_current_price#501 > 50.00)) AND isnotnull(i_item_sk#496))
[info]             :           :           :              :              +- *(7) ColumnarToRow
[info]             :           :           :              :                 +- BatchScan[i_item_sk#496, i_current_price#501] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2)>
[info]             :           :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#112853]
[info]             :           :           :                 +- *(8) Project [p_promo_sk#589]
[info]             :           :           :                    +- *(8) Filter ((isnotnull(p_channel_tv#600) AND (p_channel_tv#600 = N)) AND isnotnull(p_promo_sk#589))
[info]             :           :           :                       +- *(8) ColumnarToRow
[info]             :           :           :                          +- BatchScan[p_promo_sk#589, p_channel_tv#600] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int,p_channel_tv:string>
[info]             :           :           :- *(20) HashAggregate(keys=[cp_catalog_page_id#1], functions=[sum(UnscaledValue(cs_ext_sales_price#900)), sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(cs_net_profit#910 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#66 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]             :           :           :  +- Exchange hashpartitioning(cp_catalog_page_id#1, 4), true, [id=#113482]
[info]             :           :           :     +- *(19) HashAggregate(keys=[cp_catalog_page_id#1], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900)), partial_sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(cs_net_profit#910 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#66 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]             :           :           :        +- *(19) Project [cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66, cp_catalog_page_id#1]
[info]             :           :           :           +- *(19) BroadcastHashJoin [cs_promo_sk#893], [p_promo_sk#589], Inner, BuildRight
[info]             :           :           :              :- *(19) Project [cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66, cp_catalog_page_id#1]
[info]             :           :           :              :  +- *(19) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :              :     :- *(19) Project [cs_item_sk#892, cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66, cp_catalog_page_id#1]
[info]             :           :           :              :     :  +- *(19) BroadcastHashJoin [cs_catalog_page_sk#889], [cp_catalog_page_sk#0], Inner, BuildRight
[info]             :           :           :              :     :     :- *(19) Project [cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66]
[info]             :           :           :              :     :     :  +- *(19) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :              :     :     :     :- *(19) Project [cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911, cr_return_amount#58, cr_net_loss#66]
[info]             :           :           :              :     :     :     :  +- SortMergeJoin [cs_item_sk#892, cs_order_number#894L], [cr_item_sk#42, cr_order_number#56L], LeftOuter
[info]             :           :           :              :     :     :     :     :- *(12) Sort [cs_item_sk#892 ASC NULLS FIRST, cs_order_number#894L ASC NULLS FIRST], false, 0
[info]             :           :           :              :     :     :     :     :  +- Exchange hashpartitioning(cs_item_sk#892, cs_order_number#894L, 4), true, [id=#112868]
[info]             :           :           :              :     :     :     :     :     +- *(11) Project [cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911]
[info]             :           :           :              :     :     :     :     :        +- *(11) Filter (((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_catalog_page_sk#889)) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_promo_sk#893))
[info]             :           :           :              :     :     :     :     :           +- *(11) ColumnarToRow
[info]             :           :           :              :     :     :     :     :              +- BatchScan[cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_catalog_page_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:bigint,cs_ext_sales_...
[info]             :           :           :              :     :     :     :     +- *(14) Sort [cr_item_sk#42 ASC NULLS FIRST, cr_order_number#56L ASC NULLS FIRST], false, 0
[info]             :           :           :              :     :     :     :        +- Exchange hashpartitioning(cr_item_sk#42, cr_order_number#56L, 4), true, [id=#112877]
[info]             :           :           :              :     :     :     :           +- *(13) Project [cr_item_sk#42, cr_order_number#56L, cr_return_amount#58, cr_net_loss#66]
[info]             :           :           :              :     :     :     :              +- *(13) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]             :           :           :              :     :     :     :                 +- *(13) ColumnarToRow
[info]             :           :           :              :     :     :     :                    +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_return_amount#58, cr_net_loss#66] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
[info]             :           :           :              :     :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#112826]
[info]             :           :           :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#112898]
[info]             :           :           :              :     :        +- *(16) Project [cp_catalog_page_sk#0, cp_catalog_page_id#1]
[info]             :           :           :              :     :           +- *(16) Filter isnotnull(cp_catalog_page_sk#0)
[info]             :           :           :              :     :              +- *(16) ColumnarToRow
[info]             :           :           :              :     :                 +- BatchScan[cp_catalog_page_sk#0, cp_catalog_page_id#1] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_page], ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>
[info]             :           :           :              :     +- ReusedExchange [i_item_sk#496], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#112844]
[info]             :           :           :              +- ReusedExchange [p_promo_sk#589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#112853]
[info]             :           :           +- *(30) HashAggregate(keys=[web_site_id#1367], functions=[sum(UnscaledValue(ws_ext_sales_price#1043)), sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ws_net_profit#1053 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#1285 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]             :           :              +- Exchange hashpartitioning(web_site_id#1367, 4), true, [id=#113526]
[info]             :           :                 +- *(29) HashAggregate(keys=[web_site_id#1367], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043)), partial_sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ws_net_profit#1053 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#1285 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]             :           :                    +- *(29) Project [ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285, web_site_id#1367]
[info]             :           :                       +- *(29) BroadcastHashJoin [ws_promo_sk#1036], [p_promo_sk#589], Inner, BuildRight
[info]             :           :                          :- *(29) Project [ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285, web_site_id#1367]
[info]             :           :                          :  +- *(29) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]             :           :                          :     :- *(29) Project [ws_item_sk#1023, ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285, web_site_id#1367]
[info]             :           :                          :     :  +- *(29) BroadcastHashJoin [ws_web_site_sk#1033], [web_site_sk#1366], Inner, BuildRight
[info]             :           :                          :     :     :- *(29) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285]
[info]             :           :                          :     :     :  +- *(29) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :           :                          :     :     :     :- *(29) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054, wr_return_amt#1277, wr_net_loss#1285]
[info]             :           :                          :     :     :     :  +- SortMergeJoin [ws_item_sk#1023, ws_order_number#1037L], [wr_item_sk#1264, wr_order_number#1275L], LeftOuter
[info]             :           :                          :     :     :     :     :- *(22) Sort [ws_item_sk#1023 ASC NULLS FIRST, ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]             :           :                          :     :     :     :     :  +- Exchange hashpartitioning(ws_item_sk#1023, ws_order_number#1037L, 4), true, [id=#112931]
[info]             :           :                          :     :     :     :     :     +- *(21) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_order_number#1037L, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054]
[info]             :           :                          :     :     :     :     :        +- *(21) Filter (((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_web_site_sk#1033)) AND isnotnull(ws_item_sk#1023)) AND isnotnull(ws_promo_sk#1036))
[info]             :           :                          :     :     :     :     :           +- *(21) ColumnarToRow
[info]             :           :                          :     :     :     :     :              +- BatchScan[ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_order_number#1037L, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_promo_sk:int,ws_order_number:bigint,ws_ext_sales_pric...
[info]             :           :                          :     :     :     :     +- *(24) Sort [wr_item_sk#1264 ASC NULLS FIRST, wr_order_number#1275L ASC NULLS FIRST], false, 0
[info]             :           :                          :     :     :     :        +- Exchange hashpartitioning(wr_item_sk#1264, wr_order_number#1275L, 4), true, [id=#112940]
[info]             :           :                          :     :     :     :           +- *(23) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285]
[info]             :           :                          :     :     :     :              +- *(23) Filter (isnotnull(wr_item_sk#1264) AND isnotnull(wr_order_number#1275L))
[info]             :           :                          :     :     :     :                 +- *(23) ColumnarToRow
[info]             :           :                          :     :     :     :                    +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
[info]             :           :                          :     :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#112826]
[info]             :           :                          :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#112961]
[info]             :           :                          :     :        +- *(26) Project [web_site_sk#1366, web_site_id#1367]
[info]             :           :                          :     :           +- *(26) Filter isnotnull(web_site_sk#1366)
[info]             :           :                          :     :              +- *(26) ColumnarToRow
[info]             :           :                          :     :                 +- BatchScan[web_site_sk#1366, web_site_id#1367] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_site], ReadSchema: struct<web_site_sk:int,web_site_id:string>
[info]             :           :                          :     +- ReusedExchange [i_item_sk#496], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#112844]
[info]             :           :                          +- ReusedExchange [p_promo_sk#589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#112853]
[info]             :           +- *(65) HashAggregate(keys=[channel#36968], functions=[sum(sales#36974), sum(returns#36975), sum(profit#36976)])
[info]             :              +- Exchange hashpartitioning(channel#36968, 4), true, [id=#114144]
[info]             :                 +- *(64) HashAggregate(keys=[channel#36968], functions=[partial_sum(sales#36974), partial_sum(returns#36975), partial_sum(profit#36976)])
[info]             :                    +- *(64) HashAggregate(keys=[channel#36968, id#36969], functions=[sum(sales#36958), sum(returns#36959), sum(profit#36960)])
[info]             :                       +- ReusedExchange [channel#36968, id#36969, sum#37239, sum#37240, sum#37241], Exchange hashpartitioning(channel#36968, id#36969, 4), true, [id=#113534]
[info]             +- *(100) HashAggregate(keys=[], functions=[sum(sales#36974), sum(returns#36975), sum(profit#36976)])
[info]                +- Exchange SinglePartition, true, [id=#114551]
[info]                   +- *(99) HashAggregate(keys=[], functions=[partial_sum(sales#36974), partial_sum(returns#36975), partial_sum(profit#36976)])
[info]                      +- *(99) HashAggregate(keys=[channel#36968, id#36969], functions=[sum(sales#36958), sum(returns#36959), sum(profit#36960)])
[info]                         +- ReusedExchange [channel#36968, id#36969, sum#37269, sum#37270, sum#37271], Exchange hashpartitioning(channel#36968, id#36969, 4), true, [id=#113534]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1950 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q80a-v2.7                                          1950           1950           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q86a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#37423 DESC NULLS LAST,CASE WHEN (lochierarchy#37423 = 0) THEN i_category#508 END ASC NULLS FIRST,rank_within_parent#37419 ASC NULLS FIRST], output=[total_sum#37442,i_category#508,i_class#506,lochierarchy#37423,rank_within_parent#37419])
[info] +- *(20) Project [total_sum#37442, i_category#508, i_class#506, lochierarchy#37423, rank_within_parent#37419]
[info]    +- Window [rank(total_sum#37442) windowspecdefinition(lochierarchy#37423, _w0#37455, total_sum#37442 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#37419], [lochierarchy#37423, _w0#37455], [total_sum#37442 DESC NULLS LAST]
[info]       +- *(19) Sort [lochierarchy#37423 ASC NULLS FIRST, _w0#37455 ASC NULLS FIRST, total_sum#37442 DESC NULLS LAST], false, 0
[info]          +- Exchange hashpartitioning(lochierarchy#37423, _w0#37455, 4), true, [id=#115212]
[info]             +- *(18) HashAggregate(keys=[total_sum#37442, i_category#508, i_class#506, g_category#37421, g_class#37422, lochierarchy#37423], functions=[])
[info]                +- Exchange hashpartitioning(total_sum#37442, i_category#508, i_class#506, g_category#37421, g_class#37422, lochierarchy#37423, 4), true, [id=#115163]
[info]                   +- *(17) HashAggregate(keys=[total_sum#37442, i_category#508, i_class#506, g_category#37421, g_class#37422, lochierarchy#37423], functions=[])
[info]                      +- Union
[info]                         :- *(11) HashAggregate(keys=[total_sum#37442, i_category#508, i_class#506, g_category#37421, g_class#37422, lochierarchy#37423], functions=[])
[info]                         :  +- Exchange hashpartitioning(total_sum#37442, i_category#508, i_class#506, g_category#37421, g_class#37422, lochierarchy#37423, 4), true, [id=#115098]
[info]                         :     +- *(10) HashAggregate(keys=[total_sum#37442, i_category#508, i_class#506, g_category#37421, g_class#37422, lochierarchy#37423], functions=[])
[info]                         :        +- Union
[info]                         :           :- *(4) HashAggregate(keys=[i_category#508, i_class#506], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]                         :           :  +- Exchange hashpartitioning(i_category#508, i_class#506, 4), true, [id=#114905]
[info]                         :           :     +- *(3) HashAggregate(keys=[i_category#508, i_class#506], functions=[partial_sum(UnscaledValue(ws_net_paid#1049))])
[info]                         :           :        +- *(3) Project [ws_net_paid#1049, i_class#506, i_category#508]
[info]                         :           :           +- *(3) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                         :           :              :- *(3) Project [ws_item_sk#1023, ws_net_paid#1049]
[info]                         :           :              :  +- *(3) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                         :           :              :     :- *(3) Project [ws_item_sk#1023, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]                         :           :              :     :  +- *(3) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_item_sk#1023))
[info]                         :           :              :     :     +- *(3) ColumnarToRow
[info]                         :           :              :     :        +- BatchScan[ws_item_sk#1023, ws_net_paid#1049, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_net_paid:decimal(7,2)>
[info]                         :           :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#114890]
[info]                         :           :              :        +- *(1) Project [d_date_sk#331]
[info]                         :           :              :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1212)) AND (d_month_seq#334 <= 1223)) AND isnotnull(d_date_sk#331))
[info]                         :           :              :              +- *(1) ColumnarToRow
[info]                         :           :              :                 +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                         :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#114899]
[info]                         :           :                 +- *(2) Project [i_item_sk#496, i_class#506, i_category#508]
[info]                         :           :                    +- *(2) Filter isnotnull(i_item_sk#496)
[info]                         :           :                       +- *(2) ColumnarToRow
[info]                         :           :                          +- BatchScan[i_item_sk#496, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
[info]                         :           +- *(9) HashAggregate(keys=[i_category#508], functions=[sum(total_sum#37420)])
[info]                         :              +- Exchange hashpartitioning(i_category#508, 4), true, [id=#115090]
[info]                         :                 +- *(8) HashAggregate(keys=[i_category#508], functions=[partial_sum(total_sum#37420)])
[info]                         :                    +- *(8) HashAggregate(keys=[i_category#508, i_class#506], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]                         :                       +- ReusedExchange [i_category#508, i_class#506, sum#37496L], Exchange hashpartitioning(i_category#508, i_class#506, 4), true, [id=#114905]
[info]                         +- *(16) HashAggregate(keys=[], functions=[sum(total_sum#37420)])
[info]                            +- Exchange SinglePartition, true, [id=#115155]
[info]                               +- *(15) HashAggregate(keys=[], functions=[partial_sum(total_sum#37420)])
[info]                                  +- *(15) HashAggregate(keys=[i_category#508, i_class#506], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]                                     +- ReusedExchange [i_category#508, i_class#506, sum#37500L], Exchange hashpartitioning(i_category#508, i_class#506, 4), true, [id=#114905]
[info] 
[info] 
[info]   Stopped after 1 iterations, 283 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q86a-v2.7                                           283            283           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q98-v2.7
[info] == Physical Plan ==
[info] *(7) Sort [i_category#508 ASC NULLS FIRST, i_class#506 ASC NULLS FIRST, i_item_id#497 ASC NULLS FIRST, i_item_desc#500 ASC NULLS FIRST, revenueratio#37531 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(i_category#508 ASC NULLS FIRST, i_class#506 ASC NULLS FIRST, i_item_id#497 ASC NULLS FIRST, i_item_desc#500 ASC NULLS FIRST, revenueratio#37531 ASC NULLS FIRST, 4), true, [id=#115358]
[info]    +- *(6) Project [i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, itemrevenue#37530, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#37536) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#37538)), DecimalType(38,17), true) AS revenueratio#37531]
[info]       +- Window [sum(_w1#37537) windowspecdefinition(i_class#506, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#37538], [i_class#506]
[info]          +- *(5) Sort [i_class#506 ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning(i_class#506, 4), true, [id=#115350]
[info]                +- *(4) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                   +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, 4), true, [id=#115346]
[info]                      +- *(3) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                         +- *(3) Project [ss_ext_sales_price#1178, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(3) Project [ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                               :  +- *(3) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                               :     :- *(3) Project [ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                               :     :  +- *(3) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                               :     :     +- *(3) ColumnarToRow
[info]                               :     :        +- BatchScan[ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#115331]
[info]                               :        +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                               :           +- *(1) Filter (i_category#508 IN (Sports,Books,Home) AND isnotnull(i_item_sk#496))
[info]                               :              +- *(1) ColumnarToRow
[info]                               :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#115340]
[info]                                  +- *(2) Project [d_date_sk#331]
[info]                                     +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10644)) AND (d_date#333 <= 10674)) AND isnotnull(d_date_sk#331))
[info]                                        +- *(2) ColumnarToRow
[info]                                           +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 103 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q98-v2.7                                            104            104           0          0.0      Infinity       1.0X
[info] 
[success] Total time: 235 s, completed Nov 21, 2019 3:06:05 PM
