[info] Running benchmark: TPCDS Snappy
[info]   Running case: q1
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#157 ASC NULLS FIRST], output=[c_customer_id#157])
[info] +- *(12) Project [c_customer_id#157]
[info]    +- *(12) BroadcastHashJoin [ctr_customer_sk#1844], [c_customer_sk#156], Inner, BuildRight
[info]       :- *(12) Project [ctr_customer_sk#1844]
[info]       :  +- *(12) BroadcastHashJoin [ctr_store_sk#1845], [s_store_sk#670], Inner, BuildRight
[info]       :     :- *(12) Project [ctr_customer_sk#1844, ctr_store_sk#1845]
[info]       :     :  +- *(12) SortMergeJoin [ctr_store_sk#1845], [ctr_store_sk#1845#1852], Inner, (cast(ctr_total_return#1846 as decimal(24,7)) > (CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#1850)
[info]       :     :     :- *(4) Sort [ctr_store_sk#1845 ASC NULLS FIRST], false, 0
[info]       :     :     :  +- Exchange hashpartitioning(ctr_store_sk#1845, 4), true, [id=#770]
[info]       :     :     :     +- *(3) Filter isnotnull(ctr_total_return#1846)
[info]       :     :     :        +- *(3) HashAggregate(keys=[sr_customer_sk#793, sr_store_sk#797], functions=[sum(UnscaledValue(sr_return_amt#801))])
[info]       :     :     :           +- Exchange hashpartitioning(sr_customer_sk#793, sr_store_sk#797, 4), true, [id=#765]
[info]       :     :     :              +- *(2) HashAggregate(keys=[sr_customer_sk#793, sr_store_sk#797], functions=[partial_sum(UnscaledValue(sr_return_amt#801))])
[info]       :     :     :                 +- *(2) Project [sr_customer_sk#793, sr_store_sk#797, sr_return_amt#801]
[info]       :     :     :                    +- *(2) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#331], Inner, BuildRight
[info]       :     :     :                       :- *(2) Project [sr_customer_sk#793, sr_store_sk#797, sr_return_amt#801, sr_returned_date_sk#810]
[info]       :     :     :                       :  +- *(2) Filter ((isnotnull(sr_returned_date_sk#810) AND isnotnull(sr_store_sk#797)) AND isnotnull(sr_customer_sk#793))
[info]       :     :     :                       :     +- *(2) ColumnarToRow
[info]       :     :     :                       :        +- BatchScan[sr_customer_sk#793, sr_store_sk#797, sr_return_amt#801, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_customer_sk:int,sr_store_sk:int,sr_return_amt:decimal(7,2)>
[info]       :     :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#759]
[info]       :     :     :                          +- *(1) Project [d_date_sk#331]
[info]       :     :     :                             +- *(1) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]       :     :     :                                +- *(1) ColumnarToRow
[info]       :     :     :                                   +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :     +- *(9) Sort [ctr_store_sk#1845#1852 ASC NULLS FIRST], false, 0
[info]       :     :        +- Exchange hashpartitioning(ctr_store_sk#1845#1852, 4), true, [id=#891]
[info]       :     :           +- *(8) Filter isnotnull((CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#1850)
[info]       :     :              +- *(8) HashAggregate(keys=[ctr_store_sk#1845], functions=[avg(ctr_total_return#1846)])
[info]       :     :                 +- Exchange hashpartitioning(ctr_store_sk#1845, 4), true, [id=#886]
[info]       :     :                    +- *(7) HashAggregate(keys=[ctr_store_sk#1845], functions=[partial_avg(ctr_total_return#1846)])
[info]       :     :                       +- *(7) HashAggregate(keys=[sr_customer_sk#793, sr_store_sk#797], functions=[sum(UnscaledValue(sr_return_amt#801))])
[info]       :     :                          +- Exchange hashpartitioning(sr_customer_sk#793, sr_store_sk#797, 4), true, [id=#849]
[info]       :     :                             +- *(6) HashAggregate(keys=[sr_customer_sk#793, sr_store_sk#797], functions=[partial_sum(UnscaledValue(sr_return_amt#801))])
[info]       :     :                                +- *(6) Project [sr_customer_sk#793, sr_store_sk#797, sr_return_amt#801]
[info]       :     :                                   +- *(6) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#331], Inner, BuildRight
[info]       :     :                                      :- *(6) Project [sr_customer_sk#793, sr_store_sk#797, sr_return_amt#801, sr_returned_date_sk#810]
[info]       :     :                                      :  +- *(6) Filter (isnotnull(sr_returned_date_sk#810) AND isnotnull(sr_store_sk#797))
[info]       :     :                                      :     +- *(6) ColumnarToRow
[info]       :     :                                      :        +- BatchScan[sr_customer_sk#793, sr_store_sk#797, sr_return_amt#801, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_customer_sk:int,sr_store_sk:int,sr_return_amt:decimal(7,2)>
[info]       :     :                                      +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#759]
[info]       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#812]
[info]       :        +- *(10) Project [s_store_sk#670]
[info]       :           +- *(10) Filter ((isnotnull(s_state#694) AND (s_state#694 = TN)) AND isnotnull(s_store_sk#670))
[info]       :              +- *(10) ColumnarToRow
[info]       :                 +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#821]
[info]          +- *(11) Project [c_customer_sk#156, c_customer_id#157]
[info]             +- *(11) Filter isnotnull(c_customer_sk#156)
[info]                +- *(11) ColumnarToRow
[info]                   +- BatchScan[c_customer_sk#156, c_customer_id#157] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 757 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q1                                                  757            757           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q2
[info] == Physical Plan ==
[info] *(16) Sort [d_week_seq1#1993 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(d_week_seq1#1993 ASC NULLS FIRST, 4), true, [id=#1312]
[info]    +- *(15) Project [d_week_seq1#1993, round(CheckOverflow((promote_precision(sun_sales1#1994) / promote_precision(sun_sales2#2002)), DecimalType(37,20), true), 2) AS round((sun_sales1 / sun_sales2), 2)#2090, round(CheckOverflow((promote_precision(mon_sales1#1995) / promote_precision(mon_sales2#2003)), DecimalType(37,20), true), 2) AS round((mon_sales1 / mon_sales2), 2)#2091, round(CheckOverflow((promote_precision(tue_sales1#1996) / promote_precision(tue_sales2#2004)), DecimalType(37,20), true), 2) AS round((tue_sales1 / tue_sales2), 2)#2092, round(CheckOverflow((promote_precision(wed_sales1#1997) / promote_precision(wed_sales2#2005)), DecimalType(37,20), true), 2) AS round((wed_sales1 / wed_sales2), 2)#2093, round(CheckOverflow((promote_precision(thu_sales1#1998) / promote_precision(thu_sales2#2006)), DecimalType(37,20), true), 2) AS round((thu_sales1 / thu_sales2), 2)#2094, round(CheckOverflow((promote_precision(fri_sales1#1999) / promote_precision(fri_sales2#2007)), DecimalType(37,20), true), 2) AS round((fri_sales1 / fri_sales2), 2)#2095, round(CheckOverflow((promote_precision(sat_sales1#2000) / promote_precision(sat_sales2#2008)), DecimalType(37,20), true), 2) AS round((sat_sales1 / sat_sales2), 2)#2096]
[info]       +- *(15) SortMergeJoin [d_week_seq1#1993], [(d_week_seq2#2001 - 53)], Inner
[info]          :- *(7) Sort [d_week_seq1#1993 ASC NULLS FIRST], false, 0
[info]          :  +- Exchange hashpartitioning(d_week_seq1#1993, 4), true, [id=#1154]
[info]          :     +- *(6) Project [d_week_seq#335 AS d_week_seq1#1993, sun_sales#2013 AS sun_sales1#1994, mon_sales#2014 AS mon_sales1#1995, tue_sales#2015 AS tue_sales1#1996, wed_sales#2016 AS wed_sales1#1997, thu_sales#2017 AS thu_sales1#1998, fri_sales#2018 AS fri_sales1#1999, sat_sales#2019 AS sat_sales1#2000]
[info]          :        +- *(6) BroadcastHashJoin [d_week_seq#335], [d_week_seq#2038], Inner, BuildRight
[info]          :           :- *(6) HashAggregate(keys=[d_week_seq#335], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN sales_price#2010 ELSE null END))])
[info]          :           :  +- Exchange hashpartitioning(d_week_seq#335, 4), true, [id=#1141]
[info]          :           :     +- *(4) HashAggregate(keys=[d_week_seq#335], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN sales_price#2010 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN sales_price#2010 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN sales_price#2010 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN sales_price#2010 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN sales_price#2010 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN sales_price#2010 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN sales_price#2010 ELSE null END))])
[info]          :           :        +- *(4) Project [sales_price#2010, d_week_seq#335, d_day_name#345]
[info]          :           :           +- *(4) BroadcastHashJoin [sold_date_sk#2009], [d_date_sk#331], Inner, BuildRight
[info]          :           :              :- Union
[info]          :           :              :  :- *(1) Project [ws_sold_date_sk#1054 AS sold_date_sk#2009, ws_ext_sales_price#1043 AS sales_price#2010]
[info]          :           :              :  :  +- *(1) Filter isnotnull(ws_sold_date_sk#1054)
[info]          :           :              :  :     +- *(1) ColumnarToRow
[info]          :           :              :  :        +- BatchScan[ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_ext_sales_price:decimal(7,2)>
[info]          :           :              :  +- *(2) Project [cs_sold_date_sk#911 AS sold_date_sk#2011, cs_ext_sales_price#900 AS sales_price#2012]
[info]          :           :              :     +- *(2) Filter isnotnull(cs_sold_date_sk#911)
[info]          :           :              :        +- *(2) ColumnarToRow
[info]          :           :              :           +- BatchScan[cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ext_sales_price:decimal(7,2)>
[info]          :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#1135]
[info]          :           :                 +- *(3) Project [d_date_sk#331, d_week_seq#335, d_day_name#345]
[info]          :           :                    +- *(3) Filter (isnotnull(d_date_sk#331) AND isnotnull(d_week_seq#335))
[info]          :           :                       +- *(3) ColumnarToRow
[info]          :           :                          +- BatchScan[d_date_sk#331, d_week_seq#335, d_day_name#345] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
[info]          :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#1149]
[info]          :              +- *(5) Project [d_week_seq#2038]
[info]          :                 +- *(5) Filter ((isnotnull(d_year#2040) AND (d_year#2040 = 2001)) AND isnotnull(d_week_seq#2038))
[info]          :                    +- *(5) ColumnarToRow
[info]          :                       +- BatchScan[d_week_seq#2038, d_year#2040] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_week_seq:int,d_year:int>
[info]          +- *(14) Sort [(d_week_seq2#2001 - 53) ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning((d_week_seq2#2001 - 53), 4), true, [id=#1304]
[info]                +- *(13) Project [d_week_seq#335 AS d_week_seq2#2001, sun_sales#2013 AS sun_sales2#2002, mon_sales#2014 AS mon_sales2#2003, tue_sales#2015 AS tue_sales2#2004, wed_sales#2016 AS wed_sales2#2005, thu_sales#2017 AS thu_sales2#2006, fri_sales#2018 AS fri_sales2#2007, sat_sales#2019 AS sat_sales2#2008]
[info]                   +- *(13) BroadcastHashJoin [d_week_seq#335], [d_week_seq#2066], Inner, BuildRight
[info]                      :- *(13) HashAggregate(keys=[d_week_seq#335], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN sales_price#2010 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN sales_price#2010 ELSE null END))])
[info]                      :  +- ReusedExchange [d_week_seq#335, sum#2144L, sum#2145L, sum#2146L, sum#2147L, sum#2148L, sum#2149L, sum#2150L], Exchange hashpartitioning(d_week_seq#335, 4), true, [id=#1141]
[info]                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#1190]
[info]                         +- *(12) Project [d_week_seq#2066]
[info]                            +- *(12) Filter ((isnotnull(d_year#2068) AND (d_year#2068 = 2002)) AND isnotnull(d_week_seq#2066))
[info]                               +- *(12) ColumnarToRow
[info]                                  +- BatchScan[d_week_seq#2066, d_year#2068] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_week_seq:int,d_year:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 514 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q2                                                  515            515           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q3
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[d_year#337 ASC NULLS FIRST,sum_agg#2182 DESC NULLS LAST,brand_id#2180 ASC NULLS FIRST], output=[d_year#337,brand_id#2180,brand#2181,sum_agg#2182])
[info] +- *(4) HashAggregate(keys=[d_year#337, i_brand#504, i_brand_id#503], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]    +- Exchange hashpartitioning(d_year#337, i_brand#504, i_brand_id#503, 4), true, [id=#1420]
[info]       +- *(3) HashAggregate(keys=[d_year#337, i_brand#504, i_brand_id#503], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          +- *(3) Project [d_year#337, ss_ext_sales_price#1178, i_brand_id#503, i_brand#504]
[info]             +- *(3) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :- *(3) Project [d_year#337, ss_item_sk#1165, ss_ext_sales_price#1178]
[info]                :  +- *(3) BroadcastHashJoin [d_date_sk#331], [ss_sold_date_sk#1186], Inner, BuildLeft
[info]                :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#1401]
[info]                :     :  +- *(1) Project [d_date_sk#331, d_year#337]
[info]                :     :     +- *(1) Filter ((isnotnull(d_moy#339) AND (d_moy#339 = 11)) AND isnotnull(d_date_sk#331))
[info]                :     :        +- *(1) ColumnarToRow
[info]                :     :           +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     +- *(3) Project [ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                :        +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165))
[info]                :           +- *(3) ColumnarToRow
[info]                :              +- BatchScan[ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#1414]
[info]                   +- *(2) Project [i_item_sk#496, i_brand_id#503, i_brand#504]
[info]                      +- *(2) Filter ((isnotnull(i_manufact_id#509) AND (i_manufact_id#509 = 128)) AND isnotnull(i_item_sk#496))
[info]                         +- *(2) ColumnarToRow
[info]                            +- BatchScan[i_item_sk#496, i_brand_id#503, i_brand#504, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manufact_id:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 141 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q3                                                  141            141           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q4
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[customer_id#2357 ASC NULLS FIRST,customer_first_name#2358 ASC NULLS FIRST,customer_last_name#2359 ASC NULLS FIRST,customer_preferred_cust_flag#2360 ASC NULLS FIRST,customer_birth_country#2361 ASC NULLS FIRST,customer_login#2362 ASC NULLS FIRST,customer_email_address#2363 ASC NULLS FIRST], output=[customer_id#2357,customer_first_name#2358,customer_last_name#2359,customer_preferred_cust_flag#2360,customer_birth_country#2361,customer_login#2362,customer_email_address#2363])
[info] +- *(35) Project [customer_id#2357, customer_first_name#2358, customer_last_name#2359, customer_preferred_cust_flag#2360, customer_birth_country#2361, customer_login#2362, customer_email_address#2363]
[info]    +- *(35) SortMergeJoin [customer_id#2309], [customer_id#2397], Inner, (CASE WHEN (year_total#2375 > 0.000000) THEN CheckOverflow((promote_precision(year_total#2385) / promote_precision(year_total#2375)), DecimalType(38,14), true) ELSE null END > CASE WHEN (year_total#2395 > 0.000000) THEN CheckOverflow((promote_precision(year_total#2405) / promote_precision(year_total#2395)), DecimalType(38,14), true) ELSE null END)
[info]       :- *(29) Project [customer_id#2309, customer_id#2357, customer_first_name#2358, customer_last_name#2359, customer_preferred_cust_flag#2360, customer_birth_country#2361, customer_login#2362, customer_email_address#2363, year_total#2375, year_total#2385, year_total#2395]
[info]       :  +- *(29) SortMergeJoin [customer_id#2309], [customer_id#2387], Inner
[info]       :     :- *(23) Project [customer_id#2309, customer_id#2357, customer_first_name#2358, customer_last_name#2359, customer_preferred_cust_flag#2360, customer_birth_country#2361, customer_login#2362, customer_email_address#2363, year_total#2375, year_total#2385]
[info]       :     :  +- *(23) SortMergeJoin [customer_id#2309], [customer_id#2377], Inner, (CASE WHEN (year_total#2375 > 0.000000) THEN CheckOverflow((promote_precision(year_total#2385) / promote_precision(year_total#2375)), DecimalType(38,14), true) ELSE null END > CASE WHEN (year_total#2317 > 0.000000) THEN CheckOverflow((promote_precision(year_total#2365) / promote_precision(year_total#2317)), DecimalType(38,14), true) ELSE null END)
[info]       :     :     :- *(17) Project [customer_id#2309, year_total#2317, customer_id#2357, customer_first_name#2358, customer_last_name#2359, customer_preferred_cust_flag#2360, customer_birth_country#2361, customer_login#2362, customer_email_address#2363, year_total#2365, year_total#2375]
[info]       :     :     :  +- *(17) SortMergeJoin [customer_id#2309], [customer_id#2367], Inner
[info]       :     :     :     :- *(11) SortMergeJoin [customer_id#2309], [customer_id#2357], Inner
[info]       :     :     :     :  :- *(5) Sort [customer_id#2309 ASC NULLS FIRST], false, 0
[info]       :     :     :     :  :  +- Exchange hashpartitioning(customer_id#2309, 4), true, [id=#2105]
[info]       :     :     :     :  :     +- Union
[info]       :     :     :     :  :        :- *(4) Filter (isnotnull(year_total#2317) AND (year_total#2317 > 0.000000))
[info]       :     :     :     :  :        :  +- *(4) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#1179 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#1178 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :     :     :  :        :     +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#2099]
[info]       :     :     :     :  :        :        +- *(3) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#1179 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#1178 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :     :     :  :        :           +- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, d_year#337]
[info]       :     :     :     :  :        :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :     :     :  :        :                 :- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :     :     :  :        :                 :  +- *(3) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :     :     :  :        :                 :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2080]
[info]       :     :     :     :  :        :                 :     :  +- *(1) Project [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172]
[info]       :     :     :     :  :        :                 :     :     +- *(1) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_customer_id#157))
[info]       :     :     :     :  :        :                 :     :        +- *(1) ColumnarToRow
[info]       :     :     :     :  :        :                 :     :           +- BatchScan[c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
[info]       :     :     :     :  :        :                 :     +- *(3) Project [ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :     :     :  :        :                 :        +- *(3) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :     :     :  :        :                 :           +- *(3) ColumnarToRow
[info]       :     :     :     :  :        :                 :              +- BatchScan[ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext...
[info]       :     :     :     :  :        :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2093]
[info]       :     :     :     :  :        :                    +- *(2) Project [d_date_sk#331, d_year#337]
[info]       :     :     :     :  :        :                       +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]       :     :     :     :  :        :                          +- *(2) ColumnarToRow
[info]       :     :     :     :  :        :                             +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :     :     :  :        :- LocalTableScan <empty>, [customer_id#2319, year_total#2327]
[info]       :     :     :     :  :        +- LocalTableScan <empty>, [customer_id#2329, year_total#2337]
[info]       :     :     :     :  +- *(10) Sort [customer_id#2357 ASC NULLS FIRST], false, 0
[info]       :     :     :     :     +- Exchange hashpartitioning(customer_id#2357, 4), true, [id=#2388]
[info]       :     :     :     :        +- Union
[info]       :     :     :     :           :- *(9) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#1179 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#1178 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :     :     :           :  +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#2341]
[info]       :     :     :     :           :     +- *(8) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#1179 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#1178 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :     :     :           :        +- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, d_year#337]
[info]       :     :     :     :           :           +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :     :     :           :              :- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :     :     :           :              :  +- *(8) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :     :     :           :              :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2080]
[info]       :     :     :     :           :              :     +- *(8) Project [ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :     :     :           :              :        +- *(8) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :     :     :           :              :           +- *(8) ColumnarToRow
[info]       :     :     :     :           :              :              +- BatchScan[ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext...
[info]       :     :     :     :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2128]
[info]       :     :     :     :           :                 +- *(7) Project [d_date_sk#331, d_year#337]
[info]       :     :     :     :           :                    +- *(7) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND isnotnull(d_date_sk#331))
[info]       :     :     :     :           :                       +- *(7) ColumnarToRow
[info]       :     :     :     :           :                          +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :     :     :           :- LocalTableScan <empty>, [customer_id#2319, customer_first_name#2320, customer_last_name#2321, customer_preferred_cust_flag#2322, customer_birth_country#2323, customer_login#2324, customer_email_address#2325, year_total#2327]
[info]       :     :     :     :           +- LocalTableScan <empty>, [customer_id#2329, customer_first_name#2330, customer_last_name#2331, customer_preferred_cust_flag#2332, customer_birth_country#2333, customer_login#2334, customer_email_address#2335, year_total#2337]
[info]       :     :     :     +- *(16) Sort [customer_id#2367 ASC NULLS FIRST], false, 0
[info]       :     :     :        +- Exchange hashpartitioning(customer_id#2367, 4), true, [id=#2449]
[info]       :     :     :           +- Union
[info]       :     :     :              :- LocalTableScan <empty>, [customer_id#2367, year_total#2375]
[info]       :     :     :              :- *(15) Filter (isnotnull(year_total#2327) AND (year_total#2327 > 0.000000))
[info]       :     :     :              :  +- *(15) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#902 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#901 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#899 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#900 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :     :              :     +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#2422]
[info]       :     :     :              :        +- *(14) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#902 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#901 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#899 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#900 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :     :              :           +- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, d_year#337]
[info]       :     :     :              :              +- *(14) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :     :     :              :                 :- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, cs_sold_date_sk#911]
[info]       :     :     :              :                 :  +- *(14) BroadcastHashJoin [c_customer_sk#156], [cs_bill_customer_sk#880], Inner, BuildLeft
[info]       :     :     :              :                 :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2080]
[info]       :     :     :              :                 :     +- *(14) Project [cs_bill_customer_sk#880, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, cs_sold_date_sk#911]
[info]       :     :     :              :                 :        +- *(14) Filter (isnotnull(cs_bill_customer_sk#880) AND isnotnull(cs_sold_date_sk#911))
[info]       :     :     :              :                 :           +- *(14) ColumnarToRow
[info]       :     :     :              :                 :              +- BatchScan[cs_bill_customer_sk#880, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),c...
[info]       :     :     :              :                 +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2093]
[info]       :     :     :              +- LocalTableScan <empty>, [customer_id#2329, year_total#2337]
[info]       :     :     +- *(22) Sort [customer_id#2377 ASC NULLS FIRST], false, 0
[info]       :     :        +- Exchange hashpartitioning(customer_id#2377, 4), true, [id=#2532]
[info]       :     :           +- Union
[info]       :     :              :- LocalTableScan <empty>, [customer_id#2377, year_total#2385]
[info]       :     :              :- *(21) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#902 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#901 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#899 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#900 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :              :  +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#2506]
[info]       :     :              :     +- *(20) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#902 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#901 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#899 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#900 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :     :              :        +- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, d_year#337]
[info]       :     :              :           +- *(20) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :     :              :              :- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, cs_sold_date_sk#911]
[info]       :     :              :              :  +- *(20) BroadcastHashJoin [c_customer_sk#156], [cs_bill_customer_sk#880], Inner, BuildLeft
[info]       :     :              :              :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2080]
[info]       :     :              :              :     +- *(20) Project [cs_bill_customer_sk#880, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, cs_sold_date_sk#911]
[info]       :     :              :              :        +- *(20) Filter (isnotnull(cs_bill_customer_sk#880) AND isnotnull(cs_sold_date_sk#911))
[info]       :     :              :              :           +- *(20) ColumnarToRow
[info]       :     :              :              :              +- BatchScan[cs_bill_customer_sk#880, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, cs_ext_list_price#902, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),c...
[info]       :     :              :              +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2128]
[info]       :     :              +- LocalTableScan <empty>, [customer_id#2329, year_total#2337]
[info]       :     +- *(28) Sort [customer_id#2387 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(customer_id#2387, 4), true, [id=#2603]
[info]       :           +- Union
[info]       :              :- LocalTableScan <empty>, [customer_id#2387, year_total#2395]
[info]       :              :- LocalTableScan <empty>, [customer_id#2319, year_total#2327]
[info]       :              +- *(27) Filter (isnotnull(year_total#2337) AND (year_total#2337 > 0.000000))
[info]       :                 +- *(27) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1044 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1043 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :                    +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#2576]
[info]       :                       +- *(26) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1044 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1043 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]       :                          +- *(26) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, d_year#337]
[info]       :                             +- *(26) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                                :- *(26) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]       :                                :  +- *(26) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]       :                                :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2080]
[info]       :                                :     +- *(26) Project [ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]       :                                :        +- *(26) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]       :                                :           +- *(26) ColumnarToRow
[info]       :                                :              +- BatchScan[ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),w...
[info]       :                                +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2093]
[info]       +- *(34) Sort [customer_id#2397 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(customer_id#2397, 4), true, [id=#2675]
[info]             +- Union
[info]                :- LocalTableScan <empty>, [customer_id#2397, year_total#2405]
[info]                :- LocalTableScan <empty>, [customer_id#2319, year_total#2327]
[info]                +- *(33) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1044 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1043 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]                   +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#2649]
[info]                      +- *(32) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#1044 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(9,2)))), DecimalType(9,2), true) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#1043 as decimal(10,2)))), DecimalType(10,2), true)) / 2.00), DecimalType(14,6), true))])
[info]                         +- *(32) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, d_year#337]
[info]                            +- *(32) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(32) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]                               :  +- *(32) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]                               :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2080]
[info]                               :     +- *(32) Project [ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]                               :        +- *(32) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]                               :           +- *(32) ColumnarToRow
[info]                               :              +- BatchScan[ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ws_ext_list_price#1045, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),w...
[info]                               +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#2128]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1485 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q4                                                 1486           1486           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q5
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#2800 ASC NULLS FIRST,id#2801 ASC NULLS FIRST], output=[channel#2800,id#2801,sales#2731,returns#2732,profit#2733])
[info] +- *(24) HashAggregate(keys=[channel#2800, id#2801, spark_grouping_id#2797], functions=[sum(sales#2746), sum(returns#2748), sum(profit#2724)])
[info]    +- Exchange hashpartitioning(channel#2800, id#2801, spark_grouping_id#2797, 4), true, [id=#3222]
[info]       +- *(23) HashAggregate(keys=[channel#2800, id#2801, spark_grouping_id#2797], functions=[partial_sum(sales#2746), partial_sum(returns#2748), partial_sum(profit#2724)])
[info]          +- *(23) Expand [List(sales#2746, returns#2748, profit#2724, channel#2798, id#2799, 0), List(sales#2746, returns#2748, profit#2724, channel#2798, null, 1), List(sales#2746, returns#2748, profit#2724, null, null, 3)], [sales#2746, returns#2748, profit#2724, channel#2800, id#2801, spark_grouping_id#2797]
[info]             +- Union
[info]                :- *(6) HashAggregate(keys=[s_store_id#671], functions=[sum(UnscaledValue(sales_price#2736)), sum(UnscaledValue(return_amt#2738)), sum(UnscaledValue(profit#2737)), sum(UnscaledValue(net_loss#2739))])
[info]                :  +- Exchange hashpartitioning(s_store_id#671, 4), true, [id=#3065]
[info]                :     +- *(5) HashAggregate(keys=[s_store_id#671], functions=[partial_sum(UnscaledValue(sales_price#2736)), partial_sum(UnscaledValue(return_amt#2738)), partial_sum(UnscaledValue(profit#2737)), partial_sum(UnscaledValue(net_loss#2739))])
[info]                :        +- *(5) Project [sales_price#2736, profit#2737, return_amt#2738, net_loss#2739, s_store_id#671]
[info]                :           +- *(5) BroadcastHashJoin [store_sk#2734], [s_store_sk#670], Inner, BuildRight
[info]                :              :- *(5) Project [store_sk#2734, sales_price#2736, profit#2737, return_amt#2738, net_loss#2739]
[info]                :              :  +- *(5) BroadcastHashJoin [date_sk#2735], [d_date_sk#331], Inner, BuildRight
[info]                :              :     :- Union
[info]                :              :     :  :- *(1) Project [ss_store_sk#1170 AS store_sk#2734, ss_sold_date_sk#1186 AS date_sk#2735, ss_ext_sales_price#1178 AS sales_price#2736, ss_net_profit#1185 AS profit#2737, 0.00 AS return_amt#2738, 0.00 AS net_loss#2739]
[info]                :              :     :  :  +- *(1) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]                :              :     :  :     +- *(1) ColumnarToRow
[info]                :              :     :  :        +- BatchScan[ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>
[info]                :              :     :  +- *(2) Project [sr_store_sk#797 AS store_sk#2740, sr_returned_date_sk#810 AS date_sk#2741, 0.00 AS sales_price#2742, 0.00 AS profit#2743, sr_return_amt#801 AS return_amt#2744, sr_net_loss#809 AS net_loss#2745]
[info]                :              :     :     +- *(2) Filter (isnotnull(sr_returned_date_sk#810) AND isnotnull(sr_store_sk#797))
[info]                :              :     :        +- *(2) ColumnarToRow
[info]                :              :     :           +- BatchScan[sr_store_sk#797, sr_return_amt#801, sr_net_loss#809, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
[info]                :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3050]
[info]                :              :        +- *(3) Project [d_date_sk#331]
[info]                :              :           +- *(3) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 11192)) AND (d_date#333 <= 11206)) AND isnotnull(d_date_sk#331))
[info]                :              :              +- *(3) ColumnarToRow
[info]                :              :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3059]
[info]                :                 +- *(4) Project [s_store_sk#670, s_store_id#671]
[info]                :                    +- *(4) Filter isnotnull(s_store_sk#670)
[info]                :                       +- *(4) ColumnarToRow
[info]                :                          +- BatchScan[s_store_sk#670, s_store_id#671] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string>
[info]                :- *(12) HashAggregate(keys=[cp_catalog_page_id#1], functions=[sum(UnscaledValue(sales_price#2752)), sum(UnscaledValue(return_amt#2754)), sum(UnscaledValue(profit#2753)), sum(UnscaledValue(net_loss#2755))])
[info]                :  +- Exchange hashpartitioning(cp_catalog_page_id#1, 4), true, [id=#3193]
[info]                :     +- *(11) HashAggregate(keys=[cp_catalog_page_id#1], functions=[partial_sum(UnscaledValue(sales_price#2752)), partial_sum(UnscaledValue(return_amt#2754)), partial_sum(UnscaledValue(profit#2753)), partial_sum(UnscaledValue(net_loss#2755))])
[info]                :        +- *(11) Project [sales_price#2752, profit#2753, return_amt#2754, net_loss#2755, cp_catalog_page_id#1]
[info]                :           +- *(11) BroadcastHashJoin [page_sk#2750], [cp_catalog_page_sk#0], Inner, BuildRight
[info]                :              :- *(11) Project [page_sk#2750, sales_price#2752, profit#2753, return_amt#2754, net_loss#2755]
[info]                :              :  +- *(11) BroadcastHashJoin [date_sk#2751], [d_date_sk#331], Inner, BuildRight
[info]                :              :     :- Union
[info]                :              :     :  :- *(7) Project [cs_catalog_page_sk#889 AS page_sk#2750, cs_sold_date_sk#911 AS date_sk#2751, cs_ext_sales_price#900 AS sales_price#2752, cs_net_profit#910 AS profit#2753, 0.00 AS return_amt#2754, 0.00 AS net_loss#2755]
[info]                :              :     :  :  +- *(7) Filter (isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_catalog_page_sk#889))
[info]                :              :     :  :     +- *(7) ColumnarToRow
[info]                :              :     :  :        +- BatchScan[cs_catalog_page_sk#889, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_catalog_page_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>
[info]                :              :     :  +- *(8) Project [cr_catalog_page_sk#52 AS page_sk#2756, cr_returned_date_sk#67 AS date_sk#2757, 0.00 AS sales_price#2758, 0.00 AS profit#2759, cr_return_amount#58 AS return_amt#2760, cr_net_loss#66 AS net_loss#2761]
[info]                :              :     :     +- *(8) Filter (isnotnull(cr_returned_date_sk#67) AND isnotnull(cr_catalog_page_sk#52))
[info]                :              :     :        +- *(8) ColumnarToRow
[info]                :              :     :           +- BatchScan[cr_catalog_page_sk#52, cr_return_amount#58, cr_net_loss#66, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_catalog_page_sk:int,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
[info]                :              :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3050]
[info]                :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3095]
[info]                :                 +- *(10) Project [cp_catalog_page_sk#0, cp_catalog_page_id#1]
[info]                :                    +- *(10) Filter isnotnull(cp_catalog_page_sk#0)
[info]                :                       +- *(10) ColumnarToRow
[info]                :                          +- BatchScan[cp_catalog_page_sk#0, cp_catalog_page_id#1] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_page], ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>
[info]                +- *(22) HashAggregate(keys=[web_site_id#1367], functions=[sum(UnscaledValue(sales_price#2768)), sum(UnscaledValue(return_amt#2770)), sum(UnscaledValue(profit#2769)), sum(UnscaledValue(net_loss#2771))])
[info]                   +- Exchange hashpartitioning(web_site_id#1367, 4), true, [id=#3213]
[info]                      +- *(21) HashAggregate(keys=[web_site_id#1367], functions=[partial_sum(UnscaledValue(sales_price#2768)), partial_sum(UnscaledValue(return_amt#2770)), partial_sum(UnscaledValue(profit#2769)), partial_sum(UnscaledValue(net_loss#2771))])
[info]                         +- *(21) Project [sales_price#2768, profit#2769, return_amt#2770, net_loss#2771, web_site_id#1367]
[info]                            +- *(21) BroadcastHashJoin [wsr_web_site_sk#2766], [web_site_sk#1366], Inner, BuildRight
[info]                               :- *(21) Project [wsr_web_site_sk#2766, sales_price#2768, profit#2769, return_amt#2770, net_loss#2771]
[info]                               :  +- *(21) BroadcastHashJoin [date_sk#2767], [d_date_sk#331], Inner, BuildRight
[info]                               :     :- Union
[info]                               :     :  :- *(13) Project [ws_web_site_sk#1033 AS wsr_web_site_sk#2766, ws_sold_date_sk#1054 AS date_sk#2767, ws_ext_sales_price#1043 AS sales_price#2768, ws_net_profit#1053 AS profit#2769, 0.00 AS return_amt#2770, 0.00 AS net_loss#2771]
[info]                               :     :  :  +- *(13) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_web_site_sk#1033))
[info]                               :     :  :     +- *(13) ColumnarToRow
[info]                               :     :  :        +- BatchScan[ws_web_site_sk#1033, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_web_site_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>
[info]                               :     :  +- *(18) Project [ws_web_site_sk#1033 AS wsr_web_site_sk#2772, wr_returned_date_sk#1286 AS date_sk#2773, 0.00 AS sales_price#2774, 0.00 AS profit#2775, wr_return_amt#1277 AS return_amt#2776, wr_net_loss#1285 AS net_loss#2777]
[info]                               :     :     +- *(18) SortMergeJoin [wr_item_sk#1264, wr_order_number#1275L], [ws_item_sk#1023, ws_order_number#1037L], Inner
[info]                               :     :        :- *(15) Sort [wr_item_sk#1264 ASC NULLS FIRST, wr_order_number#1275L ASC NULLS FIRST], false, 0
[info]                               :     :        :  +- Exchange hashpartitioning(wr_item_sk#1264, wr_order_number#1275L, 4), true, [id=#3115]
[info]                               :     :        :     +- *(14) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286]
[info]                               :     :        :        +- *(14) Filter isnotnull(wr_returned_date_sk#1286)
[info]                               :     :        :           +- *(14) ColumnarToRow
[info]                               :     :        :              +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
[info]                               :     :        +- *(17) Sort [ws_item_sk#1023 ASC NULLS FIRST, ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]                               :     :           +- Exchange hashpartitioning(ws_item_sk#1023, ws_order_number#1037L, 4), true, [id=#3125]
[info]                               :     :              +- *(16) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_order_number#1037L]
[info]                               :     :                 +- *(16) Filter ((isnotnull(ws_item_sk#1023) AND isnotnull(ws_order_number#1037L)) AND isnotnull(ws_web_site_sk#1033))
[info]                               :     :                    +- *(16) ColumnarToRow
[info]                               :     :                       +- BatchScan[ws_item_sk#1023, ws_web_site_sk#1033, ws_order_number#1037L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_order_number:bigint>
[info]                               :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3050]
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3149]
[info]                                  +- *(20) Project [web_site_sk#1366, web_site_id#1367]
[info]                                     +- *(20) Filter isnotnull(web_site_sk#1366)
[info]                                        +- *(20) ColumnarToRow
[info]                                           +- BatchScan[web_site_sk#1366, web_site_id#1367] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_site], ReadSchema: struct<web_site_sk:int,web_site_id:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 552 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q5                                                  553            553           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q6
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[cnt#2906L ASC NULLS FIRST], output=[state#2905,cnt#2906L])
[info] +- *(13) Project [state#2905, cnt#2906L]
[info]    +- *(13) Filter (count(1)#2912L >= 10)
[info]       +- *(13) HashAggregate(keys=[ca_state#241], functions=[count(1)])
[info]          +- Exchange hashpartitioning(ca_state#241, 4), true, [id=#3535]
[info]             +- *(12) HashAggregate(keys=[ca_state#241], functions=[partial_count(1)])
[info]                +- *(12) Project [ca_state#241]
[info]                   +- *(12) SortMergeJoin [ss_item_sk#1165], [i_item_sk#496], Inner
[info]                      :- *(8) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                      :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#3504]
[info]                      :     +- *(7) Project [ca_state#241, ss_item_sk#1165]
[info]                      :        +- *(7) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                      :           :- *(7) Project [ca_state#241, ss_item_sk#1165, ss_sold_date_sk#1186]
[info]                      :           :  +- *(7) SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner
[info]                      :           :     :- *(3) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                      :           :     :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#3477]
[info]                      :           :     :     +- *(2) Project [ca_state#241, c_customer_sk#156]
[info]                      :           :     :        +- *(2) BroadcastHashJoin [ca_address_sk#233], [c_current_addr_sk#160], Inner, BuildLeft
[info]                      :           :     :           :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3468]
[info]                      :           :     :           :  +- *(1) Project [ca_address_sk#233, ca_state#241]
[info]                      :           :     :           :     +- *(1) Filter isnotnull(ca_address_sk#233)
[info]                      :           :     :           :        +- *(1) ColumnarToRow
[info]                      :           :     :           :           +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                      :           :     :           +- *(2) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]                      :           :     :              +- *(2) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_customer_sk#156))
[info]                      :           :     :                 +- *(2) ColumnarToRow
[info]                      :           :     :                    +- BatchScan[c_customer_sk#156, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
[info]                      :           :     +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                      :           :        +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#3487]
[info]                      :           :           +- *(4) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                      :           :              +- *(4) Filter ((isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_item_sk#1165))
[info]                      :           :                 +- *(4) ColumnarToRow
[info]                      :           :                    +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int>
[info]                      :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3499]
[info]                      :              +- *(6) Project [d_date_sk#331]
[info]                      :                 +- *(6) Filter ((isnotnull(d_month_seq#334) AND isnotnull(d_date_sk#331)) AND (d_month_seq#334 = Subquery scalar-subquery#2903, [id=#3369]))
[info]                      :                    :  +- Subquery scalar-subquery#2903, [id=#3369]
[info]                      :                    :     +- *(1) HashAggregate(keys=[d_month_seq#334], functions=[])
[info]                      :                    :        +- *(1) HashAggregate(keys=[d_month_seq#334], functions=[])
[info]                      :                    :           +- *(1) Project [d_month_seq#334]
[info]                      :                    :              +- *(1) Filter (((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2000)) AND (d_moy#339 = 1))
[info]                      :                    :                 +- *(1) ColumnarToRow
[info]                      :                    :                    +- BatchScan[d_month_seq#334, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>
[info]                      :                    +- *(6) ColumnarToRow
[info]                      :                       +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                      +- *(11) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]                         +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#3526]
[info]                            +- *(10) Project [i_item_sk#496]
[info]                               +- *(10) Filter (cast(i_current_price#501 as decimal(14,7)) > CheckOverflow((1.200000 * promote_precision(avg(i_current_price)#2910)), DecimalType(14,7), true))
[info]                                  +- *(10) BroadcastHashJoin [i_category#508], [i_category#508#2916], LeftOuter, BuildRight
[info]                                     :- *(10) Project [i_item_sk#496, i_current_price#501, i_category#508]
[info]                                     :  +- *(10) Filter (isnotnull(i_current_price#501) AND isnotnull(i_item_sk#496))
[info]                                     :     +- *(10) ColumnarToRow
[info]                                     :        +- BatchScan[i_item_sk#496, i_current_price#501, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_category:string>
[info]                                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true])), [id=#3520]
[info]                                        +- *(9) HashAggregate(keys=[i_category#508], functions=[avg(UnscaledValue(i_current_price#501))])
[info]                                           +- *(9) HashAggregate(keys=[i_category#508], functions=[partial_avg(UnscaledValue(i_current_price#501))])
[info]                                              +- *(9) Project [i_current_price#501, i_category#508]
[info]                                                 +- *(9) Filter isnotnull(i_category#508)
[info]                                                    +- *(9) ColumnarToRow
[info]                                                       +- BatchScan[i_current_price#501, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_current_price:decimal(7,2),i_category:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 282 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q6                                                  282            282           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST], output=[i_item_id#497,agg1#2955,agg2#2956,agg3#2957,agg4#2958])
[info] +- *(6) HashAggregate(keys=[i_item_id#497], functions=[avg(cast(ss_quantity#1173 as bigint)), avg(UnscaledValue(ss_list_price#1175)), avg(UnscaledValue(ss_coupon_amt#1182)), avg(UnscaledValue(ss_sales_price#1176))])
[info]    +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#3716]
[info]       +- *(5) HashAggregate(keys=[i_item_id#497], functions=[partial_avg(cast(ss_quantity#1173 as bigint)), partial_avg(UnscaledValue(ss_list_price#1175)), partial_avg(UnscaledValue(ss_coupon_amt#1182)), partial_avg(UnscaledValue(ss_sales_price#1176))])
[info]          +- *(5) Project [ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, i_item_id#497]
[info]             +- *(5) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]                :- *(5) Project [ss_promo_sk#1171, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, i_item_id#497]
[info]                :  +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :     :- *(5) Project [ss_item_sk#1165, ss_promo_sk#1171, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182]
[info]                :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :- *(5) Project [ss_item_sk#1165, ss_promo_sk#1171, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                :     :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]                :     :     :     :- *(5) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_promo_sk#1171, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                :     :     :     :  +- *(5) Filter (((isnotnull(ss_cdemo_sk#1167) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_promo_sk#1171))
[info]                :     :     :     :     +- *(5) ColumnarToRow
[info]                :     :     :     :        +- BatchScan[ss_item_sk#1165, ss_cdemo_sk#1167, ss_promo_sk#1171, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_promo_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),...
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3683]
[info]                :     :     :        +- *(1) Project [cd_demo_sk#290]
[info]                :     :     :           +- *(1) Filter ((((((isnotnull(cd_education_status#293) AND isnotnull(cd_marital_status#292)) AND isnotnull(cd_gender#291)) AND (cd_gender#291 = M)) AND (cd_marital_status#292 = S)) AND (cd_education_status#293 = College)) AND isnotnull(cd_demo_sk#290))
[info]                :     :     :              +- *(1) ColumnarToRow
[info]                :     :     :                 +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3692]
[info]                :     :        +- *(2) Project [d_date_sk#331]
[info]                :     :           +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                :     :              +- *(2) ColumnarToRow
[info]                :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3701]
[info]                :        +- *(3) Project [i_item_sk#496, i_item_id#497]
[info]                :           +- *(3) Filter isnotnull(i_item_sk#496)
[info]                :              +- *(3) ColumnarToRow
[info]                :                 +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3710]
[info]                   +- *(4) Project [p_promo_sk#589]
[info]                      +- *(4) Filter (((p_channel_email#598 = N) OR (p_channel_event#603 = N)) AND isnotnull(p_promo_sk#589))
[info]                         +- *(4) ColumnarToRow
[info]                            +- BatchScan[p_promo_sk#589, p_channel_email#598, p_channel_event#603] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 181 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q7                                                  182            182           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q8
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[s_store_name#675 ASC NULLS FIRST], output=[s_store_name#675,sum(ss_net_profit)#3034])
[info] +- *(8) HashAggregate(keys=[s_store_name#675], functions=[sum(UnscaledValue(ss_net_profit#1185))])
[info]    +- Exchange hashpartitioning(s_store_name#675, 4), true, [id=#3970]
[info]       +- *(7) HashAggregate(keys=[s_store_name#675], functions=[partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]          +- *(7) Project [ss_net_profit#1185, s_store_name#675]
[info]             +- *(7) BroadcastHashJoin [substring(s_zip#695, 1, 2)], [substring(ca_zip#3024, 1, 2)], Inner, BuildRight
[info]                :- *(7) Project [ss_net_profit#1185, s_store_name#675, s_zip#695]
[info]                :  +- *(7) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :     :- *(7) Project [ss_store_sk#1170, ss_net_profit#1185]
[info]                :     :  +- *(7) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :- *(7) Project [ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                :     :     :  +- *(7) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]                :     :     :     +- *(7) ColumnarToRow
[info]                :     :     :        +- BatchScan[ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_net_profit:decimal(7,2)>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3921]
[info]                :     :        +- *(1) Project [d_date_sk#331]
[info]                :     :           +- *(1) Filter ((((isnotnull(d_qoy#341) AND isnotnull(d_year#337)) AND (d_qoy#341 = 2)) AND (d_year#337 = 1998)) AND isnotnull(d_date_sk#331))
[info]                :     :              +- *(1) ColumnarToRow
[info]                :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3930]
[info]                :        +- *(2) Project [s_store_sk#670, s_store_name#675, s_zip#695]
[info]                :           +- *(2) Filter (isnotnull(s_store_sk#670) AND isnotnull(s_zip#695))
[info]                :              +- *(2) ColumnarToRow
[info]                :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_zip:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(substring(input[0, string, true], 1, 2))), [id=#3964]
[info]                   +- *(6) HashAggregate(keys=[ca_zip#3024], functions=[])
[info]                      +- *(6) HashAggregate(keys=[ca_zip#3024], functions=[])
[info]                         +- *(6) Project [substring(ca_zip#242, 1, 5) AS ca_zip#3024]
[info]                            +- SortMergeJoin [coalesce(substring(ca_zip#242, 1, 5), ), isnull(substring(ca_zip#242, 1, 5))], [coalesce(ca_zip#3025, ), isnull(ca_zip#3025)], LeftSemi
[info]                               :- *(3) Sort [coalesce(substring(ca_zip#242, 1, 5), ) ASC NULLS FIRST, isnull(substring(ca_zip#242, 1, 5)) ASC NULLS FIRST], false, 0
[info]                               :  +- *(3) Filter (substring(ca_zip#242, 1, 5) INSET (56910,69952,63792,39371,74351,11101,25003,97189,57834,73134,62377,51200,32754,22752,86379,14171,91110,40162,98569,28709,13394,66162,25733,25782,26065,18383,51949,87343,50298,83849,33786,64528,23470,67030,46136,25280,46820,77721,99076,18426,31880,17871,98235,45748,49156,18652,72013,51622,43848,78567,41248,13695,44165,67853,54917,53179,64034,10567,71791,68908,55565,59402,64147,85816,57855,61547,27700,68100,28810,58263,15723,83933,51103,58058,90578,82276,81096,81426,96451,77556,38607,76638,18906,62971,57047,48425,35576,11928,30625,83444,73520,51650,57647,60099,30122,94983,24128,10445,41368,26233,26859,21756,24676,19849,36420,38193,58470,39127,13595,87501,24317,15455,69399,98025,81019,48033,11376,39516,67875,92712,14867,38122,29741,42961,30469,51211,56458,15559,16021,33123,33282,33515,72823,54601,76698,56240,72175,60279,20004,68806,72325,28488,43933,50412,45200,22246,78668,79777,96765,67301,73273,49448,82636,23932,47305,29839,39192,18799,61265,37125,58943,64457,88424,24610,84935,89360,68893,30431,28898,10336,90257,59166,46081,26105,96888,36634,86284,35258,39972,22927,73241,53268,24206,27385,99543,31671,14663,30903,39861,24996,63089,88086,83921,21076,67897,66708,45721,60576,25103,52867,30450,36233,30010,96576,73171,56571,56575,64544,13955,78451,43285,18119,16725,83041,76107,79994,54364,35942,56691,19769,63435,34102,18845,22744,13354,75691,45549,23968,31387,83144,13375,15765,28577,88190,19736,73650,37930,25989,83926,94898,51798,39736,22437,55253,38415,71256,18376,42029,25858,44438,19515,38935,51649,71954,15882,18767,63193,25486,49130,37126,40604,34425,17043,12305,11634,26653,94167,36446,10516,67473,66864,72425,63981,18842,22461,42666,47770,69035,70372,28587,45266,15371,15798,45375,90225,16807,31016,68014,21337,19505,50016,10144,84093,21286,19430,34322,91068,94945,72305,24671,58048,65084,28545,21195,20548,22245,77191,96976,48583,76231,15734,61810,11356,68621,68786,98359,41367,26689,69913,76614,68101,88885,50308,79077,18270,28915,29178,53672,62878,10390,14922,68341,56529,41766,68309,56616,15126,61860,97789,11489,45692,41918,72151,72550,27156,36495,70738,17879,53535,17920,68880,78890,35850,14089,58078,65164,27068,26231,13376,57665,32213,77610,87816,21309,15146,86198,91137,55307,67467,40558,94627,82136,22351,89091,20260,23006,91393,47537,62496,98294,18840,71286,81312,31029,70466,35458,14060,22685,28286,25631,19512,40081,63837,14328,35474,22152,76232,51061,86057,17183) AND isnotnull(substring(ca_zip#242, 1, 5)))
[info]                               :     +- *(3) ColumnarToRow
[info]                               :        +- BatchScan[ca_zip#242] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_zip:string>
[info]                               +- *(5) Sort [coalesce(ca_zip#3025, ) ASC NULLS FIRST, isnull(ca_zip#3025) ASC NULLS FIRST], false, 0
[info]                                  +- *(5) Project [ca_zip#3025]
[info]                                     +- *(5) Filter (count(1)#3030L > 10)
[info]                                        +- *(5) HashAggregate(keys=[ca_zip#242], functions=[count(1)])
[info]                                           +- *(5) HashAggregate(keys=[ca_zip#242], functions=[partial_count(1)])
[info]                                              +- *(5) Project [ca_zip#242]
[info]                                                 +- *(5) BroadcastHashJoin [ca_address_sk#233], [c_current_addr_sk#160], Inner, BuildLeft
[info]                                                    :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#3944]
[info]                                                    :  +- *(4) Project [ca_address_sk#233, ca_zip#242]
[info]                                                    :     +- *(4) Filter isnotnull(ca_address_sk#233)
[info]                                                    :        +- *(4) ColumnarToRow
[info]                                                    :           +- BatchScan[ca_address_sk#233, ca_zip#242] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_zip:string>
[info]                                                    +- *(5) Project [c_current_addr_sk#160]
[info]                                                       +- *(5) Filter ((isnotnull(c_preferred_cust_flag#166) AND (c_preferred_cust_flag#166 = Y)) AND isnotnull(c_current_addr_sk#160))
[info]                                                          +- *(5) ColumnarToRow
[info]                                                             +- BatchScan[c_current_addr_sk#160, c_preferred_cust_flag#166] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_current_addr_sk:int,c_preferred_cust_flag:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 289 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q8                                                  290            290           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q9
[info] == Physical Plan ==
[info] *(1) Project [CASE WHEN (Subquery scalar-subquery#3117, [id=#4014] > 62316685) THEN Subquery scalar-subquery#3118, [id=#4047] ELSE Subquery scalar-subquery#3119, [id=#4080] END AS bucket1#3120, CASE WHEN (Subquery scalar-subquery#3121, [id=#4113] > 19045798) THEN Subquery scalar-subquery#3122, [id=#4146] ELSE Subquery scalar-subquery#3123, [id=#4179] END AS bucket2#3124, CASE WHEN (Subquery scalar-subquery#3125, [id=#4212] > 365541424) THEN Subquery scalar-subquery#3126, [id=#4245] ELSE Subquery scalar-subquery#3127, [id=#4278] END AS bucket3#3128, CASE WHEN (Subquery scalar-subquery#3129, [id=#4311] > 216357808) THEN Subquery scalar-subquery#3130, [id=#4344] ELSE Subquery scalar-subquery#3131, [id=#4377] END AS bucket4#3132, CASE WHEN (Subquery scalar-subquery#3133, [id=#4410] > 184483884) THEN Subquery scalar-subquery#3134, [id=#4443] ELSE Subquery scalar-subquery#3135, [id=#4476] END AS bucket5#3136]
[info] :  :- Subquery scalar-subquery#3117, [id=#4014]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[count(1)])
[info] :  :     +- Exchange SinglePartition, true, [id=#4010]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :           +- *(1) Project
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 1)) AND (ss_quantity#1173 <= 20))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int>
[info] :  :- Subquery scalar-subquery#3118, [id=#4047]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4043]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :           +- *(1) Project [ss_ext_discount_amt#1177]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 1)) AND (ss_quantity#1173 <= 20))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_ext_discount_amt#1177] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3119, [id=#4080]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4076]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :           +- *(1) Project [ss_net_paid#1183]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 1)) AND (ss_quantity#1173 <= 20))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_net_paid:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3121, [id=#4113]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[count(1)])
[info] :  :     +- Exchange SinglePartition, true, [id=#4109]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :           +- *(1) Project
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 21)) AND (ss_quantity#1173 <= 40))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int>
[info] :  :- Subquery scalar-subquery#3122, [id=#4146]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4142]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :           +- *(1) Project [ss_ext_discount_amt#1177]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 21)) AND (ss_quantity#1173 <= 40))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_ext_discount_amt#1177] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3123, [id=#4179]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4175]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :           +- *(1) Project [ss_net_paid#1183]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 21)) AND (ss_quantity#1173 <= 40))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_net_paid:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3125, [id=#4212]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[count(1)])
[info] :  :     +- Exchange SinglePartition, true, [id=#4208]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :           +- *(1) Project
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 41)) AND (ss_quantity#1173 <= 60))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int>
[info] :  :- Subquery scalar-subquery#3126, [id=#4245]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4241]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :           +- *(1) Project [ss_ext_discount_amt#1177]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 41)) AND (ss_quantity#1173 <= 60))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_ext_discount_amt#1177] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3127, [id=#4278]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4274]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :           +- *(1) Project [ss_net_paid#1183]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 41)) AND (ss_quantity#1173 <= 60))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_net_paid:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3129, [id=#4311]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[count(1)])
[info] :  :     +- Exchange SinglePartition, true, [id=#4307]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :           +- *(1) Project
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 61)) AND (ss_quantity#1173 <= 80))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int>
[info] :  :- Subquery scalar-subquery#3130, [id=#4344]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4340]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :           +- *(1) Project [ss_ext_discount_amt#1177]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 61)) AND (ss_quantity#1173 <= 80))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_ext_discount_amt#1177] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3131, [id=#4377]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4373]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_net_paid#1183))])
[info] :  :           +- *(1) Project [ss_net_paid#1183]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 61)) AND (ss_quantity#1173 <= 80))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_net_paid:decimal(7,2)>
[info] :  :- Subquery scalar-subquery#3133, [id=#4410]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[count(1)])
[info] :  :     +- Exchange SinglePartition, true, [id=#4406]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :           +- *(1) Project
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 81)) AND (ss_quantity#1173 <= 100))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int>
[info] :  :- Subquery scalar-subquery#3134, [id=#4443]
[info] :  :  +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :     +- Exchange SinglePartition, true, [id=#4439]
[info] :  :        +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_ext_discount_amt#1177))])
[info] :  :           +- *(1) Project [ss_ext_discount_amt#1177]
[info] :  :              +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 81)) AND (ss_quantity#1173 <= 100))
[info] :  :                 +- *(1) ColumnarToRow
[info] :  :                    +- BatchScan[ss_quantity#1173, ss_ext_discount_amt#1177] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2)>
[info] :  +- Subquery scalar-subquery#3135, [id=#4476]
[info] :     +- *(2) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_net_paid#1183))])
[info] :        +- Exchange SinglePartition, true, [id=#4472]
[info] :           +- *(1) HashAggregate(keys=[], functions=[partial_avg(UnscaledValue(ss_net_paid#1183))])
[info] :              +- *(1) Project [ss_net_paid#1183]
[info] :                 +- *(1) Filter ((isnotnull(ss_quantity#1173) AND (ss_quantity#1173 >= 81)) AND (ss_quantity#1173 <= 100))
[info] :                    +- *(1) ColumnarToRow
[info] :                       +- BatchScan[ss_quantity#1173, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_net_paid:decimal(7,2)>
[info] +- *(1) Filter (isnotnull(r_reason_sk#1475) AND (r_reason_sk#1475 = 1))
[info]    +- *(1) ColumnarToRow
[info]       +- BatchScan[r_reason_sk#1475] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/reason], ReadSchema: struct<r_reason_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 758 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q9                                                  758            758           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q10
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[cd_gender#291 ASC NULLS FIRST,cd_marital_status#292 ASC NULLS FIRST,cd_education_status#293 ASC NULLS FIRST,cd_purchase_estimate#294 ASC NULLS FIRST,cd_credit_rating#295 ASC NULLS FIRST,cd_dep_count#296 ASC NULLS FIRST,cd_dep_employed_count#297 ASC NULLS FIRST,cd_dep_college_count#298 ASC NULLS FIRST], output=[cd_gender#291,cd_marital_status#292,cd_education_status#293,cnt1#3335L,cd_purchase_estimate#294,cnt2#3336L,cd_credit_rating#295,cnt3#3337L,cd_dep_count#296,cnt4#3338L,cd_dep_employed_count#297,cnt5#3339L,cd_dep_college_count#298,cnt6#3340L])
[info] +- *(15) HashAggregate(keys=[cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[count(1)])
[info]    +- Exchange hashpartitioning(cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298, 4), true, [id=#5094]
[info]       +- *(14) HashAggregate(keys=[cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[partial_count(1)])
[info]          +- *(14) Project [cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]             +- *(14) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]                :- *(14) Project [c_current_cdemo_sk#158]
[info]                :  +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                :     :- *(14) Project [c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :  +- *(14) Filter (exists#3366 OR exists#3367)
[info]                :     :     +- SortMergeJoin [c_customer_sk#156], [cs_ship_customer_sk#884], ExistenceJoin(exists#3367)
[info]                :     :        :- SortMergeJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], ExistenceJoin(exists#3366)
[info]                :     :        :  :- SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], LeftSemi
[info]                :     :        :  :  :- *(2) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                :     :        :  :  :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#4952]
[info]                :     :        :  :  :     +- *(1) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :        :  :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_current_cdemo_sk#158))
[info]                :     :        :  :  :           +- *(1) ColumnarToRow
[info]                :     :        :  :  :              +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
[info]                :     :        :  :  +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                :     :        :  :     +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#4970]
[info]                :     :        :  :        +- *(4) Project [ss_customer_sk#1166]
[info]                :     :        :  :           +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :        :  :              :- *(4) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                :     :        :  :              :  +- *(4) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :     :        :  :              :     +- *(4) ColumnarToRow
[info]                :     :        :  :              :        +- BatchScan[ss_sold_time_sk#1164, ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_sales_price#1176, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_ext_tax#1181, ss_coupon_amt#1182, ss_net_paid#1183, ss_net_paid_inc_tax#1184, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_a...
[info]                :     :        :  :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#4965]
[info]                :     :        :  :                 +- *(3) Project [d_date_sk#331]
[info]                :     :        :  :                    +- *(3) Filter (((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2002)) AND (d_moy#339 >= 1)) AND (d_moy#339 <= 4)) AND isnotnull(d_date_sk#331))
[info]                :     :        :  :                       +- *(3) ColumnarToRow
[info]                :     :        :  :                          +- BatchScan[d_date_sk#331, d_date_id#332, d_date#333, d_month_seq#334, d_week_seq#335, d_quarter_seq#336, d_year#337, d_dow#338, d_moy#339, d_dom#340, d_qoy#341, d_fy_year#342, d_fy_quarter_seq#343, d_fy_week_seq#344, d_day_name#345, d_quarter_name#346, d_holiday#347, d_weekend#348, d_following_holiday#349, d_first_dom#350, d_last_dom#351, d_same_day_ly#352, d_same_day_lq#353, d_current_day#354, ... 4 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:in...
[info]                :     :        :  +- *(8) Sort [ws_bill_customer_sk#1024 ASC NULLS FIRST], false, 0
[info]                :     :        :     +- Exchange hashpartitioning(ws_bill_customer_sk#1024, 4), true, [id=#5062]
[info]                :     :        :        +- *(7) Project [ws_bill_customer_sk#1024]
[info]                :     :        :           +- *(7) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :        :              :- *(7) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                :     :        :              :  +- *(7) Filter isnotnull(ws_sold_date_sk#1054)
[info]                :     :        :              :     +- *(7) ColumnarToRow
[info]                :     :        :              :        +- BatchScan[ws_sold_time_sk#1021, ws_ship_date_sk#1022, ws_item_sk#1023, ws_bill_customer_sk#1024, ws_bill_cdemo_sk#1025, ws_bill_hdemo_sk#1026, ws_bill_addr_sk#1027, ws_ship_customer_sk#1028, ws_ship_cdemo_sk#1029, ws_ship_hdemo_sk#1030, ws_ship_addr_sk#1031, ws_web_page_sk#1032, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_promo_sk#1036, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_list_price#1040, ws_sales_price#1041, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cde...
[info]                :     :        :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#4965]
[info]                :     :        +- *(11) Sort [cs_ship_customer_sk#884 ASC NULLS FIRST], false, 0
[info]                :     :           +- Exchange hashpartitioning(cs_ship_customer_sk#884, 4), true, [id=#5080]
[info]                :     :              +- *(10) Project [cs_ship_customer_sk#884]
[info]                :     :                 +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :                    :- *(10) Project [cs_ship_customer_sk#884, cs_sold_date_sk#911]
[info]                :     :                    :  +- *(10) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :                    :     +- *(10) ColumnarToRow
[info]                :     :                    :        +- BatchScan[cs_sold_time_sk#878, cs_ship_date_sk#879, cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_bill_addr_sk#883, cs_ship_customer_sk#884, cs_ship_cdemo_sk#885, cs_ship_hdemo_sk#886, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_catalog_page_sk#889, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_list_price#897, cs_sales_price#898, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bi...
[info]                :     :                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#4965]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5021]
[info]                :        +- *(12) Project [ca_address_sk#233]
[info]                :           +- *(12) Filter (ca_county#240 IN (Rush County,Toole County,Jefferson County,Dona Ana County,La Porte County) AND isnotnull(ca_address_sk#233))
[info]                :              +- *(12) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_county#240] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_county:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5030]
[info]                   +- *(13) Project [cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]                      +- *(13) Filter isnotnull(cd_demo_sk#290)
[info]                         +- *(13) ColumnarToRow
[info]                            +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_pur...
[info] 
[info] 
[info]   Stopped after 1 iterations, 332 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q10                                                 332            332           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q11
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[customer_preferred_cust_flag#3463 ASC NULLS FIRST], output=[customer_preferred_cust_flag#3463])
[info] +- *(23) Project [customer_preferred_cust_flag#3463]
[info]    +- *(23) SortMergeJoin [customer_id#3432], [customer_id#3480], Inner, (CASE WHEN (year_total#3478 > 0.00) THEN CheckOverflow((promote_precision(year_total#3488) / promote_precision(year_total#3478)), DecimalType(38,20), true) ELSE null END > CASE WHEN (year_total#3440 > 0.00) THEN CheckOverflow((promote_precision(year_total#3468) / promote_precision(year_total#3440)), DecimalType(38,20), true) ELSE null END)
[info]       :- *(17) Project [customer_id#3432, year_total#3440, customer_preferred_cust_flag#3463, year_total#3468, year_total#3478]
[info]       :  +- *(17) SortMergeJoin [customer_id#3432], [customer_id#3470], Inner
[info]       :     :- *(11) Project [customer_id#3432, year_total#3440, customer_preferred_cust_flag#3463, year_total#3468]
[info]       :     :  +- *(11) SortMergeJoin [customer_id#3432], [customer_id#3460], Inner
[info]       :     :     :- *(5) Sort [customer_id#3432 ASC NULLS FIRST], false, 0
[info]       :     :     :  +- Exchange hashpartitioning(customer_id#3432, 4), true, [id=#5547]
[info]       :     :     :     +- Union
[info]       :     :     :        :- *(4) Filter (isnotnull(year_total#3440) AND (year_total#3440 > 0.00))
[info]       :     :     :        :  +- *(4) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :     :        :     +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, 4), true, [id=#5541]
[info]       :     :     :        :        +- *(3) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :     :        :           +- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, d_year#337]
[info]       :     :     :        :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :     :        :                 :- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :     :        :                 :  +- *(3) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :     :        :                 :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5522]
[info]       :     :     :        :                 :     :  +- *(1) Project [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172]
[info]       :     :     :        :                 :     :     +- *(1) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_customer_id#157))
[info]       :     :     :        :                 :     :        +- *(1) ColumnarToRow
[info]       :     :     :        :                 :     :           +- BatchScan[c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
[info]       :     :     :        :                 :     +- *(3) Project [ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :     :        :                 :        +- *(3) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :     :        :                 :           +- *(3) ColumnarToRow
[info]       :     :     :        :                 :              +- BatchScan[ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:decimal(7,2)>
[info]       :     :     :        :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5535]
[info]       :     :     :        :                    +- *(2) Project [d_date_sk#331, d_year#337]
[info]       :     :     :        :                       +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]       :     :     :        :                          +- *(2) ColumnarToRow
[info]       :     :     :        :                             +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :     :        +- LocalTableScan <empty>, [customer_id#3442, year_total#3450]
[info]       :     :     +- *(10) Sort [customer_id#3460 ASC NULLS FIRST], false, 0
[info]       :     :        +- Exchange hashpartitioning(customer_id#3460, 4), true, [id=#5754]
[info]       :     :           +- Union
[info]       :     :              :- *(9) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :              :  +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, 4), true, [id=#5707]
[info]       :     :              :     +- *(8) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :              :        +- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, d_year#337]
[info]       :     :              :           +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :              :              :- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :              :              :  +- *(8) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :              :              :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5522]
[info]       :     :              :              :     +- *(8) Project [ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :              :              :        +- *(8) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :              :              :           +- *(8) ColumnarToRow
[info]       :     :              :              :              +- BatchScan[ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:decimal(7,2)>
[info]       :     :              :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5570]
[info]       :     :              :                 +- *(7) Project [d_date_sk#331, d_year#337]
[info]       :     :              :                    +- *(7) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND isnotnull(d_date_sk#331))
[info]       :     :              :                       +- *(7) ColumnarToRow
[info]       :     :              :                          +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :              +- LocalTableScan <empty>, [customer_id#3442, customer_preferred_cust_flag#3445, year_total#3450]
[info]       :     +- *(16) Sort [customer_id#3470 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(customer_id#3470, 4), true, [id=#5795]
[info]       :           +- Union
[info]       :              :- LocalTableScan <empty>, [customer_id#3470, year_total#3478]
[info]       :              +- *(15) Filter (isnotnull(year_total#3450) AND (year_total#3450 > 0.00))
[info]       :                 +- *(15) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :                    +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#5789]
[info]       :                       +- *(14) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :                          +- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, d_year#337]
[info]       :                             +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                                :- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]       :                                :  +- *(14) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]       :                                :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5522]
[info]       :                                :     +- *(14) Project [ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]       :                                :        +- *(14) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]       :                                :           +- *(14) ColumnarToRow
[info]       :                                :              +- BatchScan[ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_price:decimal(7,2)>
[info]       :                                +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5535]
[info]       +- *(22) Sort [customer_id#3480 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(customer_id#3480, 4), true, [id=#5897]
[info]             +- Union
[info]                :- LocalTableScan <empty>, [customer_id#3480, year_total#3488]
[info]                +- *(21) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]                   +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#5871]
[info]                      +- *(20) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]                         +- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, d_year#337]
[info]                            +- *(20) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]                               :  +- *(20) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]                               :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5522]
[info]                               :     +- *(20) Project [ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]                               :        +- *(20) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]                               :           +- *(20) ColumnarToRow
[info]                               :              +- BatchScan[ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_price:decimal(7,2)>
[info]                               +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#5570]
[info] 
[info] 
[info]   Stopped after 1 iterations, 640 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q11                                                 640            640           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q12
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_category#508 ASC NULLS FIRST,i_class#506 ASC NULLS FIRST,i_item_id#497 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST,revenueratio#3606 ASC NULLS FIRST], output=[i_item_desc#500,i_category#508,i_class#506,i_current_price#501,itemrevenue#3605,revenueratio#3606])
[info] +- *(6) Project [i_item_desc#500, i_category#508, i_class#506, i_current_price#501, itemrevenue#3605, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#3611) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#3613)), DecimalType(38,17), true) AS revenueratio#3606, i_item_id#497]
[info]    +- Window [sum(_w1#3612) windowspecdefinition(i_class#506, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#3613], [i_class#506]
[info]       +- *(5) Sort [i_class#506 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_class#506, 4), true, [id=#6039]
[info]             +- *(4) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, 4), true, [id=#6035]
[info]                   +- *(3) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                      +- *(3) Project [ws_ext_sales_price#1043, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                         +- *(3) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                            :- *(3) Project [ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :  +- *(3) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                            :     :- *(3) Project [ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                            :     :  +- *(3) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                            :     :     +- *(3) ColumnarToRow
[info]                            :     :        +- BatchScan[ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#6020]
[info]                            :        +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :           +- *(1) Filter (i_category#508 IN (Sports,Books,Home) AND isnotnull(i_item_sk#496))
[info]                            :              +- *(1) ColumnarToRow
[info]                            :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#6029]
[info]                               +- *(2) Project [d_date_sk#331]
[info]                                  +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10644)) AND (d_date#333 <= 10674)) AND isnotnull(d_date_sk#331))
[info]                                     +- *(2) ColumnarToRow
[info]                                        +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 157 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q12                                                 157            157           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q13
[info] == Physical Plan ==
[info] *(7) HashAggregate(keys=[], functions=[avg(cast(ss_quantity#1173 as bigint)), avg(UnscaledValue(ss_ext_sales_price#1178)), avg(UnscaledValue(ss_ext_wholesale_cost#1179)), sum(UnscaledValue(ss_ext_wholesale_cost#1179))])
[info] +- Exchange SinglePartition, true, [id=#6252]
[info]    +- *(6) HashAggregate(keys=[], functions=[partial_avg(cast(ss_quantity#1173 as bigint)), partial_avg(UnscaledValue(ss_ext_sales_price#1178)), partial_avg(UnscaledValue(ss_ext_wholesale_cost#1179)), partial_sum(UnscaledValue(ss_ext_wholesale_cost#1179))])
[info]       +- *(6) Project [ss_quantity#1173, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179]
[info]          +- *(6) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight, (((((((cd_marital_status#292 = M) AND (cd_education_status#293 = Advanced Degree)) AND (ss_sales_price#1176 >= 100.00)) AND (ss_sales_price#1176 <= 150.00)) AND (hd_dep_count#451 = 3)) OR (((((cd_marital_status#292 = S) AND (cd_education_status#293 = College)) AND (ss_sales_price#1176 >= 50.00)) AND (ss_sales_price#1176 <= 100.00)) AND (hd_dep_count#451 = 1))) OR (((((cd_marital_status#292 = W) AND (cd_education_status#293 = 2 yr Degree)) AND (ss_sales_price#1176 >= 150.00)) AND (ss_sales_price#1176 <= 200.00)) AND (hd_dep_count#451 = 1)))
[info]             :- *(6) Project [ss_hdemo_sk#1168, ss_quantity#1173, ss_sales_price#1176, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, cd_marital_status#292, cd_education_status#293]
[info]             :  +- *(6) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]             :     :- *(6) Project [ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_quantity#1173, ss_sales_price#1176, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179]
[info]             :     :  +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :     :     :- *(6) Project [ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_quantity#1173, ss_sales_price#1176, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_sold_date_sk#1186]
[info]             :     :     :  +- *(6) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight, ((((ca_state#241 IN (TX,OH) AND (ss_net_profit#1185 >= 100.00)) AND (ss_net_profit#1185 <= 200.00)) OR ((ca_state#241 IN (OR,NM,KY) AND (ss_net_profit#1185 >= 150.00)) AND (ss_net_profit#1185 <= 300.00))) OR ((ca_state#241 IN (VA,TX,MS) AND (ss_net_profit#1185 >= 50.00)) AND (ss_net_profit#1185 <= 250.00)))
[info]             :     :     :     :- *(6) Project [ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_quantity#1173, ss_sales_price#1176, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]             :     :     :     :  +- *(6) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]             :     :     :     :     :- *(6) Project [ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]             :     :     :     :     :  +- *(6) Filter ((((isnotnull(ss_store_sk#1170) AND isnotnull(ss_addr_sk#1169)) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_cdemo_sk#1167)) AND isnotnull(ss_hdemo_sk#1168))
[info]             :     :     :     :     :     +- *(6) ColumnarToRow
[info]             :     :     :     :     :        +- BatchScan[ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_pr...
[info]             :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#6210]
[info]             :     :     :     :        +- *(1) Project [s_store_sk#670]
[info]             :     :     :     :           +- *(1) Filter isnotnull(s_store_sk#670)
[info]             :     :     :     :              +- *(1) ColumnarToRow
[info]             :     :     :     :                 +- BatchScan[s_store_sk#670] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int>
[info]             :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#6219]
[info]             :     :     :        +- *(2) Project [ca_address_sk#233, ca_state#241]
[info]             :     :     :           +- *(2) Filter ((isnotnull(ca_country#243) AND (ca_country#243 = United States)) AND isnotnull(ca_address_sk#233))
[info]             :     :     :              +- *(2) ColumnarToRow
[info]             :     :     :                 +- BatchScan[ca_address_sk#233, ca_state#241, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
[info]             :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#6228]
[info]             :     :        +- *(3) Project [d_date_sk#331]
[info]             :     :           +- *(3) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]             :     :              +- *(3) ColumnarToRow
[info]             :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#6237]
[info]             :        +- *(4) Project [cd_demo_sk#290, cd_marital_status#292, cd_education_status#293]
[info]             :           +- *(4) Filter isnotnull(cd_demo_sk#290)
[info]             :              +- *(4) ColumnarToRow
[info]             :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
[info]             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#6246]
[info]                +- *(5) Project [hd_demo_sk#448, hd_dep_count#451]
[info]                   +- *(5) Filter isnotnull(hd_demo_sk#448)
[info]                      +- *(5) ColumnarToRow
[info]                         +- BatchScan[hd_demo_sk#448, hd_dep_count#451] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 239 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q13                                                 240            240           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q14a
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#3859 ASC NULLS FIRST,i_brand_id#3860 ASC NULLS FIRST,i_class_id#3861 ASC NULLS FIRST,i_category_id#3862 ASC NULLS FIRST], output=[channel#3859,i_brand_id#3860,i_class_id#3861,i_category_id#3862,sum(sales)#3849,sum(number_sales)#3850L])
[info] +- *(119) HashAggregate(keys=[channel#3859, i_brand_id#3860, i_class_id#3861, i_category_id#3862, spark_grouping_id#3854], functions=[sum(sales#3793), sum(number_sales#3794L)])
[info]    +- Exchange hashpartitioning(channel#3859, i_brand_id#3860, i_class_id#3861, i_category_id#3862, spark_grouping_id#3854, 4), true, [id=#11348]
[info]       +- *(118) HashAggregate(keys=[channel#3859, i_brand_id#3860, i_class_id#3861, i_category_id#3862, spark_grouping_id#3854], functions=[partial_sum(sales#3793), partial_sum(number_sales#3794L)])
[info]          +- *(118) Expand [List(sales#3793, number_sales#3794L, channel#3792, i_brand_id#503, i_class_id#505, i_category_id#507, 0), List(sales#3793, number_sales#3794L, channel#3792, i_brand_id#503, i_class_id#505, null, 1), List(sales#3793, number_sales#3794L, channel#3792, i_brand_id#503, null, null, 3), List(sales#3793, number_sales#3794L, channel#3792, null, null, null, 7), List(sales#3793, number_sales#3794L, null, null, null, null, 15)], [sales#3793, number_sales#3794L, channel#3859, i_brand_id#3860, i_class_id#3861, i_category_id#3862, spark_grouping_id#3854]
[info]             +- Union
[info]                :- *(39) Project [sales#3793, number_sales#3794L, channel#3792, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :  +- *(39) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#3828) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#3828 as decimal(32,6)) > cast(Subquery scalar-subquery#3795, [id=#7629] as decimal(32,6))))
[info]                :     :  +- Subquery scalar-subquery#3795, [id=#7629]
[info]                :     :     +- *(8) HashAggregate(keys=[], functions=[avg(CheckOverflow((promote_precision(cast(cast(quantity#3810 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#3811 as decimal(12,2)))), DecimalType(18,2), true))])
[info]                :     :        +- Exchange SinglePartition, true, [id=#7625]
[info]                :     :           +- *(7) HashAggregate(keys=[], functions=[partial_avg(CheckOverflow((promote_precision(cast(cast(quantity#3810 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#3811 as decimal(12,2)))), DecimalType(18,2), true))])
[info]                :     :              +- Union
[info]                :     :                 :- *(2) Project [ss_quantity#1173 AS quantity#3810, ss_list_price#1175 AS list_price#3811]
[info]                :     :                 :  +- *(2) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :                 :     :- *(2) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]                :     :                 :     :  +- *(2) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :     :                 :     :     +- *(2) ColumnarToRow
[info]                :     :                 :     :        +- BatchScan[ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>
[info]                :     :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#7546]
[info]                :     :                 :        +- *(1) Project [d_date_sk#331]
[info]                :     :                 :           +- *(1) Filter (((isnotnull(d_year#337) AND (d_year#337 >= 1999)) AND (d_year#337 <= 2001)) AND isnotnull(d_date_sk#331))
[info]                :     :                 :              +- *(1) ColumnarToRow
[info]                :     :                 :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                :     :                 :- *(4) Project [cs_quantity#895 AS quantity#3812, cs_list_price#897 AS list_price#3813]
[info]                :     :                 :  +- *(4) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :                 :     :- *(4) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]                :     :                 :     :  +- *(4) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :                 :     :     +- *(4) ColumnarToRow
[info]                :     :                 :     :        +- BatchScan[cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>
[info]                :     :                 :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#7546]
[info]                :     :                 +- *(6) Project [ws_quantity#1038 AS quantity#3814, ws_list_price#1040 AS list_price#3815]
[info]                :     :                    +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :                       :- *(6) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]                :     :                       :  +- *(6) Filter isnotnull(ws_sold_date_sk#1054)
[info]                :     :                       :     +- *(6) ColumnarToRow
[info]                :     :                       :        +- BatchScan[ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>
[info]                :     :                       +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#7546]
[info]                :     +- *(39) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]                :        +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#10117]
[info]                :           +- *(38) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]                :              +- *(38) Project [ss_quantity#1173, ss_list_price#1175, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                 +- *(38) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :                    :- *(38) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :  +- *(38) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :                    :     :- SortMergeJoin [ss_item_sk#1165], [ss_item_sk#3809], LeftSemi
[info]                :                    :     :  :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                :                    :     :  :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#8915]
[info]                :                    :     :  :     +- *(1) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]                :                    :     :  :        +- *(1) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                :                    :     :  :           +- *(1) ColumnarToRow
[info]                :                    :     :  :              +- BatchScan[ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>
[info]                :                    :     :  +- *(18) Sort [ss_item_sk#3809 ASC NULLS FIRST], false, 0
[info]                :                    :     :     +- Exchange hashpartitioning(ss_item_sk#3809, 4), true, [id=#9846]
[info]                :                    :     :        +- *(17) Project [i_item_sk#496 AS ss_item_sk#3809]
[info]                :                    :     :           +- *(17) BroadcastHashJoin [i_brand_id#503, i_class_id#505, i_category_id#507], [brand_id#3806, class_id#3807, category_id#3808], Inner, BuildLeft
[info]                :                    :     :              :- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, true], input[2, int, true], input[3, int, true])), [id=#8924]
[info]                :                    :     :              :  +- *(3) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :              :     +- *(3) Filter ((isnotnull(i_category_id#507) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505))
[info]                :                    :     :              :        +- *(3) ColumnarToRow
[info]                :                    :     :              :           +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]                :                    :     :              +- *(17) HashAggregate(keys=[brand_id#3806, class_id#3807, category_id#3808], functions=[])
[info]                :                    :     :                 +- *(17) HashAggregate(keys=[brand_id#3806, class_id#3807, category_id#3808], functions=[])
[info]                :                    :     :                    +- *(17) HashAggregate(keys=[brand_id#3806, class_id#3807, category_id#3808], functions=[])
[info]                :                    :     :                       +- Exchange hashpartitioning(brand_id#3806, class_id#3807, category_id#3808, 4), true, [id=#9797]
[info]                :                    :     :                          +- *(16) HashAggregate(keys=[brand_id#3806, class_id#3807, category_id#3808], functions=[])
[info]                :                    :     :                             +- SortMergeJoin [coalesce(brand_id#3806, 0), isnull(brand_id#3806), coalesce(class_id#3807, 0), isnull(class_id#3807), coalesce(category_id#3808, 0), isnull(category_id#3808)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]                :                    :     :                                :- SortMergeJoin [coalesce(brand_id#3806, 0), isnull(brand_id#3806), coalesce(class_id#3807, 0), isnull(class_id#3807), coalesce(category_id#3808, 0), isnull(category_id#3808)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]                :                    :     :                                :  :- *(7) Sort [coalesce(brand_id#3806, 0) ASC NULLS FIRST, isnull(brand_id#3806) ASC NULLS FIRST, coalesce(class_id#3807, 0) ASC NULLS FIRST, isnull(class_id#3807) ASC NULLS FIRST, coalesce(category_id#3808, 0) ASC NULLS FIRST, isnull(category_id#3808) ASC NULLS FIRST], false, 0
[info]                :                    :     :                                :  :  +- Exchange hashpartitioning(coalesce(brand_id#3806, 0), isnull(brand_id#3806), coalesce(class_id#3807, 0), isnull(class_id#3807), coalesce(category_id#3808, 0), isnull(category_id#3808), 4), true, [id=#8949]
[info]                :                    :     :                                :  :     +- *(6) Project [i_brand_id#503 AS brand_id#3806, i_class_id#505 AS class_id#3807, i_category_id#507 AS category_id#3808]
[info]                :                    :     :                                :  :        +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :                    :     :                                :  :           :- *(6) Project [ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :                                :  :           :  +- *(6) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :                    :     :                                :  :           :     :- *(6) Project [ss_item_sk#1165, ss_sold_date_sk#1186]
[info]                :                    :     :                                :  :           :     :  +- *(6) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                :                    :     :                                :  :           :     :     +- *(6) ColumnarToRow
[info]                :                    :     :                                :  :           :     :        +- BatchScan[ss_item_sk#1165, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int>
[info]                :                    :     :                                :  :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8935]
[info]                :                    :     :                                :  :           :        +- *(4) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :                                :  :           :           +- *(4) Filter (((isnotnull(i_item_sk#496) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505)) AND isnotnull(i_category_id#507))
[info]                :                    :     :                                :  :           :              +- *(4) ColumnarToRow
[info]                :                    :     :                                :  :           :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]                :                    :     :                                :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8944]
[info]                :                    :     :                                :  :              +- *(5) Project [d_date_sk#331]
[info]                :                    :     :                                :  :                 +- *(5) Filter (((isnotnull(d_year#337) AND (d_year#337 >= 1999)) AND (d_year#337 <= 2001)) AND isnotnull(d_date_sk#331))
[info]                :                    :     :                                :  :                    +- *(5) ColumnarToRow
[info]                :                    :     :                                :  :                       +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                :                    :     :                                :  +- *(11) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]                :                    :     :                                :     +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#9721]
[info]                :                    :     :                                :        +- *(10) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :                                :           +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :                    :     :                                :              :- *(10) Project [cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :                                :              :  +- *(10) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                :                    :     :                                :              :     :- *(10) Project [cs_item_sk#892, cs_sold_date_sk#911]
[info]                :                    :     :                                :              :     :  +- *(10) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]                :                    :     :                                :              :     :     +- *(10) ColumnarToRow
[info]                :                    :     :                                :              :     :        +- BatchScan[cs_item_sk#892, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int>
[info]                :                    :     :                                :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8962]
[info]                :                    :     :                                :              :        +- *(8) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :                                :              :           +- *(8) Filter isnotnull(i_item_sk#496)
[info]                :                    :     :                                :              :              +- *(8) ColumnarToRow
[info]                :                    :     :                                :              :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]                :                    :     :                                :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8944]
[info]                :                    :     :                                +- *(15) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]                :                    :     :                                   +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#9751]
[info]                :                    :     :                                      +- *(14) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :                                         +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :                    :     :                                            :- *(14) Project [ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :     :                                            :  +- *(14) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                :                    :     :                                            :     :- *(14) Project [ws_item_sk#1023, ws_sold_date_sk#1054]
[info]                :                    :     :                                            :     :  +- *(14) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                :                    :     :                                            :     :     +- *(14) ColumnarToRow
[info]                :                    :     :                                            :     :        +- BatchScan[ws_item_sk#1023, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int>
[info]                :                    :     :                                            :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8962]
[info]                :                    :     :                                            +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#8944]
[info]                :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#10090]
[info]                :                    :        +- SortMergeJoin [i_item_sk#496], [ss_item_sk#3809], LeftSemi
[info]                :                    :           :- *(20) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]                :                    :           :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#9031]
[info]                :                    :           :     +- *(19) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :           :        +- *(19) Filter isnotnull(i_item_sk#496)
[info]                :                    :           :           +- *(19) ColumnarToRow
[info]                :                    :           :              +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]                :                    :           +- *(36) Sort [ss_item_sk#3809 ASC NULLS FIRST], false, 0
[info]                :                    :              +- ReusedExchange [ss_item_sk#3809], Exchange hashpartitioning(ss_item_sk#3809, 4), true, [id=#9846]
[info]                :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#9150]
[info]                :                       +- *(37) Project [d_date_sk#331]
[info]                :                          +- *(37) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2001)) AND (d_moy#339 = 11)) AND isnotnull(d_date_sk#331))
[info]                :                             +- *(37) ColumnarToRow
[info]                :                                +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :- *(78) Project [sales#3798, number_sales#3799L, channel#3797, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :  +- *(78) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#3831) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#3831 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#3795, [id=#7629] as decimal(32,6))))
[info]                :     :  +- ReusedSubquery Subquery scalar-subquery#3795, [id=#7629]
[info]                :     +- *(78) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]                :        +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#10595]
[info]                :           +- *(77) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]                :              +- *(77) Project [cs_quantity#895, cs_list_price#897, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                 +- *(77) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :                    :- *(77) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                :                    :  +- *(77) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                :                    :     :- SortMergeJoin [cs_item_sk#892], [ss_item_sk#3809], LeftSemi
[info]                :                    :     :  :- *(41) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                :                    :     :  :  +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#9167]
[info]                :                    :     :  :     +- *(40) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]                :                    :     :  :        +- *(40) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]                :                    :     :  :           +- *(40) ColumnarToRow
[info]                :                    :     :  :              +- BatchScan[cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>
[info]                :                    :     :  +- *(57) Sort [ss_item_sk#3809 ASC NULLS FIRST], false, 0
[info]                :                    :     :     +- ReusedExchange [ss_item_sk#3809], Exchange hashpartitioning(ss_item_sk#3809, 4), true, [id=#9846]
[info]                :                    :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#10090]
[info]                :                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#9150]
[info]                +- *(117) Project [sales#3803, number_sales#3804L, channel#3802, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                   +- *(117) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#3834) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#3834 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#3795, [id=#7629] as decimal(32,6))))
[info]                      :  +- ReusedSubquery Subquery scalar-subquery#3795, [id=#7629]
[info]                      +- *(117) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]                         +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#11143]
[info]                            +- *(116) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]                               +- *(116) Project [ws_quantity#1038, ws_list_price#1040, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                                  +- *(116) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                                     :- *(116) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]                                     :  +- *(116) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                                     :     :- SortMergeJoin [ws_item_sk#1023], [ss_item_sk#3809], LeftSemi
[info]                                     :     :  :- *(80) Sort [ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]                                     :     :  :  +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#9419]
[info]                                     :     :  :     +- *(79) Project [ws_item_sk#1023, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]                                     :     :  :        +- *(79) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                                     :     :  :           +- *(79) ColumnarToRow
[info]                                     :     :  :              +- BatchScan[ws_item_sk#1023, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>
[info]                                     :     :  +- *(96) Sort [ss_item_sk#3809 ASC NULLS FIRST], false, 0
[info]                                     :     :     +- ReusedExchange [ss_item_sk#3809], Exchange hashpartitioning(ss_item_sk#3809, 4), true, [id=#9846]
[info]                                     :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#10090]
[info]                                     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#9150]
[info] 
[info] 
[info]   Stopped after 1 iterations, 2754 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q14a                                               2755           2755           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q14b
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#4206 ASC NULLS FIRST,i_brand_id#503 ASC NULLS FIRST,i_class_id#505 ASC NULLS FIRST,i_category_id#507 ASC NULLS FIRST], output=[channel#4206,i_brand_id#503,i_class_id#505,i_category_id#507,sales#4207,number_sales#4208L,channel#4212,i_brand_id#4246,i_class_id#4248,i_category_id#4250,sales#4213,number_sales#4214L])
[info] +- *(79) SortMergeJoin [i_brand_id#503, i_class_id#505, i_category_id#507], [i_brand_id#4246, i_class_id#4248, i_category_id#4250], Inner
[info]    :- *(39) Sort [i_brand_id#503 ASC NULLS FIRST, i_class_id#505 ASC NULLS FIRST, i_category_id#507 ASC NULLS FIRST], false, 0
[info]    :  +- *(39) Project [channel#4206, i_brand_id#503, i_class_id#505, i_category_id#507, sales#4207, number_sales#4208L]
[info]    :     +- *(39) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#4235) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#4235 as decimal(32,6)) > cast(Subquery scalar-subquery#4209, [id=#12336] as decimal(32,6))))
[info]    :        :  +- Subquery scalar-subquery#4209, [id=#12336]
[info]    :        :     +- *(8) HashAggregate(keys=[], functions=[avg(CheckOverflow((promote_precision(cast(cast(quantity#4220 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#4221 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :        :        +- Exchange SinglePartition, true, [id=#12332]
[info]    :        :           +- *(7) HashAggregate(keys=[], functions=[partial_avg(CheckOverflow((promote_precision(cast(cast(quantity#4220 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#4221 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :        :              +- Union
[info]    :        :                 :- *(2) Project [ss_quantity#1173 AS quantity#4220, ss_list_price#1175 AS list_price#4221]
[info]    :        :                 :  +- *(2) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :        :                 :     :- *(2) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]    :        :                 :     :  +- *(2) Filter isnotnull(ss_sold_date_sk#1186)
[info]    :        :                 :     :     +- *(2) ColumnarToRow
[info]    :        :                 :     :        +- BatchScan[ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>
[info]    :        :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#12253]
[info]    :        :                 :        +- *(1) Project [d_date_sk#331]
[info]    :        :                 :           +- *(1) Filter (((isnotnull(d_year#337) AND (d_year#337 >= 1999)) AND (d_year#337 <= 2001)) AND isnotnull(d_date_sk#331))
[info]    :        :                 :              +- *(1) ColumnarToRow
[info]    :        :                 :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]    :        :                 :- *(4) Project [cs_quantity#895 AS quantity#4222, cs_list_price#897 AS list_price#4223]
[info]    :        :                 :  +- *(4) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :        :                 :     :- *(4) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]    :        :                 :     :  +- *(4) Filter isnotnull(cs_sold_date_sk#911)
[info]    :        :                 :     :     +- *(4) ColumnarToRow
[info]    :        :                 :     :        +- BatchScan[cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>
[info]    :        :                 :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#12253]
[info]    :        :                 +- *(6) Project [ws_quantity#1038 AS quantity#4224, ws_list_price#1040 AS list_price#4225]
[info]    :        :                    +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]    :        :                       :- *(6) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]    :        :                       :  +- *(6) Filter isnotnull(ws_sold_date_sk#1054)
[info]    :        :                       :     +- *(6) ColumnarToRow
[info]    :        :                       :        +- BatchScan[ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>
[info]    :        :                       +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#12253]
[info]    :        +- *(39) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]    :           +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#14115]
[info]    :              +- *(38) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]    :                 +- *(38) Project [ss_quantity#1173, ss_list_price#1175, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                    +- *(38) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :                       :- *(38) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :  +- *(38) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :- SortMergeJoin [ss_item_sk#1165], [ss_item_sk#4219], LeftSemi
[info]    :                       :     :  :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]    :                       :     :  :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#13168]
[info]    :                       :     :  :     +- *(1) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]    :                       :     :  :        +- *(1) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]    :                       :     :  :           +- *(1) ColumnarToRow
[info]    :                       :     :  :              +- BatchScan[ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>
[info]    :                       :     :  +- *(18) Sort [ss_item_sk#4219 ASC NULLS FIRST], false, 0
[info]    :                       :     :     +- Exchange hashpartitioning(ss_item_sk#4219, 4), true, [id=#13844]
[info]    :                       :     :        +- *(17) Project [i_item_sk#496 AS ss_item_sk#4219]
[info]    :                       :     :           +- *(17) BroadcastHashJoin [i_brand_id#503, i_class_id#505, i_category_id#507], [brand_id#4216, class_id#4217, category_id#4218], Inner, BuildLeft
[info]    :                       :     :              :- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, true], input[2, int, true], input[3, int, true])), [id=#13177]
[info]    :                       :     :              :  +- *(3) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :              :     +- *(3) Filter ((isnotnull(i_category_id#507) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505))
[info]    :                       :     :              :        +- *(3) ColumnarToRow
[info]    :                       :     :              :           +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :     :              +- *(17) HashAggregate(keys=[brand_id#4216, class_id#4217, category_id#4218], functions=[])
[info]    :                       :     :                 +- *(17) HashAggregate(keys=[brand_id#4216, class_id#4217, category_id#4218], functions=[])
[info]    :                       :     :                    +- *(17) HashAggregate(keys=[brand_id#4216, class_id#4217, category_id#4218], functions=[])
[info]    :                       :     :                       +- Exchange hashpartitioning(brand_id#4216, class_id#4217, category_id#4218, 4), true, [id=#13795]
[info]    :                       :     :                          +- *(16) HashAggregate(keys=[brand_id#4216, class_id#4217, category_id#4218], functions=[])
[info]    :                       :     :                             +- SortMergeJoin [coalesce(brand_id#4216, 0), isnull(brand_id#4216), coalesce(class_id#4217, 0), isnull(class_id#4217), coalesce(category_id#4218, 0), isnull(category_id#4218)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]    :                       :     :                                :- SortMergeJoin [coalesce(brand_id#4216, 0), isnull(brand_id#4216), coalesce(class_id#4217, 0), isnull(class_id#4217), coalesce(category_id#4218, 0), isnull(category_id#4218)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]    :                       :     :                                :  :- *(7) Sort [coalesce(brand_id#4216, 0) ASC NULLS FIRST, isnull(brand_id#4216) ASC NULLS FIRST, coalesce(class_id#4217, 0) ASC NULLS FIRST, isnull(class_id#4217) ASC NULLS FIRST, coalesce(category_id#4218, 0) ASC NULLS FIRST, isnull(category_id#4218) ASC NULLS FIRST], false, 0
[info]    :                       :     :                                :  :  +- Exchange hashpartitioning(coalesce(brand_id#4216, 0), isnull(brand_id#4216), coalesce(class_id#4217, 0), isnull(class_id#4217), coalesce(category_id#4218, 0), isnull(category_id#4218), 4), true, [id=#13202]
[info]    :                       :     :                                :  :     +- *(6) Project [i_brand_id#503 AS brand_id#4216, i_class_id#505 AS class_id#4217, i_category_id#507 AS category_id#4218]
[info]    :                       :     :                                :  :        +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :                       :     :                                :  :           :- *(6) Project [ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :  :           :  +- *(6) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :                                :  :           :     :- *(6) Project [ss_item_sk#1165, ss_sold_date_sk#1186]
[info]    :                       :     :                                :  :           :     :  +- *(6) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]    :                       :     :                                :  :           :     :     +- *(6) ColumnarToRow
[info]    :                       :     :                                :  :           :     :        +- BatchScan[ss_item_sk#1165, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int>
[info]    :                       :     :                                :  :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13188]
[info]    :                       :     :                                :  :           :        +- *(4) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :  :           :           +- *(4) Filter (((isnotnull(i_item_sk#496) AND isnotnull(i_category_id#507)) AND isnotnull(i_class_id#505)) AND isnotnull(i_brand_id#503))
[info]    :                       :     :                                :  :           :              +- *(4) ColumnarToRow
[info]    :                       :     :                                :  :           :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :     :                                :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13197]
[info]    :                       :     :                                :  :              +- *(5) Project [d_date_sk#331]
[info]    :                       :     :                                :  :                 +- *(5) Filter (((isnotnull(d_year#337) AND (d_year#337 >= 1999)) AND (d_year#337 <= 2001)) AND isnotnull(d_date_sk#331))
[info]    :                       :     :                                :  :                    +- *(5) ColumnarToRow
[info]    :                       :     :                                :  :                       +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]    :                       :     :                                :  +- *(11) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]    :                       :     :                                :     +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#13719]
[info]    :                       :     :                                :        +- *(10) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :           +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :                       :     :                                :              :- *(10) Project [cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :              :  +- *(10) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :                                :              :     :- *(10) Project [cs_item_sk#892, cs_sold_date_sk#911]
[info]    :                       :     :                                :              :     :  +- *(10) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]    :                       :     :                                :              :     :     +- *(10) ColumnarToRow
[info]    :                       :     :                                :              :     :        +- BatchScan[cs_item_sk#892, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int>
[info]    :                       :     :                                :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13215]
[info]    :                       :     :                                :              :        +- *(8) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :              :           +- *(8) Filter isnotnull(i_item_sk#496)
[info]    :                       :     :                                :              :              +- *(8) ColumnarToRow
[info]    :                       :     :                                :              :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :     :                                :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13197]
[info]    :                       :     :                                +- *(15) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]    :                       :     :                                   +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#13749]
[info]    :                       :     :                                      +- *(14) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                         +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]    :                       :     :                                            :- *(14) Project [ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                            :  +- *(14) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :                                            :     :- *(14) Project [ws_item_sk#1023, ws_sold_date_sk#1054]
[info]    :                       :     :                                            :     :  +- *(14) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]    :                       :     :                                            :     :     +- *(14) ColumnarToRow
[info]    :                       :     :                                            :     :        +- BatchScan[ws_item_sk#1023, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int>
[info]    :                       :     :                                            :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13215]
[info]    :                       :     :                                            +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13197]
[info]    :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#14088]
[info]    :                       :        +- SortMergeJoin [i_item_sk#496], [ss_item_sk#4219], LeftSemi
[info]    :                       :           :- *(20) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]    :                       :           :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#13284]
[info]    :                       :           :     +- *(19) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :           :        +- *(19) Filter (((isnotnull(i_item_sk#496) AND isnotnull(i_brand_id#503)) AND isnotnull(i_category_id#507)) AND isnotnull(i_class_id#505))
[info]    :                       :           :           +- *(19) ColumnarToRow
[info]    :                       :           :              +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :           +- *(36) Sort [ss_item_sk#4219 ASC NULLS FIRST], false, 0
[info]    :                       :              +- ReusedExchange [ss_item_sk#4219], Exchange hashpartitioning(ss_item_sk#4219, 4), true, [id=#13844]
[info]    :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13403]
[info]    :                          +- *(37) Project [d_date_sk#331]
[info]    :                             +- *(37) Filter ((isnotnull(d_week_seq#335) AND isnotnull(d_date_sk#331)) AND (d_week_seq#335 = Subquery scalar-subquery#4205, [id=#12353]))
[info]    :                                :  +- Subquery scalar-subquery#4205, [id=#12353]
[info]    :                                :     +- *(1) Project [d_week_seq#335]
[info]    :                                :        +- *(1) Filter (((((isnotnull(d_dom#340) AND isnotnull(d_year#337)) AND isnotnull(d_moy#339)) AND (d_year#337 = 2000)) AND (d_moy#339 = 12)) AND (d_dom#340 = 11))
[info]    :                                :           +- *(1) ColumnarToRow
[info]    :                                :              +- BatchScan[d_week_seq#335, d_year#337, d_moy#339, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>
[info]    :                                +- *(37) ColumnarToRow
[info]    :                                   +- BatchScan[d_date_sk#331, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
[info]    +- *(78) Sort [i_brand_id#4246 ASC NULLS FIRST, i_class_id#4248 ASC NULLS FIRST, i_category_id#4250 ASC NULLS FIRST], false, 0
[info]       +- *(78) Project [channel#4212, i_brand_id#4246, i_class_id#4248, i_category_id#4250, sales#4213, number_sales#4214L]
[info]          +- *(78) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#4238) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#4238 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#4209, [id=#12336] as decimal(32,6))))
[info]             :  +- ReusedSubquery Subquery scalar-subquery#4209, [id=#12336]
[info]             +- *(78) HashAggregate(keys=[i_brand_id#4246, i_class_id#4248, i_category_id#4250], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]                +- Exchange hashpartitioning(i_brand_id#4246, i_class_id#4248, i_category_id#4250, 4), true, [id=#14615]
[info]                   +- *(77) HashAggregate(keys=[i_brand_id#4246, i_class_id#4248, i_category_id#4250], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]                      +- *(77) Project [ss_quantity#1173, ss_list_price#1175, i_brand_id#4246, i_class_id#4248, i_category_id#4250]
[info]                         +- *(77) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                            :- *(77) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186, i_brand_id#4246, i_class_id#4248, i_category_id#4250]
[info]                            :  +- *(77) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#4239], Inner, BuildRight
[info]                            :     :- SortMergeJoin [ss_item_sk#1165], [ss_item_sk#4219], LeftSemi
[info]                            :     :  :- *(41) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                            :     :  :  +- ReusedExchange [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186], Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#13168]
[info]                            :     :  +- *(57) Sort [ss_item_sk#4219 ASC NULLS FIRST], false, 0
[info]                            :     :     +- ReusedExchange [ss_item_sk#4219], Exchange hashpartitioning(ss_item_sk#4219, 4), true, [id=#13844]
[info]                            :     +- ReusedExchange [i_item_sk#4239, i_brand_id#4246, i_class_id#4248, i_category_id#4250], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#14088]
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#13657]
[info]                               +- *(76) Project [d_date_sk#331]
[info]                                  +- *(76) Filter ((isnotnull(d_week_seq#335) AND isnotnull(d_date_sk#331)) AND (d_week_seq#335 = Subquery scalar-subquery#4211, [id=#12598]))
[info]                                     :  +- Subquery scalar-subquery#4211, [id=#12598]
[info]                                     :     +- *(1) Project [d_week_seq#335]
[info]                                     :        +- *(1) Filter (((((isnotnull(d_dom#340) AND isnotnull(d_year#337)) AND isnotnull(d_moy#339)) AND (d_year#337 = 1999)) AND (d_moy#339 = 12)) AND (d_dom#340 = 11))
[info]                                     :           +- *(1) ColumnarToRow
[info]                                     :              +- BatchScan[d_week_seq#335, d_year#337, d_moy#339, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>
[info]                                     +- *(76) ColumnarToRow
[info]                                        +- BatchScan[d_date_sk#331, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 2483 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q14b                                               2483           2483           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q15
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ca_zip#242 ASC NULLS FIRST], output=[ca_zip#242,sum(cs_sales_price)#4443])
[info] +- *(5) HashAggregate(keys=[ca_zip#242], functions=[sum(UnscaledValue(cs_sales_price#898))])
[info]    +- Exchange hashpartitioning(ca_zip#242, 4), true, [id=#14936]
[info]       +- *(4) HashAggregate(keys=[ca_zip#242], functions=[partial_sum(UnscaledValue(cs_sales_price#898))])
[info]          +- *(4) Project [cs_sales_price#898, ca_zip#242]
[info]             +- *(4) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :- *(4) Project [cs_sales_price#898, cs_sold_date_sk#911, ca_zip#242]
[info]                :  +- *(4) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight, ((substring(ca_zip#242, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR ca_state#241 IN (CA,WA,GA)) OR (cs_sales_price#898 > 500.00))
[info]                :     :- *(4) Project [cs_sales_price#898, cs_sold_date_sk#911, c_current_addr_sk#160]
[info]                :     :  +- *(4) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]                :     :     :- *(4) Project [cs_bill_customer_sk#880, cs_sales_price#898, cs_sold_date_sk#911]
[info]                :     :     :  +- *(4) Filter (isnotnull(cs_bill_customer_sk#880) AND isnotnull(cs_sold_date_sk#911))
[info]                :     :     :     +- *(4) ColumnarToRow
[info]                :     :     :        +- BatchScan[cs_bill_customer_sk#880, cs_sales_price#898, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_sales_price:decimal(7,2)>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#14912]
[info]                :     :        +- *(1) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]                :     :           +- *(1) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]                :     :              +- *(1) ColumnarToRow
[info]                :     :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#14921]
[info]                :        +- *(2) Project [ca_address_sk#233, ca_state#241, ca_zip#242]
[info]                :           +- *(2) Filter isnotnull(ca_address_sk#233)
[info]                :              +- *(2) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_state#241, ca_zip#242] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#14930]
[info]                   +- *(3) Project [d_date_sk#331]
[info]                      +- *(3) Filter ((((isnotnull(d_qoy#341) AND isnotnull(d_year#337)) AND (d_qoy#341 = 2)) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]                         +- *(3) ColumnarToRow
[info]                            +- BatchScan[d_date_sk#331, d_year#337, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 195 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q15                                                 195            195           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q16
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[order count #4476L ASC NULLS FIRST], output=[order count #4476L,total shipping cost #4477,total net profit #4478])
[info] +- *(10) HashAggregate(keys=[], functions=[sum(UnscaledValue(cs_ext_ship_cost#905)), sum(UnscaledValue(cs_net_profit#910)), count(distinct cs_order_number#894L)])
[info]    +- Exchange SinglePartition, true, [id=#15162]
[info]       +- *(9) HashAggregate(keys=[], functions=[merge_sum(UnscaledValue(cs_ext_ship_cost#905)), merge_sum(UnscaledValue(cs_net_profit#910)), partial_count(distinct cs_order_number#894L)])
[info]          +- *(9) HashAggregate(keys=[cs_order_number#894L], functions=[merge_sum(UnscaledValue(cs_ext_ship_cost#905)), merge_sum(UnscaledValue(cs_net_profit#910))])
[info]             +- *(9) HashAggregate(keys=[cs_order_number#894L], functions=[partial_sum(UnscaledValue(cs_ext_ship_cost#905)), partial_sum(UnscaledValue(cs_net_profit#910))])
[info]                +- *(9) Project [cs_order_number#894L, cs_ext_ship_cost#905, cs_net_profit#910]
[info]                   +- *(9) BroadcastHashJoin [cs_call_center_sk#888], [cc_call_center_sk#1492], Inner, BuildRight
[info]                      :- *(9) Project [cs_call_center_sk#888, cs_order_number#894L, cs_ext_ship_cost#905, cs_net_profit#910]
[info]                      :  +- *(9) BroadcastHashJoin [cs_ship_addr_sk#887], [ca_address_sk#233], Inner, BuildRight
[info]                      :     :- *(9) Project [cs_ship_addr_sk#887, cs_call_center_sk#888, cs_order_number#894L, cs_ext_ship_cost#905, cs_net_profit#910]
[info]                      :     :  +- *(9) BroadcastHashJoin [cs_ship_date_sk#879], [d_date_sk#331], Inner, BuildRight
[info]                      :     :     :- *(9) BroadcastHashJoin [cs_order_number#894L], [cr_order_number#56L], LeftAnti, BuildRight
[info]                      :     :     :  :- *(9) Project [cs_ship_date_sk#879, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_order_number#894L, cs_ext_ship_cost#905, cs_net_profit#910]
[info]                      :     :     :  :  +- SortMergeJoin [cs_order_number#894L], [cs_order_number#894L#4501L], LeftSemi, NOT (cs_warehouse_sk#891 = cs_warehouse_sk#891#4495)
[info]                      :     :     :  :     :- *(2) Sort [cs_order_number#894L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :     :  +- Exchange hashpartitioning(cs_order_number#894L, 4), true, [id=#15109]
[info]                      :     :     :  :     :     +- *(1) Project [cs_ship_date_sk#879, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_warehouse_sk#891, cs_order_number#894L, cs_ext_ship_cost#905, cs_net_profit#910]
[info]                      :     :     :  :     :        +- *(1) Filter ((isnotnull(cs_ship_date_sk#879) AND isnotnull(cs_ship_addr_sk#887)) AND isnotnull(cs_call_center_sk#888))
[info]                      :     :     :  :     :           +- *(1) ColumnarToRow
[info]                      :     :     :  :     :              +- BatchScan[cs_ship_date_sk#879, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_warehouse_sk#891, cs_order_number#894L, cs_ext_ship_cost#905, cs_net_profit#910] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ship_date_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_warehouse_sk:int,cs_order...
[info]                      :     :     :  :     +- *(4) Sort [cs_order_number#894L#4501L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :        +- Exchange hashpartitioning(cs_order_number#894L#4501L, 4), true, [id=#15117]
[info]                      :     :     :  :           +- *(3) Project [cs_warehouse_sk#891 AS cs_warehouse_sk#891#4495, cs_order_number#894L AS cs_order_number#894L#4501L]
[info]                      :     :     :  :              +- *(3) ColumnarToRow
[info]                      :     :     :  :                 +- BatchScan[cs_sold_time_sk#878, cs_ship_date_sk#879, cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_bill_addr_sk#883, cs_ship_customer_sk#884, cs_ship_cdemo_sk#885, cs_ship_hdemo_sk#886, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_catalog_page_sk#889, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_list_price#897, cs_sales_price#898, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bi...
[info]                      :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true])), [id=#15128]
[info]                      :     :     :     +- *(5) Project [cr_order_number#56L]
[info]                      :     :     :        +- *(5) ColumnarToRow
[info]                      :     :     :           +- BatchScan[cr_returned_time_sk#41, cr_item_sk#42, cr_refunded_customer_sk#43, cr_refunded_cdemo_sk#44, cr_refunded_hdemo_sk#45, cr_refunded_addr_sk#46, cr_returning_customer_sk#47, cr_returning_cdemo_sk#48, cr_returning_hdemo_sk#49, cr_returning_addr_sk#50, cr_call_center_sk#51, cr_catalog_page_sk#52, cr_ship_mode_sk#53, cr_warehouse_sk#54, cr_reason_sk#55, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58, cr_return_tax#59, cr_return_amt_inc_tax#60, cr_fee#61, cr_return_ship_cost#62, cr_refunded_cash#63, cr_reversed_charge#64, ... 3 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_returned_time_sk:int,cr_item_sk:int,cr_refunded_customer_sk:int,cr_refunded_cdemo_sk:in...
[info]                      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15136]
[info]                      :     :        +- *(6) Project [d_date_sk#331]
[info]                      :     :           +- *(6) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 11719)) AND (d_date#333 <= 11779)) AND isnotnull(d_date_sk#331))
[info]                      :     :              +- *(6) ColumnarToRow
[info]                      :     :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15145]
[info]                      :        +- *(7) Project [ca_address_sk#233]
[info]                      :           +- *(7) Filter ((isnotnull(ca_state#241) AND (ca_state#241 = GA)) AND isnotnull(ca_address_sk#233))
[info]                      :              +- *(7) ColumnarToRow
[info]                      :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15154]
[info]                         +- *(8) Project [cc_call_center_sk#1492]
[info]                            +- *(8) Filter ((isnotnull(cc_county#1517) AND (cc_county#1517 = Williamson County)) AND isnotnull(cc_call_center_sk#1492))
[info]                               +- *(8) ColumnarToRow
[info]                                  +- BatchScan[cc_call_center_sk#1492, cc_county#1517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/call_center], ReadSchema: struct<cc_call_center_sk:int,cc_county:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 291 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q16                                                 292            292           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q17
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST,s_state#694 ASC NULLS FIRST], output=[i_item_id#497,i_item_desc#500,s_state#694,store_sales_quantitycount#4788L,store_sales_quantityave#4789,store_sales_quantitystdev#4790,store_sales_quantitycov#4791,as_store_returns_quantitycount#4792L,as_store_returns_quantityave#4793,as_store_returns_quantitystdev#4794,store_returns_quantitycov#4795,catalog_sales_quantitycount#4796L,catalog_sales_quantityave#4797,catalog_sales_quantitystdev#4798,catalog_sales_quantitycov#4799])
[info] +- *(15) HashAggregate(keys=[i_item_id#497, i_item_desc#500, s_state#694], functions=[count(ss_quantity#1173), avg(cast(ss_quantity#1173 as bigint)), stddev_samp(cast(ss_quantity#1173 as double)), count(sr_return_quantity#800), avg(cast(sr_return_quantity#800 as bigint)), stddev_samp(cast(sr_return_quantity#800 as double)), count(cs_quantity#895), avg(cast(cs_quantity#895 as bigint)), stddev_samp(cast(cs_quantity#895 as double))])
[info]    +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, s_state#694, 4), true, [id=#15517]
[info]       +- *(14) HashAggregate(keys=[i_item_id#497, i_item_desc#500, s_state#694], functions=[partial_count(ss_quantity#1173), partial_avg(cast(ss_quantity#1173 as bigint)), partial_stddev_samp(cast(ss_quantity#1173 as double)), partial_count(sr_return_quantity#800), partial_avg(cast(sr_return_quantity#800 as bigint)), partial_stddev_samp(cast(sr_return_quantity#800 as double)), partial_count(cs_quantity#895), partial_avg(cast(cs_quantity#895 as bigint)), partial_stddev_samp(cast(cs_quantity#895 as double))])
[info]          +- *(14) Project [ss_quantity#1173, sr_return_quantity#800, cs_quantity#895, s_state#694, i_item_id#497, i_item_desc#500]
[info]             +- *(14) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :- *(14) Project [ss_item_sk#1165, ss_quantity#1173, sr_return_quantity#800, cs_quantity#895, s_state#694]
[info]                :  +- *(14) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, sr_return_quantity#800, cs_quantity#895]
[info]                :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#4828], Inner, BuildRight
[info]                :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, sr_return_quantity#800, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :  +- *(14) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#4800], Inner, BuildRight
[info]                :     :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, sr_return_quantity#800, sr_returned_date_sk#810, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :     :  +- *(14) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sold_date_sk#1186, sr_return_quantity#800, sr_returned_date_sk#810, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :     :     :  +- *(14) SortMergeJoin [sr_customer_sk#793, sr_item_sk#792], [cs_bill_customer_sk#880, cs_item_sk#892], Inner
[info]                :     :     :     :     :     :- *(6) Sort [sr_customer_sk#793 ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :  +- Exchange hashpartitioning(sr_customer_sk#793, sr_item_sk#792, 4), true, [id=#15414]
[info]                :     :     :     :     :     :     +- *(5) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sold_date_sk#1186, sr_item_sk#792, sr_customer_sk#793, sr_return_quantity#800, sr_returned_date_sk#810]
[info]                :     :     :     :     :     :        +- *(5) SortMergeJoin [ss_customer_sk#1166, ss_item_sk#1165, ss_ticket_number#1172L], [sr_customer_sk#793, sr_item_sk#792, sr_ticket_number#799L], Inner
[info]                :     :     :     :     :     :           :- *(2) Sort [ss_customer_sk#1166 ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :           :  +- Exchange hashpartitioning(ss_customer_sk#1166, ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#15396]
[info]                :     :     :     :     :     :           :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_quantity#1173, ss_sold_date_sk#1186]
[info]                :     :     :     :     :     :           :        +- *(1) Filter ((((isnotnull(ss_item_sk#1165) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]                :     :     :     :     :     :           :           +- *(1) ColumnarToRow
[info]                :     :     :     :     :     :           :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_quantity#1173, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_quantity:int>
[info]                :     :     :     :     :     :           +- *(4) Sort [sr_customer_sk#793 ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :              +- Exchange hashpartitioning(sr_customer_sk#793, sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#15406]
[info]                :     :     :     :     :     :                 +- *(3) Project [sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_return_quantity#800, sr_returned_date_sk#810]
[info]                :     :     :     :     :     :                    +- *(3) Filter (((isnotnull(sr_customer_sk#793) AND isnotnull(sr_ticket_number#799L)) AND isnotnull(sr_item_sk#792)) AND isnotnull(sr_returned_date_sk#810))
[info]                :     :     :     :     :     :                       +- *(3) ColumnarToRow
[info]                :     :     :     :     :     :                          +- BatchScan[sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_return_quantity#800, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint,sr_return_quantity:int>
[info]                :     :     :     :     :     +- *(8) Sort [cs_bill_customer_sk#880 ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :        +- Exchange hashpartitioning(cs_bill_customer_sk#880, cs_item_sk#892, 4), true, [id=#15424]
[info]                :     :     :     :     :           +- *(7) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :     :     :              +- *(7) Filter ((isnotnull(cs_item_sk#892) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911))
[info]                :     :     :     :     :                 +- *(7) ColumnarToRow
[info]                :     :     :     :     :                    +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int>
[info]                :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15436]
[info]                :     :     :     :        +- *(9) Project [d_date_sk#331]
[info]                :     :     :     :           +- *(9) Filter ((isnotnull(d_quarter_name#346) AND (d_quarter_name#346 = 2001Q1)) AND isnotnull(d_date_sk#331))
[info]                :     :     :     :              +- *(9) ColumnarToRow
[info]                :     :     :     :                 +- BatchScan[d_date_sk#331, d_quarter_name#346] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_quarter_name:string>
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15445]
[info]                :     :     :        +- *(10) Project [d_date_sk#4800]
[info]                :     :     :           +- *(10) Filter (d_quarter_name#4815 IN (2001Q1,2001Q2,2001Q3) AND isnotnull(d_date_sk#4800))
[info]                :     :     :              +- *(10) ColumnarToRow
[info]                :     :     :                 +- BatchScan[d_date_sk#4800, d_quarter_name#4815] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_quarter_name:string>
[info]                :     :     +- ReusedExchange [d_date_sk#4828], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15445]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15463]
[info]                :        +- *(12) Project [s_store_sk#670, s_state#694]
[info]                :           +- *(12) Filter isnotnull(s_store_sk#670)
[info]                :              +- *(12) ColumnarToRow
[info]                :                 +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15472]
[info]                   +- *(13) Project [i_item_sk#496, i_item_id#497, i_item_desc#500]
[info]                      +- *(13) Filter isnotnull(i_item_sk#496)
[info]                         +- *(13) ColumnarToRow
[info]                            +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 302 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q17                                                 302            302           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q18
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ca_country#5202 ASC NULLS FIRST,ca_state#5203 ASC NULLS FIRST,ca_county#5204 ASC NULLS FIRST,i_item_id#5201 ASC NULLS FIRST], output=[i_item_id#5201,ca_country#5202,ca_state#5203,ca_county#5204,agg1#5173,agg2#5174,agg3#5175,agg4#5176,agg5#5177,agg6#5178,agg7#5179])
[info] +- *(8) HashAggregate(keys=[i_item_id#5201, ca_country#5202, ca_state#5203, ca_county#5204, spark_grouping_id#5196], functions=[avg(cast(cs_quantity#895 as decimal(12,2))), avg(cast(cs_list_price#897 as decimal(12,2))), avg(cast(cs_coupon_amt#904 as decimal(12,2))), avg(cast(cs_sales_price#898 as decimal(12,2))), avg(cast(cs_net_profit#910 as decimal(12,2))), avg(cast(c_birth_year#169 as decimal(12,2))), avg(cast(cd_dep_count#296 as decimal(12,2)))])
[info]    +- Exchange hashpartitioning(i_item_id#5201, ca_country#5202, ca_state#5203, ca_county#5204, spark_grouping_id#5196, 4), true, [id=#15773]
[info]       +- *(7) HashAggregate(keys=[i_item_id#5201, ca_country#5202, ca_state#5203, ca_county#5204, spark_grouping_id#5196], functions=[partial_avg(cast(cs_quantity#895 as decimal(12,2))), partial_avg(cast(cs_list_price#897 as decimal(12,2))), partial_avg(cast(cs_coupon_amt#904 as decimal(12,2))), partial_avg(cast(cs_sales_price#898 as decimal(12,2))), partial_avg(cast(cs_net_profit#910 as decimal(12,2))), partial_avg(cast(c_birth_year#169 as decimal(12,2))), partial_avg(cast(cd_dep_count#296 as decimal(12,2)))])
[info]          +- *(7) Expand [List(cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, i_item_id#497, ca_country#243, ca_state#241, ca_county#240, 0), List(cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, i_item_id#497, ca_country#243, ca_state#241, null, 1), List(cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, i_item_id#497, ca_country#243, null, null, 3), List(cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, i_item_id#497, null, null, null, 7), List(cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, null, null, null, null, 15)], [cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, i_item_id#5201, ca_country#5202, ca_state#5203, ca_county#5204, spark_grouping_id#5196]
[info]             +- *(7) Project [cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, i_item_id#497, ca_country#243, ca_state#241, ca_county#240]
[info]                +- *(7) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                   :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, ca_county#240, ca_state#241, ca_country#243]
[info]                   :  +- *(7) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                   :     :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_birth_year#169, ca_county#240, ca_state#241, ca_country#243]
[info]                   :     :  +- *(7) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                   :     :     :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_addr_sk#160, c_birth_year#169]
[info]                   :     :     :  +- *(7) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#5180], Inner, BuildRight
[info]                   :     :     :     :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]                   :     :     :     :  +- *(7) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]                   :     :     :     :     :- *(7) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296]
[info]                   :     :     :     :     :  +- *(7) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]                   :     :     :     :     :     :- *(7) Project [cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911]
[info]                   :     :     :     :     :     :  +- *(7) Filter (((isnotnull(cs_bill_cdemo_sk#881) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_item_sk#892))
[info]                   :     :     :     :     :     :     +- *(7) ColumnarToRow
[info]                   :     :     :     :     :     :        +- BatchScan[cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...
[info]                   :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15721]
[info]                   :     :     :     :     :        +- *(1) Project [cd_demo_sk#290, cd_dep_count#296]
[info]                   :     :     :     :     :           +- *(1) Filter ((((isnotnull(cd_gender#291) AND isnotnull(cd_education_status#293)) AND (cd_gender#291 = F)) AND (cd_education_status#293 = Unknown)) AND isnotnull(cd_demo_sk#290))
[info]                   :     :     :     :     :              +- *(1) ColumnarToRow
[info]                   :     :     :     :     :                 +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_education_status#293, cd_dep_count#296] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_education_status:string,cd_dep_count:int>
[info]                   :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15730]
[info]                   :     :     :     :        +- *(2) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]                   :     :     :     :           +- *(2) Filter (((c_birth_month#168 IN (1,6,8,9,12,2) AND isnotnull(c_customer_sk#156)) AND isnotnull(c_current_cdemo_sk#158)) AND isnotnull(c_current_addr_sk#160))
[info]                   :     :     :     :              +- *(2) ColumnarToRow
[info]                   :     :     :     :                 +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_month#168, c_birth_year#169] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int,c_birth_month:int,c_birth_y...
[info]                   :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15739]
[info]                   :     :     :        +- *(3) Project [cd_demo_sk#5180]
[info]                   :     :     :           +- *(3) Filter isnotnull(cd_demo_sk#5180)
[info]                   :     :     :              +- *(3) ColumnarToRow
[info]                   :     :     :                 +- BatchScan[cd_demo_sk#5180] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int>
[info]                   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15748]
[info]                   :     :        +- *(4) Project [ca_address_sk#233, ca_county#240, ca_state#241, ca_country#243]
[info]                   :     :           +- *(4) Filter (ca_state#241 IN (MS,IN,ND,OK,NM,VA) AND isnotnull(ca_address_sk#233))
[info]                   :     :              +- *(4) ColumnarToRow
[info]                   :     :                 +- BatchScan[ca_address_sk#233, ca_county#240, ca_state#241, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string,ca_country:string>
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15757]
[info]                   :        +- *(5) Project [d_date_sk#331]
[info]                   :           +- *(5) Filter ((isnotnull(d_year#337) AND (d_year#337 = 1998)) AND isnotnull(d_date_sk#331))
[info]                   :              +- *(5) ColumnarToRow
[info]                   :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15766]
[info]                      +- *(6) Project [i_item_sk#496, i_item_id#497]
[info]                         +- *(6) Filter isnotnull(i_item_sk#496)
[info]                            +- *(6) ColumnarToRow
[info]                               +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 338 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q18                                                 338            338           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q19
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ext_price#5292 DESC NULLS LAST,brand#5291 ASC NULLS FIRST,brand_id#5290 ASC NULLS FIRST,i_manufact_id#509 ASC NULLS FIRST,i_manufact#510 ASC NULLS FIRST], output=[brand_id#5290,brand#5291,i_manufact_id#509,i_manufact#510,ext_price#5292])
[info] +- *(7) HashAggregate(keys=[i_brand#504, i_brand_id#503, i_manufact_id#509, i_manufact#510], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]    +- Exchange hashpartitioning(i_brand#504, i_brand_id#503, i_manufact_id#509, i_manufact#510, 4), true, [id=#15987]
[info]       +- *(6) HashAggregate(keys=[i_brand#504, i_brand_id#503, i_manufact_id#509, i_manufact#510], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          +- *(6) Project [ss_ext_sales_price#1178, i_brand_id#503, i_brand#504, i_manufact_id#509, i_manufact#510]
[info]             +- *(6) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight, NOT (substring(ca_zip#242, 1, 5) = substring(s_zip#695, 1, 5))
[info]                :- *(6) Project [ss_store_sk#1170, ss_ext_sales_price#1178, i_brand_id#503, i_brand#504, i_manufact_id#509, i_manufact#510, ca_zip#242]
[info]                :  +- *(6) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                :     :- *(6) Project [ss_store_sk#1170, ss_ext_sales_price#1178, i_brand_id#503, i_brand#504, i_manufact_id#509, i_manufact#510, c_current_addr_sk#160]
[info]                :     :  +- *(6) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                :     :     :- *(6) Project [ss_customer_sk#1166, ss_store_sk#1170, ss_ext_sales_price#1178, i_brand_id#503, i_brand#504, i_manufact_id#509, i_manufact#510]
[info]                :     :     :  +- *(6) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :     :     :     :- *(6) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ext_sales_price#1178]
[info]                :     :     :     :  +- *(6) BroadcastHashJoin [d_date_sk#331], [ss_sold_date_sk#1186], Inner, BuildLeft
[info]                :     :     :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15941]
[info]                :     :     :     :     :  +- *(1) Project [d_date_sk#331]
[info]                :     :     :     :     :     +- *(1) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 11)) AND (d_year#337 = 1998)) AND isnotnull(d_date_sk#331))
[info]                :     :     :     :     :        +- *(1) ColumnarToRow
[info]                :     :     :     :     :           +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     :     :     :     +- *(6) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                :     :     :     :        +- *(6) Filter (((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_store_sk#1170))
[info]                :     :     :     :           +- *(6) ColumnarToRow
[info]                :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15954]
[info]                :     :     :        +- *(2) Project [i_item_sk#496, i_brand_id#503, i_brand#504, i_manufact_id#509, i_manufact#510]
[info]                :     :     :           +- *(2) Filter ((isnotnull(i_manager_id#516) AND (i_manager_id#516 = 8)) AND isnotnull(i_item_sk#496))
[info]                :     :     :              +- *(2) ColumnarToRow
[info]                :     :     :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_brand#504, i_manufact_id#509, i_manufact#510, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manufact_id:int,i_manufact:string,i_manager_...
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15963]
[info]                :     :        +- *(3) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]                :     :           +- *(3) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]                :     :              +- *(3) ColumnarToRow
[info]                :     :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15972]
[info]                :        +- *(4) Project [ca_address_sk#233, ca_zip#242]
[info]                :           +- *(4) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_zip#242))
[info]                :              +- *(4) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_zip#242] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_zip:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#15981]
[info]                   +- *(5) Project [s_store_sk#670, s_zip#695]
[info]                      +- *(5) Filter (isnotnull(s_zip#695) AND isnotnull(s_store_sk#670))
[info]                         +- *(5) ColumnarToRow
[info]                            +- BatchScan[s_store_sk#670, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_zip:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 200 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q19                                                 201            201           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q20
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_category#508 ASC NULLS FIRST,i_class#506 ASC NULLS FIRST,i_item_id#497 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST,revenueratio#5343 ASC NULLS FIRST], output=[i_item_desc#500,i_category#508,i_class#506,i_current_price#501,itemrevenue#5342,revenueratio#5343])
[info] +- *(6) Project [i_item_desc#500, i_category#508, i_class#506, i_current_price#501, itemrevenue#5342, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#5348) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#5350)), DecimalType(38,17), true) AS revenueratio#5343, i_item_id#497]
[info]    +- Window [sum(_w1#5349) windowspecdefinition(i_class#506, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#5350], [i_class#506]
[info]       +- *(5) Sort [i_class#506 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_class#506, 4), true, [id=#16117]
[info]             +- *(4) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[sum(UnscaledValue(cs_ext_sales_price#900))])
[info]                +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, 4), true, [id=#16113]
[info]                   +- *(3) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900))])
[info]                      +- *(3) Project [cs_ext_sales_price#900, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                         +- *(3) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                            :- *(3) Project [cs_ext_sales_price#900, cs_sold_date_sk#911, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :  +- *(3) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                            :     :- *(3) Project [cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]                            :     :  +- *(3) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]                            :     :     +- *(3) ColumnarToRow
[info]                            :     :        +- BatchScan[cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16098]
[info]                            :        +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :           +- *(1) Filter (i_category#508 IN (Sports,Books,Home) AND isnotnull(i_item_sk#496))
[info]                            :              +- *(1) ColumnarToRow
[info]                            :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16107]
[info]                               +- *(2) Project [d_date_sk#331]
[info]                                  +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10644)) AND (d_date#333 <= 10674)) AND isnotnull(d_date_sk#331))
[info]                                     +- *(2) ColumnarToRow
[info]                                        +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 130 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q20                                                 131            131           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q21
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#1623 ASC NULLS FIRST,i_item_id#497 ASC NULLS FIRST], output=[w_warehouse_name#1623,i_item_id#497,inv_before#5379L,inv_after#5380L])
[info] +- *(5) Filter ((CASE WHEN (inv_before#5379L > 0) THEN (cast(inv_after#5380L as double) / cast(inv_before#5379L as double)) ELSE null END >= 0.666667) AND (CASE WHEN (inv_before#5379L > 0) THEN (cast(inv_after#5380L as double) / cast(inv_before#5379L as double)) ELSE null END <= 1.5))
[info]    +- *(5) HashAggregate(keys=[w_warehouse_name#1623, i_item_id#497], functions=[sum(cast(CASE WHEN (d_date#333 < 11027) THEN inv_quantity_on_hand#475 ELSE 0 END as bigint)), sum(cast(CASE WHEN (d_date#333 >= 11027) THEN inv_quantity_on_hand#475 ELSE 0 END as bigint))])
[info]       +- Exchange hashpartitioning(w_warehouse_name#1623, i_item_id#497, 4), true, [id=#16271]
[info]          +- *(4) HashAggregate(keys=[w_warehouse_name#1623, i_item_id#497], functions=[partial_sum(cast(CASE WHEN (d_date#333 < 11027) THEN inv_quantity_on_hand#475 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (d_date#333 >= 11027) THEN inv_quantity_on_hand#475 ELSE 0 END as bigint))])
[info]             +- *(4) Project [inv_quantity_on_hand#475, w_warehouse_name#1623, i_item_id#497, d_date#333]
[info]                +- *(4) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]                   :- *(4) Project [inv_quantity_on_hand#475, inv_date_sk#476, w_warehouse_name#1623, i_item_id#497]
[info]                   :  +- *(4) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#496], Inner, BuildRight
[info]                   :     :- *(4) Project [inv_item_sk#473, inv_quantity_on_hand#475, inv_date_sk#476, w_warehouse_name#1623]
[info]                   :     :  +- *(4) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#1621], Inner, BuildRight
[info]                   :     :     :- *(4) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]                   :     :     :  +- *(4) Filter ((isnotnull(inv_warehouse_sk#474) AND isnotnull(inv_item_sk#473)) AND isnotnull(inv_date_sk#476))
[info]                   :     :     :     +- *(4) ColumnarToRow
[info]                   :     :     :        +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]                   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16247]
[info]                   :     :        +- *(1) Project [w_warehouse_sk#1621, w_warehouse_name#1623]
[info]                   :     :           +- *(1) Filter isnotnull(w_warehouse_sk#1621)
[info]                   :     :              +- *(1) ColumnarToRow
[info]                   :     :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16256]
[info]                   :        +- *(2) Project [i_item_sk#496, i_item_id#497]
[info]                   :           +- *(2) Filter (((isnotnull(i_current_price#501) AND (i_current_price#501 >= 0.99)) AND (i_current_price#501 <= 1.49)) AND isnotnull(i_item_sk#496))
[info]                   :              +- *(2) ColumnarToRow
[info]                   :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_current_price#501] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_current_price:decimal(7,2)>
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16265]
[info]                      +- *(3) Project [d_date_sk#331, d_date#333]
[info]                         +- *(3) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10997)) AND (d_date#333 <= 11057)) AND isnotnull(d_date_sk#331))
[info]                            +- *(3) ColumnarToRow
[info]                               +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 155 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q21                                                 155            155           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q22
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[qoh#5420 ASC NULLS FIRST,i_product_name#5427 ASC NULLS FIRST,i_brand#5428 ASC NULLS FIRST,i_class#5429 ASC NULLS FIRST,i_category#5430 ASC NULLS FIRST], output=[i_product_name#5427,i_brand#5428,i_class#5429,i_category#5430,qoh#5420])
[info] +- *(5) HashAggregate(keys=[i_product_name#5427, i_brand#5428, i_class#5429, i_category#5430, spark_grouping_id#5422], functions=[avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]    +- Exchange hashpartitioning(i_product_name#5427, i_brand#5428, i_class#5429, i_category#5430, spark_grouping_id#5422, 4), true, [id=#16423]
[info]       +- *(4) HashAggregate(keys=[i_product_name#5427, i_brand#5428, i_class#5429, i_category#5430, spark_grouping_id#5422], functions=[partial_avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]          +- *(4) Expand [List(inv_quantity_on_hand#475, i_product_name#517, i_brand#504, i_class#506, i_category#508, 0), List(inv_quantity_on_hand#475, i_product_name#517, i_brand#504, i_class#506, null, 1), List(inv_quantity_on_hand#475, i_product_name#517, i_brand#504, null, null, 3), List(inv_quantity_on_hand#475, i_product_name#517, null, null, null, 7), List(inv_quantity_on_hand#475, null, null, null, null, 15)], [inv_quantity_on_hand#475, i_product_name#5427, i_brand#5428, i_class#5429, i_category#5430, spark_grouping_id#5422]
[info]             +- *(4) Project [inv_quantity_on_hand#475, i_product_name#517, i_brand#504, i_class#506, i_category#508]
[info]                +- *(4) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#1621], Inner, BuildRight
[info]                   :- *(4) Project [inv_warehouse_sk#474, inv_quantity_on_hand#475, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]                   :  +- *(4) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#496], Inner, BuildRight
[info]                   :     :- *(4) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475]
[info]                   :     :  +- *(4) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]                   :     :     :- *(4) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]                   :     :     :  +- *(4) Filter ((isnotnull(inv_date_sk#476) AND isnotnull(inv_item_sk#473)) AND isnotnull(inv_warehouse_sk#474))
[info]                   :     :     :     +- *(4) ColumnarToRow
[info]                   :     :     :        +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]                   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16398]
[info]                   :     :        +- *(1) Project [d_date_sk#331]
[info]                   :     :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                   :     :              +- *(1) ColumnarToRow
[info]                   :     :                 +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16407]
[info]                   :        +- *(2) Project [i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]                   :           +- *(2) Filter isnotnull(i_item_sk#496)
[info]                   :              +- *(2) ColumnarToRow
[info]                   :                 +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16416]
[info]                      +- *(3) Project [w_warehouse_sk#1621]
[info]                         +- *(3) Filter isnotnull(w_warehouse_sk#1621)
[info]                            +- *(3) ColumnarToRow
[info]                               +- BatchScan[w_warehouse_sk#1621] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 145 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q22                                                 146            146           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q23a
[info] == Physical Plan ==
[info] CollectLimit 100
[info] +- *(30) HashAggregate(keys=[], functions=[sum(sales#5501)])
[info]    +- Exchange SinglePartition, true, [id=#17685]
[info]       +- *(29) HashAggregate(keys=[], functions=[partial_sum(sales#5501)])
[info]          +- Union
[info]             :- *(14) Project [CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true) AS sales#5501]
[info]             :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :     :- *(14) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]             :     :  +- SortMergeJoin [cs_bill_customer_sk#880], [c_customer_sk#156], LeftSemi
[info]             :     :     :- *(9) Sort [cs_bill_customer_sk#880 ASC NULLS FIRST], false, 0
[info]             :     :     :  +- Exchange hashpartitioning(cs_bill_customer_sk#880, 4), true, [id=#17219]
[info]             :     :     :     +- *(8) Project [cs_bill_customer_sk#880, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]             :     :     :        +- SortMergeJoin [cs_item_sk#892], [item_sk#5506], LeftSemi
[info]             :     :     :           :- *(2) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]             :     :     :           :  +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#17177]
[info]             :     :     :           :     +- *(1) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]             :     :     :           :        +- *(1) Filter isnotnull(cs_sold_date_sk#911)
[info]             :     :     :           :           +- *(1) ColumnarToRow
[info]             :     :     :           :              +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>
[info]             :     :     :           +- *(7) Sort [item_sk#5506 ASC NULLS FIRST], false, 0
[info]             :     :     :              +- Exchange hashpartitioning(item_sk#5506, 4), true, [id=#17211]
[info]             :     :     :                 +- *(6) Project [item_sk#5506]
[info]             :     :     :                    +- *(6) Filter (count(1)#5516L > 4)
[info]             :     :     :                       +- *(6) HashAggregate(keys=[substring(i_item_desc#500, 1, 30)#5598, i_item_sk#496, d_date#333], functions=[count(1)])
[info]             :     :     :                          +- Exchange hashpartitioning(substring(i_item_desc#500, 1, 30)#5598, i_item_sk#496, d_date#333, 4), true, [id=#17205]
[info]             :     :     :                             +- *(5) HashAggregate(keys=[substring(i_item_desc#500, 1, 30) AS substring(i_item_desc#500, 1, 30)#5598, i_item_sk#496, d_date#333], functions=[partial_count(1)])
[info]             :     :     :                                +- *(5) Project [d_date#333, i_item_sk#496, i_item_desc#500]
[info]             :     :     :                                   +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :     :     :                                      :- *(5) Project [ss_item_sk#1165, d_date#333]
[info]             :     :     :                                      :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :     :     :                                      :     :- *(5) Project [ss_item_sk#1165, ss_sold_date_sk#1186]
[info]             :     :     :                                      :     :  +- *(5) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165))
[info]             :     :     :                                      :     :     +- *(5) ColumnarToRow
[info]             :     :     :                                      :     :        +- BatchScan[ss_item_sk#1165, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int>
[info]             :     :     :                                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#17190]
[info]             :     :     :                                      :        +- *(3) Project [d_date_sk#331, d_date#333]
[info]             :     :     :                                      :           +- *(3) Filter (d_year#337 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#331))
[info]             :     :     :                                      :              +- *(3) ColumnarToRow
[info]             :     :     :                                      :                 +- BatchScan[d_date_sk#331, d_date#333, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>
[info]             :     :     :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#17199]
[info]             :     :     :                                         +- *(4) Project [i_item_sk#496, i_item_desc#500]
[info]             :     :     :                                            +- *(4) Filter isnotnull(i_item_sk#496)
[info]             :     :     :                                               +- *(4) ColumnarToRow
[info]             :     :     :                                                  +- BatchScan[i_item_sk#496, i_item_desc#500] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
[info]             :     :     +- *(12) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]             :     :        +- *(12) Project [c_customer_sk#156]
[info]             :     :           +- *(12) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5524) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5524 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(Subquery scalar-subquery#5512, [id=#16831] as decimal(32,6)))), DecimalType(38,8), true)))
[info]             :     :              :  +- Subquery scalar-subquery#5512, [id=#16831]
[info]             :     :              :     +- *(5) HashAggregate(keys=[], functions=[max(csales#5509)])
[info]             :     :              :        +- Exchange SinglePartition, true, [id=#16827]
[info]             :     :              :           +- *(4) HashAggregate(keys=[], functions=[partial_max(csales#5509)])
[info]             :     :              :              +- *(4) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]             :     :              :                 +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#16822]
[info]             :     :              :                    +- *(3) HashAggregate(keys=[c_customer_sk#156], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]             :     :              :                       +- *(3) Project [ss_quantity#1173, ss_sales_price#1176, c_customer_sk#156]
[info]             :     :              :                          +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :     :              :                             :- *(3) Project [ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186, c_customer_sk#156]
[info]             :     :              :                             :  +- *(3) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]             :     :              :                             :     :- *(3) Project [ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]             :     :              :                             :     :  +- *(3) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]             :     :              :                             :     :     +- *(3) ColumnarToRow
[info]             :     :              :                             :     :        +- BatchScan[ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
[info]             :     :              :                             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16807]
[info]             :     :              :                             :        +- *(1) Project [c_customer_sk#156]
[info]             :     :              :                             :           +- *(1) Filter isnotnull(c_customer_sk#156)
[info]             :     :              :                             :              +- *(1) ColumnarToRow
[info]             :     :              :                             :                 +- BatchScan[c_customer_sk#156] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int>
[info]             :     :              :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#16816]
[info]             :     :              :                                +- *(2) Project [d_date_sk#331]
[info]             :     :              :                                   +- *(2) Filter (d_year#337 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#331))
[info]             :     :              :                                      +- *(2) ColumnarToRow
[info]             :     :              :                                         +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]             :     :              +- *(12) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]             :     :                 +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#17238]
[info]             :     :                    +- *(11) HashAggregate(keys=[c_customer_sk#156], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]             :     :                       +- *(11) Project [ss_quantity#1173, ss_sales_price#1176, c_customer_sk#156]
[info]             :     :                          +- *(11) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]             :     :                             :- *(11) Project [ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176]
[info]             :     :                             :  +- *(11) Filter isnotnull(ss_customer_sk#1166)
[info]             :     :                             :     +- *(11) ColumnarToRow
[info]             :     :                             :        +- BatchScan[ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
[info]             :     :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#17232]
[info]             :     :                                +- *(10) Project [c_customer_sk#156]
[info]             :     :                                   +- *(10) Filter isnotnull(c_customer_sk#156)
[info]             :     :                                      +- *(10) ColumnarToRow
[info]             :     :                                         +- BatchScan[c_customer_sk#156] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int>
[info]             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#17253]
[info]             :        +- *(13) Project [d_date_sk#331]
[info]             :           +- *(13) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2000)) AND (d_moy#339 = 2)) AND isnotnull(d_date_sk#331))
[info]             :              +- *(13) ColumnarToRow
[info]             :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             +- *(28) Project [CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true) AS sales#5504]
[info]                +- *(28) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                   :- *(28) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]                   :  +- SortMergeJoin [ws_bill_customer_sk#1024], [c_customer_sk#156], LeftSemi
[info]                   :     :- *(23) Sort [ws_bill_customer_sk#1024 ASC NULLS FIRST], false, 0
[info]                   :     :  +- Exchange hashpartitioning(ws_bill_customer_sk#1024, 4), true, [id=#17473]
[info]                   :     :     +- *(22) Project [ws_bill_customer_sk#1024, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]                   :     :        +- SortMergeJoin [ws_item_sk#1023], [item_sk#5506], LeftSemi
[info]                   :     :           :- *(16) Sort [ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]                   :     :           :  +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#17263]
[info]                   :     :           :     +- *(15) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]                   :     :           :        +- *(15) Filter isnotnull(ws_sold_date_sk#1054)
[info]                   :     :           :           +- *(15) ColumnarToRow
[info]                   :     :           :              +- BatchScan[ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>
[info]                   :     :           +- *(21) Sort [item_sk#5506 ASC NULLS FIRST], false, 0
[info]                   :     :              +- ReusedExchange [item_sk#5506], Exchange hashpartitioning(item_sk#5506, 4), true, [id=#17211]
[info]                   :     +- *(26) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                   :        +- *(26) Project [c_customer_sk#156]
[info]                   :           +- *(26) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5538) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5538 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(ReusedSubquery Subquery scalar-subquery#5512, [id=#16831] as decimal(32,6)))), DecimalType(38,8), true)))
[info]                   :              :  +- ReusedSubquery Subquery scalar-subquery#5512, [id=#16831]
[info]                   :              +- *(26) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]                   :                 +- ReusedExchange [c_customer_sk#156, sum#5607], Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#17238]
[info]                   +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#17253]
[info] 
[info] 
[info]   Stopped after 1 iterations, 849 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q23a                                                849            849           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q23b
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_last_name#165 ASC NULLS FIRST,c_first_name#164 ASC NULLS FIRST,sales#5686 ASC NULLS FIRST], output=[c_last_name#165,c_first_name#164,sales#5686])
[info] +- Union
[info]    :- *(21) HashAggregate(keys=[c_last_name#165, c_first_name#164], functions=[sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :  +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, 4), true, [id=#19769]
[info]    :     +- *(20) HashAggregate(keys=[c_last_name#165, c_first_name#164], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :        +- *(20) Project [cs_quantity#895, cs_list_price#897, c_first_name#164, c_last_name#165]
[info]    :           +- *(20) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :              :- *(20) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911, c_first_name#164, c_last_name#165]
[info]    :              :  +- *(20) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]    :              :     :- SortMergeJoin [cs_bill_customer_sk#880], [c_customer_sk#156], LeftSemi
[info]    :              :     :  :- *(9) Sort [cs_bill_customer_sk#880 ASC NULLS FIRST], false, 0
[info]    :              :     :  :  +- Exchange hashpartitioning(cs_bill_customer_sk#880, 4), true, [id=#18947]
[info]    :              :     :  :     +- *(8) Project [cs_bill_customer_sk#880, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]    :              :     :  :        +- SortMergeJoin [cs_item_sk#892], [item_sk#5691], LeftSemi
[info]    :              :     :  :           :- *(2) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]    :              :     :  :           :  +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#18905]
[info]    :              :     :  :           :     +- *(1) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]    :              :     :  :           :        +- *(1) Filter (isnotnull(cs_bill_customer_sk#880) AND isnotnull(cs_sold_date_sk#911))
[info]    :              :     :  :           :           +- *(1) ColumnarToRow
[info]    :              :     :  :           :              +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>
[info]    :              :     :  :           +- *(7) Sort [item_sk#5691 ASC NULLS FIRST], false, 0
[info]    :              :     :  :              +- Exchange hashpartitioning(item_sk#5691, 4), true, [id=#18939]
[info]    :              :     :  :                 +- *(6) Project [item_sk#5691]
[info]    :              :     :  :                    +- *(6) Filter (count(1)#5701L > 4)
[info]    :              :     :  :                       +- *(6) HashAggregate(keys=[substring(i_item_desc#500, 1, 30)#5796, i_item_sk#496, d_date#333], functions=[count(1)])
[info]    :              :     :  :                          +- Exchange hashpartitioning(substring(i_item_desc#500, 1, 30)#5796, i_item_sk#496, d_date#333, 4), true, [id=#18933]
[info]    :              :     :  :                             +- *(5) HashAggregate(keys=[substring(i_item_desc#500, 1, 30) AS substring(i_item_desc#500, 1, 30)#5796, i_item_sk#496, d_date#333], functions=[partial_count(1)])
[info]    :              :     :  :                                +- *(5) Project [d_date#333, i_item_sk#496, i_item_desc#500]
[info]    :              :     :  :                                   +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :              :     :  :                                      :- *(5) Project [ss_item_sk#1165, d_date#333]
[info]    :              :     :  :                                      :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :  :                                      :     :- *(5) Project [ss_item_sk#1165, ss_sold_date_sk#1186]
[info]    :              :     :  :                                      :     :  +- *(5) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165))
[info]    :              :     :  :                                      :     :     +- *(5) ColumnarToRow
[info]    :              :     :  :                                      :     :        +- BatchScan[ss_item_sk#1165, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int>
[info]    :              :     :  :                                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#18918]
[info]    :              :     :  :                                      :        +- *(3) Project [d_date_sk#331, d_date#333]
[info]    :              :     :  :                                      :           +- *(3) Filter (d_year#337 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#331))
[info]    :              :     :  :                                      :              +- *(3) ColumnarToRow
[info]    :              :     :  :                                      :                 +- BatchScan[d_date_sk#331, d_date#333, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>
[info]    :              :     :  :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#18927]
[info]    :              :     :  :                                         +- *(4) Project [i_item_sk#496, i_item_desc#500]
[info]    :              :     :  :                                            +- *(4) Filter isnotnull(i_item_sk#496)
[info]    :              :     :  :                                               +- *(4) ColumnarToRow
[info]    :              :     :  :                                                  +- BatchScan[i_item_sk#496, i_item_desc#500] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
[info]    :              :     :  +- *(12) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]    :              :     :     +- *(12) Project [c_customer_sk#156]
[info]    :              :     :        +- *(12) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5709) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5709 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(Subquery scalar-subquery#5697, [id=#18210] as decimal(32,6)))), DecimalType(38,8), true)))
[info]    :              :     :           :  +- Subquery scalar-subquery#5697, [id=#18210]
[info]    :              :     :           :     +- *(5) HashAggregate(keys=[], functions=[max(csales#5694)])
[info]    :              :     :           :        +- Exchange SinglePartition, true, [id=#18206]
[info]    :              :     :           :           +- *(4) HashAggregate(keys=[], functions=[partial_max(csales#5694)])
[info]    :              :     :           :              +- *(4) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :              :     :           :                 +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#18201]
[info]    :              :     :           :                    +- *(3) HashAggregate(keys=[c_customer_sk#156], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :              :     :           :                       +- *(3) Project [ss_quantity#1173, ss_sales_price#1176, c_customer_sk#156]
[info]    :              :     :           :                          +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :           :                             :- *(3) Project [ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186, c_customer_sk#156]
[info]    :              :     :           :                             :  +- *(3) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]    :              :     :           :                             :     :- *(3) Project [ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]    :              :     :           :                             :     :  +- *(3) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]    :              :     :           :                             :     :     +- *(3) ColumnarToRow
[info]    :              :     :           :                             :     :        +- BatchScan[ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
[info]    :              :     :           :                             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#18186]
[info]    :              :     :           :                             :        +- *(1) Project [c_customer_sk#156]
[info]    :              :     :           :                             :           +- *(1) Filter isnotnull(c_customer_sk#156)
[info]    :              :     :           :                             :              +- *(1) ColumnarToRow
[info]    :              :     :           :                             :                 +- BatchScan[c_customer_sk#156] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int>
[info]    :              :     :           :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#18195]
[info]    :              :     :           :                                +- *(2) Project [d_date_sk#331]
[info]    :              :     :           :                                   +- *(2) Filter (d_year#337 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#331))
[info]    :              :     :           :                                      +- *(2) ColumnarToRow
[info]    :              :     :           :                                         +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]    :              :     :           +- *(12) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :              :     :              +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#18966]
[info]    :              :     :                 +- *(11) HashAggregate(keys=[c_customer_sk#156], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :              :     :                    +- *(11) Project [ss_quantity#1173, ss_sales_price#1176, c_customer_sk#156]
[info]    :              :     :                       +- *(11) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]    :              :     :                          :- *(11) Project [ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176]
[info]    :              :     :                          :  +- *(11) Filter isnotnull(ss_customer_sk#1166)
[info]    :              :     :                          :     +- *(11) ColumnarToRow
[info]    :              :     :                          :        +- BatchScan[ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
[info]    :              :     :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#18960]
[info]    :              :     :                             +- *(10) Project [c_customer_sk#156]
[info]    :              :     :                                +- *(10) Filter isnotnull(c_customer_sk#156)
[info]    :              :     :                                   +- *(10) ColumnarToRow
[info]    :              :     :                                      +- BatchScan[c_customer_sk#156] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int>
[info]    :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#19761]
[info]    :              :        +- SortMergeJoin [c_customer_sk#156], [c_customer_sk#156#5792], LeftSemi
[info]    :              :           :- *(14) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]    :              :           :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#18980]
[info]    :              :           :     +- *(13) Project [c_customer_sk#156, c_first_name#164, c_last_name#165]
[info]    :              :           :        +- *(13) Filter isnotnull(c_customer_sk#156)
[info]    :              :           :           +- *(13) ColumnarToRow
[info]    :              :           :              +- BatchScan[c_customer_sk#156, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
[info]    :              :           +- *(18) Sort [c_customer_sk#156#5792 ASC NULLS FIRST], false, 0
[info]    :              :              +- Exchange hashpartitioning(c_customer_sk#156#5792, 4), true, [id=#19756]
[info]    :              :                 +- *(17) Project [c_customer_sk#156 AS c_customer_sk#156#5792]
[info]    :              :                    +- *(17) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5709) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5709 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(ReusedSubquery Subquery scalar-subquery#5697, [id=#18210] as decimal(32,6)))), DecimalType(38,8), true)))
[info]    :              :                       :  +- ReusedSubquery Subquery scalar-subquery#5697, [id=#18210]
[info]    :              :                       +- *(17) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :              :                          +- ReusedExchange [c_customer_sk#156, sum#5800], Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#18966]
[info]    :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#19019]
[info]    :                 +- *(19) Project [d_date_sk#331]
[info]    :                    +- *(19) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2000)) AND (d_moy#339 = 2)) AND isnotnull(d_date_sk#331))
[info]    :                       +- *(19) ColumnarToRow
[info]    :                          +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]    +- *(42) HashAggregate(keys=[c_last_name#165, c_first_name#164], functions=[sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))])
[info]       +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, 4), true, [id=#19895]
[info]          +- *(41) HashAggregate(keys=[c_last_name#165, c_first_name#164], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))])
[info]             +- *(41) Project [ws_quantity#1038, ws_list_price#1040, c_first_name#164, c_last_name#165]
[info]                +- *(41) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                   :- *(41) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054, c_first_name#164, c_last_name#165]
[info]                   :  +- *(41) BroadcastHashJoin [ws_bill_customer_sk#1024], [c_customer_sk#156], Inner, BuildRight
[info]                   :     :- SortMergeJoin [ws_bill_customer_sk#1024], [c_customer_sk#156], LeftSemi
[info]                   :     :  :- *(30) Sort [ws_bill_customer_sk#1024 ASC NULLS FIRST], false, 0
[info]                   :     :  :  +- Exchange hashpartitioning(ws_bill_customer_sk#1024, 4), true, [id=#19388]
[info]                   :     :  :     +- *(29) Project [ws_bill_customer_sk#1024, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]                   :     :  :        +- SortMergeJoin [ws_item_sk#1023], [item_sk#5691], LeftSemi
[info]                   :     :  :           :- *(23) Sort [ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]                   :     :  :           :  +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#19034]
[info]                   :     :  :           :     +- *(22) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]                   :     :  :           :        +- *(22) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]                   :     :  :           :           +- *(22) ColumnarToRow
[info]                   :     :  :           :              +- BatchScan[ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>
[info]                   :     :  :           +- *(28) Sort [item_sk#5691 ASC NULLS FIRST], false, 0
[info]                   :     :  :              +- ReusedExchange [item_sk#5691], Exchange hashpartitioning(item_sk#5691, 4), true, [id=#18939]
[info]                   :     :  +- *(33) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                   :     :     +- *(33) Project [c_customer_sk#156]
[info]                   :     :        +- *(33) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5723) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5723 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(ReusedSubquery Subquery scalar-subquery#5697, [id=#18210] as decimal(32,6)))), DecimalType(38,8), true)))
[info]                   :     :           :  +- ReusedSubquery Subquery scalar-subquery#5697, [id=#18210]
[info]                   :     :           +- *(33) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]                   :     :              +- ReusedExchange [c_customer_sk#156, sum#5807], Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#18966]
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#19887]
[info]                   :        +- SortMergeJoin [c_customer_sk#156], [c_customer_sk#156#5793], LeftSemi
[info]                   :           :- *(35) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                   :           :  +- ReusedExchange [c_customer_sk#156, c_first_name#164, c_last_name#165], Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#18980]
[info]                   :           +- *(39) Sort [c_customer_sk#156#5793 ASC NULLS FIRST], false, 0
[info]                   :              +- Exchange hashpartitioning(c_customer_sk#156#5793, 4), true, [id=#19882]
[info]                   :                 +- *(38) Project [c_customer_sk#156 AS c_customer_sk#156#5793]
[info]                   :                    +- *(38) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5723) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))#5723 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(ReusedSubquery Subquery scalar-subquery#5697, [id=#18210] as decimal(32,6)))), DecimalType(38,8), true)))
[info]                   :                       :  +- ReusedSubquery Subquery scalar-subquery#5697, [id=#18210]
[info]                   :                       +- *(38) HashAggregate(keys=[c_customer_sk#156], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true))])
[info]                   :                          +- ReusedExchange [c_customer_sk#156, sum#5807], Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#18966]
[info]                   +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#19019]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1053 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q23b                                               1054           1054           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q24a
[info] == Physical Plan ==
[info] *(11) Project [c_last_name#165, c_first_name#164, s_store_name#675, paid#5870]
[info] +- *(11) Filter (isnotnull(sum(netpaid#5872)#5880) AND (cast(sum(netpaid#5872)#5880 as decimal(33,8)) > cast(Subquery scalar-subquery#5871, [id=#20253] as decimal(33,8))))
[info]    :  +- Subquery scalar-subquery#5871, [id=#20253]
[info]    :     +- *(11) HashAggregate(keys=[], functions=[avg(netpaid#5872)])
[info]    :        +- Exchange SinglePartition, true, [id=#20249]
[info]    :           +- *(10) HashAggregate(keys=[], functions=[partial_avg(netpaid#5872)])
[info]    :              +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]    :                 +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511, 4), true, [id=#20244]
[info]    :                    +- *(9) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]    :                       +- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, ca_state#241]
[info]    :                          +- *(9) BroadcastHashJoin [c_birth_country#170, s_zip#695], [upper(ca_country#243), ca_zip#242], Inner, BuildRight
[info]    :                             :- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]    :                             :  +- *(9) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]    :                             :     :- *(9) Project [ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]    :                             :     :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :                             :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695]
[info]    :                             :     :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]    :                             :     :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_net_paid#1183]
[info]    :                             :     :     :     :  +- *(9) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]    :                             :     :     :     :     :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]    :                             :     :     :     :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#20189]
[info]    :                             :     :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183]
[info]    :                             :     :     :     :     :        +- *(1) Filter (((isnotnull(ss_ticket_number#1172L) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_customer_sk#1166))
[info]    :                             :     :     :     :     :           +- *(1) ColumnarToRow
[info]    :                             :     :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_paid:deci...
[info]    :                             :     :     :     :     +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]    :                             :     :     :     :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#20199]
[info]    :                             :     :     :     :           +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]    :                             :     :     :     :              +- *(3) Filter (isnotnull(sr_ticket_number#799L) AND isnotnull(sr_item_sk#792))
[info]    :                             :     :     :     :                 +- *(3) ColumnarToRow
[info]    :                             :     :     :     :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]    :                             :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20211]
[info]    :                             :     :     :        +- *(5) Project [s_store_sk#670, s_store_name#675, s_state#694, s_zip#695]
[info]    :                             :     :     :           +- *(5) Filter (((isnotnull(s_market_id#680) AND (s_market_id#680 = 8)) AND isnotnull(s_store_sk#670)) AND isnotnull(s_zip#695))
[info]    :                             :     :     :              +- *(5) ColumnarToRow
[info]    :                             :     :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_market_id#680, s_state#694, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
[info]    :                             :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20220]
[info]    :                             :     :        +- *(6) Project [i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]    :                             :     :           +- *(6) Filter isnotnull(i_item_sk#496)
[info]    :                             :     :              +- *(6) ColumnarToRow
[info]    :                             :     :                 +- BatchScan[i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
[info]    :                             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20229]
[info]    :                             :        +- *(7) Project [c_customer_sk#156, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]    :                             :           +- *(7) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_birth_country#170))
[info]    :                             :              +- *(7) ColumnarToRow
[info]    :                             :                 +- BatchScan[c_customer_sk#156, c_first_name#164, c_last_name#165, c_birth_country#170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string,c_birth_country:string>
[info]    :                             +- BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, true]), input[1, string, true])), [id=#20238]
[info]    :                                +- *(8) Project [ca_state#241, ca_zip#242, ca_country#243]
[info]    :                                   +- *(8) Filter isnotnull(ca_zip#242)
[info]    :                                      +- *(8) ColumnarToRow
[info]    :                                         +- BatchScan[ca_state#241, ca_zip#242, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_state:string,ca_zip:string,ca_country:string>
[info]    +- *(11) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675], functions=[sum(netpaid#5872)])
[info]       +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, 4), true, [id=#20398]
[info]          +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675], functions=[partial_sum(netpaid#5872)])
[info]             +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]                +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511, 4), true, [id=#20393]
[info]                   +- *(9) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]                      +- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, ca_state#241]
[info]                         +- *(9) BroadcastHashJoin [c_birth_country#170, s_zip#695], [upper(ca_country#243), ca_zip#242], Inner, BuildRight
[info]                            :- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]                            :  +- *(9) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                            :     :- *(9) Project [ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]                            :     :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                            :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695]
[info]                            :     :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                            :     :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_net_paid#1183]
[info]                            :     :     :     :  +- *(9) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]                            :     :     :     :     :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                            :     :     :     :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#20338]
[info]                            :     :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183]
[info]                            :     :     :     :     :        +- *(1) Filter (((isnotnull(ss_ticket_number#1172L) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_customer_sk#1166))
[info]                            :     :     :     :     :           +- *(1) ColumnarToRow
[info]                            :     :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_paid:deci...
[info]                            :     :     :     :     +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                            :     :     :     :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#20348]
[info]                            :     :     :     :           +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]                            :     :     :     :              +- *(3) Filter (isnotnull(sr_ticket_number#799L) AND isnotnull(sr_item_sk#792))
[info]                            :     :     :     :                 +- *(3) ColumnarToRow
[info]                            :     :     :     :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]                            :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20360]
[info]                            :     :     :        +- *(5) Project [s_store_sk#670, s_store_name#675, s_state#694, s_zip#695]
[info]                            :     :     :           +- *(5) Filter (((isnotnull(s_market_id#680) AND (s_market_id#680 = 8)) AND isnotnull(s_store_sk#670)) AND isnotnull(s_zip#695))
[info]                            :     :     :              +- *(5) ColumnarToRow
[info]                            :     :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_market_id#680, s_state#694, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
[info]                            :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20369]
[info]                            :     :        +- *(6) Project [i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]                            :     :           +- *(6) Filter ((isnotnull(i_color#513) AND (i_color#513 = pale)) AND isnotnull(i_item_sk#496))
[info]                            :     :              +- *(6) ColumnarToRow
[info]                            :     :                 +- BatchScan[i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
[info]                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20378]
[info]                            :        +- *(7) Project [c_customer_sk#156, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]                            :           +- *(7) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_birth_country#170))
[info]                            :              +- *(7) ColumnarToRow
[info]                            :                 +- BatchScan[c_customer_sk#156, c_first_name#164, c_last_name#165, c_birth_country#170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string,c_birth_country:string>
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, true]), input[1, string, true])), [id=#20387]
[info]                               +- *(8) Project [ca_state#241, ca_zip#242, ca_country#243]
[info]                                  +- *(8) Filter isnotnull(ca_zip#242)
[info]                                     +- *(8) ColumnarToRow
[info]                                        +- BatchScan[ca_state#241, ca_zip#242, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_state:string,ca_zip:string,ca_country:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 558 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q24a                                                558            558           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q24b
[info] == Physical Plan ==
[info] *(11) Project [c_last_name#165, c_first_name#164, s_store_name#675, paid#5966]
[info] +- *(11) Filter (isnotnull(sum(netpaid#5968)#5976) AND (cast(sum(netpaid#5968)#5976 as decimal(33,8)) > cast(Subquery scalar-subquery#5967, [id=#20756] as decimal(33,8))))
[info]    :  +- Subquery scalar-subquery#5967, [id=#20756]
[info]    :     +- *(11) HashAggregate(keys=[], functions=[avg(netpaid#5968)])
[info]    :        +- Exchange SinglePartition, true, [id=#20752]
[info]    :           +- *(10) HashAggregate(keys=[], functions=[partial_avg(netpaid#5968)])
[info]    :              +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]    :                 +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511, 4), true, [id=#20747]
[info]    :                    +- *(9) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]    :                       +- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, ca_state#241]
[info]    :                          +- *(9) BroadcastHashJoin [c_birth_country#170, s_zip#695], [upper(ca_country#243), ca_zip#242], Inner, BuildRight
[info]    :                             :- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]    :                             :  +- *(9) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]    :                             :     :- *(9) Project [ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]    :                             :     :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :                             :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695]
[info]    :                             :     :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]    :                             :     :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_net_paid#1183]
[info]    :                             :     :     :     :  +- *(9) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]    :                             :     :     :     :     :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]    :                             :     :     :     :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#20692]
[info]    :                             :     :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183]
[info]    :                             :     :     :     :     :        +- *(1) Filter (((isnotnull(ss_ticket_number#1172L) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_customer_sk#1166))
[info]    :                             :     :     :     :     :           +- *(1) ColumnarToRow
[info]    :                             :     :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_paid:deci...
[info]    :                             :     :     :     :     +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]    :                             :     :     :     :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#20702]
[info]    :                             :     :     :     :           +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]    :                             :     :     :     :              +- *(3) Filter (isnotnull(sr_ticket_number#799L) AND isnotnull(sr_item_sk#792))
[info]    :                             :     :     :     :                 +- *(3) ColumnarToRow
[info]    :                             :     :     :     :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]    :                             :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20714]
[info]    :                             :     :     :        +- *(5) Project [s_store_sk#670, s_store_name#675, s_state#694, s_zip#695]
[info]    :                             :     :     :           +- *(5) Filter (((isnotnull(s_market_id#680) AND (s_market_id#680 = 8)) AND isnotnull(s_store_sk#670)) AND isnotnull(s_zip#695))
[info]    :                             :     :     :              +- *(5) ColumnarToRow
[info]    :                             :     :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_market_id#680, s_state#694, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
[info]    :                             :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20723]
[info]    :                             :     :        +- *(6) Project [i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]    :                             :     :           +- *(6) Filter isnotnull(i_item_sk#496)
[info]    :                             :     :              +- *(6) ColumnarToRow
[info]    :                             :     :                 +- BatchScan[i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
[info]    :                             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20732]
[info]    :                             :        +- *(7) Project [c_customer_sk#156, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]    :                             :           +- *(7) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_birth_country#170))
[info]    :                             :              +- *(7) ColumnarToRow
[info]    :                             :                 +- BatchScan[c_customer_sk#156, c_first_name#164, c_last_name#165, c_birth_country#170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string,c_birth_country:string>
[info]    :                             +- BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, true]), input[1, string, true])), [id=#20741]
[info]    :                                +- *(8) Project [ca_state#241, ca_zip#242, ca_country#243]
[info]    :                                   +- *(8) Filter isnotnull(ca_zip#242)
[info]    :                                      +- *(8) ColumnarToRow
[info]    :                                         +- BatchScan[ca_state#241, ca_zip#242, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_state:string,ca_zip:string,ca_country:string>
[info]    +- *(11) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675], functions=[sum(netpaid#5968)])
[info]       +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, 4), true, [id=#20901]
[info]          +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675], functions=[partial_sum(netpaid#5968)])
[info]             +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]                +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511, 4), true, [id=#20896]
[info]                   +- *(9) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]                      +- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, ca_state#241]
[info]                         +- *(9) BroadcastHashJoin [c_birth_country#170, s_zip#695], [upper(ca_country#243), ca_zip#242], Inner, BuildRight
[info]                            :- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]                            :  +- *(9) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                            :     :- *(9) Project [ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]                            :     :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                            :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695]
[info]                            :     :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                            :     :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_net_paid#1183]
[info]                            :     :     :     :  +- *(9) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]                            :     :     :     :     :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                            :     :     :     :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#20841]
[info]                            :     :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183]
[info]                            :     :     :     :     :        +- *(1) Filter (((isnotnull(ss_ticket_number#1172L) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_customer_sk#1166))
[info]                            :     :     :     :     :           +- *(1) ColumnarToRow
[info]                            :     :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_paid:deci...
[info]                            :     :     :     :     +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                            :     :     :     :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#20851]
[info]                            :     :     :     :           +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]                            :     :     :     :              +- *(3) Filter (isnotnull(sr_ticket_number#799L) AND isnotnull(sr_item_sk#792))
[info]                            :     :     :     :                 +- *(3) ColumnarToRow
[info]                            :     :     :     :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]                            :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20863]
[info]                            :     :     :        +- *(5) Project [s_store_sk#670, s_store_name#675, s_state#694, s_zip#695]
[info]                            :     :     :           +- *(5) Filter (((isnotnull(s_market_id#680) AND (s_market_id#680 = 8)) AND isnotnull(s_store_sk#670)) AND isnotnull(s_zip#695))
[info]                            :     :     :              +- *(5) ColumnarToRow
[info]                            :     :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_market_id#680, s_state#694, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
[info]                            :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20872]
[info]                            :     :        +- *(6) Project [i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]                            :     :           +- *(6) Filter ((isnotnull(i_color#513) AND (i_color#513 = chiffon)) AND isnotnull(i_item_sk#496))
[info]                            :     :              +- *(6) ColumnarToRow
[info]                            :     :                 +- BatchScan[i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
[info]                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#20881]
[info]                            :        +- *(7) Project [c_customer_sk#156, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]                            :           +- *(7) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_birth_country#170))
[info]                            :              +- *(7) ColumnarToRow
[info]                            :                 +- BatchScan[c_customer_sk#156, c_first_name#164, c_last_name#165, c_birth_country#170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string,c_birth_country:string>
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, true]), input[1, string, true])), [id=#20890]
[info]                               +- *(8) Project [ca_state#241, ca_zip#242, ca_country#243]
[info]                                  +- *(8) Filter isnotnull(ca_zip#242)
[info]                                     +- *(8) ColumnarToRow
[info]                                        +- BatchScan[ca_state#241, ca_zip#242, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_state:string,ca_zip:string,ca_country:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 518 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q24b                                                518            518           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q25
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST,s_store_id#671 ASC NULLS FIRST,s_store_name#675 ASC NULLS FIRST], output=[i_item_id#497,i_item_desc#500,s_store_id#671,s_store_name#675,store_sales_profit#6119,store_returns_loss#6120,catalog_sales_profit#6121])
[info] +- *(15) HashAggregate(keys=[i_item_id#497, i_item_desc#500, s_store_id#671, s_store_name#675], functions=[sum(UnscaledValue(ss_net_profit#1185)), sum(UnscaledValue(sr_net_loss#809)), sum(UnscaledValue(cs_net_profit#910))])
[info]    +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, s_store_id#671, s_store_name#675, 4), true, [id=#21257]
[info]       +- *(14) HashAggregate(keys=[i_item_id#497, i_item_desc#500, s_store_id#671, s_store_name#675], functions=[partial_sum(UnscaledValue(ss_net_profit#1185)), partial_sum(UnscaledValue(sr_net_loss#809)), partial_sum(UnscaledValue(cs_net_profit#910))])
[info]          +- *(14) Project [ss_net_profit#1185, sr_net_loss#809, cs_net_profit#910, s_store_id#671, s_store_name#675, i_item_id#497, i_item_desc#500]
[info]             +- *(14) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :- *(14) Project [ss_item_sk#1165, ss_net_profit#1185, sr_net_loss#809, cs_net_profit#910, s_store_id#671, s_store_name#675]
[info]                :  +- *(14) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_net_profit#1185, sr_net_loss#809, cs_net_profit#910]
[info]                :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#6150], Inner, BuildRight
[info]                :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_net_profit#1185, sr_net_loss#809, cs_net_profit#910, cs_sold_date_sk#911]
[info]                :     :     :  +- *(14) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#6122], Inner, BuildRight
[info]                :     :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_net_profit#1185, sr_net_loss#809, sr_returned_date_sk#810, cs_net_profit#910, cs_sold_date_sk#911]
[info]                :     :     :     :  +- *(14) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186, sr_net_loss#809, sr_returned_date_sk#810, cs_net_profit#910, cs_sold_date_sk#911]
[info]                :     :     :     :     :  +- *(14) SortMergeJoin [sr_customer_sk#793, sr_item_sk#792], [cs_bill_customer_sk#880, cs_item_sk#892], Inner
[info]                :     :     :     :     :     :- *(6) Sort [sr_customer_sk#793 ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :  +- Exchange hashpartitioning(sr_customer_sk#793, sr_item_sk#792, 4), true, [id=#21154]
[info]                :     :     :     :     :     :     +- *(5) Project [ss_item_sk#1165, ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186, sr_item_sk#792, sr_customer_sk#793, sr_net_loss#809, sr_returned_date_sk#810]
[info]                :     :     :     :     :     :        +- *(5) SortMergeJoin [ss_customer_sk#1166, ss_item_sk#1165, ss_ticket_number#1172L], [sr_customer_sk#793, sr_item_sk#792, sr_ticket_number#799L], Inner
[info]                :     :     :     :     :     :           :- *(2) Sort [ss_customer_sk#1166 ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :           :  +- Exchange hashpartitioning(ss_customer_sk#1166, ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#21136]
[info]                :     :     :     :     :     :           :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                :     :     :     :     :     :           :        +- *(1) Filter ((((isnotnull(ss_item_sk#1165) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]                :     :     :     :     :     :           :           +- *(1) ColumnarToRow
[info]                :     :     :     :     :     :           :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_profit:de...
[info]                :     :     :     :     :     :           +- *(4) Sort [sr_customer_sk#793 ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :              +- Exchange hashpartitioning(sr_customer_sk#793, sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#21146]
[info]                :     :     :     :     :     :                 +- *(3) Project [sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_net_loss#809, sr_returned_date_sk#810]
[info]                :     :     :     :     :     :                    +- *(3) Filter (((isnotnull(sr_customer_sk#793) AND isnotnull(sr_ticket_number#799L)) AND isnotnull(sr_item_sk#792)) AND isnotnull(sr_returned_date_sk#810))
[info]                :     :     :     :     :     :                       +- *(3) ColumnarToRow
[info]                :     :     :     :     :     :                          +- BatchScan[sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_net_loss#809, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint,sr_net_loss:decimal(7,2)>
[info]                :     :     :     :     :     +- *(8) Sort [cs_bill_customer_sk#880 ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :        +- Exchange hashpartitioning(cs_bill_customer_sk#880, cs_item_sk#892, 4), true, [id=#21164]
[info]                :     :     :     :     :           +- *(7) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_net_profit#910, cs_sold_date_sk#911]
[info]                :     :     :     :     :              +- *(7) Filter ((isnotnull(cs_item_sk#892) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911))
[info]                :     :     :     :     :                 +- *(7) ColumnarToRow
[info]                :     :     :     :     :                    +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_net_profit:decimal(7,2)>
[info]                :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21176]
[info]                :     :     :     :        +- *(9) Project [d_date_sk#331]
[info]                :     :     :     :           +- *(9) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 4)) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]                :     :     :     :              +- *(9) ColumnarToRow
[info]                :     :     :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21185]
[info]                :     :     :        +- *(10) Project [d_date_sk#6122]
[info]                :     :     :           +- *(10) Filter (((((isnotnull(d_moy#6130) AND isnotnull(d_year#6128)) AND (d_moy#6130 >= 4)) AND (d_moy#6130 <= 10)) AND (d_year#6128 = 2001)) AND isnotnull(d_date_sk#6122))
[info]                :     :     :              +- *(10) ColumnarToRow
[info]                :     :     :                 +- BatchScan[d_date_sk#6122, d_year#6128, d_moy#6130] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     :     +- ReusedExchange [d_date_sk#6150], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21185]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21203]
[info]                :        +- *(12) Project [s_store_sk#670, s_store_id#671, s_store_name#675]
[info]                :           +- *(12) Filter isnotnull(s_store_sk#670)
[info]                :              +- *(12) ColumnarToRow
[info]                :                 +- BatchScan[s_store_sk#670, s_store_id#671, s_store_name#675] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21212]
[info]                   +- *(13) Project [i_item_sk#496, i_item_id#497, i_item_desc#500]
[info]                      +- *(13) Filter isnotnull(i_item_sk#496)
[info]                         +- *(13) ColumnarToRow
[info]                            +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 314 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q25                                                 314            314           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q26
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST], output=[i_item_id#497,agg1#6245,agg2#6246,agg3#6247,agg4#6248])
[info] +- *(6) HashAggregate(keys=[i_item_id#497], functions=[avg(cast(cs_quantity#895 as bigint)), avg(UnscaledValue(cs_list_price#897)), avg(UnscaledValue(cs_coupon_amt#904)), avg(UnscaledValue(cs_sales_price#898))])
[info]    +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#21436]
[info]       +- *(5) HashAggregate(keys=[i_item_id#497], functions=[partial_avg(cast(cs_quantity#895 as bigint)), partial_avg(UnscaledValue(cs_list_price#897)), partial_avg(UnscaledValue(cs_coupon_amt#904)), partial_avg(UnscaledValue(cs_sales_price#898))])
[info]          +- *(5) Project [cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, i_item_id#497]
[info]             +- *(5) BroadcastHashJoin [cs_promo_sk#893], [p_promo_sk#589], Inner, BuildRight
[info]                :- *(5) Project [cs_promo_sk#893, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, i_item_id#497]
[info]                :  +- *(5) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                :     :- *(5) Project [cs_item_sk#892, cs_promo_sk#893, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904]
[info]                :     :  +- *(5) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :- *(5) Project [cs_item_sk#892, cs_promo_sk#893, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_sold_date_sk#911]
[info]                :     :     :  +- *(5) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]                :     :     :     :- *(5) Project [cs_bill_cdemo_sk#881, cs_item_sk#892, cs_promo_sk#893, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_sold_date_sk#911]
[info]                :     :     :     :  +- *(5) Filter (((isnotnull(cs_bill_cdemo_sk#881) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_promo_sk#893))
[info]                :     :     :     :     +- *(5) ColumnarToRow
[info]                :     :     :     :        +- BatchScan[cs_bill_cdemo_sk#881, cs_item_sk#892, cs_promo_sk#893, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_cdemo_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_quantity:int,cs_list_price:decimal(...
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21403]
[info]                :     :     :        +- *(1) Project [cd_demo_sk#290]
[info]                :     :     :           +- *(1) Filter ((((((isnotnull(cd_education_status#293) AND isnotnull(cd_marital_status#292)) AND isnotnull(cd_gender#291)) AND (cd_gender#291 = M)) AND (cd_marital_status#292 = S)) AND (cd_education_status#293 = College)) AND isnotnull(cd_demo_sk#290))
[info]                :     :     :              +- *(1) ColumnarToRow
[info]                :     :     :                 +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21412]
[info]                :     :        +- *(2) Project [d_date_sk#331]
[info]                :     :           +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                :     :              +- *(2) ColumnarToRow
[info]                :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21421]
[info]                :        +- *(3) Project [i_item_sk#496, i_item_id#497]
[info]                :           +- *(3) Filter isnotnull(i_item_sk#496)
[info]                :              +- *(3) ColumnarToRow
[info]                :                 +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21430]
[info]                   +- *(4) Project [p_promo_sk#589]
[info]                      +- *(4) Filter (((p_channel_email#598 = N) OR (p_channel_event#603 = N)) AND isnotnull(p_promo_sk#589))
[info]                         +- *(4) ColumnarToRow
[info]                            +- BatchScan[p_promo_sk#589, p_channel_email#598, p_channel_event#603] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 175 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q26                                                 176            176           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q27
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#6331 ASC NULLS FIRST,s_state#6332 ASC NULLS FIRST], output=[i_item_id#6331,s_state#6332,g_state#6319,agg1#6320,agg2#6321,agg3#6322,agg4#6323])
[info] +- *(6) HashAggregate(keys=[i_item_id#6331, s_state#6332, spark_grouping_id#6328], functions=[avg(cast(ss_quantity#1173 as bigint)), avg(UnscaledValue(ss_list_price#1175)), avg(UnscaledValue(ss_coupon_amt#1182)), avg(UnscaledValue(ss_sales_price#1176))])
[info]    +- Exchange hashpartitioning(i_item_id#6331, s_state#6332, spark_grouping_id#6328, 4), true, [id=#21622]
[info]       +- *(5) HashAggregate(keys=[i_item_id#6331, s_state#6332, spark_grouping_id#6328], functions=[partial_avg(cast(ss_quantity#1173 as bigint)), partial_avg(UnscaledValue(ss_list_price#1175)), partial_avg(UnscaledValue(ss_coupon_amt#1182)), partial_avg(UnscaledValue(ss_sales_price#1176))])
[info]          +- *(5) Expand [List(ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, i_item_id#497, s_state#694, 0), List(ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, i_item_id#497, null, 1), List(ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, null, null, 3)], [ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, i_item_id#6331, s_state#6332, spark_grouping_id#6328]
[info]             +- *(5) Project [ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, i_item_id#497, s_state#694]
[info]                +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                   :- *(5) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, s_state#694]
[info]                   :  +- *(5) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                   :     :- *(5) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182]
[info]                   :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                   :     :     :- *(5) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                   :     :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]                   :     :     :     :- *(5) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                   :     :     :     :  +- *(5) Filter (((isnotnull(ss_cdemo_sk#1167) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165))
[info]                   :     :     :     :     +- *(5) ColumnarToRow
[info]                   :     :     :     :        +- BatchScan[ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),...
[info]                   :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21588]
[info]                   :     :     :        +- *(1) Project [cd_demo_sk#290]
[info]                   :     :     :           +- *(1) Filter ((((((isnotnull(cd_education_status#293) AND isnotnull(cd_marital_status#292)) AND isnotnull(cd_gender#291)) AND (cd_gender#291 = M)) AND (cd_marital_status#292 = S)) AND (cd_education_status#293 = College)) AND isnotnull(cd_demo_sk#290))
[info]                   :     :     :              +- *(1) ColumnarToRow
[info]                   :     :     :                 +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
[info]                   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21597]
[info]                   :     :        +- *(2) Project [d_date_sk#331]
[info]                   :     :           +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND isnotnull(d_date_sk#331))
[info]                   :     :              +- *(2) ColumnarToRow
[info]                   :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21606]
[info]                   :        +- *(3) Project [s_store_sk#670, s_state#694]
[info]                   :           +- *(3) Filter ((isnotnull(s_state#694) AND (s_state#694 = TN)) AND isnotnull(s_store_sk#670))
[info]                   :              +- *(3) ColumnarToRow
[info]                   :                 +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#21615]
[info]                      +- *(4) Project [i_item_sk#496, i_item_id#497]
[info]                         +- *(4) Filter isnotnull(i_item_sk#496)
[info]                            +- *(4) ColumnarToRow
[info]                               +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 200 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q27                                                 201            201           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q28
[info] == Physical Plan ==
[info] CollectLimit 100
[info] +- BroadcastNestedLoopJoin BuildRight, Inner
[info]    :- BroadcastNestedLoopJoin BuildRight, Inner
[info]    :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info]    :  :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info]    :  :  :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info]    :  :  :  :  :- *(3) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#1175)), count(ss_list_price#1175), count(distinct ss_list_price#1175)])
[info]    :  :  :  :  :  +- Exchange SinglePartition, true, [id=#21903]
[info]    :  :  :  :  :     +- *(2) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175), partial_count(distinct ss_list_price#1175)])
[info]    :  :  :  :  :        +- *(2) HashAggregate(keys=[ss_list_price#1175], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175)])
[info]    :  :  :  :  :           +- Exchange hashpartitioning(ss_list_price#1175, 4), true, [id=#21898]
[info]    :  :  :  :  :              +- *(1) HashAggregate(keys=[ss_list_price#1175], functions=[partial_avg(UnscaledValue(ss_list_price#1175)), partial_count(ss_list_price#1175)])
[info]    :  :  :  :  :                 +- *(1) Project [ss_list_price#1175]
[info]    :  :  :  :  :                    +- *(1) Filter (((((((ss_list_price#1175 >= 8.00) AND (cast(ss_list_price#1175 as decimal(12,2)) <= 18.00)) OR ((ss_coupon_amt#1182 >= 459.00) AND (cast(ss_coupon_amt#1182 as decimal(12,2)) <= 1459.00))) OR ((ss_wholesale_cost#1174 >= 57.00) AND (cast(ss_wholesale_cost#1174 as decimal(12,2)) <= 77.00))) AND isnotnull(ss_quantity#1173)) AND (ss_quantity#1173 >= 0)) AND (ss_quantity#1173 <= 5))
[info]    :  :  :  :  :                       +- *(1) ColumnarToRow
[info]    :  :  :  :  :                          +- BatchScan[ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
[info]    :  :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#21922]
[info]    :  :  :  :     +- *(6) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#1175)), count(ss_list_price#1175), count(distinct ss_list_price#1175)])
[info]    :  :  :  :        +- Exchange SinglePartition, true, [id=#21918]
[info]    :  :  :  :           +- *(5) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175), partial_count(distinct ss_list_price#1175)])
[info]    :  :  :  :              +- *(5) HashAggregate(keys=[ss_list_price#1175], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175)])
[info]    :  :  :  :                 +- Exchange hashpartitioning(ss_list_price#1175, 4), true, [id=#21913]
[info]    :  :  :  :                    +- *(4) HashAggregate(keys=[ss_list_price#1175], functions=[partial_avg(UnscaledValue(ss_list_price#1175)), partial_count(ss_list_price#1175)])
[info]    :  :  :  :                       +- *(4) Project [ss_list_price#1175]
[info]    :  :  :  :                          +- *(4) Filter (((((((ss_list_price#1175 >= 90.00) AND (cast(ss_list_price#1175 as decimal(12,2)) <= 100.00)) OR ((ss_coupon_amt#1182 >= 2323.00) AND (cast(ss_coupon_amt#1182 as decimal(12,2)) <= 3323.00))) OR ((ss_wholesale_cost#1174 >= 31.00) AND (cast(ss_wholesale_cost#1174 as decimal(12,2)) <= 51.00))) AND isnotnull(ss_quantity#1173)) AND (ss_quantity#1173 >= 6)) AND (ss_quantity#1173 <= 10))
[info]    :  :  :  :                             +- *(4) ColumnarToRow
[info]    :  :  :  :                                +- BatchScan[ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
[info]    :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#21939]
[info]    :  :  :     +- *(9) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#1175)), count(ss_list_price#1175), count(distinct ss_list_price#1175)])
[info]    :  :  :        +- Exchange SinglePartition, true, [id=#21935]
[info]    :  :  :           +- *(8) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175), partial_count(distinct ss_list_price#1175)])
[info]    :  :  :              +- *(8) HashAggregate(keys=[ss_list_price#1175], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175)])
[info]    :  :  :                 +- Exchange hashpartitioning(ss_list_price#1175, 4), true, [id=#21930]
[info]    :  :  :                    +- *(7) HashAggregate(keys=[ss_list_price#1175], functions=[partial_avg(UnscaledValue(ss_list_price#1175)), partial_count(ss_list_price#1175)])
[info]    :  :  :                       +- *(7) Project [ss_list_price#1175]
[info]    :  :  :                          +- *(7) Filter (((((((ss_list_price#1175 >= 142.00) AND (cast(ss_list_price#1175 as decimal(12,2)) <= 152.00)) OR ((ss_coupon_amt#1182 >= 12214.00) AND (cast(ss_coupon_amt#1182 as decimal(12,2)) <= 13214.00))) OR ((ss_wholesale_cost#1174 >= 79.00) AND (cast(ss_wholesale_cost#1174 as decimal(12,2)) <= 99.00))) AND isnotnull(ss_quantity#1173)) AND (ss_quantity#1173 >= 11)) AND (ss_quantity#1173 <= 15))
[info]    :  :  :                             +- *(7) ColumnarToRow
[info]    :  :  :                                +- BatchScan[ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
[info]    :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#21956]
[info]    :  :     +- *(12) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#1175)), count(ss_list_price#1175), count(distinct ss_list_price#1175)])
[info]    :  :        +- Exchange SinglePartition, true, [id=#21952]
[info]    :  :           +- *(11) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175), partial_count(distinct ss_list_price#1175)])
[info]    :  :              +- *(11) HashAggregate(keys=[ss_list_price#1175], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175)])
[info]    :  :                 +- Exchange hashpartitioning(ss_list_price#1175, 4), true, [id=#21947]
[info]    :  :                    +- *(10) HashAggregate(keys=[ss_list_price#1175], functions=[partial_avg(UnscaledValue(ss_list_price#1175)), partial_count(ss_list_price#1175)])
[info]    :  :                       +- *(10) Project [ss_list_price#1175]
[info]    :  :                          +- *(10) Filter (((((((ss_list_price#1175 >= 135.00) AND (cast(ss_list_price#1175 as decimal(12,2)) <= 145.00)) OR ((ss_coupon_amt#1182 >= 6071.00) AND (cast(ss_coupon_amt#1182 as decimal(12,2)) <= 7071.00))) OR ((ss_wholesale_cost#1174 >= 38.00) AND (cast(ss_wholesale_cost#1174 as decimal(12,2)) <= 58.00))) AND isnotnull(ss_quantity#1173)) AND (ss_quantity#1173 >= 16)) AND (ss_quantity#1173 <= 20))
[info]    :  :                             +- *(10) ColumnarToRow
[info]    :  :                                +- BatchScan[ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
[info]    :  +- BroadcastExchange IdentityBroadcastMode, [id=#21973]
[info]    :     +- *(15) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#1175)), count(ss_list_price#1175), count(distinct ss_list_price#1175)])
[info]    :        +- Exchange SinglePartition, true, [id=#21969]
[info]    :           +- *(14) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175), partial_count(distinct ss_list_price#1175)])
[info]    :              +- *(14) HashAggregate(keys=[ss_list_price#1175], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175)])
[info]    :                 +- Exchange hashpartitioning(ss_list_price#1175, 4), true, [id=#21964]
[info]    :                    +- *(13) HashAggregate(keys=[ss_list_price#1175], functions=[partial_avg(UnscaledValue(ss_list_price#1175)), partial_count(ss_list_price#1175)])
[info]    :                       +- *(13) Project [ss_list_price#1175]
[info]    :                          +- *(13) Filter (((((((ss_list_price#1175 >= 122.00) AND (cast(ss_list_price#1175 as decimal(12,2)) <= 132.00)) OR ((ss_coupon_amt#1182 >= 836.00) AND (cast(ss_coupon_amt#1182 as decimal(12,2)) <= 1836.00))) OR ((ss_wholesale_cost#1174 >= 17.00) AND (cast(ss_wholesale_cost#1174 as decimal(12,2)) <= 37.00))) AND isnotnull(ss_quantity#1173)) AND (ss_quantity#1173 >= 21)) AND (ss_quantity#1173 <= 25))
[info]    :                             +- *(13) ColumnarToRow
[info]    :                                +- BatchScan[ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
[info]    +- BroadcastExchange IdentityBroadcastMode, [id=#21990]
[info]       +- *(18) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#1175)), count(ss_list_price#1175), count(distinct ss_list_price#1175)])
[info]          +- Exchange SinglePartition, true, [id=#21986]
[info]             +- *(17) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175), partial_count(distinct ss_list_price#1175)])
[info]                +- *(17) HashAggregate(keys=[ss_list_price#1175], functions=[merge_avg(UnscaledValue(ss_list_price#1175)), merge_count(ss_list_price#1175)])
[info]                   +- Exchange hashpartitioning(ss_list_price#1175, 4), true, [id=#21981]
[info]                      +- *(16) HashAggregate(keys=[ss_list_price#1175], functions=[partial_avg(UnscaledValue(ss_list_price#1175)), partial_count(ss_list_price#1175)])
[info]                         +- *(16) Project [ss_list_price#1175]
[info]                            +- *(16) Filter (((((((ss_list_price#1175 >= 154.00) AND (cast(ss_list_price#1175 as decimal(12,2)) <= 164.00)) OR ((ss_coupon_amt#1182 >= 7326.00) AND (cast(ss_coupon_amt#1182 as decimal(12,2)) <= 8326.00))) OR ((ss_wholesale_cost#1174 >= 7.00) AND (cast(ss_wholesale_cost#1174 as decimal(12,2)) <= 27.00))) AND isnotnull(ss_quantity#1173)) AND (ss_quantity#1173 >= 26)) AND (ss_quantity#1173 <= 30))
[info]                               +- *(16) ColumnarToRow
[info]                                  +- BatchScan[ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
[info] 
[info] 
[info]   Stopped after 1 iterations, 238 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q28                                                 239            239           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q29
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST,s_store_id#671 ASC NULLS FIRST,s_store_name#675 ASC NULLS FIRST], output=[i_item_id#497,i_item_desc#500,s_store_id#671,s_store_name#675,store_sales_quantity#6709L,store_returns_quantity#6710L,catalog_sales_quantity#6711L])
[info] +- *(15) HashAggregate(keys=[i_item_id#497, i_item_desc#500, s_store_id#671, s_store_name#675], functions=[sum(cast(ss_quantity#1173 as bigint)), sum(cast(sr_return_quantity#800 as bigint)), sum(cast(cs_quantity#895 as bigint))])
[info]    +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, s_store_id#671, s_store_name#675, 4), true, [id=#22412]
[info]       +- *(14) HashAggregate(keys=[i_item_id#497, i_item_desc#500, s_store_id#671, s_store_name#675], functions=[partial_sum(cast(ss_quantity#1173 as bigint)), partial_sum(cast(sr_return_quantity#800 as bigint)), partial_sum(cast(cs_quantity#895 as bigint))])
[info]          +- *(14) Project [ss_quantity#1173, sr_return_quantity#800, cs_quantity#895, s_store_id#671, s_store_name#675, i_item_id#497, i_item_desc#500]
[info]             +- *(14) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :- *(14) Project [ss_item_sk#1165, ss_quantity#1173, sr_return_quantity#800, cs_quantity#895, s_store_id#671, s_store_name#675]
[info]                :  +- *(14) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, sr_return_quantity#800, cs_quantity#895]
[info]                :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#6740], Inner, BuildRight
[info]                :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, sr_return_quantity#800, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :  +- *(14) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#6712], Inner, BuildRight
[info]                :     :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, sr_return_quantity#800, sr_returned_date_sk#810, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :     :  +- *(14) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :     :     :- *(14) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sold_date_sk#1186, sr_return_quantity#800, sr_returned_date_sk#810, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :     :     :  +- *(14) SortMergeJoin [sr_customer_sk#793, sr_item_sk#792], [cs_bill_customer_sk#880, cs_item_sk#892], Inner
[info]                :     :     :     :     :     :- *(6) Sort [sr_customer_sk#793 ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :  +- Exchange hashpartitioning(sr_customer_sk#793, sr_item_sk#792, 4), true, [id=#22348]
[info]                :     :     :     :     :     :     +- *(5) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sold_date_sk#1186, sr_item_sk#792, sr_customer_sk#793, sr_return_quantity#800, sr_returned_date_sk#810]
[info]                :     :     :     :     :     :        +- *(5) SortMergeJoin [ss_customer_sk#1166, ss_item_sk#1165, ss_ticket_number#1172L], [sr_customer_sk#793, sr_item_sk#792, sr_ticket_number#799L], Inner
[info]                :     :     :     :     :     :           :- *(2) Sort [ss_customer_sk#1166 ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :           :  +- Exchange hashpartitioning(ss_customer_sk#1166, ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#22330]
[info]                :     :     :     :     :     :           :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_quantity#1173, ss_sold_date_sk#1186]
[info]                :     :     :     :     :     :           :        +- *(1) Filter ((((isnotnull(ss_item_sk#1165) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]                :     :     :     :     :     :           :           +- *(1) ColumnarToRow
[info]                :     :     :     :     :     :           :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_quantity#1173, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_quantity:int>
[info]                :     :     :     :     :     :           +- *(4) Sort [sr_customer_sk#793 ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :              +- Exchange hashpartitioning(sr_customer_sk#793, sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#22340]
[info]                :     :     :     :     :     :                 +- *(3) Project [sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_return_quantity#800, sr_returned_date_sk#810]
[info]                :     :     :     :     :     :                    +- *(3) Filter (((isnotnull(sr_customer_sk#793) AND isnotnull(sr_ticket_number#799L)) AND isnotnull(sr_item_sk#792)) AND isnotnull(sr_returned_date_sk#810))
[info]                :     :     :     :     :     :                       +- *(3) ColumnarToRow
[info]                :     :     :     :     :     :                          +- BatchScan[sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_return_quantity#800, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint,sr_return_quantity:int>
[info]                :     :     :     :     :     +- *(8) Sort [cs_bill_customer_sk#880 ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :        +- Exchange hashpartitioning(cs_bill_customer_sk#880, cs_item_sk#892, 4), true, [id=#22358]
[info]                :     :     :     :     :           +- *(7) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_sold_date_sk#911]
[info]                :     :     :     :     :              +- *(7) Filter ((isnotnull(cs_item_sk#892) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911))
[info]                :     :     :     :     :                 +- *(7) ColumnarToRow
[info]                :     :     :     :     :                    +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int>
[info]                :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22370]
[info]                :     :     :     :        +- *(9) Project [d_date_sk#331]
[info]                :     :     :     :           +- *(9) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 9)) AND (d_year#337 = 1999)) AND isnotnull(d_date_sk#331))
[info]                :     :     :     :              +- *(9) ColumnarToRow
[info]                :     :     :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22379]
[info]                :     :     :        +- *(10) Project [d_date_sk#6712]
[info]                :     :     :           +- *(10) Filter (((((isnotnull(d_year#6718) AND isnotnull(d_moy#6720)) AND (d_moy#6720 >= 9)) AND (d_moy#6720 <= 12)) AND (d_year#6718 = 1999)) AND isnotnull(d_date_sk#6712))
[info]                :     :     :              +- *(10) ColumnarToRow
[info]                :     :     :                 +- BatchScan[d_date_sk#6712, d_year#6718, d_moy#6720] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22388]
[info]                :     :        +- *(11) Project [d_date_sk#6740]
[info]                :     :           +- *(11) Filter (d_year#6746 IN (1999,2000,2001) AND isnotnull(d_date_sk#6740))
[info]                :     :              +- *(11) ColumnarToRow
[info]                :     :                 +- BatchScan[d_date_sk#6740, d_year#6746] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22397]
[info]                :        +- *(12) Project [s_store_sk#670, s_store_id#671, s_store_name#675]
[info]                :           +- *(12) Filter isnotnull(s_store_sk#670)
[info]                :              +- *(12) ColumnarToRow
[info]                :                 +- BatchScan[s_store_sk#670, s_store_id#671, s_store_name#675] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22406]
[info]                   +- *(13) Project [i_item_sk#496, i_item_id#497, i_item_desc#500]
[info]                      +- *(13) Filter isnotnull(i_item_sk#496)
[info]                         +- *(13) ColumnarToRow
[info]                            +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 258 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q29                                                 258            258           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q30
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#157 ASC NULLS FIRST,c_salutation#163 ASC NULLS FIRST,c_first_name#164 ASC NULLS FIRST,c_last_name#165 ASC NULLS FIRST,c_preferred_cust_flag#166 ASC NULLS FIRST,c_birth_day#167 ASC NULLS FIRST,c_birth_month#168 ASC NULLS FIRST,c_birth_year#169 ASC NULLS FIRST,c_birth_country#170 ASC NULLS FIRST,c_login#171 ASC NULLS FIRST,c_email_address#172 ASC NULLS FIRST,c_last_review_date#173 ASC NULLS FIRST,ctr_total_return#6844 ASC NULLS FIRST], output=[c_customer_id#157,c_salutation#163,c_first_name#164,c_last_name#165,c_preferred_cust_flag#166,c_birth_day#167,c_birth_month#168,c_birth_year#169,c_birth_country#170,c_login#171,c_email_address#172,c_last_review_date#173,ctr_total_return#6844])
[info] +- *(14) Project [c_customer_id#157, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_day#167, c_birth_month#168, c_birth_year#169, c_birth_country#170, c_login#171, c_email_address#172, c_last_review_date#173, ctr_total_return#6844]
[info]    +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]       :- *(14) Project [ctr_total_return#6844, c_customer_id#157, c_current_addr_sk#160, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_day#167, c_birth_month#168, c_birth_year#169, c_birth_country#170, c_login#171, c_email_address#172, c_last_review_date#173]
[info]       :  +- *(14) BroadcastHashJoin [ctr_customer_sk#6842], [c_customer_sk#156], Inner, BuildRight
[info]       :     :- *(14) Project [ctr_customer_sk#6842, ctr_total_return#6844]
[info]       :     :  +- *(14) SortMergeJoin [ctr_state#6843], [ctr_state#6843#6862], Inner, (cast(ctr_total_return#6844 as decimal(24,7)) > (CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#6848)
[info]       :     :     :- *(5) Sort [ctr_state#6843 ASC NULLS FIRST], false, 0
[info]       :     :     :  +- Exchange hashpartitioning(ctr_state#6843, 4), true, [id=#22726]
[info]       :     :     :     +- *(4) Filter isnotnull(ctr_total_return#6844)
[info]       :     :     :        +- *(4) HashAggregate(keys=[wr_returning_customer_sk#1269, ca_state#241], functions=[sum(UnscaledValue(wr_return_amt#1277))])
[info]       :     :     :           +- Exchange hashpartitioning(wr_returning_customer_sk#1269, ca_state#241, 4), true, [id=#22721]
[info]       :     :     :              +- *(3) HashAggregate(keys=[wr_returning_customer_sk#1269, ca_state#241], functions=[partial_sum(UnscaledValue(wr_return_amt#1277))])
[info]       :     :     :                 +- *(3) Project [wr_returning_customer_sk#1269, wr_return_amt#1277, ca_state#241]
[info]       :     :     :                    +- *(3) BroadcastHashJoin [wr_returning_addr_sk#1272], [ca_address_sk#233], Inner, BuildRight
[info]       :     :     :                       :- *(3) Project [wr_returning_customer_sk#1269, wr_returning_addr_sk#1272, wr_return_amt#1277]
[info]       :     :     :                       :  +- *(3) BroadcastHashJoin [wr_returned_date_sk#1286], [d_date_sk#331], Inner, BuildRight
[info]       :     :     :                       :     :- *(3) Project [wr_returning_customer_sk#1269, wr_returning_addr_sk#1272, wr_return_amt#1277, wr_returned_date_sk#1286]
[info]       :     :     :                       :     :  +- *(3) Filter ((isnotnull(wr_returned_date_sk#1286) AND isnotnull(wr_returning_addr_sk#1272)) AND isnotnull(wr_returning_customer_sk#1269))
[info]       :     :     :                       :     :     +- *(3) ColumnarToRow
[info]       :     :     :                       :     :        +- BatchScan[wr_returning_customer_sk#1269, wr_returning_addr_sk#1272, wr_return_amt#1277, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>
[info]       :     :     :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22706]
[info]       :     :     :                       :        +- *(1) Project [d_date_sk#331]
[info]       :     :     :                       :           +- *(1) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND isnotnull(d_date_sk#331))
[info]       :     :     :                       :              +- *(1) ColumnarToRow
[info]       :     :     :                       :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22715]
[info]       :     :     :                          +- *(2) Project [ca_address_sk#233, ca_state#241]
[info]       :     :     :                             +- *(2) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_state#241))
[info]       :     :     :                                +- *(2) ColumnarToRow
[info]       :     :     :                                   +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]       :     :     +- *(11) Sort [ctr_state#6843#6862 ASC NULLS FIRST], false, 0
[info]       :     :        +- Exchange hashpartitioning(ctr_state#6843#6862, 4), true, [id=#22884]
[info]       :     :           +- *(10) Filter isnotnull((CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#6848)
[info]       :     :              +- *(10) HashAggregate(keys=[ctr_state#6843], functions=[avg(ctr_total_return#6844)])
[info]       :     :                 +- Exchange hashpartitioning(ctr_state#6843, 4), true, [id=#22879]
[info]       :     :                    +- *(9) HashAggregate(keys=[ctr_state#6843], functions=[partial_avg(ctr_total_return#6844)])
[info]       :     :                       +- *(9) HashAggregate(keys=[wr_returning_customer_sk#1269, ca_state#241], functions=[sum(UnscaledValue(wr_return_amt#1277))])
[info]       :     :                          +- Exchange hashpartitioning(wr_returning_customer_sk#1269, ca_state#241, 4), true, [id=#22832]
[info]       :     :                             +- *(8) HashAggregate(keys=[wr_returning_customer_sk#1269, ca_state#241], functions=[partial_sum(UnscaledValue(wr_return_amt#1277))])
[info]       :     :                                +- *(8) Project [wr_returning_customer_sk#1269, wr_return_amt#1277, ca_state#241]
[info]       :     :                                   +- *(8) BroadcastHashJoin [wr_returning_addr_sk#1272], [ca_address_sk#233], Inner, BuildRight
[info]       :     :                                      :- *(8) Project [wr_returning_customer_sk#1269, wr_returning_addr_sk#1272, wr_return_amt#1277]
[info]       :     :                                      :  +- *(8) BroadcastHashJoin [wr_returned_date_sk#1286], [d_date_sk#331], Inner, BuildRight
[info]       :     :                                      :     :- *(8) Project [wr_returning_customer_sk#1269, wr_returning_addr_sk#1272, wr_return_amt#1277, wr_returned_date_sk#1286]
[info]       :     :                                      :     :  +- *(8) Filter (isnotnull(wr_returned_date_sk#1286) AND isnotnull(wr_returning_addr_sk#1272))
[info]       :     :                                      :     :     +- *(8) ColumnarToRow
[info]       :     :                                      :     :        +- BatchScan[wr_returning_customer_sk#1269, wr_returning_addr_sk#1272, wr_return_amt#1277, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>
[info]       :     :                                      :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22706]
[info]       :     :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22749]
[info]       :     :                                         +- *(7) Project [ca_address_sk#233, ca_state#241]
[info]       :     :                                            +- *(7) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_state#241))
[info]       :     :                                               +- *(7) ColumnarToRow
[info]       :     :                                                  +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22777]
[info]       :        +- *(12) Project [c_customer_sk#156, c_customer_id#157, c_current_addr_sk#160, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_day#167, c_birth_month#168, c_birth_year#169, c_birth_country#170, c_login#171, c_email_address#172, c_last_review_date#173]
[info]       :           +- *(12) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]       :              +- *(12) ColumnarToRow
[info]       :                 +- BatchScan[c_customer_sk#156, c_customer_id#157, c_current_addr_sk#160, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_day#167, c_birth_month#168, c_birth_year#169, c_birth_country#170, c_login#171, c_email_address#172, c_last_review_date#173] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_n...
[info]       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#22786]
[info]          +- *(13) Project [ca_address_sk#233]
[info]             +- *(13) Filter ((isnotnull(ca_state#241) AND (ca_state#241 = GA)) AND isnotnull(ca_address_sk#233))
[info]                +- *(13) ColumnarToRow
[info]                   +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 337 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q30                                                 337            337           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q31
[info] == Physical Plan ==
[info] *(36) Sort [ca_county#240 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(ca_county#240 ASC NULLS FIRST, 4), true, [id=#24018]
[info]    +- *(35) Project [ca_county#240, d_year#337, CheckOverflow((promote_precision(web_sales#7621) / promote_precision(web_sales#7368)), DecimalType(37,20), true) AS web_q1_q2_increase#7363, CheckOverflow((promote_precision(store_sales#7375) / promote_precision(store_sales#7367)), DecimalType(37,20), true) AS store_q1_q2_increase#7364, CheckOverflow((promote_precision(web_sales#7717) / promote_precision(web_sales#7621)), DecimalType(37,20), true) AS web_q2_q3_increase#7365, CheckOverflow((promote_precision(store_sales#7471) / promote_precision(store_sales#7375)), DecimalType(37,20), true) AS store_q2_q3_increase#7366]
[info]       +- *(35) SortMergeJoin [ca_county#7615], [ca_county#7807], Inner, (CASE WHEN (web_sales#7621 > 0.00) THEN CheckOverflow((promote_precision(web_sales#7717) / promote_precision(web_sales#7621)), DecimalType(37,20), true) ELSE null END > CASE WHEN (store_sales#7375 > 0.00) THEN CheckOverflow((promote_precision(store_sales#7471) / promote_precision(store_sales#7375)), DecimalType(37,20), true) ELSE null END)
[info]          :- *(29) Project [ca_county#240, d_year#337, store_sales#7367, store_sales#7375, store_sales#7471, ca_county#7615, web_sales#7368, web_sales#7621]
[info]          :  +- *(29) SortMergeJoin [ca_county#7615], [ca_county#7711], Inner, (CASE WHEN (web_sales#7368 > 0.00) THEN CheckOverflow((promote_precision(web_sales#7621) / promote_precision(web_sales#7368)), DecimalType(37,20), true) ELSE null END > CASE WHEN (store_sales#7367 > 0.00) THEN CheckOverflow((promote_precision(store_sales#7375) / promote_precision(store_sales#7367)), DecimalType(37,20), true) ELSE null END)
[info]          :     :- *(23) SortMergeJoin [ca_county#240], [ca_county#7615], Inner
[info]          :     :  :- *(17) Project [ca_county#240, d_year#337, store_sales#7367, store_sales#7375, store_sales#7471]
[info]          :     :  :  +- *(17) SortMergeJoin [ca_county#7465], [ca_county#7561], Inner
[info]          :     :  :     :- *(11) SortMergeJoin [ca_county#240], [ca_county#7465], Inner
[info]          :     :  :     :  :- *(5) Sort [ca_county#240 ASC NULLS FIRST], false, 0
[info]          :     :  :     :  :  +- Exchange hashpartitioning(ca_county#240, 4), true, [id=#23471]
[info]          :     :  :     :  :     +- *(4) HashAggregate(keys=[ca_county#240, d_qoy#341, d_year#337], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          :     :  :     :  :        +- Exchange hashpartitioning(ca_county#240, d_qoy#341, d_year#337, 4), true, [id=#23467]
[info]          :     :  :     :  :           +- *(3) HashAggregate(keys=[ca_county#240, d_qoy#341, d_year#337], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          :     :  :     :  :              +- *(3) Project [ss_ext_sales_price#1178, d_year#337, d_qoy#341, ca_county#240]
[info]          :     :  :     :  :                 +- *(3) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]          :     :  :     :  :                    :- *(3) Project [ss_addr_sk#1169, ss_ext_sales_price#1178, d_year#337, d_qoy#341]
[info]          :     :  :     :  :                    :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]          :     :  :     :  :                    :     :- *(3) Project [ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]          :     :  :     :  :                    :     :  +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_addr_sk#1169))
[info]          :     :  :     :  :                    :     :     +- *(3) ColumnarToRow
[info]          :     :  :     :  :                    :     :        +- BatchScan[ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]          :     :  :     :  :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23452]
[info]          :     :  :     :  :                    :        +- *(1) Project [d_date_sk#331, d_year#337, d_qoy#341]
[info]          :     :  :     :  :                    :           +- *(1) Filter ((((isnotnull(d_qoy#341) AND isnotnull(d_year#337)) AND (d_qoy#341 = 1)) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]          :     :  :     :  :                    :              +- *(1) ColumnarToRow
[info]          :     :  :     :  :                    :                 +- BatchScan[d_date_sk#331, d_year#337, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info]          :     :  :     :  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23461]
[info]          :     :  :     :  :                       +- *(2) Project [ca_address_sk#233, ca_county#240]
[info]          :     :  :     :  :                          +- *(2) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_county#240))
[info]          :     :  :     :  :                             +- *(2) ColumnarToRow
[info]          :     :  :     :  :                                +- BatchScan[ca_address_sk#233, ca_county#240] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_county:string>
[info]          :     :  :     :  +- *(10) Sort [ca_county#7465 ASC NULLS FIRST], false, 0
[info]          :     :  :     :     +- Exchange hashpartitioning(ca_county#7465, 4), true, [id=#23746]
[info]          :     :  :     :        +- *(9) HashAggregate(keys=[ca_county#7465, d_qoy#7427, d_year#7423], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          :     :  :     :           +- Exchange hashpartitioning(ca_county#7465, d_qoy#7427, d_year#7423, 4), true, [id=#23700]
[info]          :     :  :     :              +- *(8) HashAggregate(keys=[ca_county#7465, d_qoy#7427, d_year#7423], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          :     :  :     :                 +- *(8) Project [ss_ext_sales_price#1178, d_year#7423, d_qoy#7427, ca_county#7465]
[info]          :     :  :     :                    +- *(8) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#7458], Inner, BuildRight
[info]          :     :  :     :                       :- *(8) Project [ss_addr_sk#1169, ss_ext_sales_price#1178, d_year#7423, d_qoy#7427]
[info]          :     :  :     :                       :  +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#7417], Inner, BuildRight
[info]          :     :  :     :                       :     :- *(8) Project [ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]          :     :  :     :                       :     :  +- *(8) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_addr_sk#1169))
[info]          :     :  :     :                       :     :     +- *(8) ColumnarToRow
[info]          :     :  :     :                       :     :        +- BatchScan[ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]          :     :  :     :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23485]
[info]          :     :  :     :                       :        +- *(6) Project [d_date_sk#7417, d_year#7423, d_qoy#7427]
[info]          :     :  :     :                       :           +- *(6) Filter ((((isnotnull(d_qoy#7427) AND isnotnull(d_year#7423)) AND (d_qoy#7427 = 2)) AND (d_year#7423 = 2000)) AND isnotnull(d_date_sk#7417))
[info]          :     :  :     :                       :              +- *(6) ColumnarToRow
[info]          :     :  :     :                       :                 +- BatchScan[d_date_sk#7417, d_year#7423, d_qoy#7427] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info]          :     :  :     :                       +- ReusedExchange [ca_address_sk#7458, ca_county#7465], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23461]
[info]          :     :  :     +- *(16) Sort [ca_county#7561 ASC NULLS FIRST], false, 0
[info]          :     :  :        +- Exchange hashpartitioning(ca_county#7561, 4), true, [id=#23801]
[info]          :     :  :           +- *(15) HashAggregate(keys=[ca_county#7561, d_qoy#7523, d_year#7519], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          :     :  :              +- Exchange hashpartitioning(ca_county#7561, d_qoy#7523, d_year#7519, 4), true, [id=#23776]
[info]          :     :  :                 +- *(14) HashAggregate(keys=[ca_county#7561, d_qoy#7523, d_year#7519], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          :     :  :                    +- *(14) Project [ss_ext_sales_price#1178, d_year#7519, d_qoy#7523, ca_county#7561]
[info]          :     :  :                       +- *(14) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#7554], Inner, BuildRight
[info]          :     :  :                          :- *(14) Project [ss_addr_sk#1169, ss_ext_sales_price#1178, d_year#7519, d_qoy#7523]
[info]          :     :  :                          :  +- *(14) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#7513], Inner, BuildRight
[info]          :     :  :                          :     :- *(14) Project [ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]          :     :  :                          :     :  +- *(14) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_addr_sk#1169))
[info]          :     :  :                          :     :     +- *(14) ColumnarToRow
[info]          :     :  :                          :     :        +- BatchScan[ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]          :     :  :                          :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23521]
[info]          :     :  :                          :        +- *(12) Project [d_date_sk#7513, d_year#7519, d_qoy#7523]
[info]          :     :  :                          :           +- *(12) Filter ((((isnotnull(d_qoy#7523) AND isnotnull(d_year#7519)) AND (d_qoy#7523 = 3)) AND (d_year#7519 = 2000)) AND isnotnull(d_date_sk#7513))
[info]          :     :  :                          :              +- *(12) ColumnarToRow
[info]          :     :  :                          :                 +- BatchScan[d_date_sk#7513, d_year#7519, d_qoy#7523] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info]          :     :  :                          +- ReusedExchange [ca_address_sk#7554, ca_county#7561], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23461]
[info]          :     :  +- *(22) Sort [ca_county#7615 ASC NULLS FIRST], false, 0
[info]          :     :     +- Exchange hashpartitioning(ca_county#7615, 4), true, [id=#23873]
[info]          :     :        +- *(21) HashAggregate(keys=[ca_county#7615, d_qoy#7577, d_year#7573], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]          :     :           +- Exchange hashpartitioning(ca_county#7615, d_qoy#7577, d_year#7573, 4), true, [id=#23848]
[info]          :     :              +- *(20) HashAggregate(keys=[ca_county#7615, d_qoy#7577, d_year#7573], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]          :     :                 +- *(20) Project [ws_ext_sales_price#1043, d_year#7573, d_qoy#7577, ca_county#7615]
[info]          :     :                    +- *(20) BroadcastHashJoin [ws_bill_addr_sk#1027], [ca_address_sk#7608], Inner, BuildRight
[info]          :     :                       :- *(20) Project [ws_bill_addr_sk#1027, ws_ext_sales_price#1043, d_year#7573, d_qoy#7577]
[info]          :     :                       :  +- *(20) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#7567], Inner, BuildRight
[info]          :     :                       :     :- *(20) Project [ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]          :     :                       :     :  +- *(20) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_addr_sk#1027))
[info]          :     :                       :     :     +- *(20) ColumnarToRow
[info]          :     :                       :     :        +- BatchScan[ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]          :     :                       :     +- ReusedExchange [d_date_sk#7567, d_year#7573, d_qoy#7577], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23452]
[info]          :     :                       +- ReusedExchange [ca_address_sk#7608, ca_county#7615], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23461]
[info]          :     +- *(28) Sort [ca_county#7711 ASC NULLS FIRST], false, 0
[info]          :        +- Exchange hashpartitioning(ca_county#7711, 4), true, [id=#23932]
[info]          :           +- *(27) HashAggregate(keys=[ca_county#7711, d_qoy#7673, d_year#7669], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]          :              +- Exchange hashpartitioning(ca_county#7711, d_qoy#7673, d_year#7669, 4), true, [id=#23907]
[info]          :                 +- *(26) HashAggregate(keys=[ca_county#7711, d_qoy#7673, d_year#7669], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]          :                    +- *(26) Project [ws_ext_sales_price#1043, d_year#7669, d_qoy#7673, ca_county#7711]
[info]          :                       +- *(26) BroadcastHashJoin [ws_bill_addr_sk#1027], [ca_address_sk#7704], Inner, BuildRight
[info]          :                          :- *(26) Project [ws_bill_addr_sk#1027, ws_ext_sales_price#1043, d_year#7669, d_qoy#7673]
[info]          :                          :  +- *(26) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#7663], Inner, BuildRight
[info]          :                          :     :- *(26) Project [ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]          :                          :     :  +- *(26) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_addr_sk#1027))
[info]          :                          :     :     +- *(26) ColumnarToRow
[info]          :                          :     :        +- BatchScan[ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]          :                          :     +- ReusedExchange [d_date_sk#7663, d_year#7669, d_qoy#7673], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23485]
[info]          :                          +- ReusedExchange [ca_address_sk#7704, ca_county#7711], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23461]
[info]          +- *(34) Sort [ca_county#7807 ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning(ca_county#7807, 4), true, [id=#24004]
[info]                +- *(33) HashAggregate(keys=[ca_county#7807, d_qoy#7769, d_year#7765], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                   +- Exchange hashpartitioning(ca_county#7807, d_qoy#7769, d_year#7765, 4), true, [id=#23979]
[info]                      +- *(32) HashAggregate(keys=[ca_county#7807, d_qoy#7769, d_year#7765], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                         +- *(32) Project [ws_ext_sales_price#1043, d_year#7765, d_qoy#7769, ca_county#7807]
[info]                            +- *(32) BroadcastHashJoin [ws_bill_addr_sk#1027], [ca_address_sk#7800], Inner, BuildRight
[info]                               :- *(32) Project [ws_bill_addr_sk#1027, ws_ext_sales_price#1043, d_year#7765, d_qoy#7769]
[info]                               :  +- *(32) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#7759], Inner, BuildRight
[info]                               :     :- *(32) Project [ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                               :     :  +- *(32) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_addr_sk#1027))
[info]                               :     :     +- *(32) ColumnarToRow
[info]                               :     :        +- BatchScan[ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                               :     +- ReusedExchange [d_date_sk#7759, d_year#7765, d_qoy#7769], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23521]
[info]                               +- ReusedExchange [ca_address_sk#7800, ca_county#7807], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#23461]
[info] 
[info] 
[info]   Stopped after 1 iterations, 638 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q31                                                 638            638           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q32
[info] == Physical Plan ==
[info] CollectLimit 100
[info] +- *(9) Project [1 AS excess discount amount #7902]
[info]    +- *(9) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :- *(9) Project [cs_sold_date_sk#911]
[info]       :  +- *(9) SortMergeJoin [i_item_sk#496], [cs_item_sk#892#7906], Inner, (cast(cs_ext_discount_amt#899 as decimal(14,7)) > (CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(cs_ext_discount_amt) AS DECIMAL(11,6)))#7904)
[info]       :     :- *(3) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#24180]
[info]       :     :     +- *(2) Project [cs_ext_discount_amt#899, cs_sold_date_sk#911, i_item_sk#496]
[info]       :     :        +- *(2) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]       :     :           :- *(2) Project [cs_item_sk#892, cs_ext_discount_amt#899, cs_sold_date_sk#911]
[info]       :     :           :  +- *(2) Filter ((isnotnull(cs_item_sk#892) AND isnotnull(cs_ext_discount_amt#899)) AND isnotnull(cs_sold_date_sk#911))
[info]       :     :           :     +- *(2) ColumnarToRow
[info]       :     :           :        +- BatchScan[cs_item_sk#892, cs_ext_discount_amt#899, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_ext_discount_amt:decimal(7,2)>
[info]       :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24175]
[info]       :     :              +- *(1) Project [i_item_sk#496]
[info]       :     :                 +- *(1) Filter ((isnotnull(i_manufact_id#509) AND (i_manufact_id#509 = 977)) AND isnotnull(i_item_sk#496))
[info]       :     :                    +- *(1) ColumnarToRow
[info]       :     :                       +- BatchScan[i_item_sk#496, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>
[info]       :     +- *(7) Sort [cs_item_sk#892#7906 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(cs_item_sk#892#7906, 4), true, [id=#24205]
[info]       :           +- *(6) Filter isnotnull((CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(cs_ext_discount_amt) AS DECIMAL(11,6)))#7904)
[info]       :              +- *(6) HashAggregate(keys=[cs_item_sk#892], functions=[avg(UnscaledValue(cs_ext_discount_amt#899))])
[info]       :                 +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#24200]
[info]       :                    +- *(5) HashAggregate(keys=[cs_item_sk#892], functions=[partial_avg(UnscaledValue(cs_ext_discount_amt#899))])
[info]       :                       +- *(5) Project [cs_item_sk#892, cs_ext_discount_amt#899]
[info]       :                          +- *(5) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :                             :- *(5) Project [cs_item_sk#892, cs_ext_discount_amt#899, cs_sold_date_sk#911]
[info]       :                             :  +- *(5) Filter (isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_item_sk#892))
[info]       :                             :     +- *(5) ColumnarToRow
[info]       :                             :        +- BatchScan[cs_item_sk#892, cs_ext_discount_amt#899, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_ext_discount_amt:decimal(7,2)>
[info]       :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24194]
[info]       :                                +- *(4) Project [d_date_sk#331]
[info]       :                                   +- *(4) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10983)) AND (d_date#333 <= 11073)) AND isnotnull(d_date_sk#331))
[info]       :                                      +- *(4) ColumnarToRow
[info]       :                                         +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]       +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24194]
[info] 
[info] 
[info]   Stopped after 1 iterations, 246 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q32                                                 247            247           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q33
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[total_sales#7943 ASC NULLS FIRST], output=[i_manufact_id#509,total_sales#7943])
[info] +- *(20) HashAggregate(keys=[i_manufact_id#509], functions=[sum(total_sales#7945)])
[info]    +- Exchange hashpartitioning(i_manufact_id#509, 4), true, [id=#25009]
[info]       +- *(19) HashAggregate(keys=[i_manufact_id#509], functions=[partial_sum(total_sales#7945)])
[info]          +- Union
[info]             :- *(6) HashAggregate(keys=[i_manufact_id#509], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             :  +- Exchange hashpartitioning(i_manufact_id#509, 4), true, [id=#24673]
[info]             :     +- *(5) HashAggregate(keys=[i_manufact_id#509], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             :        +- *(5) Project [ss_ext_sales_price#1178, i_manufact_id#509]
[info]             :           +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :              :- *(5) Project [ss_item_sk#1165, ss_ext_sales_price#1178]
[info]             :              :  +- *(5) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]             :              :     :- *(5) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178]
[info]             :              :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :              :     :     :- *(5) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]             :              :     :     :  +- *(5) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_addr_sk#1169)) AND isnotnull(ss_item_sk#1165))
[info]             :              :     :     :     +- *(5) ColumnarToRow
[info]             :              :     :     :        +- BatchScan[ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]             :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24641]
[info]             :              :     :        +- *(1) Project [d_date_sk#331]
[info]             :              :     :           +- *(1) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 1998)) AND (d_moy#339 = 5)) AND isnotnull(d_date_sk#331))
[info]             :              :     :              +- *(1) ColumnarToRow
[info]             :              :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24650]
[info]             :              :        +- *(2) Project [ca_address_sk#233]
[info]             :              :           +- *(2) Filter ((isnotnull(ca_gmt_offset#244) AND (ca_gmt_offset#244 = -5.00)) AND isnotnull(ca_address_sk#233))
[info]             :              :              +- *(2) ColumnarToRow
[info]             :              :                 +- BatchScan[ca_address_sk#233, ca_gmt_offset#244] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
[info]             :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24667]
[info]             :                 +- *(4) BroadcastHashJoin [i_manufact_id#509], [i_manufact_id#509#8000], LeftSemi, BuildRight
[info]             :                    :- *(4) Project [i_item_sk#496, i_manufact_id#509]
[info]             :                    :  +- *(4) Filter isnotnull(i_item_sk#496)
[info]             :                    :     +- *(4) ColumnarToRow
[info]             :                    :        +- BatchScan[i_item_sk#496, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>
[info]             :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24663]
[info]             :                       +- *(3) Project [i_manufact_id#509 AS i_manufact_id#509#8000]
[info]             :                          +- *(3) Filter (isnotnull(i_category#508) AND (i_category#508 = Electronics))
[info]             :                             +- *(3) ColumnarToRow
[info]             :                                +- BatchScan[i_category#508, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_category:string,i_manufact_id:int>
[info]             :- *(12) HashAggregate(keys=[i_manufact_id#509], functions=[sum(UnscaledValue(cs_ext_sales_price#900))])
[info]             :  +- Exchange hashpartitioning(i_manufact_id#509, 4), true, [id=#24865]
[info]             :     +- *(11) HashAggregate(keys=[i_manufact_id#509], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900))])
[info]             :        +- *(11) Project [cs_ext_sales_price#900, i_manufact_id#509]
[info]             :           +- *(11) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]             :              :- *(11) Project [cs_item_sk#892, cs_ext_sales_price#900]
[info]             :              :  +- *(11) BroadcastHashJoin [cs_bill_addr_sk#883], [ca_address_sk#233], Inner, BuildRight
[info]             :              :     :- *(11) Project [cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900]
[info]             :              :     :  +- *(11) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :              :     :     :- *(11) Project [cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]             :              :     :     :  +- *(11) Filter ((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_bill_addr_sk#883)) AND isnotnull(cs_item_sk#892))
[info]             :              :     :     :     +- *(11) ColumnarToRow
[info]             :              :     :     :        +- BatchScan[cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]             :              :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24641]
[info]             :              :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24650]
[info]             :              +- ReusedExchange [i_item_sk#496, i_manufact_id#509], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24667]
[info]             +- *(18) HashAggregate(keys=[i_manufact_id#509], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                +- Exchange hashpartitioning(i_manufact_id#509, 4), true, [id=#24975]
[info]                   +- *(17) HashAggregate(keys=[i_manufact_id#509], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                      +- *(17) Project [ws_ext_sales_price#1043, i_manufact_id#509]
[info]                         +- *(17) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                            :- *(17) Project [ws_item_sk#1023, ws_ext_sales_price#1043]
[info]                            :  +- *(17) BroadcastHashJoin [ws_bill_addr_sk#1027], [ca_address_sk#233], Inner, BuildRight
[info]                            :     :- *(17) Project [ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043]
[info]                            :     :  +- *(17) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                            :     :     :- *(17) Project [ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                            :     :     :  +- *(17) Filter ((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_addr_sk#1027)) AND isnotnull(ws_item_sk#1023))
[info]                            :     :     :     +- *(17) ColumnarToRow
[info]                            :     :     :        +- BatchScan[ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                            :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24641]
[info]                            :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24650]
[info]                            +- ReusedExchange [i_item_sk#496, i_manufact_id#509], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#24667]
[info] 
[info] 
[info]   Stopped after 1 iterations, 562 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q33                                                 563            563           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q34
[info] == Physical Plan ==
[info] *(7) Sort [c_last_name#165 ASC NULLS FIRST, c_first_name#164 ASC NULLS FIRST, c_salutation#163 ASC NULLS FIRST, c_preferred_cust_flag#166 DESC NULLS LAST], true, 0
[info] +- Exchange rangepartitioning(c_last_name#165 ASC NULLS FIRST, c_first_name#164 ASC NULLS FIRST, c_salutation#163 ASC NULLS FIRST, c_preferred_cust_flag#166 DESC NULLS LAST, 4), true, [id=#25203]
[info]    +- *(6) Project [c_last_name#165, c_first_name#164, c_salutation#163, c_preferred_cust_flag#166, ss_ticket_number#1172L, cnt#8025L]
[info]       +- *(6) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]          :- *(6) Filter ((cnt#8025L >= 15) AND (cnt#8025L <= 20))
[info]          :  +- *(6) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166], functions=[count(1)])
[info]          :     +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_customer_sk#1166, 4), true, [id=#25189]
[info]          :        +- *(4) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166], functions=[partial_count(1)])
[info]          :           +- *(4) Project [ss_customer_sk#1166, ss_ticket_number#1172L]
[info]          :              +- *(4) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]          :                 :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_ticket_number#1172L]
[info]          :                 :  +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]          :                 :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L]
[info]          :                 :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]          :                 :     :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186]
[info]          :                 :     :     :  +- *(4) Filter (((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_customer_sk#1166))
[info]          :                 :     :     :     +- *(4) ColumnarToRow
[info]          :                 :     :     :        +- BatchScan[ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_hdemo_sk:int,ss_store_sk:int,ss_ticket_number:bigint>
[info]          :                 :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25165]
[info]          :                 :     :        +- *(1) Project [d_date_sk#331]
[info]          :                 :     :           +- *(1) Filter (((((d_dom#340 >= 1) AND (d_dom#340 <= 3)) OR ((d_dom#340 >= 25) AND (d_dom#340 <= 28))) AND d_year#337 IN (1999,2000,2001)) AND isnotnull(d_date_sk#331))
[info]          :                 :     :              +- *(1) ColumnarToRow
[info]          :                 :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_dom:int>
[info]          :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25174]
[info]          :                 :        +- *(2) Project [s_store_sk#670]
[info]          :                 :           +- *(2) Filter ((isnotnull(s_county#693) AND (s_county#693 = Williamson County)) AND isnotnull(s_store_sk#670))
[info]          :                 :              +- *(2) ColumnarToRow
[info]          :                 :                 +- BatchScan[s_store_sk#670, s_county#693] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_county:string>
[info]          :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25183]
[info]          :                    +- *(3) Project [hd_demo_sk#448]
[info]          :                       +- *(3) Filter (((((CASE WHEN (hd_vehicle_count#452 > 0) THEN (cast(hd_dep_count#451 as double) / cast(hd_vehicle_count#452 as double)) ELSE null END > 1.2) AND isnotnull(hd_vehicle_count#452)) AND ((hd_buy_potential#450 = >10000) OR (hd_buy_potential#450 = unknown))) AND (hd_vehicle_count#452 > 0)) AND isnotnull(hd_demo_sk#448))
[info]          :                          +- *(3) ColumnarToRow
[info]          :                             +- BatchScan[hd_demo_sk#448, hd_buy_potential#450, hd_dep_count#451, hd_vehicle_count#452] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string,hd_dep_count:int,hd_vehicle_count:int>
[info]          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25198]
[info]             +- *(5) Project [c_customer_sk#156, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166]
[info]                +- *(5) Filter isnotnull(c_customer_sk#156)
[info]                   +- *(5) ColumnarToRow
[info]                      +- BatchScan[c_customer_sk#156, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_c...
[info] 
[info] 
[info]   Stopped after 1 iterations, 194 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q34                                                 195            195           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q35
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ca_state#241 ASC NULLS FIRST,cd_gender#291 ASC NULLS FIRST,cd_marital_status#292 ASC NULLS FIRST,aggOrder#8135 ASC NULLS FIRST,cd_dep_employed_count#297 ASC NULLS FIRST,cd_dep_college_count#298 ASC NULLS FIRST], output=[ca_state#241,cd_gender#291,cd_marital_status#292,cnt1#8108L,min(cd_dep_count)#8123,max(cd_dep_count)#8124,avg(cd_dep_count)#8125,cd_dep_employed_count#297,cnt2#8109L,min(cd_dep_employed_count)#8126,max(cd_dep_employed_count)#8127,avg(cd_dep_employed_count)#8128,cd_dep_college_count#298,cnt3#8110L,min(cd_dep_college_count)#8129,max(cd_dep_college_count)#8130,avg(cd_dep_college_count)#8131])
[info] +- *(15) HashAggregate(keys=[ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[count(1), min(cd_dep_count#296), max(cd_dep_count#296), avg(cast(cd_dep_count#296 as bigint)), min(cd_dep_employed_count#297), max(cd_dep_employed_count#297), avg(cast(cd_dep_employed_count#297 as bigint)), min(cd_dep_college_count#298), max(cd_dep_college_count#298), avg(cast(cd_dep_college_count#298 as bigint))])
[info]    +- Exchange hashpartitioning(ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298, 4), true, [id=#25595]
[info]       +- *(14) HashAggregate(keys=[ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[partial_count(1), partial_min(cd_dep_count#296), partial_max(cd_dep_count#296), partial_avg(cast(cd_dep_count#296 as bigint)), partial_min(cd_dep_employed_count#297), partial_max(cd_dep_employed_count#297), partial_avg(cast(cd_dep_employed_count#297 as bigint)), partial_min(cd_dep_college_count#298), partial_max(cd_dep_college_count#298), partial_avg(cast(cd_dep_college_count#298 as bigint))])
[info]          +- *(14) Project [ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]             +- *(14) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]                :- *(14) Project [c_current_cdemo_sk#158, ca_state#241]
[info]                :  +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                :     :- *(14) Project [c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :  +- *(14) Filter (exists#8166 OR exists#8167)
[info]                :     :     +- SortMergeJoin [c_customer_sk#156], [cs_ship_customer_sk#884], ExistenceJoin(exists#8167)
[info]                :     :        :- SortMergeJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], ExistenceJoin(exists#8166)
[info]                :     :        :  :- SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], LeftSemi
[info]                :     :        :  :  :- *(2) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                :     :        :  :  :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#25453]
[info]                :     :        :  :  :     +- *(1) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :        :  :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_current_cdemo_sk#158))
[info]                :     :        :  :  :           +- *(1) ColumnarToRow
[info]                :     :        :  :  :              +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
[info]                :     :        :  :  +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                :     :        :  :     +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#25471]
[info]                :     :        :  :        +- *(4) Project [ss_customer_sk#1166]
[info]                :     :        :  :           +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :        :  :              :- *(4) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                :     :        :  :              :  +- *(4) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :     :        :  :              :     +- *(4) ColumnarToRow
[info]                :     :        :  :              :        +- BatchScan[ss_sold_time_sk#1164, ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_sales_price#1176, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_ext_tax#1181, ss_coupon_amt#1182, ss_net_paid#1183, ss_net_paid_inc_tax#1184, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_a...
[info]                :     :        :  :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25466]
[info]                :     :        :  :                 +- *(3) Project [d_date_sk#331]
[info]                :     :        :  :                    +- *(3) Filter ((((isnotnull(d_year#337) AND isnotnull(d_qoy#341)) AND (d_year#337 = 2002)) AND (d_qoy#341 < 4)) AND isnotnull(d_date_sk#331))
[info]                :     :        :  :                       +- *(3) ColumnarToRow
[info]                :     :        :  :                          +- BatchScan[d_date_sk#331, d_date_id#332, d_date#333, d_month_seq#334, d_week_seq#335, d_quarter_seq#336, d_year#337, d_dow#338, d_moy#339, d_dom#340, d_qoy#341, d_fy_year#342, d_fy_quarter_seq#343, d_fy_week_seq#344, d_day_name#345, d_quarter_name#346, d_holiday#347, d_weekend#348, d_following_holiday#349, d_first_dom#350, d_last_dom#351, d_same_day_ly#352, d_same_day_lq#353, d_current_day#354, ... 4 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:in...
[info]                :     :        :  +- *(8) Sort [ws_bill_customer_sk#1024 ASC NULLS FIRST], false, 0
[info]                :     :        :     +- Exchange hashpartitioning(ws_bill_customer_sk#1024, 4), true, [id=#25563]
[info]                :     :        :        +- *(7) Project [ws_bill_customer_sk#1024]
[info]                :     :        :           +- *(7) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :        :              :- *(7) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                :     :        :              :  +- *(7) Filter isnotnull(ws_sold_date_sk#1054)
[info]                :     :        :              :     +- *(7) ColumnarToRow
[info]                :     :        :              :        +- BatchScan[ws_sold_time_sk#1021, ws_ship_date_sk#1022, ws_item_sk#1023, ws_bill_customer_sk#1024, ws_bill_cdemo_sk#1025, ws_bill_hdemo_sk#1026, ws_bill_addr_sk#1027, ws_ship_customer_sk#1028, ws_ship_cdemo_sk#1029, ws_ship_hdemo_sk#1030, ws_ship_addr_sk#1031, ws_web_page_sk#1032, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_promo_sk#1036, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_list_price#1040, ws_sales_price#1041, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cde...
[info]                :     :        :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25466]
[info]                :     :        +- *(11) Sort [cs_ship_customer_sk#884 ASC NULLS FIRST], false, 0
[info]                :     :           +- Exchange hashpartitioning(cs_ship_customer_sk#884, 4), true, [id=#25581]
[info]                :     :              +- *(10) Project [cs_ship_customer_sk#884]
[info]                :     :                 +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :                    :- *(10) Project [cs_ship_customer_sk#884, cs_sold_date_sk#911]
[info]                :     :                    :  +- *(10) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :                    :     +- *(10) ColumnarToRow
[info]                :     :                    :        +- BatchScan[cs_sold_time_sk#878, cs_ship_date_sk#879, cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_bill_addr_sk#883, cs_ship_customer_sk#884, cs_ship_cdemo_sk#885, cs_ship_hdemo_sk#886, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_catalog_page_sk#889, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_list_price#897, cs_sales_price#898, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bi...
[info]                :     :                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25466]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25522]
[info]                :        +- *(12) Project [ca_address_sk#233, ca_state#241]
[info]                :           +- *(12) Filter isnotnull(ca_address_sk#233)
[info]                :              +- *(12) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25531]
[info]                   +- *(13) Project [cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]                      +- *(13) Filter isnotnull(cd_demo_sk#290)
[info]                         +- *(13) ColumnarToRow
[info]                            +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_dep_count:int,cd_dep_employed_...
[info] 
[info] 
[info]   Stopped after 1 iterations, 343 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q35                                                 343            343           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q36
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#8241 DESC NULLS LAST,CASE WHEN (cast(lochierarchy#8241 as int) = 0) THEN i_category#8252 END ASC NULLS FIRST,rank_within_parent#8242 ASC NULLS FIRST], output=[gross_margin#8240,i_category#8252,i_class#8253,lochierarchy#8241,rank_within_parent#8242])
[info] +- *(7) Project [gross_margin#8240, i_category#8252, i_class#8253, lochierarchy#8241, rank_within_parent#8242]
[info]    +- Window [rank(_w3#8268) windowspecdefinition(_w1#8266, _w2#8267, _w3#8268 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#8242], [_w1#8266, _w2#8267], [_w3#8268 ASC NULLS FIRST]
[info]       +- *(6) Sort [_w1#8266 ASC NULLS FIRST, _w2#8267 ASC NULLS FIRST, _w3#8268 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(_w1#8266, _w2#8267, 4), true, [id=#25767]
[info]             +- *(5) HashAggregate(keys=[i_category#8252, i_class#8253, spark_grouping_id#8249], functions=[sum(UnscaledValue(ss_net_profit#1185)), sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                +- Exchange hashpartitioning(i_category#8252, i_class#8253, spark_grouping_id#8249, 4), true, [id=#25763]
[info]                   +- *(4) HashAggregate(keys=[i_category#8252, i_class#8253, spark_grouping_id#8249], functions=[partial_sum(UnscaledValue(ss_net_profit#1185)), partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                      +- *(4) Expand [List(ss_ext_sales_price#1178, ss_net_profit#1185, i_category#508, i_class#506, 0), List(ss_ext_sales_price#1178, ss_net_profit#1185, i_category#508, null, 1), List(ss_ext_sales_price#1178, ss_net_profit#1185, null, null, 3)], [ss_ext_sales_price#1178, ss_net_profit#1185, i_category#8252, i_class#8253, spark_grouping_id#8249]
[info]                         +- *(4) Project [ss_ext_sales_price#1178, ss_net_profit#1185, i_category#508, i_class#506]
[info]                            +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :- *(4) Project [ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, i_class#506, i_category#508]
[info]                               :  +- *(4) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                               :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185]
[info]                               :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                               :     :     :  +- *(4) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_store_sk#1170))
[info]                               :     :     :     +- *(4) ColumnarToRow
[info]                               :     :     :        +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>
[info]                               :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25738]
[info]                               :     :        +- *(1) Project [d_date_sk#331]
[info]                               :     :           +- *(1) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]                               :     :              +- *(1) ColumnarToRow
[info]                               :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25747]
[info]                               :        +- *(2) Project [i_item_sk#496, i_class#506, i_category#508]
[info]                               :           +- *(2) Filter isnotnull(i_item_sk#496)
[info]                               :              +- *(2) ColumnarToRow
[info]                               :                 +- BatchScan[i_item_sk#496, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25756]
[info]                                  +- *(3) Project [s_store_sk#670]
[info]                                     +- *(3) Filter ((isnotnull(s_state#694) AND (s_state#694 = TN)) AND isnotnull(s_store_sk#670))
[info]                                        +- *(3) ColumnarToRow
[info]                                           +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 169 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q36                                                 170            170           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q37
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST], output=[i_item_id#497,i_item_desc#500,i_current_price#501])
[info] +- *(8) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_current_price#501], functions=[])
[info]    +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_current_price#501, 4), true, [id=#25931]
[info]       +- *(7) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_current_price#501], functions=[])
[info]          +- *(7) Project [i_item_id#497, i_item_desc#500, i_current_price#501]
[info]             +- *(7) SortMergeJoin [i_item_sk#496], [cs_item_sk#892], Inner
[info]                :- *(4) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]                :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#25912]
[info]                :     +- *(3) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501]
[info]                :        +- *(3) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]                :           :- *(3) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, inv_date_sk#476]
[info]                :           :  +- *(3) BroadcastHashJoin [i_item_sk#496], [inv_item_sk#473], Inner, BuildLeft
[info]                :           :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25894]
[info]                :           :     :  +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501]
[info]                :           :     :     +- *(1) Filter (((((cast(i_current_price#501 as decimal(12,2)) <= 98.00) AND isnotnull(i_current_price#501)) AND (i_current_price#501 >= 68.00)) AND i_manufact_id#509 IN (677,940,694,808)) AND isnotnull(i_item_sk#496))
[info]                :           :     :        +- *(1) ColumnarToRow
[info]                :           :     :           +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_manufact_...
[info]                :           :     +- *(3) Project [inv_item_sk#473, inv_date_sk#476]
[info]                :           :        +- *(3) Filter ((((isnotnull(inv_quantity_on_hand#475) AND (inv_quantity_on_hand#475 >= 100)) AND (inv_quantity_on_hand#475 <= 500)) AND isnotnull(inv_item_sk#473)) AND isnotnull(inv_date_sk#476))
[info]                :           :           +- *(3) ColumnarToRow
[info]                :           :              +- BatchScan[inv_item_sk#473, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_quantity_on_hand:int>
[info]                :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#25907]
[info]                :              +- *(2) Project [d_date_sk#331]
[info]                :                 +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10988)) AND (d_date#333 <= 11048)) AND isnotnull(d_date_sk#331))
[info]                :                    +- *(2) ColumnarToRow
[info]                :                       +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                +- *(6) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                   +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#25922]
[info]                      +- *(5) Project [cs_item_sk#892]
[info]                         +- *(5) Filter isnotnull(cs_item_sk#892)
[info]                            +- *(5) ColumnarToRow
[info]                               +- BatchScan[cs_item_sk#892] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 125 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q37                                                 126            126           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q38
[info] == Physical Plan ==
[info] CollectLimit 100
[info] +- *(17) HashAggregate(keys=[], functions=[count(1)])
[info]    +- Exchange SinglePartition, true, [id=#26580]
[info]       +- *(16) HashAggregate(keys=[], functions=[partial_count(1)])
[info]          +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]             +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                   +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                      +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                         +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, d_date#333, 4), true, [id=#26528]
[info]                            +- *(15) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                               +- *(15) Project [c_last_name#165, c_first_name#164, d_date#333]
[info]                                  +- SortMergeJoin [coalesce(c_last_name#165, ), isnull(c_last_name#165), coalesce(c_first_name#164, ), isnull(c_first_name#164), coalesce(d_date#333, 0), isnull(d_date#333)], [coalesce(c_last_name#8570, ), isnull(c_last_name#8570), coalesce(c_first_name#8569, ), isnull(c_first_name#8569), coalesce(d_date#8517, 0), isnull(d_date#8517)], LeftSemi
[info]                                     :- SortMergeJoin [coalesce(c_last_name#165, ), isnull(c_last_name#165), coalesce(c_first_name#164, ), isnull(c_first_name#164), coalesce(d_date#333, 0), isnull(d_date#333)], [coalesce(c_last_name#8506, ), isnull(c_last_name#8506), coalesce(c_first_name#8505, ), isnull(c_first_name#8505), coalesce(d_date#8452, 0), isnull(d_date#8452)], LeftSemi
[info]                                     :  :- *(4) Sort [coalesce(c_last_name#165, ) ASC NULLS FIRST, isnull(c_last_name#165) ASC NULLS FIRST, coalesce(c_first_name#164, ) ASC NULLS FIRST, isnull(c_first_name#164) ASC NULLS FIRST, coalesce(d_date#333, 0) ASC NULLS FIRST, isnull(d_date#333) ASC NULLS FIRST], false, 0
[info]                                     :  :  +- Exchange hashpartitioning(coalesce(c_last_name#165, ), isnull(c_last_name#165), coalesce(c_first_name#164, ), isnull(c_first_name#164), coalesce(d_date#333, 0), isnull(d_date#333), 4), true, [id=#26296]
[info]                                     :  :     +- *(3) Project [d_date#333, c_first_name#164, c_last_name#165]
[info]                                     :  :        +- *(3) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                                     :  :           :- *(3) Project [ss_customer_sk#1166, d_date#333]
[info]                                     :  :           :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                                     :  :           :     :- *(3) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                                     :  :           :     :  +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_customer_sk#1166))
[info]                                     :  :           :     :     +- *(3) ColumnarToRow
[info]                                     :  :           :     :        +- BatchScan[ss_customer_sk#1166, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int>
[info]                                     :  :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26282]
[info]                                     :  :           :        +- *(1) Project [d_date_sk#331, d_date#333]
[info]                                     :  :           :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                                     :  :           :              +- *(1) ColumnarToRow
[info]                                     :  :           :                 +- BatchScan[d_date_sk#331, d_date#333, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>
[info]                                     :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26291]
[info]                                     :  :              +- *(2) Project [c_customer_sk#156, c_first_name#164, c_last_name#165]
[info]                                     :  :                 +- *(2) Filter isnotnull(c_customer_sk#156)
[info]                                     :  :                    +- *(2) ColumnarToRow
[info]                                     :  :                       +- BatchScan[c_customer_sk#156, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
[info]                                     :  +- *(9) Sort [coalesce(c_last_name#8506, ) ASC NULLS FIRST, isnull(c_last_name#8506) ASC NULLS FIRST, coalesce(c_first_name#8505, ) ASC NULLS FIRST, isnull(c_first_name#8505) ASC NULLS FIRST, coalesce(d_date#8452, 0) ASC NULLS FIRST, isnull(d_date#8452) ASC NULLS FIRST], false, 0
[info]                                     :     +- Exchange hashpartitioning(coalesce(c_last_name#8506, ), isnull(c_last_name#8506), coalesce(c_first_name#8505, ), isnull(c_first_name#8505), coalesce(d_date#8452, 0), isnull(d_date#8452), 4), true, [id=#26430]
[info]                                     :        +- *(8) HashAggregate(keys=[c_last_name#8506, c_first_name#8505, d_date#8452], functions=[])
[info]                                     :           +- Exchange hashpartitioning(c_last_name#8506, c_first_name#8505, d_date#8452, 4), true, [id=#26426]
[info]                                     :              +- *(7) HashAggregate(keys=[c_last_name#8506, c_first_name#8505, d_date#8452], functions=[])
[info]                                     :                 +- *(7) Project [c_last_name#8506, c_first_name#8505, d_date#8452]
[info]                                     :                    +- *(7) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#8497], Inner, BuildRight
[info]                                     :                       :- *(7) Project [cs_bill_customer_sk#880, d_date#8452]
[info]                                     :                       :  +- *(7) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#8450], Inner, BuildRight
[info]                                     :                       :     :- *(7) Project [cs_bill_customer_sk#880, cs_sold_date_sk#911]
[info]                                     :                       :     :  +- *(7) Filter (isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_bill_customer_sk#880))
[info]                                     :                       :     :     +- *(7) ColumnarToRow
[info]                                     :                       :     :        +- BatchScan[cs_bill_customer_sk#880, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int>
[info]                                     :                       :     +- ReusedExchange [d_date_sk#8450, d_date#8452], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26282]
[info]                                     :                       +- ReusedExchange [c_customer_sk#8497, c_first_name#8505, c_last_name#8506], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26291]
[info]                                     +- *(14) Sort [coalesce(c_last_name#8570, ) ASC NULLS FIRST, isnull(c_last_name#8570) ASC NULLS FIRST, coalesce(c_first_name#8569, ) ASC NULLS FIRST, isnull(c_first_name#8569) ASC NULLS FIRST, coalesce(d_date#8517, 0) ASC NULLS FIRST, isnull(d_date#8517) ASC NULLS FIRST], false, 0
[info]                                        +- Exchange hashpartitioning(coalesce(c_last_name#8570, ), isnull(c_last_name#8570), coalesce(c_first_name#8569, ), isnull(c_first_name#8569), coalesce(d_date#8517, 0), isnull(d_date#8517), 4), true, [id=#26513]
[info]                                           +- *(13) HashAggregate(keys=[c_last_name#8570, c_first_name#8569, d_date#8517], functions=[])
[info]                                              +- Exchange hashpartitioning(c_last_name#8570, c_first_name#8569, d_date#8517, 4), true, [id=#26488]
[info]                                                 +- *(12) HashAggregate(keys=[c_last_name#8570, c_first_name#8569, d_date#8517], functions=[])
[info]                                                    +- *(12) Project [c_last_name#8570, c_first_name#8569, d_date#8517]
[info]                                                       +- *(12) BroadcastHashJoin [ws_bill_customer_sk#1024], [c_customer_sk#8561], Inner, BuildRight
[info]                                                          :- *(12) Project [ws_bill_customer_sk#1024, d_date#8517]
[info]                                                          :  +- *(12) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#8515], Inner, BuildRight
[info]                                                          :     :- *(12) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                                                          :     :  +- *(12) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_customer_sk#1024))
[info]                                                          :     :     +- *(12) ColumnarToRow
[info]                                                          :     :        +- BatchScan[ws_bill_customer_sk#1024, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int>
[info]                                                          :     +- ReusedExchange [d_date_sk#8515, d_date#8517], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26282]
[info]                                                          +- ReusedExchange [c_customer_sk#8561, c_first_name#8569, c_last_name#8570], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26291]
[info] 
[info] 
[info]   Stopped after 1 iterations, 286 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q38                                                 287            287           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q39a
[info] == Physical Plan ==
[info] *(14) Sort [w_warehouse_sk#1621 ASC NULLS FIRST, i_item_sk#496 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, mean#8943 ASC NULLS FIRST, cov#8944 ASC NULLS FIRST, d_moy#9244 ASC NULLS FIRST, mean#9065 ASC NULLS FIRST, cov#8997 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(w_warehouse_sk#1621 ASC NULLS FIRST, i_item_sk#496 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, mean#8943 ASC NULLS FIRST, cov#8944 ASC NULLS FIRST, d_moy#9244 ASC NULLS FIRST, mean#9065 ASC NULLS FIRST, cov#8997 ASC NULLS FIRST, 4), true, [id=#27076]
[info]    +- *(13) SortMergeJoin [i_item_sk#496, w_warehouse_sk#1621], [i_item_sk#9130, w_warehouse_sk#9194], Inner
[info]       :- *(6) Sort [i_item_sk#496 ASC NULLS FIRST, w_warehouse_sk#1621 ASC NULLS FIRST], false, 0
[info]       :  +- Exchange hashpartitioning(i_item_sk#496, w_warehouse_sk#1621, 4), true, [id=#26876]
[info]       :     +- *(5) Project [w_warehouse_sk#1621, i_item_sk#496, d_moy#339, mean#8943, CASE WHEN (mean#8943 = 0.0) THEN null ELSE (stdev#8942 / mean#8943) END AS cov#8944]
[info]       :        +- *(5) Filter (CASE WHEN (mean#8943 = 0.0) THEN 0.0 ELSE (stdev#8942 / mean#8943) END > 1.0)
[info]       :           +- *(5) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sk#1621, i_item_sk#496, d_moy#339], functions=[stddev_samp(cast(inv_quantity_on_hand#475 as double)), avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]       :              +- Exchange hashpartitioning(w_warehouse_name#1623, w_warehouse_sk#1621, i_item_sk#496, d_moy#339, 4), true, [id=#26870]
[info]       :                 +- *(4) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sk#1621, i_item_sk#496, d_moy#339], functions=[partial_stddev_samp(cast(inv_quantity_on_hand#475 as double)), partial_avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]       :                    +- *(4) Project [inv_quantity_on_hand#475, i_item_sk#496, w_warehouse_sk#1621, w_warehouse_name#1623, d_moy#339]
[info]       :                       +- *(4) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]       :                          :- *(4) Project [inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#496, w_warehouse_sk#1621, w_warehouse_name#1623]
[info]       :                          :  +- *(4) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#1621], Inner, BuildRight
[info]       :                          :     :- *(4) Project [inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#496]
[info]       :                          :     :  +- *(4) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#496], Inner, BuildRight
[info]       :                          :     :     :- *(4) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]       :                          :     :     :  +- *(4) Filter ((isnotnull(inv_item_sk#473) AND isnotnull(inv_warehouse_sk#474)) AND isnotnull(inv_date_sk#476))
[info]       :                          :     :     :     +- *(4) ColumnarToRow
[info]       :                          :     :     :        +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]       :                          :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26846]
[info]       :                          :     :        +- *(1) Project [i_item_sk#496]
[info]       :                          :     :           +- *(1) Filter isnotnull(i_item_sk#496)
[info]       :                          :     :              +- *(1) ColumnarToRow
[info]       :                          :     :                 +- BatchScan[i_item_sk#496] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int>
[info]       :                          :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26855]
[info]       :                          :        +- *(2) Project [w_warehouse_sk#1621, w_warehouse_name#1623]
[info]       :                          :           +- *(2) Filter isnotnull(w_warehouse_sk#1621)
[info]       :                          :              +- *(2) ColumnarToRow
[info]       :                          :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
[info]       :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26864]
[info]       :                             +- *(3) Project [d_date_sk#331, d_moy#339]
[info]       :                                +- *(3) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2001)) AND (d_moy#339 = 1)) AND isnotnull(d_date_sk#331))
[info]       :                                   +- *(3) ColumnarToRow
[info]       :                                      +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]       +- *(12) Sort [i_item_sk#9130 ASC NULLS FIRST, w_warehouse_sk#9194 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_item_sk#9130, w_warehouse_sk#9194, 4), true, [id=#27049]
[info]             +- *(11) Project [w_warehouse_sk#9194, i_item_sk#9130, d_moy#9244, mean#9065, CASE WHEN (mean#9065 = 0.0) THEN null ELSE (stdev#9064 / mean#9065) END AS cov#8997]
[info]                +- *(11) Filter (CASE WHEN (mean#9065 = 0.0) THEN 0.0 ELSE (stdev#9064 / mean#9065) END > 1.0)
[info]                   +- *(11) HashAggregate(keys=[w_warehouse_name#9196, w_warehouse_sk#9194, i_item_sk#9130, d_moy#9244], functions=[stddev_samp(cast(inv_quantity_on_hand#475 as double)), avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]                      +- Exchange hashpartitioning(w_warehouse_name#9196, w_warehouse_sk#9194, i_item_sk#9130, d_moy#9244, 4), true, [id=#26991]
[info]                         +- *(10) HashAggregate(keys=[w_warehouse_name#9196, w_warehouse_sk#9194, i_item_sk#9130, d_moy#9244], functions=[partial_stddev_samp(cast(inv_quantity_on_hand#475 as double)), partial_avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]                            +- *(10) Project [inv_quantity_on_hand#475, i_item_sk#9130, w_warehouse_sk#9194, w_warehouse_name#9196, d_moy#9244]
[info]                               +- *(10) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#9236], Inner, BuildRight
[info]                                  :- *(10) Project [inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#9130, w_warehouse_sk#9194, w_warehouse_name#9196]
[info]                                  :  +- *(10) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#9194], Inner, BuildRight
[info]                                  :     :- *(10) Project [inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#9130]
[info]                                  :     :  +- *(10) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#9130], Inner, BuildRight
[info]                                  :     :     :- *(10) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]                                  :     :     :  +- *(10) Filter ((isnotnull(inv_item_sk#473) AND isnotnull(inv_warehouse_sk#474)) AND isnotnull(inv_date_sk#476))
[info]                                  :     :     :     +- *(10) ColumnarToRow
[info]                                  :     :     :        +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]                                  :     :     +- ReusedExchange [i_item_sk#9130], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26846]
[info]                                  :     +- ReusedExchange [w_warehouse_sk#9194, w_warehouse_name#9196], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26855]
[info]                                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#26908]
[info]                                     +- *(9) Project [d_date_sk#9236, d_moy#9244]
[info]                                        +- *(9) Filter ((((isnotnull(d_year#9242) AND isnotnull(d_moy#9244)) AND (d_year#9242 = 2001)) AND (d_moy#9244 = 2)) AND isnotnull(d_date_sk#9236))
[info]                                           +- *(9) ColumnarToRow
[info]                                              +- BatchScan[d_date_sk#9236, d_year#9242, d_moy#9244] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 359 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q39a                                                360            360           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q39b
[info] == Physical Plan ==
[info] *(14) Sort [w_warehouse_sk#1621 ASC NULLS FIRST, i_item_sk#496 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, mean#9717 ASC NULLS FIRST, cov#9718 ASC NULLS FIRST, d_moy#10018 ASC NULLS FIRST, mean#9839 ASC NULLS FIRST, cov#9771 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(w_warehouse_sk#1621 ASC NULLS FIRST, i_item_sk#496 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, mean#9717 ASC NULLS FIRST, cov#9718 ASC NULLS FIRST, d_moy#10018 ASC NULLS FIRST, mean#9839 ASC NULLS FIRST, cov#9771 ASC NULLS FIRST, 4), true, [id=#27571]
[info]    +- *(13) SortMergeJoin [i_item_sk#496, w_warehouse_sk#1621], [i_item_sk#9904, w_warehouse_sk#9968], Inner
[info]       :- *(6) Sort [i_item_sk#496 ASC NULLS FIRST, w_warehouse_sk#1621 ASC NULLS FIRST], false, 0
[info]       :  +- Exchange hashpartitioning(i_item_sk#496, w_warehouse_sk#1621, 4), true, [id=#27371]
[info]       :     +- *(5) Project [w_warehouse_sk#1621, i_item_sk#496, d_moy#339, mean#9717, CASE WHEN (mean#9717 = 0.0) THEN null ELSE (stdev#9716 / mean#9717) END AS cov#9718]
[info]       :        +- *(5) Filter ((CASE WHEN (mean#9717 = 0.0) THEN 0.0 ELSE (stdev#9716 / mean#9717) END > 1.0) AND (CASE WHEN (mean#9717 = 0.0) THEN null ELSE (stdev#9716 / mean#9717) END > 1.5))
[info]       :           +- *(5) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sk#1621, i_item_sk#496, d_moy#339], functions=[stddev_samp(cast(inv_quantity_on_hand#475 as double)), avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]       :              +- Exchange hashpartitioning(w_warehouse_name#1623, w_warehouse_sk#1621, i_item_sk#496, d_moy#339, 4), true, [id=#27365]
[info]       :                 +- *(4) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sk#1621, i_item_sk#496, d_moy#339], functions=[partial_stddev_samp(cast(inv_quantity_on_hand#475 as double)), partial_avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]       :                    +- *(4) Project [inv_quantity_on_hand#475, i_item_sk#496, w_warehouse_sk#1621, w_warehouse_name#1623, d_moy#339]
[info]       :                       +- *(4) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]       :                          :- *(4) Project [inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#496, w_warehouse_sk#1621, w_warehouse_name#1623]
[info]       :                          :  +- *(4) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#1621], Inner, BuildRight
[info]       :                          :     :- *(4) Project [inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#496]
[info]       :                          :     :  +- *(4) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#496], Inner, BuildRight
[info]       :                          :     :     :- *(4) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]       :                          :     :     :  +- *(4) Filter ((isnotnull(inv_item_sk#473) AND isnotnull(inv_warehouse_sk#474)) AND isnotnull(inv_date_sk#476))
[info]       :                          :     :     :     +- *(4) ColumnarToRow
[info]       :                          :     :     :        +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]       :                          :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27341]
[info]       :                          :     :        +- *(1) Project [i_item_sk#496]
[info]       :                          :     :           +- *(1) Filter isnotnull(i_item_sk#496)
[info]       :                          :     :              +- *(1) ColumnarToRow
[info]       :                          :     :                 +- BatchScan[i_item_sk#496] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int>
[info]       :                          :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27350]
[info]       :                          :        +- *(2) Project [w_warehouse_sk#1621, w_warehouse_name#1623]
[info]       :                          :           +- *(2) Filter isnotnull(w_warehouse_sk#1621)
[info]       :                          :              +- *(2) ColumnarToRow
[info]       :                          :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
[info]       :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27359]
[info]       :                             +- *(3) Project [d_date_sk#331, d_moy#339]
[info]       :                                +- *(3) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2001)) AND (d_moy#339 = 1)) AND isnotnull(d_date_sk#331))
[info]       :                                   +- *(3) ColumnarToRow
[info]       :                                      +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]       +- *(12) Sort [i_item_sk#9904 ASC NULLS FIRST, w_warehouse_sk#9968 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_item_sk#9904, w_warehouse_sk#9968, 4), true, [id=#27544]
[info]             +- *(11) Project [w_warehouse_sk#9968, i_item_sk#9904, d_moy#10018, mean#9839, CASE WHEN (mean#9839 = 0.0) THEN null ELSE (stdev#9838 / mean#9839) END AS cov#9771]
[info]                +- *(11) Filter (CASE WHEN (mean#9839 = 0.0) THEN 0.0 ELSE (stdev#9838 / mean#9839) END > 1.0)
[info]                   +- *(11) HashAggregate(keys=[w_warehouse_name#9970, w_warehouse_sk#9968, i_item_sk#9904, d_moy#10018], functions=[stddev_samp(cast(inv_quantity_on_hand#475 as double)), avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]                      +- Exchange hashpartitioning(w_warehouse_name#9970, w_warehouse_sk#9968, i_item_sk#9904, d_moy#10018, 4), true, [id=#27486]
[info]                         +- *(10) HashAggregate(keys=[w_warehouse_name#9970, w_warehouse_sk#9968, i_item_sk#9904, d_moy#10018], functions=[partial_stddev_samp(cast(inv_quantity_on_hand#475 as double)), partial_avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]                            +- *(10) Project [inv_quantity_on_hand#475, i_item_sk#9904, w_warehouse_sk#9968, w_warehouse_name#9970, d_moy#10018]
[info]                               +- *(10) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#10010], Inner, BuildRight
[info]                                  :- *(10) Project [inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#9904, w_warehouse_sk#9968, w_warehouse_name#9970]
[info]                                  :  +- *(10) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#9968], Inner, BuildRight
[info]                                  :     :- *(10) Project [inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476, i_item_sk#9904]
[info]                                  :     :  +- *(10) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#9904], Inner, BuildRight
[info]                                  :     :     :- *(10) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]                                  :     :     :  +- *(10) Filter ((isnotnull(inv_item_sk#473) AND isnotnull(inv_warehouse_sk#474)) AND isnotnull(inv_date_sk#476))
[info]                                  :     :     :     +- *(10) ColumnarToRow
[info]                                  :     :     :        +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]                                  :     :     +- ReusedExchange [i_item_sk#9904], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27341]
[info]                                  :     +- ReusedExchange [w_warehouse_sk#9968, w_warehouse_name#9970], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27350]
[info]                                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27403]
[info]                                     +- *(9) Project [d_date_sk#10010, d_moy#10018]
[info]                                        +- *(9) Filter ((((isnotnull(d_year#10016) AND isnotnull(d_moy#10018)) AND (d_year#10016 = 2001)) AND (d_moy#10018 = 2)) AND isnotnull(d_date_sk#10010))
[info]                                           +- *(9) ColumnarToRow
[info]                                              +- BatchScan[d_date_sk#10010, d_year#10016, d_moy#10018] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 299 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q39b                                                299            299           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q40
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[w_state#1631 ASC NULLS FIRST,i_item_id#497 ASC NULLS FIRST], output=[w_state#1631,i_item_id#497,sales_before#10168,sales_after#10169])
[info] +- *(9) HashAggregate(keys=[w_state#1631, i_item_id#497], functions=[sum(CASE WHEN (d_date#333 < 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#63 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END), sum(CASE WHEN (d_date#333 >= 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#63 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END)])
[info]    +- Exchange hashpartitioning(w_state#1631, i_item_id#497, 4), true, [id=#27764]
[info]       +- *(8) HashAggregate(keys=[w_state#1631, i_item_id#497], functions=[partial_sum(CASE WHEN (d_date#333 < 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#63 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_date#333 >= 11027) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#63 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true) ELSE 0.00 END)])
[info]          +- *(8) Project [cs_sales_price#898, cr_refunded_cash#63, w_state#1631, i_item_id#497, d_date#333]
[info]             +- *(8) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :- *(8) Project [cs_sales_price#898, cs_sold_date_sk#911, cr_refunded_cash#63, w_state#1631, i_item_id#497]
[info]                :  +- *(8) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                :     :- *(8) Project [cs_item_sk#892, cs_sales_price#898, cs_sold_date_sk#911, cr_refunded_cash#63, w_state#1631]
[info]                :     :  +- *(8) BroadcastHashJoin [cs_warehouse_sk#891], [w_warehouse_sk#1621], Inner, BuildRight
[info]                :     :     :- *(8) Project [cs_warehouse_sk#891, cs_item_sk#892, cs_sales_price#898, cs_sold_date_sk#911, cr_refunded_cash#63]
[info]                :     :     :  +- SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], LeftOuter
[info]                :     :     :     :- *(2) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                :     :     :     :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#27719]
[info]                :     :     :     :     +- *(1) Project [cs_warehouse_sk#891, cs_item_sk#892, cs_order_number#894L, cs_sales_price#898, cs_sold_date_sk#911]
[info]                :     :     :     :        +- *(1) Filter ((isnotnull(cs_warehouse_sk#891) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_sold_date_sk#911))
[info]                :     :     :     :           +- *(1) ColumnarToRow
[info]                :     :     :     :              +- BatchScan[cs_warehouse_sk#891, cs_item_sk#892, cs_order_number#894L, cs_sales_price#898, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_warehouse_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_sales_price:decimal(7,2)>
[info]                :     :     :     +- *(4) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]                :     :     :        +- Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#27728]
[info]                :     :     :           +- *(3) Project [cr_item_sk#42, cr_order_number#56L, cr_refunded_cash#63]
[info]                :     :     :              +- *(3) Filter (isnotnull(cr_order_number#56L) AND isnotnull(cr_item_sk#42))
[info]                :     :     :                 +- *(3) ColumnarToRow
[info]                :     :     :                    +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_refunded_cash#63] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_refunded_cash:decimal(7,2)>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27740]
[info]                :     :        +- *(5) Project [w_warehouse_sk#1621, w_state#1631]
[info]                :     :           +- *(5) Filter isnotnull(w_warehouse_sk#1621)
[info]                :     :              +- *(5) ColumnarToRow
[info]                :     :                 +- BatchScan[w_warehouse_sk#1621, w_state#1631] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_state:string>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27749]
[info]                :        +- *(6) Project [i_item_sk#496, i_item_id#497]
[info]                :           +- *(6) Filter (((isnotnull(i_current_price#501) AND (i_current_price#501 >= 0.99)) AND (i_current_price#501 <= 1.49)) AND isnotnull(i_item_sk#496))
[info]                :              +- *(6) ColumnarToRow
[info]                :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_current_price#501] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_current_price:decimal(7,2)>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27758]
[info]                   +- *(7) Project [d_date_sk#331, d_date#333]
[info]                      +- *(7) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10997)) AND (d_date#333 <= 11057)) AND isnotnull(d_date_sk#331))
[info]                         +- *(7) ColumnarToRow
[info]                            +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 192 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q40                                                 193            193           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q41
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_product_name#517 ASC NULLS FIRST], output=[i_product_name#517])
[info] +- *(2) HashAggregate(keys=[i_product_name#517], functions=[])
[info]    +- *(2) HashAggregate(keys=[i_product_name#517], functions=[])
[info]       +- *(2) Project [i_product_name#517]
[info]          +- *(2) BroadcastHashJoin [i_manufact#510], [i_manufact#510#10207], Inner, BuildRight
[info]             :- *(2) Project [i_manufact#510, i_product_name#517]
[info]             :  +- *(2) Filter (((isnotnull(i_manufact_id#509) AND (i_manufact_id#509 >= 738)) AND (i_manufact_id#509 <= 778)) AND isnotnull(i_manufact#510))
[info]             :     +- *(2) ColumnarToRow
[info]             :        +- BatchScan[i_manufact_id#509, i_manufact#510, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_manufact_id:int,i_manufact:string,i_product_name:string>
[info]             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true])), [id=#27852]
[info]                +- *(1) Project [i_manufact#510#10207]
[info]                   +- *(1) Filter (if (isnull(alwaysTrue#10213)) 0 else item_cnt#10203L > 0)
[info]                      +- *(1) HashAggregate(keys=[i_manufact#510], functions=[count(1)])
[info]                         +- *(1) HashAggregate(keys=[i_manufact#510], functions=[partial_count(1)])
[info]                            +- *(1) Project [i_manufact#510]
[info]                               +- *(1) Filter (((((i_category#508 = Women) AND (((((i_color#513 = powder) OR (i_color#513 = khaki)) AND ((i_units#514 = Ounce) OR (i_units#514 = Oz))) AND ((i_size#511 = medium) OR (i_size#511 = extra large))) OR ((((i_color#513 = brown) OR (i_color#513 = honeydew)) AND ((i_units#514 = Bunch) OR (i_units#514 = Ton))) AND ((i_size#511 = N/A) OR (i_size#511 = small))))) OR ((i_category#508 = Men) AND (((((i_color#513 = floral) OR (i_color#513 = deep)) AND ((i_units#514 = N/A) OR (i_units#514 = Dozen))) AND ((i_size#511 = petite) OR (i_size#511 = large))) OR ((((i_color#513 = light) OR (i_color#513 = cornflower)) AND ((i_units#514 = Box) OR (i_units#514 = Pound))) AND ((i_size#511 = medium) OR (i_size#511 = extra large)))))) OR (((i_category#508 = Women) AND (((((i_color#513 = midnight) OR (i_color#513 = snow)) AND ((i_units#514 = Pallet) OR (i_units#514 = Gross))) AND ((i_size#511 = medium) OR (i_size#511 = extra large))) OR ((((i_color#513 = cyan) OR (i_color#513 = papaya)) AND ((i_units#514 = Cup) OR (i_units#514 = Dram))) AND ((i_size#511 = N/A) OR (i_size#511 = small))))) OR ((i_category#508 = Men) AND (((((i_color#513 = orange) OR (i_color#513 = frosted)) AND ((i_units#514 = Each) OR (i_units#514 = Tbl))) AND ((i_size#511 = petite) OR (i_size#511 = large))) OR ((((i_color#513 = forest) OR (i_color#513 = ghost)) AND ((i_units#514 = Lb) OR (i_units#514 = Bundle))) AND ((i_size#511 = medium) OR (i_size#511 = extra large))))))) AND isnotnull(i_manufact#510))
[info]                                  +- *(1) ColumnarToRow
[info]                                     +- BatchScan[i_category#508, i_manufact#510, i_size#511, i_color#513, i_units#514] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_category:string,i_manufact:string,i_size:string,i_color:string,i_units:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 147 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q41                                                 148            148           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q42
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[sum(ss_ext_sales_price)#10231 DESC NULLS LAST,d_year#337 ASC NULLS FIRST,i_category_id#507 ASC NULLS FIRST,i_category#508 ASC NULLS FIRST], output=[d_year#337,i_category_id#507,i_category#508,sum(ss_ext_sales_price)#10231])
[info] +- *(4) HashAggregate(keys=[d_year#337, i_category_id#507, i_category#508], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]    +- Exchange hashpartitioning(d_year#337, i_category_id#507, i_category#508, 4), true, [id=#27964]
[info]       +- *(3) HashAggregate(keys=[d_year#337, i_category_id#507, i_category#508], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          +- *(3) Project [d_year#337, ss_ext_sales_price#1178, i_category_id#507, i_category#508]
[info]             +- *(3) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :- *(3) Project [d_year#337, ss_item_sk#1165, ss_ext_sales_price#1178]
[info]                :  +- *(3) BroadcastHashJoin [d_date_sk#331], [ss_sold_date_sk#1186], Inner, BuildLeft
[info]                :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27945]
[info]                :     :  +- *(1) Project [d_date_sk#331, d_year#337]
[info]                :     :     +- *(1) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 11)) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                :     :        +- *(1) ColumnarToRow
[info]                :     :           +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     +- *(3) Project [ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                :        +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165))
[info]                :           +- *(3) ColumnarToRow
[info]                :              +- BatchScan[ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#27958]
[info]                   +- *(2) Project [i_item_sk#496, i_category_id#507, i_category#508]
[info]                      +- *(2) Filter ((isnotnull(i_manager_id#516) AND (i_manager_id#516 = 1)) AND isnotnull(i_item_sk#496))
[info]                         +- *(2) ColumnarToRow
[info]                            +- BatchScan[i_item_sk#496, i_category_id#507, i_category#508, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_category_id:int,i_category:string,i_manager_id:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 108 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q42                                                 108            108           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q43
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[s_store_name#675 ASC NULLS FIRST,s_store_id#671 ASC NULLS FIRST,sun_sales#10286 ASC NULLS FIRST,mon_sales#10287 ASC NULLS FIRST,tue_sales#10288 ASC NULLS FIRST,wed_sales#10289 ASC NULLS FIRST,thu_sales#10290 ASC NULLS FIRST,fri_sales#10291 ASC NULLS FIRST,sat_sales#10292 ASC NULLS FIRST], output=[s_store_name#675,s_store_id#671,sun_sales#10286,mon_sales#10287,tue_sales#10288,wed_sales#10289,thu_sales#10290,fri_sales#10291,sat_sales#10292])
[info] +- *(4) HashAggregate(keys=[s_store_name#675, s_store_id#671], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN ss_sales_price#1176 ELSE null END))])
[info]    +- Exchange hashpartitioning(s_store_name#675, s_store_id#671, 4), true, [id=#28073]
[info]       +- *(3) HashAggregate(keys=[s_store_name#675, s_store_id#671], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN ss_sales_price#1176 ELSE null END))])
[info]          +- *(3) Project [d_day_name#345, ss_sales_price#1176, s_store_id#671, s_store_name#675]
[info]             +- *(3) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :- *(3) Project [d_day_name#345, ss_store_sk#1170, ss_sales_price#1176]
[info]                :  +- *(3) BroadcastHashJoin [d_date_sk#331], [ss_sold_date_sk#1186], Inner, BuildLeft
[info]                :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28054]
[info]                :     :  +- *(1) Project [d_date_sk#331, d_day_name#345]
[info]                :     :     +- *(1) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                :     :        +- *(1) ColumnarToRow
[info]                :     :           +- BatchScan[d_date_sk#331, d_year#337, d_day_name#345] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_day_name:string>
[info]                :     +- *(3) Project [ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                :        +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]                :           +- *(3) ColumnarToRow
[info]                :              +- BatchScan[ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28067]
[info]                   +- *(2) Project [s_store_sk#670, s_store_id#671, s_store_name#675]
[info]                      +- *(2) Filter ((isnotnull(s_gmt_offset#697) AND (s_gmt_offset#697 = -5.00)) AND isnotnull(s_store_sk#670))
[info]                         +- *(2) ColumnarToRow
[info]                            +- BatchScan[s_store_sk#670, s_store_id#671, s_store_name#675, s_gmt_offset#697] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string,s_gmt_offset:decimal(5,2)>
[info] 
[info] 
[info]   Stopped after 1 iterations, 129 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q43                                                 129            129           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q44
[info] 09:32:31.589 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 09:32:31.594 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[rnk#10422 ASC NULLS FIRST], output=[rnk#10422,best_performing#10428,worst_performing#10429])
[info] +- *(11) Project [rnk#10422, i_product_name#517 AS best_performing#10428, i_product_name#10473 AS worst_performing#10429]
[info]    +- *(11) BroadcastHashJoin [item_sk#10423], [i_item_sk#10452], Inner, BuildRight
[info]       :- *(11) Project [rnk#10422, item_sk#10423, i_product_name#517]
[info]       :  +- *(11) BroadcastHashJoin [item_sk#10418], [i_item_sk#496], Inner, BuildRight
[info]       :     :- *(11) Project [item_sk#10418, rnk#10422, item_sk#10423]
[info]       :     :  +- *(11) SortMergeJoin [rnk#10422], [rnk#10427], Inner
[info]       :     :     :- *(4) Sort [rnk#10422 ASC NULLS FIRST], false, 0
[info]       :     :     :  +- *(4) Project [item_sk#10418, rnk#10422]
[info]       :     :     :     +- *(4) Filter ((isnotnull(rnk#10422) AND (rnk#10422 < 11)) AND isnotnull(item_sk#10418))
[info]       :     :     :        +- Window [rank(rank_col#10419) windowspecdefinition(rank_col#10419 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rnk#10422], [rank_col#10419 ASC NULLS FIRST]
[info]       :     :     :           +- *(3) Sort [rank_col#10419 ASC NULLS FIRST], false, 0
[info]       :     :     :              +- Exchange SinglePartition, true, [id=#28363]
[info]       :     :     :                 +- *(2) Project [item_sk#10418, rank_col#10419]
[info]       :     :     :                    +- *(2) Filter (isnotnull(avg(ss_net_profit#1185)#10440) AND (cast(avg(ss_net_profit#1185)#10440 as decimal(13,7)) > CheckOverflow((0.900000 * promote_precision(Subquery scalar-subquery#10421, [id=#28222])), DecimalType(13,7), true)))
[info]       :     :     :                       :  +- Subquery scalar-subquery#10421, [id=#28222]
[info]       :     :     :                       :     +- *(2) HashAggregate(keys=[ss_store_sk#1170], functions=[avg(UnscaledValue(ss_net_profit#1185))])
[info]       :     :     :                       :        +- Exchange hashpartitioning(ss_store_sk#1170, 4), true, [id=#28218]
[info]       :     :     :                       :           +- *(1) HashAggregate(keys=[ss_store_sk#1170], functions=[partial_avg(UnscaledValue(ss_net_profit#1185))])
[info]       :     :     :                       :              +- *(1) Project [ss_store_sk#1170, ss_net_profit#1185]
[info]       :     :     :                       :                 +- *(1) Filter ((isnotnull(ss_store_sk#1170) AND (ss_store_sk#1170 = 4)) AND isnull(ss_addr_sk#1169))
[info]       :     :     :                       :                    +- *(1) ColumnarToRow
[info]       :     :     :                       :                       +- BatchScan[ss_addr_sk#1169, ss_store_sk#1170, ss_net_profit#1185] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_addr_sk:int,ss_store_sk:int,ss_net_profit:decimal(7,2)>
[info]       :     :     :                       +- *(2) HashAggregate(keys=[ss_item_sk#1165], functions=[avg(UnscaledValue(ss_net_profit#1185))])
[info]       :     :     :                          +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#28357]
[info]       :     :     :                             +- *(1) HashAggregate(keys=[ss_item_sk#1165], functions=[partial_avg(UnscaledValue(ss_net_profit#1185))])
[info]       :     :     :                                +- *(1) Project [ss_item_sk#1165, ss_net_profit#1185]
[info]       :     :     :                                   +- *(1) Filter (isnotnull(ss_store_sk#1170) AND (ss_store_sk#1170 = 4))
[info]       :     :     :                                      +- *(1) ColumnarToRow
[info]       :     :     :                                         +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_net_profit#1185] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_net_profit:decimal(7,2)>
[info]       :     :     +- *(8) Sort [rnk#10427 ASC NULLS FIRST], false, 0
[info]       :     :        +- *(8) Project [item_sk#10423, rnk#10427]
[info]       :     :           +- *(8) Filter ((isnotnull(rnk#10427) AND (rnk#10427 < 11)) AND isnotnull(item_sk#10423))
[info]       :     :              +- Window [rank(rank_col#10424) windowspecdefinition(rank_col#10424 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rnk#10427], [rank_col#10424 DESC NULLS LAST]
[info]       :     :                 +- *(7) Sort [rank_col#10424 DESC NULLS LAST], false, 0
[info]       :     :                    +- Exchange SinglePartition, true, [id=#28538]
[info]       :     :                       +- *(6) Project [item_sk#10423, rank_col#10424]
[info]       :     :                          +- *(6) Filter (isnotnull(avg(ss_net_profit#1185)#10443) AND (cast(avg(ss_net_profit#1185)#10443 as decimal(13,7)) > CheckOverflow((0.900000 * promote_precision(ReusedSubquery Subquery scalar-subquery#10421, [id=#28222])), DecimalType(13,7), true)))
[info]       :     :                             :  +- ReusedSubquery Subquery scalar-subquery#10421, [id=#28222]
[info]       :     :                             +- *(6) HashAggregate(keys=[ss_item_sk#1165], functions=[avg(UnscaledValue(ss_net_profit#1185))])
[info]       :     :                                +- ReusedExchange [ss_item_sk#1165, sum#10515, count#10516L], Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#28357]
[info]       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28404]
[info]       :        +- *(9) Project [i_item_sk#496, i_product_name#517]
[info]       :           +- *(9) Filter isnotnull(i_item_sk#496)
[info]       :              +- *(9) ColumnarToRow
[info]       :                 +- BatchScan[i_item_sk#496, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_product_name:string>
[info]       +- ReusedExchange [i_item_sk#10452, i_product_name#10473], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28404]
[info] 
[info] 
[info]   Stopped after 1 iterations, 334 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q44                                                 335            335           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q45
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ca_zip#242 ASC NULLS FIRST,ca_city#239 ASC NULLS FIRST], output=[ca_zip#242,ca_city#239,sum(ws_sales_price)#10555])
[info] +- *(7) HashAggregate(keys=[ca_zip#242, ca_city#239], functions=[sum(UnscaledValue(ws_sales_price#1041))])
[info]    +- Exchange hashpartitioning(ca_zip#242, ca_city#239, 4), true, [id=#28773]
[info]       +- *(6) HashAggregate(keys=[ca_zip#242, ca_city#239], functions=[partial_sum(UnscaledValue(ws_sales_price#1041))])
[info]          +- *(6) Project [ws_sales_price#1041, ca_city#239, ca_zip#242]
[info]             +- *(6) Filter (substring(ca_zip#242, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#10577)
[info]                +- *(6) BroadcastHashJoin [i_item_id#497], [i_item_id#497#10578], ExistenceJoin(exists#10577), BuildRight
[info]                   :- *(6) Project [ws_sales_price#1041, ca_city#239, ca_zip#242, i_item_id#497]
[info]                   :  +- *(6) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                   :     :- *(6) Project [ws_item_sk#1023, ws_sales_price#1041, ca_city#239, ca_zip#242]
[info]                   :     :  +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                   :     :     :- *(6) Project [ws_item_sk#1023, ws_sales_price#1041, ws_sold_date_sk#1054, ca_city#239, ca_zip#242]
[info]                   :     :     :  +- *(6) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                   :     :     :     :- *(6) Project [ws_item_sk#1023, ws_sales_price#1041, ws_sold_date_sk#1054, c_current_addr_sk#160]
[info]                   :     :     :     :  +- *(6) BroadcastHashJoin [ws_bill_customer_sk#1024], [c_customer_sk#156], Inner, BuildRight
[info]                   :     :     :     :     :- *(6) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_sales_price#1041, ws_sold_date_sk#1054]
[info]                   :     :     :     :     :  +- *(6) Filter ((isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054)) AND isnotnull(ws_item_sk#1023))
[info]                   :     :     :     :     :     +- *(6) ColumnarToRow
[info]                   :     :     :     :     :        +- BatchScan[ws_item_sk#1023, ws_bill_customer_sk#1024, ws_sales_price#1041, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_sales_price:decimal(7,2)>
[info]                   :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28730]
[info]                   :     :     :     :        +- *(1) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]                   :     :     :     :           +- *(1) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]                   :     :     :     :              +- *(1) ColumnarToRow
[info]                   :     :     :     :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
[info]                   :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28739]
[info]                   :     :     :        +- *(2) Project [ca_address_sk#233, ca_city#239, ca_zip#242]
[info]                   :     :     :           +- *(2) Filter isnotnull(ca_address_sk#233)
[info]                   :     :     :              +- *(2) ColumnarToRow
[info]                   :     :     :                 +- BatchScan[ca_address_sk#233, ca_city#239, ca_zip#242] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_city:string,ca_zip:string>
[info]                   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28748]
[info]                   :     :        +- *(3) Project [d_date_sk#331]
[info]                   :     :           +- *(3) Filter ((((isnotnull(d_qoy#341) AND isnotnull(d_year#337)) AND (d_qoy#341 = 2)) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]                   :     :              +- *(3) ColumnarToRow
[info]                   :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28757]
[info]                   :        +- *(4) Project [i_item_sk#496, i_item_id#497]
[info]                   :           +- *(4) Filter isnotnull(i_item_sk#496)
[info]                   :              +- *(4) ColumnarToRow
[info]                   :                 +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true])), [id=#28766]
[info]                      +- *(5) Project [i_item_id#497 AS i_item_id#497#10578]
[info]                         +- *(5) Filter i_item_sk#496 IN (2,3,5,7,11,13,17,19,23,29)
[info]                            +- *(5) ColumnarToRow
[info]                               +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 219 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q45                                                 219            219           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q46
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_last_name#165 ASC NULLS FIRST,c_first_name#164 ASC NULLS FIRST,ca_city#239 ASC NULLS FIRST,bought_city#10594 ASC NULLS FIRST,ss_ticket_number#1172L ASC NULLS FIRST], output=[c_last_name#165,c_first_name#164,ca_city#239,bought_city#10594,ss_ticket_number#1172L,amt#10595,profit#10596])
[info] +- *(8) Project [c_last_name#165, c_first_name#164, ca_city#239, bought_city#10594, ss_ticket_number#1172L, amt#10595, profit#10596]
[info]    +- *(8) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight, NOT (ca_city#239 = bought_city#10594)
[info]       :- *(8) Project [ss_ticket_number#1172L, bought_city#10594, amt#10595, profit#10596, c_current_addr_sk#160, c_first_name#164, c_last_name#165]
[info]       :  +- *(8) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]       :     :- *(8) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, ca_city#239], functions=[sum(UnscaledValue(ss_coupon_amt#1182)), sum(UnscaledValue(ss_net_profit#1185))])
[info]       :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, ca_city#239, 4), true, [id=#29004]
[info]       :     :     +- *(5) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, ca_city#239], functions=[partial_sum(UnscaledValue(ss_coupon_amt#1182)), partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]       :     :        +- *(5) Project [ss_customer_sk#1166, ss_addr_sk#1169, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185, ca_city#239]
[info]       :     :           +- *(5) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]       :     :              :- *(5) Project [ss_customer_sk#1166, ss_addr_sk#1169, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185]
[info]       :     :              :  +- *(5) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]       :     :              :     :- *(5) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185]
[info]       :     :              :     :  +- *(5) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]       :     :              :     :     :- *(5) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185]
[info]       :     :              :     :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :              :     :     :     :- *(5) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]       :     :              :     :     :     :  +- *(5) Filter ((((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_addr_sk#1169)) AND isnotnull(ss_customer_sk#1166))
[info]       :     :              :     :     :     :     +- *(5) ColumnarToRow
[info]       :     :              :     :     :     :        +- BatchScan[ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_ticket_number:bigint,...
[info]       :     :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28971]
[info]       :     :              :     :     :        +- *(1) Project [d_date_sk#331]
[info]       :     :              :     :     :           +- *(1) Filter ((d_dow#338 IN (6,0) AND d_year#337 IN (1999,2000,2001)) AND isnotnull(d_date_sk#331))
[info]       :     :              :     :     :              +- *(1) ColumnarToRow
[info]       :     :              :     :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_dow#338] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_dow:int>
[info]       :     :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28980]
[info]       :     :              :     :        +- *(2) Project [s_store_sk#670]
[info]       :     :              :     :           +- *(2) Filter (s_city#692 IN (Fairview,Midway) AND isnotnull(s_store_sk#670))
[info]       :     :              :     :              +- *(2) ColumnarToRow
[info]       :     :              :     :                 +- BatchScan[s_store_sk#670, s_city#692] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_city:string>
[info]       :     :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28989]
[info]       :     :              :        +- *(3) Project [hd_demo_sk#448]
[info]       :     :              :           +- *(3) Filter (((hd_dep_count#451 = 4) OR (hd_vehicle_count#452 = 3)) AND isnotnull(hd_demo_sk#448))
[info]       :     :              :              +- *(3) ColumnarToRow
[info]       :     :              :                 +- BatchScan[hd_demo_sk#448, hd_dep_count#451, hd_vehicle_count#452] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
[info]       :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28998]
[info]       :     :                 +- *(4) Project [ca_address_sk#233, ca_city#239]
[info]       :     :                    +- *(4) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_city#239))
[info]       :     :                       +- *(4) ColumnarToRow
[info]       :     :                          +- BatchScan[ca_address_sk#233, ca_city#239] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_city:string>
[info]       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29012]
[info]       :        +- *(6) Project [c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165]
[info]       :           +- *(6) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]       :              +- *(6) ColumnarToRow
[info]       :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string>
[info]       +- ReusedExchange [ca_address_sk#233, ca_city#239], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#28998]
[info] 
[info] 
[info]   Stopped after 1 iterations, 211 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q46                                                 211            211           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q47
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#11702 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#11703 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,s_store_name#675 ASC NULLS FIRST], output=[i_category#508,i_brand#504,s_store_name#675,s_company_name#687,d_year#337,d_moy#339,avg_monthly_sales#11703,sum_sales#11702,psum#11705,nsum#11706])
[info] +- *(27) Project [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, avg_monthly_sales#11703, sum_sales#11702, sum_sales#11926 AS psum#11705, sum_sales#12401 AS nsum#11706]
[info]    +- *(27) SortMergeJoin [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, rn#11704], [i_category#12506, i_brand#12502, s_store_name#12663, s_company_name#12675, (rn#12307 - 1)], Inner
[info]       :- *(18) Project [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, sum_sales#11702, avg_monthly_sales#11703, rn#11704, sum_sales#11926]
[info]       :  +- *(18) SortMergeJoin [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, rn#11704], [i_category#12031, i_brand#12027, s_store_name#12188, s_company_name#12200, (rn#11832 + 1)], Inner
[info]       :     :- *(9) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, s_store_name#675 ASC NULLS FIRST, s_company_name#687 ASC NULLS FIRST, rn#11704 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, rn#11704, 4), true, [id=#29530]
[info]       :     :     +- *(8) Project [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, sum_sales#11702, avg_monthly_sales#11703, rn#11704]
[info]       :     :        +- *(8) Filter (((isnotnull(avg_monthly_sales#11703) AND (avg_monthly_sales#11703 > 0.000000)) AND (CASE WHEN (avg_monthly_sales#11703 > 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#11702 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#11703 as decimal(22,6)))), DecimalType(22,6), true))) / promote_precision(cast(avg_monthly_sales#11703 as decimal(22,6)))), DecimalType(38,16), true) ELSE null END > 0.1000000000000000)) AND isnotnull(rn#11704))
[info]       :     :           +- Window [avg(_w0#11734) windowspecdefinition(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#11703], [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337]
[info]       :     :              +- *(7) Filter (isnotnull(d_year#337) AND (d_year#337 = 1999))
[info]       :     :                 +- Window [rank(d_year#337, d_moy#339) windowspecdefinition(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#11704], [i_category#508, i_brand#504, s_store_name#675, s_company_name#687], [d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST]
[info]       :     :                    +- *(6) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, s_store_name#675 ASC NULLS FIRST, s_company_name#687 ASC NULLS FIRST, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST], false, 0
[info]       :     :                       +- Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, 4), true, [id=#29517]
[info]       :     :                          +- *(5) HashAggregate(keys=[i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :                             +- Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, 4), true, [id=#29513]
[info]       :     :                                +- *(4) HashAggregate(keys=[i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :                                   +- *(4) Project [i_brand#504, i_category#508, ss_sales_price#1176, d_year#337, d_moy#339, s_store_name#675, s_company_name#687]
[info]       :     :                                      +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]       :     :                                         :- *(4) Project [i_brand#504, i_category#508, ss_store_sk#1170, ss_sales_price#1176, d_year#337, d_moy#339]
[info]       :     :                                         :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :                                         :     :- *(4) Project [i_brand#504, i_category#508, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                                         :     :  +- *(4) BroadcastHashJoin [i_item_sk#496], [ss_item_sk#1165], Inner, BuildLeft
[info]       :     :                                         :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29485]
[info]       :     :                                         :     :     :  +- *(1) Project [i_item_sk#496, i_brand#504, i_category#508]
[info]       :     :                                         :     :     :     +- *(1) Filter ((isnotnull(i_item_sk#496) AND isnotnull(i_brand#504)) AND isnotnull(i_category#508))
[info]       :     :                                         :     :     :        +- *(1) ColumnarToRow
[info]       :     :                                         :     :     :           +- BatchScan[i_item_sk#496, i_brand#504, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
[info]       :     :                                         :     :     +- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                                         :     :        +- *(4) Filter ((isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]       :     :                                         :     :           +- *(4) ColumnarToRow
[info]       :     :                                         :     :              +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]       :     :                                         :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29498]
[info]       :     :                                         :        +- *(2) Project [d_date_sk#331, d_year#337, d_moy#339]
[info]       :     :                                         :           +- *(2) Filter ((((d_year#337 = 1999) OR ((d_year#337 = 1998) AND (d_moy#339 = 12))) OR ((d_year#337 = 2000) AND (d_moy#339 = 1))) AND isnotnull(d_date_sk#331))
[info]       :     :                                         :              +- *(2) ColumnarToRow
[info]       :     :                                         :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]       :     :                                         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#29507]
[info]       :     :                                            +- *(3) Project [s_store_sk#670, s_store_name#675, s_company_name#687]
[info]       :     :                                               +- *(3) Filter ((isnotnull(s_store_sk#670) AND isnotnull(s_store_name#675)) AND isnotnull(s_company_name#687))
[info]       :     :                                                  +- *(3) ColumnarToRow
[info]       :     :                                                     +- BatchScan[s_store_sk#670, s_store_name#675, s_company_name#687] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
[info]       :     +- *(17) Sort [i_category#12031 ASC NULLS FIRST, i_brand#12027 ASC NULLS FIRST, s_store_name#12188 ASC NULLS FIRST, s_company_name#12200 ASC NULLS FIRST, (rn#11832 + 1) ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(i_category#12031, i_brand#12027, s_store_name#12188, s_company_name#12200, (rn#11832 + 1), 4), true, [id=#29773]
[info]       :           +- *(16) Project [i_category#12031, i_brand#12027, s_store_name#12188, s_company_name#12200, sum_sales#11926, rn#11832]
[info]       :              +- *(16) Filter isnotnull(rn#11832)
[info]       :                 +- Window [rank(d_year#12116, d_moy#12118) windowspecdefinition(i_category#12031, i_brand#12027, s_store_name#12188, s_company_name#12200, d_year#12116 ASC NULLS FIRST, d_moy#12118 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#11832], [i_category#12031, i_brand#12027, s_store_name#12188, s_company_name#12200], [d_year#12116 ASC NULLS FIRST, d_moy#12118 ASC NULLS FIRST]
[info]       :                    +- *(15) Sort [i_category#12031 ASC NULLS FIRST, i_brand#12027 ASC NULLS FIRST, s_store_name#12188 ASC NULLS FIRST, s_company_name#12200 ASC NULLS FIRST, d_year#12116 ASC NULLS FIRST, d_moy#12118 ASC NULLS FIRST], false, 0
[info]       :                       +- Exchange hashpartitioning(i_category#12031, i_brand#12027, s_store_name#12188, s_company_name#12200, 4), true, [id=#29764]
[info]       :                          +- *(14) HashAggregate(keys=[i_category#12031, i_brand#12027, s_store_name#12188, s_company_name#12200, d_year#12116, d_moy#12118], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]       :                             +- ReusedExchange [i_category#12031, i_brand#12027, s_store_name#12188, s_company_name#12200, d_year#12116, d_moy#12118, sum#12811L], Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, 4), true, [id=#29513]
[info]       +- *(26) Sort [i_category#12506 ASC NULLS FIRST, i_brand#12502 ASC NULLS FIRST, s_store_name#12663 ASC NULLS FIRST, s_company_name#12675 ASC NULLS FIRST, (rn#12307 - 1) ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_category#12506, i_brand#12502, s_store_name#12663, s_company_name#12675, (rn#12307 - 1), 4), true, [id=#29873]
[info]             +- *(25) Project [i_category#12506, i_brand#12502, s_store_name#12663, s_company_name#12675, sum_sales#12401, rn#12307]
[info]                +- *(25) Filter isnotnull(rn#12307)
[info]                   +- Window [rank(d_year#12591, d_moy#12593) windowspecdefinition(i_category#12506, i_brand#12502, s_store_name#12663, s_company_name#12675, d_year#12591 ASC NULLS FIRST, d_moy#12593 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#12307], [i_category#12506, i_brand#12502, s_store_name#12663, s_company_name#12675], [d_year#12591 ASC NULLS FIRST, d_moy#12593 ASC NULLS FIRST]
[info]                      +- *(24) Sort [i_category#12506 ASC NULLS FIRST, i_brand#12502 ASC NULLS FIRST, s_store_name#12663 ASC NULLS FIRST, s_company_name#12675 ASC NULLS FIRST, d_year#12591 ASC NULLS FIRST, d_moy#12593 ASC NULLS FIRST], false, 0
[info]                         +- ReusedExchange [i_category#12506, i_brand#12502, s_store_name#12663, s_company_name#12675, d_year#12591, d_moy#12593, sum_sales#12401], Exchange hashpartitioning(i_category#12031, i_brand#12027, s_store_name#12188, s_company_name#12200, 4), true, [id=#29764]
[info] 
[info] 
[info]   Stopped after 1 iterations, 725 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q47                                                 725            725           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q48
[info] == Physical Plan ==
[info] *(6) HashAggregate(keys=[], functions=[sum(cast(ss_quantity#1173 as bigint))])
[info] +- Exchange SinglePartition, true, [id=#30079]
[info]    +- *(5) HashAggregate(keys=[], functions=[partial_sum(cast(ss_quantity#1173 as bigint))])
[info]       +- *(5) Project [ss_quantity#1173]
[info]          +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :- *(5) Project [ss_quantity#1173, ss_sold_date_sk#1186]
[info]             :  +- *(5) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight, ((((ca_state#241 IN (CO,OH,TX) AND (ss_net_profit#1185 >= 0.00)) AND (ss_net_profit#1185 <= 2000.00)) OR ((ca_state#241 IN (OR,MN,KY) AND (ss_net_profit#1185 >= 150.00)) AND (ss_net_profit#1185 <= 3000.00))) OR ((ca_state#241 IN (VA,CA,MS) AND (ss_net_profit#1185 >= 50.00)) AND (ss_net_profit#1185 <= 25000.00)))
[info]             :     :- *(5) Project [ss_addr_sk#1169, ss_quantity#1173, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]             :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight, ((((((cd_marital_status#292 = M) AND (cd_education_status#293 = 4 yr Degree)) AND (ss_sales_price#1176 >= 100.00)) AND (ss_sales_price#1176 <= 150.00)) OR ((((cd_marital_status#292 = D) AND (cd_education_status#293 = 2 yr Degree)) AND (ss_sales_price#1176 >= 50.00)) AND (ss_sales_price#1176 <= 100.00))) OR ((((cd_marital_status#292 = S) AND (cd_education_status#293 = College)) AND (ss_sales_price#1176 >= 150.00)) AND (ss_sales_price#1176 <= 200.00)))
[info]             :     :     :- *(5) Project [ss_cdemo_sk#1167, ss_addr_sk#1169, ss_quantity#1173, ss_sales_price#1176, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]             :     :     :  +- *(5) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]             :     :     :     :- *(5) Project [ss_cdemo_sk#1167, ss_addr_sk#1169, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]             :     :     :     :  +- *(5) Filter (((isnotnull(ss_store_sk#1170) AND isnotnull(ss_cdemo_sk#1167)) AND isnotnull(ss_addr_sk#1169)) AND isnotnull(ss_sold_date_sk#1186))
[info]             :     :     :     :     +- *(5) ColumnarToRow
[info]             :     :     :     :        +- BatchScan[ss_cdemo_sk#1167, ss_addr_sk#1169, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_cdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)...
[info]             :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#30046]
[info]             :     :     :        +- *(1) Project [s_store_sk#670]
[info]             :     :     :           +- *(1) Filter isnotnull(s_store_sk#670)
[info]             :     :     :              +- *(1) ColumnarToRow
[info]             :     :     :                 +- BatchScan[s_store_sk#670] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int>
[info]             :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#30055]
[info]             :     :        +- *(2) Project [cd_demo_sk#290, cd_marital_status#292, cd_education_status#293]
[info]             :     :           +- *(2) Filter isnotnull(cd_demo_sk#290)
[info]             :     :              +- *(2) ColumnarToRow
[info]             :     :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
[info]             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#30064]
[info]             :        +- *(3) Project [ca_address_sk#233, ca_state#241]
[info]             :           +- *(3) Filter ((isnotnull(ca_country#243) AND (ca_country#243 = United States)) AND isnotnull(ca_address_sk#233))
[info]             :              +- *(3) ColumnarToRow
[info]             :                 +- BatchScan[ca_address_sk#233, ca_state#241, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
[info]             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#30073]
[info]                +- *(4) Project [d_date_sk#331]
[info]                   +- *(4) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]                      +- *(4) ColumnarToRow
[info]                         +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 193 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q48                                                 194            194           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q49
[info] 09:32:34.492 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 09:32:34.492 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 09:32:34.504 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 09:32:34.504 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 09:32:34.515 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 09:32:34.515 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#12969 ASC NULLS FIRST,return_rank#12967 ASC NULLS FIRST,currency_rank#12968 ASC NULLS FIRST], output=[channel#12969,item#12964,return_ratio#12965,return_rank#12967,currency_rank#12968])
[info] +- *(32) HashAggregate(keys=[channel#12969, item#12964, return_ratio#12965, return_rank#12967, currency_rank#12968], functions=[])
[info]    +- Exchange hashpartitioning(channel#12969, item#12964, return_ratio#12965, return_rank#12967, currency_rank#12968, 4), true, [id=#30849]
[info]       +- *(31) HashAggregate(keys=[channel#12969, item#12964, return_ratio#12965, return_rank#12967, currency_rank#12968], functions=[])
[info]          +- Union
[info]             :- *(10) Project [web AS channel#12969, item#12964, return_ratio#12965, return_rank#12967, currency_rank#12968]
[info]             :  +- *(10) Filter ((return_rank#12967 <= 10) OR (currency_rank#12968 <= 10))
[info]             :     +- Window [rank(return_ratio#12965) windowspecdefinition(return_ratio#12965 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#12967], [return_ratio#12965 ASC NULLS FIRST]
[info]             :        +- *(9) Sort [return_ratio#12965 ASC NULLS FIRST], false, 0
[info]             :           +- *(9) Project [item#12964, return_ratio#12965, currency_rank#12968]
[info]             :              +- Window [rank(currency_ratio#12966) windowspecdefinition(currency_ratio#12966 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#12968], [currency_ratio#12966 ASC NULLS FIRST]
[info]             :                 +- *(8) Sort [currency_ratio#12966 ASC NULLS FIRST], false, 0
[info]             :                    +- Exchange SinglePartition, true, [id=#30507]
[info]             :                       +- *(7) HashAggregate(keys=[ws_item_sk#1023], functions=[sum(cast(coalesce(wr_return_quantity#1276, 0) as bigint)), sum(cast(coalesce(ws_quantity#1038, 0) as bigint)), sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), sum(coalesce(cast(ws_net_paid#1049 as decimal(12,2)), 0.00))])
[info]             :                          +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#30503]
[info]             :                             +- *(6) HashAggregate(keys=[ws_item_sk#1023], functions=[partial_sum(cast(coalesce(wr_return_quantity#1276, 0) as bigint)), partial_sum(cast(coalesce(ws_quantity#1038, 0) as bigint)), partial_sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(ws_net_paid#1049 as decimal(12,2)), 0.00))])
[info]             :                                +- *(6) Project [ws_item_sk#1023, ws_quantity#1038, ws_net_paid#1049, wr_return_quantity#1276, wr_return_amt#1277]
[info]             :                                   +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :                                      :- *(6) Project [ws_item_sk#1023, ws_quantity#1038, ws_net_paid#1049, ws_sold_date_sk#1054, wr_return_quantity#1276, wr_return_amt#1277]
[info]             :                                      :  +- *(6) SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], Inner
[info]             :                                      :     :- *(2) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]             :                                      :     :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#30475]
[info]             :                                      :     :     +- *(1) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]             :                                      :     :        +- *(1) Filter ((((((((isnotnull(ws_quantity#1038) AND isnotnull(ws_net_profit#1053)) AND isnotnull(ws_net_paid#1049)) AND (ws_net_profit#1053 > 1.00)) AND (ws_net_paid#1049 > 0.00)) AND (ws_quantity#1038 > 0)) AND isnotnull(ws_item_sk#1023)) AND isnotnull(ws_order_number#1037L)) AND isnotnull(ws_sold_date_sk#1054))
[info]             :                                      :     :           +- *(1) ColumnarToRow
[info]             :                                      :     :              +- BatchScan[ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_net_paid#1049, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_net_paid:decimal(7,2),ws_net_prof...
[info]             :                                      :     +- *(4) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]             :                                      :        +- Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#30485]
[info]             :                                      :           +- *(3) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277]
[info]             :                                      :              +- *(3) Filter (((isnotnull(wr_return_amt#1277) AND (wr_return_amt#1277 > 10000.00)) AND isnotnull(wr_order_number#1275L)) AND isnotnull(wr_item_sk#1264))
[info]             :                                      :                 +- *(3) ColumnarToRow
[info]             :                                      :                    +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
[info]             :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#30497]
[info]             :                                         +- *(5) Project [d_date_sk#331]
[info]             :                                            +- *(5) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2001)) AND (d_moy#339 = 12)) AND isnotnull(d_date_sk#331))
[info]             :                                               +- *(5) ColumnarToRow
[info]             :                                                  +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             :- *(20) Project [catalog AS channel#12975, item#12970, return_ratio#12971, return_rank#12973, currency_rank#12974]
[info]             :  +- *(20) Filter ((return_rank#12973 <= 10) OR (currency_rank#12974 <= 10))
[info]             :     +- Window [rank(return_ratio#12971) windowspecdefinition(return_ratio#12971 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#12973], [return_ratio#12971 ASC NULLS FIRST]
[info]             :        +- *(19) Sort [return_ratio#12971 ASC NULLS FIRST], false, 0
[info]             :           +- *(19) Project [item#12970, return_ratio#12971, currency_rank#12974]
[info]             :              +- Window [rank(currency_ratio#12972) windowspecdefinition(currency_ratio#12972 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#12974], [currency_ratio#12972 ASC NULLS FIRST]
[info]             :                 +- *(18) Sort [currency_ratio#12972 ASC NULLS FIRST], false, 0
[info]             :                    +- Exchange SinglePartition, true, [id=#30658]
[info]             :                       +- *(17) HashAggregate(keys=[cs_item_sk#892], functions=[sum(cast(coalesce(cr_return_quantity#57, 0) as bigint)), sum(cast(coalesce(cs_quantity#895, 0) as bigint)), sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), sum(coalesce(cast(cs_net_paid#906 as decimal(12,2)), 0.00))])
[info]             :                          +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#30654]
[info]             :                             +- *(16) HashAggregate(keys=[cs_item_sk#892], functions=[partial_sum(cast(coalesce(cr_return_quantity#57, 0) as bigint)), partial_sum(cast(coalesce(cs_quantity#895, 0) as bigint)), partial_sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(cs_net_paid#906 as decimal(12,2)), 0.00))])
[info]             :                                +- *(16) Project [cs_item_sk#892, cs_quantity#895, cs_net_paid#906, cr_return_quantity#57, cr_return_amount#58]
[info]             :                                   +- *(16) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :                                      :- *(16) Project [cs_item_sk#892, cs_quantity#895, cs_net_paid#906, cs_sold_date_sk#911, cr_return_quantity#57, cr_return_amount#58]
[info]             :                                      :  +- *(16) SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], Inner
[info]             :                                      :     :- *(12) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]             :                                      :     :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#30526]
[info]             :                                      :     :     +- *(11) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_net_paid#906, cs_sold_date_sk#911]
[info]             :                                      :     :        +- *(11) Filter ((((((((isnotnull(cs_net_paid#906) AND isnotnull(cs_quantity#895)) AND isnotnull(cs_net_profit#910)) AND (cs_net_profit#910 > 1.00)) AND (cs_net_paid#906 > 0.00)) AND (cs_quantity#895 > 0)) AND isnotnull(cs_order_number#894L)) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_sold_date_sk#911))
[info]             :                                      :     :           +- *(11) ColumnarToRow
[info]             :                                      :     :              +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_net_paid#906, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_net_paid:decimal(7,2),cs_net_prof...
[info]             :                                      :     +- *(14) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]             :                                      :        +- Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#30536]
[info]             :                                      :           +- *(13) Project [cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58]
[info]             :                                      :              +- *(13) Filter (((isnotnull(cr_return_amount#58) AND (cr_return_amount#58 > 10000.00)) AND isnotnull(cr_item_sk#42)) AND isnotnull(cr_order_number#56L))
[info]             :                                      :                 +- *(13) ColumnarToRow
[info]             :                                      :                    +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
[info]             :                                      +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#30497]
[info]             +- *(30) Project [store AS channel#12981, item#12976, return_ratio#12977, return_rank#12979, currency_rank#12980]
[info]                +- *(30) Filter ((return_rank#12979 <= 10) OR (currency_rank#12980 <= 10))
[info]                   +- Window [rank(return_ratio#12977) windowspecdefinition(return_ratio#12977 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#12979], [return_ratio#12977 ASC NULLS FIRST]
[info]                      +- *(29) Sort [return_ratio#12977 ASC NULLS FIRST], false, 0
[info]                         +- *(29) Project [item#12976, return_ratio#12977, currency_rank#12980]
[info]                            +- Window [rank(currency_ratio#12978) windowspecdefinition(currency_ratio#12978 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#12980], [currency_ratio#12978 ASC NULLS FIRST]
[info]                               +- *(28) Sort [currency_ratio#12978 ASC NULLS FIRST], false, 0
[info]                                  +- Exchange SinglePartition, true, [id=#30784]
[info]                                     +- *(27) HashAggregate(keys=[ss_item_sk#1165], functions=[sum(cast(coalesce(sr_return_quantity#800, 0) as bigint)), sum(cast(coalesce(ss_quantity#1173, 0) as bigint)), sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), sum(coalesce(cast(ss_net_paid#1183 as decimal(12,2)), 0.00))])
[info]                                        +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#30780]
[info]                                           +- *(26) HashAggregate(keys=[ss_item_sk#1165], functions=[partial_sum(cast(coalesce(sr_return_quantity#800, 0) as bigint)), partial_sum(cast(coalesce(ss_quantity#1173, 0) as bigint)), partial_sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(ss_net_paid#1183 as decimal(12,2)), 0.00))])
[info]                                              +- *(26) Project [ss_item_sk#1165, ss_quantity#1173, ss_net_paid#1183, sr_return_quantity#800, sr_return_amt#801]
[info]                                                 +- *(26) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                                                    :- *(26) Project [ss_item_sk#1165, ss_quantity#1173, ss_net_paid#1183, ss_sold_date_sk#1186, sr_return_quantity#800, sr_return_amt#801]
[info]                                                    :  +- *(26) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]                                                    :     :- *(22) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                                                    :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#30577]
[info]                                                    :     :     +- *(21) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]                                                    :     :        +- *(21) Filter ((((((((isnotnull(ss_net_paid#1183) AND isnotnull(ss_quantity#1173)) AND isnotnull(ss_net_profit#1185)) AND (ss_net_profit#1185 > 1.00)) AND (ss_net_paid#1183 > 0.00)) AND (ss_quantity#1173 > 0)) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_sold_date_sk#1186))
[info]                                                    :     :           +- *(21) ColumnarToRow
[info]                                                    :     :              +- BatchScan[ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_net_paid#1183, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_net_paid:decimal(7,2),ss_net_pro...
[info]                                                    :     +- *(24) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                                                    :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#30587]
[info]                                                    :           +- *(23) Project [sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801]
[info]                                                    :              +- *(23) Filter (((isnotnull(sr_return_amt#801) AND (sr_return_amt#801 > 10000.00)) AND isnotnull(sr_item_sk#792)) AND isnotnull(sr_ticket_number#799L))
[info]                                                    :                 +- *(23) ColumnarToRow
[info]                                                    :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
[info]                                                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#30497]
[info] 
[info] 
[info]   Stopped after 1 iterations, 544 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q49                                                 544            544           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q50
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[s_store_name#675 ASC NULLS FIRST,s_company_id#686 ASC NULLS FIRST,s_street_number#688 ASC NULLS FIRST,s_street_name#689 ASC NULLS FIRST,s_street_type#690 ASC NULLS FIRST,s_suite_number#691 ASC NULLS FIRST,s_city#692 ASC NULLS FIRST,s_county#693 ASC NULLS FIRST,s_state#694 ASC NULLS FIRST,s_zip#695 ASC NULLS FIRST], output=[s_store_name#675,s_company_id#686,s_street_number#688,s_street_name#689,s_street_type#690,s_suite_number#691,s_city#692,s_county#693,s_state#694,s_zip#695,30 days #13221L,31 - 60 days #13222L,61 - 90 days #13223L,91 - 120 days #13224L,>120 days #13225L])
[info] +- *(9) HashAggregate(keys=[s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695], functions=[sum(cast(CASE WHEN ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 30) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 30) AND ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 60)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 60) AND ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 90)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 90) AND ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 120)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 120) THEN 1 ELSE 0 END as bigint))])
[info]    +- Exchange hashpartitioning(s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695, 4), true, [id=#31044]
[info]       +- *(8) HashAggregate(keys=[s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695], functions=[partial_sum(cast(CASE WHEN ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 30) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 30) AND ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 60)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 60) AND ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 90)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 90) AND ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) <= 120)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN ((sr_returned_date_sk#810 - ss_sold_date_sk#1186) > 120) THEN 1 ELSE 0 END as bigint))])
[info]          +- *(8) Project [ss_sold_date_sk#1186, sr_returned_date_sk#810, s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695]
[info]             +- *(8) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#13226], Inner, BuildRight
[info]                :- *(8) Project [ss_sold_date_sk#1186, sr_returned_date_sk#810, s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695]
[info]                :  +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :- *(8) Project [ss_sold_date_sk#1186, sr_returned_date_sk#810, s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695]
[info]                :     :  +- *(8) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :     :     :- *(8) Project [ss_store_sk#1170, ss_sold_date_sk#1186, sr_returned_date_sk#810]
[info]                :     :     :  +- *(8) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165, ss_customer_sk#1166], [sr_ticket_number#799L, sr_item_sk#792, sr_customer_sk#793], Inner
[info]                :     :     :     :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST, ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                :     :     :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, ss_customer_sk#1166, 4), true, [id=#30998]
[info]                :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186]
[info]                :     :     :     :        +- *(1) Filter ((((isnotnull(ss_item_sk#1165) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_sold_date_sk#1186))
[info]                :     :     :     :           +- *(1) ColumnarToRow
[info]                :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint>
[info]                :     :     :     +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST, sr_customer_sk#793 ASC NULLS FIRST], false, 0
[info]                :     :     :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, sr_customer_sk#793, 4), true, [id=#31008]
[info]                :     :     :           +- *(3) Project [sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_returned_date_sk#810]
[info]                :     :     :              +- *(3) Filter (((isnotnull(sr_customer_sk#793) AND isnotnull(sr_ticket_number#799L)) AND isnotnull(sr_item_sk#792)) AND isnotnull(sr_returned_date_sk#810))
[info]                :     :     :                 +- *(3) ColumnarToRow
[info]                :     :     :                    +- BatchScan[sr_item_sk#792, sr_customer_sk#793, sr_ticket_number#799L, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:bigint>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31020]
[info]                :     :        +- *(5) Project [s_store_sk#670, s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695]
[info]                :     :           +- *(5) Filter isnotnull(s_store_sk#670)
[info]                :     :              +- *(5) ColumnarToRow
[info]                :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_company_id#686, s_street_number#688, s_street_name#689, s_street_type#690, s_suite_number#691, s_city#692, s_county#693, s_state#694, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_id:int,s_street_number:string,s_street_name:s...
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31029]
[info]                :        +- *(6) Project [d_date_sk#331]
[info]                :           +- *(6) Filter isnotnull(d_date_sk#331)
[info]                :              +- *(6) ColumnarToRow
[info]                :                 +- BatchScan[d_date_sk#331] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31038]
[info]                   +- *(7) Project [d_date_sk#13226]
[info]                      +- *(7) Filter ((((isnotnull(d_year#13232) AND isnotnull(d_moy#13234)) AND (d_year#13232 = 2001)) AND (d_moy#13234 = 8)) AND isnotnull(d_date_sk#13226))
[info]                         +- *(7) ColumnarToRow
[info]                            +- BatchScan[d_date_sk#13226, d_year#13232, d_moy#13234] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 177 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q50                                                 178            178           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q51
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[item_sk#13372 ASC NULLS FIRST,d_date#13373 ASC NULLS FIRST], output=[item_sk#13372,d_date#13373,web_sales#13374,store_sales#13375,web_cumulative#13376,store_cumulative#13377])
[info] +- *(15) Filter ((isnotnull(web_cumulative#13376) AND isnotnull(store_cumulative#13377)) AND (web_cumulative#13376 > store_cumulative#13377))
[info]    +- Window [max(web_sales#13374) windowspecdefinition(item_sk#13372, d_date#13373 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS web_cumulative#13376, max(store_sales#13375) windowspecdefinition(item_sk#13372, d_date#13373 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS store_cumulative#13377], [item_sk#13372], [d_date#13373 ASC NULLS FIRST]
[info]       +- *(14) Sort [item_sk#13372 ASC NULLS FIRST, d_date#13373 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(item_sk#13372, 4), true, [id=#31427]
[info]             +- *(13) Project [CASE WHEN isnotnull(item_sk#13378) THEN item_sk#13378 ELSE item_sk#13380 END AS item_sk#13372, CASE WHEN isnotnull(d_date#333) THEN d_date#333 ELSE d_date#13390 END AS d_date#13373, cume_sales#13379 AS web_sales#13374, cume_sales#13381 AS store_sales#13375]
[info]                +- SortMergeJoin [item_sk#13378, d_date#333], [item_sk#13380, d_date#13390], FullOuter
[info]                   :- *(6) Sort [item_sk#13378 ASC NULLS FIRST, d_date#333 ASC NULLS FIRST], false, 0
[info]                   :  +- Exchange hashpartitioning(item_sk#13378, d_date#333, 4), true, [id=#31269]
[info]                   :     +- *(5) Project [item_sk#13378, d_date#333, cume_sales#13379]
[info]                   :        +- Window [sum(_w0#13386) windowspecdefinition(ws_item_sk#1023, d_date#333 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS cume_sales#13379], [ws_item_sk#1023], [d_date#333 ASC NULLS FIRST]
[info]                   :           +- *(4) Sort [ws_item_sk#1023 ASC NULLS FIRST, d_date#333 ASC NULLS FIRST], false, 0
[info]                   :              +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#31261]
[info]                   :                 +- *(3) HashAggregate(keys=[ws_item_sk#1023, d_date#333], functions=[sum(UnscaledValue(ws_sales_price#1041))])
[info]                   :                    +- Exchange hashpartitioning(ws_item_sk#1023, d_date#333, 4), true, [id=#31257]
[info]                   :                       +- *(2) HashAggregate(keys=[ws_item_sk#1023, d_date#333], functions=[partial_sum(UnscaledValue(ws_sales_price#1041))])
[info]                   :                          +- *(2) Project [ws_item_sk#1023, ws_sales_price#1041, d_date#333]
[info]                   :                             +- *(2) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                   :                                :- *(2) Project [ws_item_sk#1023, ws_sales_price#1041, ws_sold_date_sk#1054]
[info]                   :                                :  +- *(2) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                   :                                :     +- *(2) ColumnarToRow
[info]                   :                                :        +- BatchScan[ws_item_sk#1023, ws_sales_price#1041, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_sales_price:decimal(7,2)>
[info]                   :                                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31251]
[info]                   :                                   +- *(1) Project [d_date_sk#331, d_date#333]
[info]                   :                                      +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                   :                                         +- *(1) ColumnarToRow
[info]                   :                                            +- BatchScan[d_date_sk#331, d_date#333, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>
[info]                   +- *(12) Sort [item_sk#13380 ASC NULLS FIRST, d_date#13390 ASC NULLS FIRST], false, 0
[info]                      +- Exchange hashpartitioning(item_sk#13380, d_date#13390, 4), true, [id=#31351]
[info]                         +- *(11) Project [item_sk#13380, d_date#13390, cume_sales#13381]
[info]                            +- Window [sum(_w0#13387) windowspecdefinition(ss_item_sk#1165, d_date#13390 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS cume_sales#13381], [ss_item_sk#1165], [d_date#13390 ASC NULLS FIRST]
[info]                               +- *(10) Sort [ss_item_sk#1165 ASC NULLS FIRST, d_date#13390 ASC NULLS FIRST], false, 0
[info]                                  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#31343]
[info]                                     +- *(9) HashAggregate(keys=[ss_item_sk#1165, d_date#13390], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]                                        +- Exchange hashpartitioning(ss_item_sk#1165, d_date#13390, 4), true, [id=#31339]
[info]                                           +- *(8) HashAggregate(keys=[ss_item_sk#1165, d_date#13390], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]                                              +- *(8) Project [ss_item_sk#1165, ss_sales_price#1176, d_date#13390]
[info]                                                 +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#13388], Inner, BuildRight
[info]                                                    :- *(8) Project [ss_item_sk#1165, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                                                    :  +- *(8) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                                                    :     +- *(8) ColumnarToRow
[info]                                                    :        +- BatchScan[ss_item_sk#1165, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_sales_price:decimal(7,2)>
[info]                                                    +- ReusedExchange [d_date_sk#13388, d_date#13390], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31251]
[info] 
[info] 
[info]   Stopped after 1 iterations, 176 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q51                                                 176            176           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q52
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[d_year#337 ASC NULLS FIRST,ext_price#13459 DESC NULLS LAST,brand_id#13457 ASC NULLS FIRST], output=[d_year#337,brand_id#13457,brand#13458,ext_price#13459])
[info] +- *(4) HashAggregate(keys=[d_year#337, i_brand#504, i_brand_id#503], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]    +- Exchange hashpartitioning(d_year#337, i_brand#504, i_brand_id#503, 4), true, [id=#31540]
[info]       +- *(3) HashAggregate(keys=[d_year#337, i_brand#504, i_brand_id#503], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          +- *(3) Project [d_year#337, ss_ext_sales_price#1178, i_brand_id#503, i_brand#504]
[info]             +- *(3) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :- *(3) Project [d_year#337, ss_item_sk#1165, ss_ext_sales_price#1178]
[info]                :  +- *(3) BroadcastHashJoin [d_date_sk#331], [ss_sold_date_sk#1186], Inner, BuildLeft
[info]                :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31521]
[info]                :     :  +- *(1) Project [d_date_sk#331, d_year#337]
[info]                :     :     +- *(1) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 11)) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                :     :        +- *(1) ColumnarToRow
[info]                :     :           +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     +- *(3) Project [ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                :        +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165))
[info]                :           +- *(3) ColumnarToRow
[info]                :              +- BatchScan[ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31534]
[info]                   +- *(2) Project [i_item_sk#496, i_brand_id#503, i_brand#504]
[info]                      +- *(2) Filter ((isnotnull(i_manager_id#516) AND (i_manager_id#516 = 1)) AND isnotnull(i_item_sk#496))
[info]                         +- *(2) ColumnarToRow
[info]                            +- BatchScan[i_item_sk#496, i_brand_id#503, i_brand#504, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manager_id:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 93 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q52                                                  93             93           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q53
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[avg_quarterly_sales#13491 ASC NULLS FIRST,sum_sales#13490 ASC NULLS FIRST,i_manufact_id#509 ASC NULLS FIRST], output=[i_manufact_id#509,sum_sales#13490,avg_quarterly_sales#13491])
[info] +- *(7) Project [i_manufact_id#509, sum_sales#13490, avg_quarterly_sales#13491]
[info]    +- *(7) Filter (CASE WHEN (avg_quarterly_sales#13491 > 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#13490 as decimal(22,6))) - promote_precision(cast(avg_quarterly_sales#13491 as decimal(22,6)))), DecimalType(22,6), true))) / promote_precision(cast(avg_quarterly_sales#13491 as decimal(22,6)))), DecimalType(38,16), true) ELSE null END > 0.1000000000000000)
[info]       +- Window [avg(_w0#13495) windowspecdefinition(i_manufact_id#509, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_quarterly_sales#13491], [i_manufact_id#509]
[info]          +- *(6) Sort [i_manufact_id#509 ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning(i_manufact_id#509, 4), true, [id=#31711]
[info]                +- *(5) HashAggregate(keys=[i_manufact_id#509, d_qoy#341], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]                   +- Exchange hashpartitioning(i_manufact_id#509, d_qoy#341, 4), true, [id=#31707]
[info]                      +- *(4) HashAggregate(keys=[i_manufact_id#509, d_qoy#341], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]                         +- *(4) Project [i_manufact_id#509, ss_sales_price#1176, d_qoy#341]
[info]                            +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :- *(4) Project [i_manufact_id#509, ss_store_sk#1170, ss_sales_price#1176, d_qoy#341]
[info]                               :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :- *(4) Project [i_manufact_id#509, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                               :     :  +- *(4) BroadcastHashJoin [i_item_sk#496], [ss_item_sk#1165], Inner, BuildLeft
[info]                               :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31679]
[info]                               :     :     :  +- *(1) Project [i_item_sk#496, i_manufact_id#509]
[info]                               :     :     :     +- *(1) Filter ((((i_category#508 IN (Books,Children,Electronics) AND i_class#506 IN (personal,portable,reference,self-help)) AND i_brand#504 IN (scholaramalgamalg #14,scholaramalgamalg #7,exportiunivamalg #9,scholaramalgamalg #9)) OR ((i_category#508 IN (Women,Music,Men) AND i_class#506 IN (accessories,classical,fragrances,pants)) AND i_brand#504 IN (amalgimporto #1,edu packscholar #1,exportiimporto #1,importoamalg #1))) AND isnotnull(i_item_sk#496))
[info]                               :     :     :        +- *(1) ColumnarToRow
[info]                               :     :     :           +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_manufact_id:int>
[info]                               :     :     +- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                               :     :        +- *(4) Filter ((isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]                               :     :           +- *(4) ColumnarToRow
[info]                               :     :              +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31692]
[info]                               :        +- *(2) Project [d_date_sk#331, d_qoy#341]
[info]                               :           +- *(2) Filter (d_month_seq#334 INSET (1200,1211,1205,1201,1206,1210,1207,1202,1209,1203,1208,1204) AND isnotnull(d_date_sk#331))
[info]                               :              +- *(2) ColumnarToRow
[info]                               :                 +- BatchScan[d_date_sk#331, d_month_seq#334, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_qoy:int>
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#31701]
[info]                                  +- *(3) Project [s_store_sk#670]
[info]                                     +- *(3) Filter isnotnull(s_store_sk#670)
[info]                                        +- *(3) ColumnarToRow
[info]                                           +- BatchScan[s_store_sk#670] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 160 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q53                                                 161            161           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q54
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[segment#13545 ASC NULLS FIRST,num_customers#13534L ASC NULLS FIRST], output=[segment#13545,num_customers#13534L,segment_base#13535])
[info] +- *(15) HashAggregate(keys=[segment#13545], functions=[count(1)])
[info]    +- Exchange hashpartitioning(segment#13545, 4), true, [id=#32135]
[info]       +- *(14) HashAggregate(keys=[segment#13545], functions=[partial_count(1)])
[info]          +- *(14) HashAggregate(keys=[c_customer_sk#156], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             +- *(14) HashAggregate(keys=[c_customer_sk#156], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                +- *(14) Project [c_customer_sk#156, ss_ext_sales_price#1178]
[info]                   +- *(14) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                      :- *(14) Project [c_customer_sk#156, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                      :  +- *(14) BroadcastHashJoin [ca_county#240, ca_state#241], [s_county#693, s_state#694], Inner, BuildRight
[info]                      :     :- *(14) Project [c_customer_sk#156, ss_ext_sales_price#1178, ss_sold_date_sk#1186, ca_county#240, ca_state#241]
[info]                      :     :  +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                      :     :     :- *(14) Project [c_customer_sk#156, c_current_addr_sk#160, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                      :     :     :  +- *(14) SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner
[info]                      :     :     :     :- *(8) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                      :     :     :     :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#32087]
[info]                      :     :     :     :     +- *(7) HashAggregate(keys=[c_customer_sk#156, c_current_addr_sk#160], functions=[])
[info]                      :     :     :     :        +- Exchange hashpartitioning(c_customer_sk#156, c_current_addr_sk#160, 4), true, [id=#32083]
[info]                      :     :     :     :           +- *(6) HashAggregate(keys=[c_customer_sk#156, c_current_addr_sk#160], functions=[])
[info]                      :     :     :     :              +- *(6) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]                      :     :     :     :                 +- *(6) BroadcastHashJoin [customer_sk#13537], [c_customer_sk#156], Inner, BuildRight
[info]                      :     :     :     :                    :- *(6) Project [customer_sk#13537]
[info]                      :     :     :     :                    :  +- *(6) BroadcastHashJoin [sold_date_sk#13536], [d_date_sk#331], Inner, BuildRight
[info]                      :     :     :     :                    :     :- *(6) Project [sold_date_sk#13536, customer_sk#13537]
[info]                      :     :     :     :                    :     :  +- *(6) BroadcastHashJoin [item_sk#13538], [i_item_sk#496], Inner, BuildRight
[info]                      :     :     :     :                    :     :     :- Union
[info]                      :     :     :     :                    :     :     :  :- *(1) Project [cs_sold_date_sk#911 AS sold_date_sk#13536, cs_bill_customer_sk#880 AS customer_sk#13537, cs_item_sk#892 AS item_sk#13538]
[info]                      :     :     :     :                    :     :     :  :  +- *(1) Filter ((isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_bill_customer_sk#880))
[info]                      :     :     :     :                    :     :     :  :     +- *(1) ColumnarToRow
[info]                      :     :     :     :                    :     :     :  :        +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int>
[info]                      :     :     :     :                    :     :     :  +- *(2) Project [ws_sold_date_sk#1054 AS sold_date_sk#13539, ws_bill_customer_sk#1024 AS customer_sk#13540, ws_item_sk#1023 AS item_sk#13541]
[info]                      :     :     :     :                    :     :     :     +- *(2) Filter ((isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054)) AND isnotnull(ws_bill_customer_sk#1024))
[info]                      :     :     :     :                    :     :     :        +- *(2) ColumnarToRow
[info]                      :     :     :     :                    :     :     :           +- BatchScan[ws_item_sk#1023, ws_bill_customer_sk#1024, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int>
[info]                      :     :     :     :                    :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32059]
[info]                      :     :     :     :                    :     :        +- *(3) Project [i_item_sk#496]
[info]                      :     :     :     :                    :     :           +- *(3) Filter ((((isnotnull(i_category#508) AND isnotnull(i_class#506)) AND (i_category#508 = Women)) AND (i_class#506 = maternity)) AND isnotnull(i_item_sk#496))
[info]                      :     :     :     :                    :     :              +- *(3) ColumnarToRow
[info]                      :     :     :     :                    :     :                 +- BatchScan[i_item_sk#496, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
[info]                      :     :     :     :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32068]
[info]                      :     :     :     :                    :        +- *(4) Project [d_date_sk#331]
[info]                      :     :     :     :                    :           +- *(4) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 12)) AND (d_year#337 = 1998)) AND isnotnull(d_date_sk#331))
[info]                      :     :     :     :                    :              +- *(4) ColumnarToRow
[info]                      :     :     :     :                    :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                      :     :     :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32077]
[info]                      :     :     :     :                       +- *(5) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]                      :     :     :     :                          +- *(5) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]                      :     :     :     :                             +- *(5) ColumnarToRow
[info]                      :     :     :     :                                +- BatchScan[c_customer_sk#156, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
[info]                      :     :     :     +- *(10) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                      :     :     :        +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#32097]
[info]                      :     :     :           +- *(9) Project [ss_customer_sk#1166, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                      :     :     :              +- *(9) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]                      :     :     :                 +- *(9) ColumnarToRow
[info]                      :     :     :                    +- BatchScan[ss_customer_sk#1166, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32109]
[info]                      :     :        +- *(11) Project [ca_address_sk#233, ca_county#240, ca_state#241]
[info]                      :     :           +- *(11) Filter ((isnotnull(ca_address_sk#233) AND isnotnull(ca_state#241)) AND isnotnull(ca_county#240))
[info]                      :     :              +- *(11) ColumnarToRow
[info]                      :     :                 +- BatchScan[ca_address_sk#233, ca_county#240, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string>
[info]                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true], input[1, string, true])), [id=#32118]
[info]                      :        +- *(12) Project [s_county#693, s_state#694]
[info]                      :           +- *(12) Filter (isnotnull(s_state#694) AND isnotnull(s_county#693))
[info]                      :              +- *(12) ColumnarToRow
[info]                      :                 +- BatchScan[s_county#693, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_county:string,s_state:string>
[info]                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32127]
[info]                         +- *(13) Project [d_date_sk#331]
[info]                            +- *(13) Filter (((isnotnull(d_month_seq#334) AND isnotnull(d_date_sk#331)) AND (d_month_seq#334 >= Subquery scalar-subquery#13542, [id=#31902])) AND (d_month_seq#334 <= Subquery scalar-subquery#13543, [id=#31929]))
[info]                               :  :- Subquery scalar-subquery#13542, [id=#31902]
[info]                               :  :  +- *(1) HashAggregate(keys=[(d_month_seq + 1)#13547], functions=[])
[info]                               :  :     +- *(1) HashAggregate(keys=[(d_month_seq + 1)#13547], functions=[])
[info]                               :  :        +- *(1) Project [(d_month_seq#334 + 1) AS (d_month_seq + 1)#13547]
[info]                               :  :           +- *(1) Filter (((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 1998)) AND (d_moy#339 = 12))
[info]                               :  :              +- *(1) ColumnarToRow
[info]                               :  :                 +- BatchScan[d_month_seq#334, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>
[info]                               :  +- Subquery scalar-subquery#13543, [id=#31929]
[info]                               :     +- *(1) HashAggregate(keys=[(d_month_seq + 3)#13548], functions=[])
[info]                               :        +- *(1) HashAggregate(keys=[(d_month_seq + 3)#13548], functions=[])
[info]                               :           +- *(1) Project [(d_month_seq#334 + 3) AS (d_month_seq + 3)#13548]
[info]                               :              +- *(1) Filter (((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 1998)) AND (d_moy#339 = 12))
[info]                               :                 +- *(1) ColumnarToRow
[info]                               :                    +- BatchScan[d_month_seq#334, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>
[info]                               +- *(13) ColumnarToRow
[info]                                  +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 376 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q54                                                 377            377           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q55
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ext_price#13601 DESC NULLS LAST,brand_id#13599 ASC NULLS FIRST], output=[brand_id#13599,brand#13600,ext_price#13601])
[info] +- *(4) HashAggregate(keys=[i_brand#504, i_brand_id#503], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]    +- Exchange hashpartitioning(i_brand#504, i_brand_id#503, 4), true, [id=#32318]
[info]       +- *(3) HashAggregate(keys=[i_brand#504, i_brand_id#503], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]          +- *(3) Project [ss_ext_sales_price#1178, i_brand_id#503, i_brand#504]
[info]             +- *(3) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :- *(3) Project [ss_item_sk#1165, ss_ext_sales_price#1178]
[info]                :  +- *(3) BroadcastHashJoin [d_date_sk#331], [ss_sold_date_sk#1186], Inner, BuildLeft
[info]                :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32299]
[info]                :     :  +- *(1) Project [d_date_sk#331]
[info]                :     :     +- *(1) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 11)) AND (d_year#337 = 1999)) AND isnotnull(d_date_sk#331))
[info]                :     :        +- *(1) ColumnarToRow
[info]                :     :           +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     +- *(3) Project [ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                :        +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165))
[info]                :           +- *(3) ColumnarToRow
[info]                :              +- BatchScan[ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32312]
[info]                   +- *(2) Project [i_item_sk#496, i_brand_id#503, i_brand#504]
[info]                      +- *(2) Filter ((isnotnull(i_manager_id#516) AND (i_manager_id#516 = 28)) AND isnotnull(i_item_sk#496))
[info]                         +- *(2) ColumnarToRow
[info]                            +- BatchScan[i_item_sk#496, i_brand_id#503, i_brand#504, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manager_id:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 91 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q55                                                  92             92           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q56
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[total_sales#13639 ASC NULLS FIRST], output=[i_item_id#497,total_sales#13639])
[info] +- *(20) HashAggregate(keys=[i_item_id#497], functions=[sum(total_sales#13641)])
[info]    +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#33087]
[info]       +- *(19) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(total_sales#13641)])
[info]          +- Union
[info]             :- *(6) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             :  +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#32751]
[info]             :     +- *(5) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             :        +- *(5) Project [ss_ext_sales_price#1178, i_item_id#497]
[info]             :           +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :              :- *(5) Project [ss_item_sk#1165, ss_ext_sales_price#1178]
[info]             :              :  +- *(5) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]             :              :     :- *(5) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178]
[info]             :              :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :              :     :     :- *(5) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]             :              :     :     :  +- *(5) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_addr_sk#1169)) AND isnotnull(ss_item_sk#1165))
[info]             :              :     :     :     +- *(5) ColumnarToRow
[info]             :              :     :     :        +- BatchScan[ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]             :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32719]
[info]             :              :     :        +- *(1) Project [d_date_sk#331]
[info]             :              :     :           +- *(1) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2001)) AND (d_moy#339 = 2)) AND isnotnull(d_date_sk#331))
[info]             :              :     :              +- *(1) ColumnarToRow
[info]             :              :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32728]
[info]             :              :        +- *(2) Project [ca_address_sk#233]
[info]             :              :           +- *(2) Filter ((isnotnull(ca_gmt_offset#244) AND (ca_gmt_offset#244 = -5.00)) AND isnotnull(ca_address_sk#233))
[info]             :              :              +- *(2) ColumnarToRow
[info]             :              :                 +- BatchScan[ca_address_sk#233, ca_gmt_offset#244] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
[info]             :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32745]
[info]             :                 +- *(4) BroadcastHashJoin [i_item_id#497], [i_item_id#497#13696], LeftSemi, BuildRight
[info]             :                    :- *(4) Project [i_item_sk#496, i_item_id#497]
[info]             :                    :  +- *(4) Filter isnotnull(i_item_sk#496)
[info]             :                    :     +- *(4) ColumnarToRow
[info]             :                    :        +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]             :                    +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true])), [id=#32741]
[info]             :                       +- *(3) Project [i_item_id#497 AS i_item_id#497#13696]
[info]             :                          +- *(3) Filter i_color#513 IN (slate,blanched,burnished)
[info]             :                             +- *(3) ColumnarToRow
[info]             :                                +- BatchScan[i_item_id#497, i_color#513] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_id:string,i_color:string>
[info]             :- *(12) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(cs_ext_sales_price#900))])
[info]             :  +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#32943]
[info]             :     +- *(11) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900))])
[info]             :        +- *(11) Project [cs_ext_sales_price#900, i_item_id#497]
[info]             :           +- *(11) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]             :              :- *(11) Project [cs_item_sk#892, cs_ext_sales_price#900]
[info]             :              :  +- *(11) BroadcastHashJoin [cs_bill_addr_sk#883], [ca_address_sk#233], Inner, BuildRight
[info]             :              :     :- *(11) Project [cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900]
[info]             :              :     :  +- *(11) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :              :     :     :- *(11) Project [cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]             :              :     :     :  +- *(11) Filter ((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_bill_addr_sk#883)) AND isnotnull(cs_item_sk#892))
[info]             :              :     :     :     +- *(11) ColumnarToRow
[info]             :              :     :     :        +- BatchScan[cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]             :              :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32719]
[info]             :              :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32728]
[info]             :              +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32745]
[info]             +- *(18) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#33053]
[info]                   +- *(17) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                      +- *(17) Project [ws_ext_sales_price#1043, i_item_id#497]
[info]                         +- *(17) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                            :- *(17) Project [ws_item_sk#1023, ws_ext_sales_price#1043]
[info]                            :  +- *(17) BroadcastHashJoin [ws_bill_addr_sk#1027], [ca_address_sk#233], Inner, BuildRight
[info]                            :     :- *(17) Project [ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043]
[info]                            :     :  +- *(17) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                            :     :     :- *(17) Project [ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                            :     :     :  +- *(17) Filter ((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_addr_sk#1027)) AND isnotnull(ws_item_sk#1023))
[info]                            :     :     :     +- *(17) ColumnarToRow
[info]                            :     :     :        +- BatchScan[ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                            :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32719]
[info]                            :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32728]
[info]                            +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#32745]
[info] 
[info] 
[info]   Stopped after 1 iterations, 414 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q56                                                 414            414           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q57
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#14803 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#14804 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,cc_name#1498 ASC NULLS FIRST], output=[i_category#508,i_brand#504,cc_name#1498,d_year#337,d_moy#339,avg_monthly_sales#14804,sum_sales#14803,psum#14806,nsum#14807])
[info] +- *(27) Project [i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, avg_monthly_sales#14804, sum_sales#14803, sum_sales#15031 AS psum#14806, sum_sales#15518 AS nsum#14807]
[info]    +- *(27) SortMergeJoin [i_category#508, i_brand#504, cc_name#1498, rn#14805], [i_category#15625, i_brand#15621, cc_name#15787, (rn#15422 - 1)], Inner
[info]       :- *(18) Project [i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, sum_sales#14803, avg_monthly_sales#14804, rn#14805, sum_sales#15031]
[info]       :  +- *(18) SortMergeJoin [i_category#508, i_brand#504, cc_name#1498, rn#14805], [i_category#15138, i_brand#15134, cc_name#15300, (rn#14935 + 1)], Inner
[info]       :     :- *(9) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, cc_name#1498 ASC NULLS FIRST, rn#14805 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, rn#14805, 4), true, [id=#33573]
[info]       :     :     +- *(8) Project [i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, sum_sales#14803, avg_monthly_sales#14804, rn#14805]
[info]       :     :        +- *(8) Filter (((isnotnull(avg_monthly_sales#14804) AND (avg_monthly_sales#14804 > 0.000000)) AND (CASE WHEN (avg_monthly_sales#14804 > 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#14803 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#14804 as decimal(22,6)))), DecimalType(22,6), true))) / promote_precision(cast(avg_monthly_sales#14804 as decimal(22,6)))), DecimalType(38,16), true) ELSE null END > 0.1000000000000000)) AND isnotnull(rn#14805))
[info]       :     :           +- Window [avg(_w0#14835) windowspecdefinition(i_category#508, i_brand#504, cc_name#1498, d_year#337, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#14804], [i_category#508, i_brand#504, cc_name#1498, d_year#337]
[info]       :     :              +- *(7) Filter (isnotnull(d_year#337) AND (d_year#337 = 1999))
[info]       :     :                 +- Window [rank(d_year#337, d_moy#339) windowspecdefinition(i_category#508, i_brand#504, cc_name#1498, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#14805], [i_category#508, i_brand#504, cc_name#1498], [d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST]
[info]       :     :                    +- *(6) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, cc_name#1498 ASC NULLS FIRST, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST], false, 0
[info]       :     :                       +- Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, 4), true, [id=#33560]
[info]       :     :                          +- *(5) HashAggregate(keys=[i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339], functions=[sum(UnscaledValue(cs_sales_price#898))])
[info]       :     :                             +- Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, 4), true, [id=#33556]
[info]       :     :                                +- *(4) HashAggregate(keys=[i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339], functions=[partial_sum(UnscaledValue(cs_sales_price#898))])
[info]       :     :                                   +- *(4) Project [i_brand#504, i_category#508, cs_sales_price#898, d_year#337, d_moy#339, cc_name#1498]
[info]       :     :                                      +- *(4) BroadcastHashJoin [cs_call_center_sk#888], [cc_call_center_sk#1492], Inner, BuildRight
[info]       :     :                                         :- *(4) Project [i_brand#504, i_category#508, cs_call_center_sk#888, cs_sales_price#898, d_year#337, d_moy#339]
[info]       :     :                                         :  +- *(4) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :     :                                         :     :- *(4) Project [i_brand#504, i_category#508, cs_call_center_sk#888, cs_sales_price#898, cs_sold_date_sk#911]
[info]       :     :                                         :     :  +- *(4) BroadcastHashJoin [i_item_sk#496], [cs_item_sk#892], Inner, BuildLeft
[info]       :     :                                         :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#33528]
[info]       :     :                                         :     :     :  +- *(1) Project [i_item_sk#496, i_brand#504, i_category#508]
[info]       :     :                                         :     :     :     +- *(1) Filter ((isnotnull(i_item_sk#496) AND isnotnull(i_brand#504)) AND isnotnull(i_category#508))
[info]       :     :                                         :     :     :        +- *(1) ColumnarToRow
[info]       :     :                                         :     :     :           +- BatchScan[i_item_sk#496, i_brand#504, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
[info]       :     :                                         :     :     +- *(4) Project [cs_call_center_sk#888, cs_item_sk#892, cs_sales_price#898, cs_sold_date_sk#911]
[info]       :     :                                         :     :        +- *(4) Filter ((isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_call_center_sk#888))
[info]       :     :                                         :     :           +- *(4) ColumnarToRow
[info]       :     :                                         :     :              +- BatchScan[cs_call_center_sk#888, cs_item_sk#892, cs_sales_price#898, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_call_center_sk:int,cs_item_sk:int,cs_sales_price:decimal(7,2)>
[info]       :     :                                         :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#33541]
[info]       :     :                                         :        +- *(2) Project [d_date_sk#331, d_year#337, d_moy#339]
[info]       :     :                                         :           +- *(2) Filter ((((d_year#337 = 1999) OR ((d_year#337 = 1998) AND (d_moy#339 = 12))) OR ((d_year#337 = 2000) AND (d_moy#339 = 1))) AND isnotnull(d_date_sk#331))
[info]       :     :                                         :              +- *(2) ColumnarToRow
[info]       :     :                                         :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]       :     :                                         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#33550]
[info]       :     :                                            +- *(3) Project [cc_call_center_sk#1492, cc_name#1498]
[info]       :     :                                               +- *(3) Filter (isnotnull(cc_call_center_sk#1492) AND isnotnull(cc_name#1498))
[info]       :     :                                                  +- *(3) ColumnarToRow
[info]       :     :                                                     +- BatchScan[cc_call_center_sk#1492, cc_name#1498] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/call_center], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
[info]       :     +- *(17) Sort [i_category#15138 ASC NULLS FIRST, i_brand#15134 ASC NULLS FIRST, cc_name#15300 ASC NULLS FIRST, (rn#14935 + 1) ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(i_category#15138, i_brand#15134, cc_name#15300, (rn#14935 + 1), 4), true, [id=#33816]
[info]       :           +- *(16) Project [i_category#15138, i_brand#15134, cc_name#15300, sum_sales#15031, rn#14935]
[info]       :              +- *(16) Filter isnotnull(rn#14935)
[info]       :                 +- Window [rank(d_year#15225, d_moy#15227) windowspecdefinition(i_category#15138, i_brand#15134, cc_name#15300, d_year#15225 ASC NULLS FIRST, d_moy#15227 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#14935], [i_category#15138, i_brand#15134, cc_name#15300], [d_year#15225 ASC NULLS FIRST, d_moy#15227 ASC NULLS FIRST]
[info]       :                    +- *(15) Sort [i_category#15138 ASC NULLS FIRST, i_brand#15134 ASC NULLS FIRST, cc_name#15300 ASC NULLS FIRST, d_year#15225 ASC NULLS FIRST, d_moy#15227 ASC NULLS FIRST], false, 0
[info]       :                       +- Exchange hashpartitioning(i_category#15138, i_brand#15134, cc_name#15300, 4), true, [id=#33807]
[info]       :                          +- *(14) HashAggregate(keys=[i_category#15138, i_brand#15134, cc_name#15300, d_year#15225, d_moy#15227], functions=[sum(UnscaledValue(cs_sales_price#898))])
[info]       :                             +- ReusedExchange [i_category#15138, i_brand#15134, cc_name#15300, d_year#15225, d_moy#15227, sum#15932L], Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, 4), true, [id=#33556]
[info]       +- *(26) Sort [i_category#15625 ASC NULLS FIRST, i_brand#15621 ASC NULLS FIRST, cc_name#15787 ASC NULLS FIRST, (rn#15422 - 1) ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_category#15625, i_brand#15621, cc_name#15787, (rn#15422 - 1), 4), true, [id=#33916]
[info]             +- *(25) Project [i_category#15625, i_brand#15621, cc_name#15787, sum_sales#15518, rn#15422]
[info]                +- *(25) Filter isnotnull(rn#15422)
[info]                   +- Window [rank(d_year#15712, d_moy#15714) windowspecdefinition(i_category#15625, i_brand#15621, cc_name#15787, d_year#15712 ASC NULLS FIRST, d_moy#15714 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#15422], [i_category#15625, i_brand#15621, cc_name#15787], [d_year#15712 ASC NULLS FIRST, d_moy#15714 ASC NULLS FIRST]
[info]                      +- *(24) Sort [i_category#15625 ASC NULLS FIRST, i_brand#15621 ASC NULLS FIRST, cc_name#15787 ASC NULLS FIRST, d_year#15712 ASC NULLS FIRST, d_moy#15714 ASC NULLS FIRST], false, 0
[info]                         +- ReusedExchange [i_category#15625, i_brand#15621, cc_name#15787, d_year#15712, d_moy#15714, sum_sales#15518], Exchange hashpartitioning(i_category#15138, i_brand#15134, cc_name#15300, 4), true, [id=#33807]
[info] 
[info] 
[info]   Stopped after 1 iterations, 576 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q57                                                 576            576           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q58
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[item_id#15992 ASC NULLS FIRST,ss_item_rev#15993 ASC NULLS FIRST], output=[item_id#15992,ss_item_rev#15993,ss_dev#15986,cs_item_rev#15997,cs_dev#15987,ws_item_rev#16001,ws_dev#15988,average#15989])
[info] +- *(20) Project [item_id#15992, ss_item_rev#15993, CheckOverflow((promote_precision(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(ss_item_rev#15993 as decimal(19,2))) / promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_item_rev#15993 as decimal(18,2))) + promote_precision(cast(cs_item_rev#15997 as decimal(18,2)))), DecimalType(18,2), true) as decimal(19,2))) + promote_precision(cast(ws_item_rev#16001 as decimal(19,2)))), DecimalType(19,2), true))), DecimalType(38,21), true)) / 3.000000000000000000000), DecimalType(38,21), true)) * 100.000000000000000000000), DecimalType(38,17), true) AS ss_dev#15986, cs_item_rev#15997, CheckOverflow((promote_precision(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(cs_item_rev#15997 as decimal(19,2))) / promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_item_rev#15993 as decimal(18,2))) + promote_precision(cast(cs_item_rev#15997 as decimal(18,2)))), DecimalType(18,2), true) as decimal(19,2))) + promote_precision(cast(ws_item_rev#16001 as decimal(19,2)))), DecimalType(19,2), true))), DecimalType(38,21), true)) / 3.000000000000000000000), DecimalType(38,21), true)) * 100.000000000000000000000), DecimalType(38,17), true) AS cs_dev#15987, ws_item_rev#16001, CheckOverflow((promote_precision(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(ws_item_rev#16001 as decimal(19,2))) / promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_item_rev#15993 as decimal(18,2))) + promote_precision(cast(cs_item_rev#15997 as decimal(18,2)))), DecimalType(18,2), true) as decimal(19,2))) + promote_precision(cast(ws_item_rev#16001 as decimal(19,2)))), DecimalType(19,2), true))), DecimalType(38,21), true)) / 3.000000000000000000000), DecimalType(38,21), true)) * 100.000000000000000000000), DecimalType(38,17), true) AS ws_dev#15988, CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_item_rev#15993 as decimal(18,2))) + promote_precision(cast(cs_item_rev#15997 as decimal(18,2)))), DecimalType(18,2), true) as decimal(19,2))) + promote_precision(cast(ws_item_rev#16001 as decimal(19,2)))), DecimalType(19,2), true)) / 3.00), DecimalType(23,6), true) AS average#15989]
[info]    +- *(20) SortMergeJoin [item_id#15992], [item_id#16000], Inner, ((((((((cast(ss_item_rev#15993 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(ws_item_rev#16001)), DecimalType(19,3), true)) AND (cast(ss_item_rev#15993 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(ws_item_rev#16001)), DecimalType(20,3), true))) AND (cast(cs_item_rev#15997 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(ws_item_rev#16001)), DecimalType(19,3), true))) AND (cast(cs_item_rev#15997 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(ws_item_rev#16001)), DecimalType(20,3), true))) AND (cast(ws_item_rev#16001 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(ss_item_rev#15993)), DecimalType(19,3), true))) AND (cast(ws_item_rev#16001 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(ss_item_rev#15993)), DecimalType(20,3), true))) AND (cast(ws_item_rev#16001 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(cs_item_rev#15997)), DecimalType(19,3), true))) AND (cast(ws_item_rev#16001 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(cs_item_rev#15997)), DecimalType(20,3), true)))
[info]       :- *(13) Project [item_id#15992, ss_item_rev#15993, cs_item_rev#15997]
[info]       :  +- *(13) SortMergeJoin [item_id#15992], [item_id#15996], Inner, ((((cast(ss_item_rev#15993 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(cs_item_rev#15997)), DecimalType(19,3), true)) AND (cast(ss_item_rev#15993 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(cs_item_rev#15997)), DecimalType(20,3), true))) AND (cast(cs_item_rev#15997 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(ss_item_rev#15993)), DecimalType(19,3), true))) AND (cast(cs_item_rev#15997 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(ss_item_rev#15993)), DecimalType(20,3), true)))
[info]       :     :- *(6) Sort [item_id#15992 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(item_id#15992, 4), true, [id=#34436]
[info]       :     :     +- *(5) Filter isnotnull(ss_item_rev#15993)
[info]       :     :        +- *(5) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]       :     :           +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#34431]
[info]       :     :              +- *(4) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]       :     :                 +- *(4) Project [ss_ext_sales_price#1178, i_item_id#497]
[info]       :     :                    +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :                       :- *(4) Project [ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_item_id#497]
[info]       :     :                       :  +- *(4) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]       :     :                       :     :- *(4) Project [ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]       :     :                       :     :  +- *(4) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :                       :     :     +- *(4) ColumnarToRow
[info]       :     :                       :     :        +- BatchScan[ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]       :     :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#34407]
[info]       :     :                       :        +- *(1) Project [i_item_sk#496, i_item_id#497]
[info]       :     :                       :           +- *(1) Filter (isnotnull(i_item_sk#496) AND isnotnull(i_item_id#497))
[info]       :     :                       :              +- *(1) ColumnarToRow
[info]       :     :                       :                 +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]       :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#34425]
[info]       :     :                          +- *(3) Project [d_date_sk#331]
[info]       :     :                             +- *(3) BroadcastHashJoin [d_date#333], [d_date#333#16046], LeftSemi, BuildRight
[info]       :     :                                :- *(3) Project [d_date_sk#331, d_date#333]
[info]       :     :                                :  +- *(3) Filter isnotnull(d_date_sk#331)
[info]       :     :                                :     +- *(3) ColumnarToRow
[info]       :     :                                :        +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]       :     :                                +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, date, true])), [id=#34420]
[info]       :     :                                   +- *(2) Project [d_date#333 AS d_date#333#16046]
[info]       :     :                                      +- *(2) Filter (isnotnull(d_week_seq#335) AND (d_week_seq#335 = Subquery scalar-subquery#15990, [id=#34187]))
[info]       :     :                                         :  +- Subquery scalar-subquery#15990, [id=#34187]
[info]       :     :                                         :     +- *(1) Project [d_week_seq#335]
[info]       :     :                                         :        +- *(1) Filter (isnotnull(d_date#333) AND (d_date#333 = 10959))
[info]       :     :                                         :           +- *(1) ColumnarToRow
[info]       :     :                                         :              +- BatchScan[d_date#333, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date:date,d_week_seq:int>
[info]       :     :                                         +- *(2) ColumnarToRow
[info]       :     :                                            +- BatchScan[d_date#333, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date:date,d_week_seq:int>
[info]       :     +- *(12) Sort [item_id#15996 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(item_id#15996, 4), true, [id=#34765]
[info]       :           +- *(11) Filter isnotnull(cs_item_rev#15997)
[info]       :              +- *(11) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(cs_ext_sales_price#900))])
[info]       :                 +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#34760]
[info]       :                    +- *(10) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900))])
[info]       :                       +- *(10) Project [cs_ext_sales_price#900, i_item_id#497]
[info]       :                          +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :                             :- *(10) Project [cs_ext_sales_price#900, cs_sold_date_sk#911, i_item_id#497]
[info]       :                             :  +- *(10) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]       :                             :     :- *(10) Project [cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]       :                             :     :  +- *(10) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]       :                             :     :     +- *(10) ColumnarToRow
[info]       :                             :     :        +- BatchScan[cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]       :                             :     +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#34407]
[info]       :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#34754]
[info]       :                                +- *(9) Project [d_date_sk#331]
[info]       :                                   +- *(9) BroadcastHashJoin [d_date#333], [d_date#333#16047], LeftSemi, BuildRight
[info]       :                                      :- *(9) Project [d_date_sk#331, d_date#333]
[info]       :                                      :  +- *(9) Filter isnotnull(d_date_sk#331)
[info]       :                                      :     +- *(9) ColumnarToRow
[info]       :                                      :        +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]       :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, date, true])), [id=#34749]
[info]       :                                         +- *(8) Project [d_date#333 AS d_date#333#16047]
[info]       :                                            +- *(8) Filter (isnotnull(d_week_seq#335) AND (d_week_seq#335 = ReusedSubquery Subquery scalar-subquery#15990, [id=#34187]))
[info]       :                                               :  +- ReusedSubquery Subquery scalar-subquery#15990, [id=#34187]
[info]       :                                               +- *(8) ColumnarToRow
[info]       :                                                  +- BatchScan[d_date#333, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date:date,d_week_seq:int>
[info]       +- *(19) Sort [item_id#16000 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(item_id#16000, 4), true, [id=#34802]
[info]             +- *(18) Filter isnotnull(ws_item_rev#16001)
[info]                +- *(18) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                   +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#34797]
[info]                      +- *(17) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                         +- *(17) Project [ws_ext_sales_price#1043, i_item_id#497]
[info]                            +- *(17) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(17) Project [ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_item_id#497]
[info]                               :  +- *(17) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                               :     :- *(17) Project [ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                               :     :  +- *(17) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                               :     :     +- *(17) ColumnarToRow
[info]                               :     :        +- BatchScan[ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                               :     +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#34407]
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#34791]
[info]                                  +- *(16) Project [d_date_sk#331]
[info]                                     +- *(16) BroadcastHashJoin [d_date#333], [d_date#333#16048], LeftSemi, BuildRight
[info]                                        :- *(16) Project [d_date_sk#331, d_date#333]
[info]                                        :  +- *(16) Filter isnotnull(d_date_sk#331)
[info]                                        :     +- *(16) ColumnarToRow
[info]                                        :        +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                                        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, date, true])), [id=#34786]
[info]                                           +- *(15) Project [d_date#333 AS d_date#333#16048]
[info]                                              +- *(15) Filter (isnotnull(d_week_seq#335) AND (d_week_seq#335 = ReusedSubquery Subquery scalar-subquery#15990, [id=#34187]))
[info]                                                 :  +- ReusedSubquery Subquery scalar-subquery#15990, [id=#34187]
[info]                                                 +- *(15) ColumnarToRow
[info]                                                    +- BatchScan[d_date#333, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date:date,d_week_seq:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 543 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q58                                                 544            544           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q59
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[s_store_name1#16175 ASC NULLS FIRST,s_store_id1#16177 ASC NULLS FIRST,d_week_seq1#16176 ASC NULLS FIRST], output=[s_store_name1#16175,s_store_id1#16177,d_week_seq1#16176,(sun_sales1 / sun_sales2)#16272,(mon_sales1 / mon_sales2)#16273,(tue_sales1 / tue_sales2)#16274,(wed_sales1 / wed_sales2)#16275,(thu_sales1 / thu_sales2)#16276,(fri_sales1 / fri_sales2)#16277,(sat_sales1 / sat_sales2)#16278])
[info] +- *(13) Project [s_store_name1#16175, s_store_id1#16177, d_week_seq1#16176, CheckOverflow((promote_precision(sun_sales1#16178) / promote_precision(sun_sales2#16188)), DecimalType(37,20), true) AS (sun_sales1 / sun_sales2)#16272, CheckOverflow((promote_precision(mon_sales1#16179) / promote_precision(mon_sales2#16189)), DecimalType(37,20), true) AS (mon_sales1 / mon_sales2)#16273, CheckOverflow((promote_precision(tue_sales1#16180) / promote_precision(tue_sales2#16190)), DecimalType(37,20), true) AS (tue_sales1 / tue_sales2)#16274, CheckOverflow((promote_precision(wed_sales1#16181) / promote_precision(wed_sales2#16191)), DecimalType(37,20), true) AS (wed_sales1 / wed_sales2)#16275, CheckOverflow((promote_precision(thu_sales1#16182) / promote_precision(thu_sales2#16192)), DecimalType(37,20), true) AS (thu_sales1 / thu_sales2)#16276, CheckOverflow((promote_precision(fri_sales1#16183) / promote_precision(fri_sales2#16193)), DecimalType(37,20), true) AS (fri_sales1 / fri_sales2)#16277, CheckOverflow((promote_precision(sat_sales1#16184) / promote_precision(sat_sales2#16194)), DecimalType(37,20), true) AS (sat_sales1 / sat_sales2)#16278]
[info]    +- *(13) SortMergeJoin [s_store_id1#16177, d_week_seq1#16176], [s_store_id2#16187, (d_week_seq2#16186 - 52)], Inner
[info]       :- *(6) Sort [s_store_id1#16177 ASC NULLS FIRST, d_week_seq1#16176 ASC NULLS FIRST], false, 0
[info]       :  +- Exchange hashpartitioning(s_store_id1#16177, d_week_seq1#16176, 4), true, [id=#35078]
[info]       :     +- *(5) Project [s_store_name#675 AS s_store_name1#16175, d_week_seq#335 AS d_week_seq1#16176, s_store_id#671 AS s_store_id1#16177, sun_sales#16195 AS sun_sales1#16178, mon_sales#16196 AS mon_sales1#16179, tue_sales#16197 AS tue_sales1#16180, wed_sales#16198 AS wed_sales1#16181, thu_sales#16199 AS thu_sales1#16182, fri_sales#16200 AS fri_sales1#16183, sat_sales#16201 AS sat_sales1#16184]
[info]       :        +- *(5) BroadcastHashJoin [d_week_seq#335], [d_week_seq#16220], Inner, BuildRight
[info]       :           :- *(5) Project [d_week_seq#335, sun_sales#16195, mon_sales#16196, tue_sales#16197, wed_sales#16198, thu_sales#16199, fri_sales#16200, sat_sales#16201, s_store_id#671, s_store_name#675]
[info]       :           :  +- *(5) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]       :           :     :- *(5) HashAggregate(keys=[d_week_seq#335, ss_store_sk#1170], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN ss_sales_price#1176 ELSE null END))])
[info]       :           :     :  +- Exchange hashpartitioning(d_week_seq#335, ss_store_sk#1170, 4), true, [id=#35056]
[info]       :           :     :     +- *(2) HashAggregate(keys=[d_week_seq#335, ss_store_sk#1170], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN ss_sales_price#1176 ELSE null END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN ss_sales_price#1176 ELSE null END))])
[info]       :           :     :        +- *(2) Project [ss_store_sk#1170, ss_sales_price#1176, d_week_seq#335, d_day_name#345]
[info]       :           :     :           +- *(2) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :           :     :              :- *(2) Project [ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :           :     :              :  +- *(2) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]       :           :     :              :     +- *(2) ColumnarToRow
[info]       :           :     :              :        +- BatchScan[ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]       :           :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35050]
[info]       :           :     :                 +- *(1) Project [d_date_sk#331, d_week_seq#335, d_day_name#345]
[info]       :           :     :                    +- *(1) Filter (isnotnull(d_date_sk#331) AND isnotnull(d_week_seq#335))
[info]       :           :     :                       +- *(1) ColumnarToRow
[info]       :           :     :                          +- BatchScan[d_date_sk#331, d_week_seq#335, d_day_name#345] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
[info]       :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35064]
[info]       :           :        +- *(3) Project [s_store_sk#670, s_store_id#671, s_store_name#675]
[info]       :           :           +- *(3) Filter (isnotnull(s_store_sk#670) AND isnotnull(s_store_id#671))
[info]       :           :              +- *(3) ColumnarToRow
[info]       :           :                 +- BatchScan[s_store_sk#670, s_store_id#671, s_store_name#675] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
[info]       :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35073]
[info]       :              +- *(4) Project [d_week_seq#16220]
[info]       :                 +- *(4) Filter (((isnotnull(d_month_seq#16219) AND (d_month_seq#16219 >= 1212)) AND (d_month_seq#16219 <= 1223)) AND isnotnull(d_week_seq#16220))
[info]       :                    +- *(4) ColumnarToRow
[info]       :                       +- BatchScan[d_month_seq#16219, d_week_seq#16220] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_month_seq:int,d_week_seq:int>
[info]       +- *(12) Sort [s_store_id2#16187 ASC NULLS FIRST, (d_week_seq2#16186 - 52) ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(s_store_id2#16187, (d_week_seq2#16186 - 52), 4), true, [id=#35208]
[info]             +- *(11) Project [d_week_seq#335 AS d_week_seq2#16186, s_store_id#671 AS s_store_id2#16187, sun_sales#16195 AS sun_sales2#16188, mon_sales#16196 AS mon_sales2#16189, tue_sales#16197 AS tue_sales2#16190, wed_sales#16198 AS wed_sales2#16191, thu_sales#16199 AS thu_sales2#16192, fri_sales#16200 AS fri_sales2#16193, sat_sales#16201 AS sat_sales2#16194]
[info]                +- *(11) BroadcastHashJoin [d_week_seq#335], [d_week_seq#16248], Inner, BuildRight
[info]                   :- *(11) Project [d_week_seq#335, sun_sales#16195, mon_sales#16196, tue_sales#16197, wed_sales#16198, thu_sales#16199, fri_sales#16200, sat_sales#16201, s_store_id#671]
[info]                   :  +- *(11) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                   :     :- *(11) HashAggregate(keys=[d_week_seq#335, ss_store_sk#1170], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#345 = Sunday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Monday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Tuesday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Wednesday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Thursday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Friday) THEN ss_sales_price#1176 ELSE null END)), sum(UnscaledValue(CASE WHEN (d_day_name#345 = Saturday) THEN ss_sales_price#1176 ELSE null END))])
[info]                   :     :  +- ReusedExchange [d_week_seq#335, ss_store_sk#1170, sum#16331L, sum#16332L, sum#16333L, sum#16334L, sum#16335L, sum#16336L, sum#16337L], Exchange hashpartitioning(d_week_seq#335, ss_store_sk#1170, 4), true, [id=#35056]
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35106]
[info]                   :        +- *(9) Project [s_store_sk#670, s_store_id#671]
[info]                   :           +- *(9) Filter (isnotnull(s_store_sk#670) AND isnotnull(s_store_id#671))
[info]                   :              +- *(9) ColumnarToRow
[info]                   :                 +- BatchScan[s_store_sk#670, s_store_id#671] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string>
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35115]
[info]                      +- *(10) Project [d_week_seq#16248]
[info]                         +- *(10) Filter (((isnotnull(d_month_seq#16247) AND (d_month_seq#16247 >= 1224)) AND (d_month_seq#16247 <= 1235)) AND isnotnull(d_week_seq#16248))
[info]                            +- *(10) ColumnarToRow
[info]                               +- BatchScan[d_month_seq#16247, d_week_seq#16248] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_month_seq:int,d_week_seq:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 307 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q59                                                 308            308           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q60
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST,total_sales#16373 ASC NULLS FIRST], output=[i_item_id#497,total_sales#16373])
[info] +- *(20) HashAggregate(keys=[i_item_id#497], functions=[sum(total_sales#16375)])
[info]    +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#35981]
[info]       +- *(19) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(total_sales#16375)])
[info]          +- Union
[info]             :- *(6) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             :  +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#35645]
[info]             :     +- *(5) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             :        +- *(5) Project [ss_ext_sales_price#1178, i_item_id#497]
[info]             :           +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :              :- *(5) Project [ss_item_sk#1165, ss_ext_sales_price#1178]
[info]             :              :  +- *(5) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]             :              :     :- *(5) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178]
[info]             :              :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :              :     :     :- *(5) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]             :              :     :     :  +- *(5) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_addr_sk#1169)) AND isnotnull(ss_item_sk#1165))
[info]             :              :     :     :     +- *(5) ColumnarToRow
[info]             :              :     :     :        +- BatchScan[ss_item_sk#1165, ss_addr_sk#1169, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]             :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35613]
[info]             :              :     :        +- *(1) Project [d_date_sk#331]
[info]             :              :     :           +- *(1) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 1998)) AND (d_moy#339 = 9)) AND isnotnull(d_date_sk#331))
[info]             :              :     :              +- *(1) ColumnarToRow
[info]             :              :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35622]
[info]             :              :        +- *(2) Project [ca_address_sk#233]
[info]             :              :           +- *(2) Filter ((isnotnull(ca_gmt_offset#244) AND (ca_gmt_offset#244 = -5.00)) AND isnotnull(ca_address_sk#233))
[info]             :              :              +- *(2) ColumnarToRow
[info]             :              :                 +- BatchScan[ca_address_sk#233, ca_gmt_offset#244] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
[info]             :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35639]
[info]             :                 +- *(4) BroadcastHashJoin [i_item_id#497], [i_item_id#497#16431], LeftSemi, BuildRight
[info]             :                    :- *(4) Project [i_item_sk#496, i_item_id#497]
[info]             :                    :  +- *(4) Filter isnotnull(i_item_sk#496)
[info]             :                    :     +- *(4) ColumnarToRow
[info]             :                    :        +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]             :                    +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true])), [id=#35635]
[info]             :                       +- *(3) Project [i_item_id#497 AS i_item_id#497#16431]
[info]             :                          +- *(3) Filter (isnotnull(i_category#508) AND (i_category#508 = Music))
[info]             :                             +- *(3) ColumnarToRow
[info]             :                                +- BatchScan[i_item_id#497, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_id:string,i_category:string>
[info]             :- *(12) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(cs_ext_sales_price#900))])
[info]             :  +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#35837]
[info]             :     +- *(11) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900))])
[info]             :        +- *(11) Project [cs_ext_sales_price#900, i_item_id#497]
[info]             :           +- *(11) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]             :              :- *(11) Project [cs_item_sk#892, cs_ext_sales_price#900]
[info]             :              :  +- *(11) BroadcastHashJoin [cs_bill_addr_sk#883], [ca_address_sk#233], Inner, BuildRight
[info]             :              :     :- *(11) Project [cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900]
[info]             :              :     :  +- *(11) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :              :     :     :- *(11) Project [cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]             :              :     :     :  +- *(11) Filter ((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_bill_addr_sk#883)) AND isnotnull(cs_item_sk#892))
[info]             :              :     :     :     +- *(11) ColumnarToRow
[info]             :              :     :     :        +- BatchScan[cs_bill_addr_sk#883, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]             :              :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35613]
[info]             :              :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35622]
[info]             :              +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35639]
[info]             +- *(18) HashAggregate(keys=[i_item_id#497], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#35947]
[info]                   +- *(17) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                      +- *(17) Project [ws_ext_sales_price#1043, i_item_id#497]
[info]                         +- *(17) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                            :- *(17) Project [ws_item_sk#1023, ws_ext_sales_price#1043]
[info]                            :  +- *(17) BroadcastHashJoin [ws_bill_addr_sk#1027], [ca_address_sk#233], Inner, BuildRight
[info]                            :     :- *(17) Project [ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043]
[info]                            :     :  +- *(17) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                            :     :     :- *(17) Project [ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                            :     :     :  +- *(17) Filter ((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_addr_sk#1027)) AND isnotnull(ws_item_sk#1023))
[info]                            :     :     :     +- *(17) ColumnarToRow
[info]                            :     :     :        +- BatchScan[ws_item_sk#1023, ws_bill_addr_sk#1027, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                            :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35613]
[info]                            :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35622]
[info]                            +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#35639]
[info] 
[info] 
[info]   Stopped after 1 iterations, 456 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q60                                                 457            457           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q61
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[promotions#16456 ASC NULLS FIRST,total#16457 ASC NULLS FIRST], output=[promotions#16456,total#16457,(CAST((CAST(CAST(promotions AS DECIMAL(15,4)) AS DECIMAL(15,4)) / CAST(CAST(total AS DECIMAL(15,4)) AS DECIMAL(15,4))) AS DECIMAL(35,20)) * CAST(CAST(100 AS DECIMAL(3,0)) AS DECIMAL(35,20)))#16460])
[info] +- *(16) Project [promotions#16456, total#16457, CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(promotions#16456 as decimal(15,4))) / promote_precision(cast(total#16457 as decimal(15,4)))), DecimalType(35,20), true)) * 100.00000000000000000000), DecimalType(38,19), true) AS (CAST((CAST(CAST(promotions AS DECIMAL(15,4)) AS DECIMAL(15,4)) / CAST(CAST(total AS DECIMAL(15,4)) AS DECIMAL(15,4))) AS DECIMAL(35,20)) * CAST(CAST(100 AS DECIMAL(3,0)) AS DECIMAL(35,20)))#16460]
[info]    +- BroadcastNestedLoopJoin BuildRight, Inner
[info]       :- *(8) HashAggregate(keys=[], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]       :  +- Exchange SinglePartition, true, [id=#36399]
[info]       :     +- *(7) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]       :        +- *(7) Project [ss_ext_sales_price#1178]
[info]       :           +- *(7) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]       :              :- *(7) Project [ss_item_sk#1165, ss_ext_sales_price#1178]
[info]       :              :  +- *(7) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]       :              :     :- *(7) Project [ss_item_sk#1165, ss_ext_sales_price#1178, c_current_addr_sk#160]
[info]       :              :     :  +- *(7) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]       :              :     :     :- *(7) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_ext_sales_price#1178]
[info]       :              :     :     :  +- *(7) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :              :     :     :     :- *(7) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]       :              :     :     :     :  +- *(7) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]       :              :     :     :     :     :- *(7) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]       :              :     :     :     :     :  +- *(7) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]       :              :     :     :     :     :     :- *(7) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]       :              :     :     :     :     :     :  +- *(7) Filter ((((isnotnull(ss_store_sk#1170) AND isnotnull(ss_promo_sk#1171)) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_item_sk#1165))
[info]       :              :     :     :     :     :     :     +- *(7) ColumnarToRow
[info]       :              :     :     :     :     :     :        +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ext_sales_price:decim...
[info]       :              :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36348]
[info]       :              :     :     :     :     :        +- *(1) Project [s_store_sk#670]
[info]       :              :     :     :     :     :           +- *(1) Filter ((isnotnull(s_gmt_offset#697) AND (s_gmt_offset#697 = -5.00)) AND isnotnull(s_store_sk#670))
[info]       :              :     :     :     :     :              +- *(1) ColumnarToRow
[info]       :              :     :     :     :     :                 +- BatchScan[s_store_sk#670, s_gmt_offset#697] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_gmt_offset:decimal(5,2)>
[info]       :              :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36357]
[info]       :              :     :     :     :        +- *(2) Project [p_promo_sk#589]
[info]       :              :     :     :     :           +- *(2) Filter ((((p_channel_dmail#597 = Y) OR (p_channel_email#598 = Y)) OR (p_channel_tv#600 = Y)) AND isnotnull(p_promo_sk#589))
[info]       :              :     :     :     :              +- *(2) ColumnarToRow
[info]       :              :     :     :     :                 +- BatchScan[p_promo_sk#589, p_channel_dmail#597, p_channel_email#598, p_channel_tv#600] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int,p_channel_dmail:string,p_channel_email:string,p_channel_tv:string>
[info]       :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36366]
[info]       :              :     :     :        +- *(3) Project [d_date_sk#331]
[info]       :              :     :     :           +- *(3) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 1998)) AND (d_moy#339 = 11)) AND isnotnull(d_date_sk#331))
[info]       :              :     :     :              +- *(3) ColumnarToRow
[info]       :              :     :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]       :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36375]
[info]       :              :     :        +- *(4) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]       :              :     :           +- *(4) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]       :              :     :              +- *(4) ColumnarToRow
[info]       :              :     :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
[info]       :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36384]
[info]       :              :        +- *(5) Project [ca_address_sk#233]
[info]       :              :           +- *(5) Filter ((isnotnull(ca_gmt_offset#244) AND (ca_gmt_offset#244 = -5.00)) AND isnotnull(ca_address_sk#233))
[info]       :              :              +- *(5) ColumnarToRow
[info]       :              :                 +- BatchScan[ca_address_sk#233, ca_gmt_offset#244] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
[info]       :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36393]
[info]       :                 +- *(6) Project [i_item_sk#496]
[info]       :                    +- *(6) Filter ((isnotnull(i_category#508) AND (i_category#508 = Jewelry)) AND isnotnull(i_item_sk#496))
[info]       :                       +- *(6) ColumnarToRow
[info]       :                          +- BatchScan[i_item_sk#496, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_category:string>
[info]       +- BroadcastExchange IdentityBroadcastMode, [id=#36653]
[info]          +- *(15) HashAggregate(keys=[], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]             +- Exchange SinglePartition, true, [id=#36566]
[info]                +- *(14) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                   +- *(14) Project [ss_ext_sales_price#1178]
[info]                      +- *(14) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                         :- *(14) Project [ss_item_sk#1165, ss_ext_sales_price#1178]
[info]                         :  +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                         :     :- *(14) Project [ss_item_sk#1165, ss_ext_sales_price#1178, c_current_addr_sk#160]
[info]                         :     :  +- *(14) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                         :     :     :- *(14) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_ext_sales_price#1178]
[info]                         :     :     :  +- *(14) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                         :     :     :     :- *(14) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                         :     :     :     :  +- *(14) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                         :     :     :     :     :- *(14) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                         :     :     :     :     :  +- *(14) Filter (((isnotnull(ss_store_sk#1170) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_item_sk#1165))
[info]                         :     :     :     :     :     +- *(14) ColumnarToRow
[info]                         :     :     :     :     :        +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                         :     :     :     :     +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36348]
[info]                         :     :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36366]
[info]                         :     :     +- ReusedExchange [c_customer_sk#156, c_current_addr_sk#160], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36375]
[info]                         :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36384]
[info]                         +- ReusedExchange [i_item_sk#496], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36393]
[info] 
[info] 
[info]   Stopped after 1 iterations, 478 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q61                                                 478            478           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q62
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[substring(w_warehouse_name, 1, 20)#16541 ASC NULLS FIRST,sm_type#1684 ASC NULLS FIRST,web_name#1370 ASC NULLS FIRST], output=[substring(w_warehouse_name, 1, 20)#16541,sm_type#1684,web_name#1370,30 days #16531L,31 - 60 days #16532L,61 - 90 days #16533L,91 - 120 days #16534L,>120 days #16535L])
[info] +- *(6) HashAggregate(keys=[substring(w_warehouse_name#1623, 1, 20)#16566, sm_type#1684, web_name#1370], functions=[sum(cast(CASE WHEN ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 30) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 30) AND ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 60)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 60) AND ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 90)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 90) AND ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 120)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 120) THEN 1 ELSE 0 END as bigint))])
[info]    +- Exchange hashpartitioning(substring(w_warehouse_name#1623, 1, 20)#16566, sm_type#1684, web_name#1370, 4), true, [id=#36833]
[info]       +- *(5) HashAggregate(keys=[substring(w_warehouse_name#1623, 1, 20) AS substring(w_warehouse_name#1623, 1, 20)#16566, sm_type#1684, web_name#1370], functions=[partial_sum(cast(CASE WHEN ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 30) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 30) AND ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 60)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 60) AND ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 90)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 90) AND ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) <= 120)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN ((ws_ship_date_sk#1022 - ws_sold_date_sk#1054) > 120) THEN 1 ELSE 0 END as bigint))])
[info]          +- *(5) Project [ws_ship_date_sk#1022, ws_sold_date_sk#1054, w_warehouse_name#1623, sm_type#1684, web_name#1370]
[info]             +- *(5) BroadcastHashJoin [ws_ship_date_sk#1022], [d_date_sk#331], Inner, BuildRight
[info]                :- *(5) Project [ws_ship_date_sk#1022, ws_sold_date_sk#1054, w_warehouse_name#1623, sm_type#1684, web_name#1370]
[info]                :  +- *(5) BroadcastHashJoin [ws_web_site_sk#1033], [web_site_sk#1366], Inner, BuildRight
[info]                :     :- *(5) Project [ws_ship_date_sk#1022, ws_web_site_sk#1033, ws_sold_date_sk#1054, w_warehouse_name#1623, sm_type#1684]
[info]                :     :  +- *(5) BroadcastHashJoin [ws_ship_mode_sk#1034], [sm_ship_mode_sk#1682], Inner, BuildRight
[info]                :     :     :- *(5) Project [ws_ship_date_sk#1022, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_sold_date_sk#1054, w_warehouse_name#1623]
[info]                :     :     :  +- *(5) BroadcastHashJoin [ws_warehouse_sk#1035], [w_warehouse_sk#1621], Inner, BuildRight
[info]                :     :     :     :- *(5) Project [ws_ship_date_sk#1022, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_sold_date_sk#1054]
[info]                :     :     :     :  +- *(5) Filter (((isnotnull(ws_warehouse_sk#1035) AND isnotnull(ws_ship_mode_sk#1034)) AND isnotnull(ws_web_site_sk#1033)) AND isnotnull(ws_ship_date_sk#1022))
[info]                :     :     :     :     +- *(5) ColumnarToRow
[info]                :     :     :     :        +- BatchScan[ws_ship_date_sk#1022, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_ship_date_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int>
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36800]
[info]                :     :     :        +- *(1) Project [w_warehouse_sk#1621, w_warehouse_name#1623]
[info]                :     :     :           +- *(1) Filter isnotnull(w_warehouse_sk#1621)
[info]                :     :     :              +- *(1) ColumnarToRow
[info]                :     :     :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36809]
[info]                :     :        +- *(2) Project [sm_ship_mode_sk#1682, sm_type#1684]
[info]                :     :           +- *(2) Filter isnotnull(sm_ship_mode_sk#1682)
[info]                :     :              +- *(2) ColumnarToRow
[info]                :     :                 +- BatchScan[sm_ship_mode_sk#1682, sm_type#1684] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/ship_mode], ReadSchema: struct<sm_ship_mode_sk:int,sm_type:string>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36818]
[info]                :        +- *(3) Project [web_site_sk#1366, web_name#1370]
[info]                :           +- *(3) Filter isnotnull(web_site_sk#1366)
[info]                :              +- *(3) ColumnarToRow
[info]                :                 +- BatchScan[web_site_sk#1366, web_name#1370] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_site], ReadSchema: struct<web_site_sk:int,web_name:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36827]
[info]                   +- *(4) Project [d_date_sk#331]
[info]                      +- *(4) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                         +- *(4) ColumnarToRow
[info]                            +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 159 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q62                                                 159            159           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q63
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_manager_id#516 ASC NULLS FIRST,avg_monthly_sales#16588 ASC NULLS FIRST,sum_sales#16587 ASC NULLS FIRST], output=[i_manager_id#516,sum_sales#16587,avg_monthly_sales#16588])
[info] +- *(7) Project [i_manager_id#516, sum_sales#16587, avg_monthly_sales#16588]
[info]    +- *(7) Filter (CASE WHEN (avg_monthly_sales#16588 > 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#16587 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#16588 as decimal(22,6)))), DecimalType(22,6), true))) / promote_precision(cast(avg_monthly_sales#16588 as decimal(22,6)))), DecimalType(38,16), true) ELSE null END > 0.1000000000000000)
[info]       +- Window [avg(_w0#16592) windowspecdefinition(i_manager_id#516, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#16588], [i_manager_id#516]
[info]          +- *(6) Sort [i_manager_id#516 ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning(i_manager_id#516, 4), true, [id=#37004]
[info]                +- *(5) HashAggregate(keys=[i_manager_id#516, d_moy#339], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]                   +- Exchange hashpartitioning(i_manager_id#516, d_moy#339, 4), true, [id=#37000]
[info]                      +- *(4) HashAggregate(keys=[i_manager_id#516, d_moy#339], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]                         +- *(4) Project [i_manager_id#516, ss_sales_price#1176, d_moy#339]
[info]                            +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :- *(4) Project [i_manager_id#516, ss_store_sk#1170, ss_sales_price#1176, d_moy#339]
[info]                               :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :- *(4) Project [i_manager_id#516, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                               :     :  +- *(4) BroadcastHashJoin [i_item_sk#496], [ss_item_sk#1165], Inner, BuildLeft
[info]                               :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36972]
[info]                               :     :     :  +- *(1) Project [i_item_sk#496, i_manager_id#516]
[info]                               :     :     :     +- *(1) Filter ((((i_category#508 IN (Books,Children,Electronics) AND i_class#506 IN (personal,portable,refernece,self-help)) AND i_brand#504 IN (scholaramalgamalg #14,scholaramalgamalg #7,exportiunivamalg #9,scholaramalgamalg #9)) OR ((i_category#508 IN (Women,Music,Men) AND i_class#506 IN (accessories,classical,fragrances,pants)) AND i_brand#504 IN (amalgimporto #1,edu packscholar #1,exportiimporto #1,importoamalg #1))) AND isnotnull(i_item_sk#496))
[info]                               :     :     :        +- *(1) ColumnarToRow
[info]                               :     :     :           +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_manager_id:int>
[info]                               :     :     +- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                               :     :        +- *(4) Filter ((isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]                               :     :           +- *(4) ColumnarToRow
[info]                               :     :              +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36985]
[info]                               :        +- *(2) Project [d_date_sk#331, d_moy#339]
[info]                               :           +- *(2) Filter (d_month_seq#334 INSET (1200,1211,1205,1201,1206,1210,1207,1202,1209,1203,1208,1204) AND isnotnull(d_date_sk#331))
[info]                               :              +- *(2) ColumnarToRow
[info]                               :                 +- BatchScan[d_date_sk#331, d_month_seq#334, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_moy:int>
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#36994]
[info]                                  +- *(3) Project [s_store_sk#670]
[info]                                     +- *(3) Filter isnotnull(s_store_sk#670)
[info]                                        +- *(3) ColumnarToRow
[info]                                           +- BatchScan[s_store_sk#670] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 184 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q63                                                 185            185           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q64
[info] == Physical Plan ==
[info] *(62) Sort [product_name#16879 ASC NULLS FIRST, store_name#16881 ASC NULLS FIRST, cnt#17113L ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(product_name#16879 ASC NULLS FIRST, store_name#16881 ASC NULLS FIRST, cnt#17113L ASC NULLS FIRST, 4), true, [id=#39282]
[info]    +- *(61) Project [product_name#16879, store_name#16881, store_zip#16882, b_street_number#16883, b_streen_name#16884, b_city#16885, b_zip#16886, c_street_number#16887, c_street_name#16888, c_city#16889, c_zip#16890, syear#16891, cnt#16894L, s1#16895, s2#16896, s3#16897, s1#17114, s2#17115, s3#17116, syear#17110, cnt#17113L]
[info]       +- *(61) SortMergeJoin [item_sk#16880, store_name#16881, store_zip#16882], [item_sk#17099, store_name#17100, store_zip#17101], Inner, (cnt#17113L <= cnt#16894L)
[info]          :- *(30) Sort [item_sk#16880 ASC NULLS FIRST, store_name#16881 ASC NULLS FIRST, store_zip#16882 ASC NULLS FIRST], false, 0
[info]          :  +- Exchange hashpartitioning(item_sk#16880, store_name#16881, store_zip#16882, 4), true, [id=#38665]
[info]          :     +- *(29) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#16986, ca_street_name#16987, ca_city#16990, ca_zip#16993, d_year#337, d_year#16920, d_year#16948], functions=[count(1), sum(UnscaledValue(ss_wholesale_cost#1174)), sum(UnscaledValue(ss_list_price#1175)), sum(UnscaledValue(ss_coupon_amt#1182))])
[info]          :        +- Exchange hashpartitioning(i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#16986, ca_street_name#16987, ca_city#16990, ca_zip#16993, d_year#337, d_year#16920, d_year#16948, 4), true, [id=#38661]
[info]          :           +- *(28) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#16986, ca_street_name#16987, ca_city#16990, ca_zip#16993, d_year#337, d_year#16920, d_year#16948], functions=[partial_count(1), partial_sum(UnscaledValue(ss_wholesale_cost#1174)), partial_sum(UnscaledValue(ss_list_price#1175)), partial_sum(UnscaledValue(ss_coupon_amt#1182))])
[info]          :              +- *(28) Project [ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, d_year#16920, d_year#16948, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#16986, ca_street_name#16987, ca_city#16990, ca_zip#16993, i_item_sk#496, i_product_name#517]
[info]          :                 +- *(28) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]          :                    :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#16920, d_year#16948, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#16986, ca_street_name#16987, ca_city#16990, ca_zip#16993]
[info]          :                    :  +- *(28) BroadcastHashJoin [hd_income_band_sk#16980], [ib_income_band_sk#16997], Inner, BuildRight
[info]          :                    :     :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#16920, d_year#16948, hd_income_band_sk#16980, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#16986, ca_street_name#16987, ca_city#16990, ca_zip#16993]
[info]          :                    :     :  +- *(28) BroadcastHashJoin [hd_income_band_sk#449], [ib_income_band_sk#1711], Inner, BuildRight
[info]          :                    :     :     :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#16920, d_year#16948, hd_income_band_sk#449, hd_income_band_sk#16980, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#16986, ca_street_name#16987, ca_city#16990, ca_zip#16993]
[info]          :                    :     :     :  +- *(28) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#16984], Inner, BuildRight
[info]          :                    :     :     :     :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#16920, d_year#16948, hd_income_band_sk#449, hd_income_band_sk#16980, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242]
[info]          :                    :     :     :     :  +- *(28) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]          :                    :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#16920, d_year#16948, hd_income_band_sk#449, hd_income_band_sk#16980]
[info]          :                    :     :     :     :     :  +- *(28) BroadcastHashJoin [c_current_hdemo_sk#159], [hd_demo_sk#16979], Inner, BuildRight
[info]          :                    :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#16920, d_year#16948, hd_income_band_sk#449]
[info]          :                    :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#16920, d_year#16948]
[info]          :                    :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#16920, d_year#16948]
[info]          :                    :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#16970], Inner, BuildRight, NOT (cd_marital_status#292 = cd_marital_status#16972)
[info]          :                    :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#16920, d_year#16948, cd_marital_status#292]
[info]          :                    :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#16920, d_year#16948]
[info]          :                    :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [c_first_shipto_date_sk#161], [d_date_sk#16942], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, d_year#16920]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [c_first_sales_date_sk#162], [d_date_sk#16914], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) SortMergeJoin [ss_item_sk#1165], [cs_item_sk#892], Inner
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(6) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#38139]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- *(5) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(5) SortMergeJoin [ss_item_sk#1165, ss_ticket_number#1172L], [sr_item_sk#792, sr_ticket_number#799L], Inner
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :  +- Exchange hashpartitioning(ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#38121]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :        +- *(1) Filter ((((((((isnotnull(ss_item_sk#1165) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_cdemo_sk#1167)) AND isnotnull(ss_promo_sk#1171)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_addr_sk#1169))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :           +- *(1) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_...
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(4) Sort [sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- Exchange hashpartitioning(sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#38131]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                    +- *(3) Filter (isnotnull(sr_item_sk#792) AND isnotnull(sr_ticket_number#799L))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                       +- *(3) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                          +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- *(12) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(12) Project [cs_item_sk#892]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(12) Filter (isnotnull(sum(cs_ext_list_price#902)#16907) AND (cast(sum(cs_ext_list_price#902)#16907 as decimal(21,2)) > CheckOverflow((2.00 * promote_precision(sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))#16908)), DecimalType(21,2), true)))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(12) HashAggregate(keys=[cs_item_sk#892], functions=[sum(UnscaledValue(cs_ext_list_price#902)), sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))])
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#38168]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                    +- *(11) HashAggregate(keys=[cs_item_sk#892], functions=[partial_sum(UnscaledValue(cs_ext_list_price#902)), partial_sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))])
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                       +- *(11) Project [cs_item_sk#892, cs_ext_list_price#902, cr_refunded_cash#63, cr_reversed_charge#64, cr_store_credit#65]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                          +- *(11) SortMergeJoin [cs_item_sk#892, cs_order_number#894L], [cr_item_sk#42, cr_order_number#56L], Inner
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :- *(8) Sort [cs_item_sk#892 ASC NULLS FIRST, cs_order_number#894L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :  +- Exchange hashpartitioning(cs_item_sk#892, cs_order_number#894L, 4), true, [id=#38149]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :     +- *(7) Project [cs_item_sk#892, cs_order_number#894L, cs_ext_list_price#902]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :        +- *(7) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_order_number#894L))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :           +- *(7) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :              +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_ext_list_price#902] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_ext_list_price:decimal(7,2)>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             +- *(10) Sort [cr_item_sk#42 ASC NULLS FIRST, cr_order_number#56L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                +- Exchange hashpartitioning(cr_item_sk#42, cr_order_number#56L, 4), true, [id=#38159]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                   +- *(9) Project [cr_item_sk#42, cr_order_number#56L, cr_refunded_cash#63, cr_reversed_charge#64, cr_store_credit#65]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                      +- *(9) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                         +- *(9) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                            +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_refunded_cash#63, cr_reversed_charge#64, cr_store_credit#65] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_refunded_cash:decimal(7,2),cr_reversed_charge:dec...
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38183]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(13) Project [d_date_sk#331, d_year#337]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(13) Filter ((isnotnull(d_year#337) AND (d_year#337 = 1999)) AND isnotnull(d_date_sk#331))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(13) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38192]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(14) Project [s_store_sk#670, s_store_name#675, s_zip#695]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(14) Filter ((isnotnull(s_store_sk#670) AND isnotnull(s_store_name#675)) AND isnotnull(s_zip#695))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(14) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_zip:string>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38201]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :        +- *(15) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :           +- *(15) Filter (((((isnotnull(c_customer_sk#156) AND isnotnull(c_first_sales_date_sk#162)) AND isnotnull(c_first_shipto_date_sk#161)) AND isnotnull(c_current_cdemo_sk#158)) AND isnotnull(c_current_hdemo_sk#159)) AND isnotnull(c_current_addr_sk#160))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :              +- *(15) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int,c_fi...
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38210]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :        +- *(16) Project [d_date_sk#16914, d_year#16920]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :           +- *(16) Filter isnotnull(d_date_sk#16914)
[info]          :                    :     :     :     :     :     :     :     :     :     :     :              +- *(16) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[d_date_sk#16914, d_year#16920] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]          :                    :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#16942, d_year#16948], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38210]
[info]          :                    :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38228]
[info]          :                    :     :     :     :     :     :     :     :     :        +- *(18) Project [cd_demo_sk#290, cd_marital_status#292]
[info]          :                    :     :     :     :     :     :     :     :     :           +- *(18) Filter (isnotnull(cd_demo_sk#290) AND isnotnull(cd_marital_status#292))
[info]          :                    :     :     :     :     :     :     :     :     :              +- *(18) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>
[info]          :                    :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#16970, cd_marital_status#16972], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38228]
[info]          :                    :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38246]
[info]          :                    :     :     :     :     :     :     :        +- *(20) Project [p_promo_sk#589]
[info]          :                    :     :     :     :     :     :     :           +- *(20) Filter isnotnull(p_promo_sk#589)
[info]          :                    :     :     :     :     :     :     :              +- *(20) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :                 +- BatchScan[p_promo_sk#589] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int>
[info]          :                    :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38255]
[info]          :                    :     :     :     :     :     :        +- *(21) Project [hd_demo_sk#448, hd_income_band_sk#449]
[info]          :                    :     :     :     :     :     :           +- *(21) Filter (isnotnull(hd_demo_sk#448) AND isnotnull(hd_income_band_sk#449))
[info]          :                    :     :     :     :     :     :              +- *(21) ColumnarToRow
[info]          :                    :     :     :     :     :     :                 +- BatchScan[hd_demo_sk#448, hd_income_band_sk#449] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_income_band_sk:int>
[info]          :                    :     :     :     :     :     +- ReusedExchange [hd_demo_sk#16979, hd_income_band_sk#16980], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38255]
[info]          :                    :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38273]
[info]          :                    :     :     :     :        +- *(23) Project [ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242]
[info]          :                    :     :     :     :           +- *(23) Filter isnotnull(ca_address_sk#233)
[info]          :                    :     :     :     :              +- *(23) ColumnarToRow
[info]          :                    :     :     :     :                 +- BatchScan[ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_city:string,ca_zip:string>
[info]          :                    :     :     :     +- ReusedExchange [ca_address_sk#16984, ca_street_number#16986, ca_street_name#16987, ca_city#16990, ca_zip#16993], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38273]
[info]          :                    :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38291]
[info]          :                    :     :        +- *(25) Project [ib_income_band_sk#1711]
[info]          :                    :     :           +- *(25) Filter isnotnull(ib_income_band_sk#1711)
[info]          :                    :     :              +- *(25) ColumnarToRow
[info]          :                    :     :                 +- BatchScan[ib_income_band_sk#1711] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/income_band], ReadSchema: struct<ib_income_band_sk:int>
[info]          :                    :     +- ReusedExchange [ib_income_band_sk#16997], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38291]
[info]          :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38309]
[info]          :                       +- *(27) Project [i_item_sk#496, i_product_name#517]
[info]          :                          +- *(27) Filter (((((((cast(i_current_price#501 as decimal(12,2)) <= 74.00) AND (cast(i_current_price#501 as decimal(12,2)) >= 65.00)) AND (cast(i_current_price#501 as decimal(12,2)) <= 79.00)) AND isnotnull(i_current_price#501)) AND i_color#513 IN (purple,burlywood,indian,spring,floral,medium)) AND (i_current_price#501 >= 64.00)) AND isnotnull(i_item_sk#496))
[info]          :                             +- *(27) ColumnarToRow
[info]          :                                +- BatchScan[i_item_sk#496, i_current_price#501, i_color#513, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_color:string,i_product_name:string>
[info]          +- *(60) Sort [item_sk#17099 ASC NULLS FIRST, store_name#17100 ASC NULLS FIRST, store_zip#17101 ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning(item_sk#17099, store_name#17100, store_zip#17101, 4), true, [id=#39274]
[info]                +- *(59) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#17072, ca_street_name#17073, ca_city#17076, ca_zip#17079, d_year#337, d_year#17006, d_year#17034], functions=[count(1), sum(UnscaledValue(ss_wholesale_cost#1174)), sum(UnscaledValue(ss_list_price#1175)), sum(UnscaledValue(ss_coupon_amt#1182))])
[info]                   +- Exchange hashpartitioning(i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#17072, ca_street_name#17073, ca_city#17076, ca_zip#17079, d_year#337, d_year#17006, d_year#17034, 4), true, [id=#39070]
[info]                      +- *(58) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#17072, ca_street_name#17073, ca_city#17076, ca_zip#17079, d_year#337, d_year#17006, d_year#17034], functions=[partial_count(1), partial_sum(UnscaledValue(ss_wholesale_cost#1174)), partial_sum(UnscaledValue(ss_list_price#1175)), partial_sum(UnscaledValue(ss_coupon_amt#1182))])
[info]                         +- *(58) Project [ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, d_year#17006, d_year#17034, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#17072, ca_street_name#17073, ca_city#17076, ca_zip#17079, i_item_sk#496, i_product_name#517]
[info]                            +- *(58) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                               :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#17006, d_year#17034, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#17072, ca_street_name#17073, ca_city#17076, ca_zip#17079]
[info]                               :  +- *(58) BroadcastHashJoin [hd_income_band_sk#17066], [ib_income_band_sk#17083], Inner, BuildRight
[info]                               :     :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#17006, d_year#17034, hd_income_band_sk#17066, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#17072, ca_street_name#17073, ca_city#17076, ca_zip#17079]
[info]                               :     :  +- *(58) BroadcastHashJoin [hd_income_band_sk#449], [ib_income_band_sk#1711], Inner, BuildRight
[info]                               :     :     :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#17006, d_year#17034, hd_income_band_sk#449, hd_income_band_sk#17066, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#17072, ca_street_name#17073, ca_city#17076, ca_zip#17079]
[info]                               :     :     :  +- *(58) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#17070], Inner, BuildRight
[info]                               :     :     :     :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#17006, d_year#17034, hd_income_band_sk#449, hd_income_band_sk#17066, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242]
[info]                               :     :     :     :  +- *(58) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]                               :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#17006, d_year#17034, hd_income_band_sk#449, hd_income_band_sk#17066]
[info]                               :     :     :     :     :  +- *(58) BroadcastHashJoin [c_current_hdemo_sk#159], [hd_demo_sk#17065], Inner, BuildRight
[info]                               :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#17006, d_year#17034, hd_income_band_sk#449]
[info]                               :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]                               :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#17006, d_year#17034]
[info]                               :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#17006, d_year#17034]
[info]                               :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#17056], Inner, BuildRight, NOT (cd_marital_status#292 = cd_marital_status#17058)
[info]                               :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#17006, d_year#17034, cd_marital_status#292]
[info]                               :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#17006, d_year#17034]
[info]                               :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [c_first_shipto_date_sk#161], [d_date_sk#17028], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, d_year#17006]
[info]                               :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [c_first_sales_date_sk#162], [d_date_sk#17000], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) SortMergeJoin [ss_item_sk#1165], [cs_item_sk#892], Inner
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(36) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- ReusedExchange [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186], Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#38139]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- *(42) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(42) Project [cs_item_sk#892]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(42) Filter (isnotnull(sum(cs_ext_list_price#902)#16912) AND (cast(sum(cs_ext_list_price#902)#16912 as decimal(21,2)) > CheckOverflow((2.00 * promote_precision(sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))#16913)), DecimalType(21,2), true)))
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(42) HashAggregate(keys=[cs_item_sk#892], functions=[sum(UnscaledValue(cs_ext_list_price#902)), sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))])
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- ReusedExchange [cs_item_sk#892, sum#17288L, sum#17289], Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#38168]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38391]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(43) Project [d_date_sk#331, d_year#337]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(43) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(43) ColumnarToRow
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [s_store_sk#670, s_store_name#675, s_zip#695], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38192]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38201]
[info]                               :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#17000, d_year#17006], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38210]
[info]                               :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#17028, d_year#17034], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38210]
[info]                               :     :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#290, cd_marital_status#292], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38228]
[info]                               :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#17056, cd_marital_status#17058], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38228]
[info]                               :     :     :     :     :     :     :     +- ReusedExchange [p_promo_sk#589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38246]
[info]                               :     :     :     :     :     :     +- ReusedExchange [hd_demo_sk#448, hd_income_band_sk#449], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38255]
[info]                               :     :     :     :     :     +- ReusedExchange [hd_demo_sk#17065, hd_income_band_sk#17066], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38255]
[info]                               :     :     :     :     +- ReusedExchange [ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38273]
[info]                               :     :     :     +- ReusedExchange [ca_address_sk#17070, ca_street_number#17072, ca_street_name#17073, ca_city#17076, ca_zip#17079], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38273]
[info]                               :     :     +- ReusedExchange [ib_income_band_sk#1711], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38291]
[info]                               :     +- ReusedExchange [ib_income_band_sk#17083], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38291]
[info]                               +- ReusedExchange [i_item_sk#496, i_product_name#517], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#38309]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1643 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q64                                                1644           1644           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q65
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[s_store_name#675 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST], output=[s_store_name#675,i_item_desc#500,revenue#17349,i_current_price#501,i_wholesale_cost#502,i_brand#504])
[info] +- *(11) Project [s_store_name#675, i_item_desc#500, revenue#17349, i_current_price#501, i_wholesale_cost#502, i_brand#504]
[info]    +- *(11) SortMergeJoin [ss_store_sk#17359], [ss_store_sk#1170], Inner, (cast(revenue#17349 as decimal(23,7)) <= CheckOverflow((0.100000 * promote_precision(ave#17348)), DecimalType(23,7), true))
[info]       :- *(6) Sort [ss_store_sk#17359 ASC NULLS FIRST], false, 0
[info]       :  +- Exchange hashpartitioning(ss_store_sk#17359, 4), true, [id=#39520]
[info]       :     +- *(5) Project [s_store_name#675, ss_store_sk#17359, revenue#17349, i_item_desc#500, i_current_price#501, i_wholesale_cost#502, i_brand#504]
[info]       :        +- *(5) BroadcastHashJoin [ss_item_sk#17354], [i_item_sk#496], Inner, BuildRight
[info]       :           :- *(5) Project [s_store_name#675, ss_store_sk#17359, ss_item_sk#17354, revenue#17349]
[info]       :           :  +- *(5) BroadcastHashJoin [s_store_sk#670], [ss_store_sk#17359], Inner, BuildLeft
[info]       :           :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#39487]
[info]       :           :     :  +- *(1) Project [s_store_sk#670, s_store_name#675]
[info]       :           :     :     +- *(1) Filter isnotnull(s_store_sk#670)
[info]       :           :     :        +- *(1) ColumnarToRow
[info]       :           :     :           +- BatchScan[s_store_sk#670, s_store_name#675] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string>
[info]       :           :     +- *(5) Filter isnotnull(revenue#17349)
[info]       :           :        +- *(5) HashAggregate(keys=[ss_store_sk#17359, ss_item_sk#17354], functions=[sum(UnscaledValue(ss_sales_price#17365))])
[info]       :           :           +- Exchange hashpartitioning(ss_store_sk#17359, ss_item_sk#17354, 4), true, [id=#39504]
[info]       :           :              +- *(3) HashAggregate(keys=[ss_store_sk#17359, ss_item_sk#17354], functions=[partial_sum(UnscaledValue(ss_sales_price#17365))])
[info]       :           :                 +- *(3) Project [ss_item_sk#17354, ss_store_sk#17359, ss_sales_price#17365]
[info]       :           :                    +- *(3) BroadcastHashJoin [ss_sold_date_sk#17375], [d_date_sk#331], Inner, BuildRight
[info]       :           :                       :- *(3) Project [ss_item_sk#17354, ss_store_sk#17359, ss_sales_price#17365, ss_sold_date_sk#17375]
[info]       :           :                       :  +- *(3) Filter ((isnotnull(ss_sold_date_sk#17375) AND isnotnull(ss_store_sk#17359)) AND isnotnull(ss_item_sk#17354))
[info]       :           :                       :     +- *(3) ColumnarToRow
[info]       :           :                       :        +- BatchScan[ss_item_sk#17354, ss_store_sk#17359, ss_sales_price#17365, ss_sold_date_sk#17375] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]       :           :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#39498]
[info]       :           :                          +- *(2) Project [d_date_sk#331]
[info]       :           :                             +- *(2) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1176)) AND (d_month_seq#334 <= 1187)) AND isnotnull(d_date_sk#331))
[info]       :           :                                +- *(2) ColumnarToRow
[info]       :           :                                   +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]       :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#39515]
[info]       :              +- *(4) Project [i_item_sk#496, i_item_desc#500, i_current_price#501, i_wholesale_cost#502, i_brand#504]
[info]       :                 +- *(4) Filter isnotnull(i_item_sk#496)
[info]       :                    +- *(4) ColumnarToRow
[info]       :                       +- BatchScan[i_item_sk#496, i_item_desc#500, i_current_price#501, i_wholesale_cost#502, i_brand#504] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_desc:string,i_current_price:decimal(7,2),i_wholesale_cost:decimal(7,2...
[info]       +- *(10) Sort [ss_store_sk#1170 ASC NULLS FIRST], false, 0
[info]          +- *(10) HashAggregate(keys=[ss_store_sk#1170], functions=[avg(revenue#17347)])
[info]             +- Exchange hashpartitioning(ss_store_sk#1170, 4), true, [id=#39614]
[info]                +- *(9) HashAggregate(keys=[ss_store_sk#1170], functions=[partial_avg(revenue#17347)])
[info]                   +- *(9) HashAggregate(keys=[ss_store_sk#1170, ss_item_sk#1165], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]                      +- Exchange hashpartitioning(ss_store_sk#1170, ss_item_sk#1165, 4), true, [id=#39577]
[info]                         +- *(8) HashAggregate(keys=[ss_store_sk#1170, ss_item_sk#1165], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]                            +- *(8) Project [ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176]
[info]                               +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                                  :- *(8) Project [ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                                  :  +- *(8) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]                                  :     +- *(8) ColumnarToRow
[info]                                  :        +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]                                  +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#39498]
[info] 
[info] 
[info]   Stopped after 1 iterations, 203 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q65                                                 203            203           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q66
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#1623 ASC NULLS FIRST], output=[w_warehouse_name#1623,w_warehouse_sq_ft#1624,w_city#1629,w_county#1630,w_state#1631,w_country#1633,ship_carriers#17662,year#17663,jan_sales#17714,feb_sales#17715,mar_sales#17716,apr_sales#17717,may_sales#17718,jun_sales#17719,jul_sales#17720,aug_sales#17721,sep_sales#17722,oct_sales#17723,nov_sales#17724,dec_sales#17725,jan_sales_per_sq_foot#17726,feb_sales_per_sq_foot#17727,mar_sales_per_sq_foot#17728,apr_sales_per_sq_foot#17729,... 20 more fields])
[info] +- *(14) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, ship_carriers#17662, year#17663], functions=[sum(jan_sales#17664), sum(feb_sales#17665), sum(mar_sales#17666), sum(apr_sales#17667), sum(may_sales#17668), sum(jun_sales#17669), sum(jul_sales#17670), sum(aug_sales#17671), sum(sep_sales#17672), sum(oct_sales#17673), sum(nov_sales#17674), sum(dec_sales#17675), sum(CheckOverflow((promote_precision(jan_sales#17664) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(feb_sales#17665) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(mar_sales#17666) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(apr_sales#17667) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(may_sales#17668) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jun_sales#17669) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(jul_sales#17670) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(aug_sales#17671) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(sep_sales#17672) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(oct_sales#17673) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(nov_sales#17674) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), sum(CheckOverflow((promote_precision(dec_sales#17675) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields])
[info]    +- Exchange hashpartitioning(w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, ship_carriers#17662, year#17663, 4), true, [id=#40157]
[info]       +- *(13) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, ship_carriers#17662, year#17663], functions=[partial_sum(jan_sales#17664), partial_sum(feb_sales#17665), partial_sum(mar_sales#17666), partial_sum(apr_sales#17667), partial_sum(may_sales#17668), partial_sum(jun_sales#17669), partial_sum(jul_sales#17670), partial_sum(aug_sales#17671), partial_sum(sep_sales#17672), partial_sum(oct_sales#17673), partial_sum(nov_sales#17674), partial_sum(dec_sales#17675), partial_sum(CheckOverflow((promote_precision(jan_sales#17664) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(feb_sales#17665) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(mar_sales#17666) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(apr_sales#17667) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(may_sales#17668) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jun_sales#17669) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(jul_sales#17670) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(aug_sales#17671) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(sep_sales#17672) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(oct_sales#17673) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(nov_sales#17674) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), partial_sum(CheckOverflow((promote_precision(dec_sales#17675) / promote_precision(cast(cast(w_warehouse_sq_ft#1624 as decimal(10,0)) as decimal(28,2)))), DecimalType(38,12), true)), ... 12 more fields])
[info]          +- Union
[info]             :- *(6) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337], functions=[sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)])
[info]             :  +- Exchange hashpartitioning(w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, 4), true, [id=#39946]
[info]             :     +- *(5) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337], functions=[partial_sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#1049 as decimal(12,2))) * promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)])
[info]             :        +- *(5) Project [ws_quantity#1038, ws_ext_sales_price#1043, ws_net_paid#1049, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, d_moy#339]
[info]             :           +- *(5) BroadcastHashJoin [ws_ship_mode_sk#1034], [sm_ship_mode_sk#1682], Inner, BuildRight
[info]             :              :- *(5) Project [ws_ship_mode_sk#1034, ws_quantity#1038, ws_ext_sales_price#1043, ws_net_paid#1049, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, d_moy#339]
[info]             :              :  +- *(5) BroadcastHashJoin [ws_sold_time_sk#1021], [t_time_sk#1728], Inner, BuildRight
[info]             :              :     :- *(5) Project [ws_sold_time_sk#1021, ws_ship_mode_sk#1034, ws_quantity#1038, ws_ext_sales_price#1043, ws_net_paid#1049, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, d_moy#339]
[info]             :              :     :  +- *(5) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :              :     :     :- *(5) Project [ws_sold_time_sk#1021, ws_ship_mode_sk#1034, ws_quantity#1038, ws_ext_sales_price#1043, ws_net_paid#1049, ws_sold_date_sk#1054, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633]
[info]             :              :     :     :  +- *(5) BroadcastHashJoin [ws_warehouse_sk#1035], [w_warehouse_sk#1621], Inner, BuildRight
[info]             :              :     :     :     :- *(5) Project [ws_sold_time_sk#1021, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_quantity#1038, ws_ext_sales_price#1043, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]             :              :     :     :     :  +- *(5) Filter (((isnotnull(ws_warehouse_sk#1035) AND isnotnull(ws_sold_date_sk#1054)) AND isnotnull(ws_sold_time_sk#1021)) AND isnotnull(ws_ship_mode_sk#1034))
[info]             :              :     :     :     :     +- *(5) ColumnarToRow
[info]             :              :     :     :     :        +- BatchScan[ws_sold_time_sk#1021, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_quantity#1038, ws_ext_sales_price#1043, ws_net_paid#1049, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantity:int,ws_ext_sales_p...
[info]             :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#39913]
[info]             :              :     :     :        +- *(1) Project [w_warehouse_sk#1621, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633]
[info]             :              :     :     :           +- *(1) Filter isnotnull(w_warehouse_sk#1621)
[info]             :              :     :     :              +- *(1) ColumnarToRow
[info]             :              :     :     :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
[info]             :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#39922]
[info]             :              :     :        +- *(2) Project [d_date_sk#331, d_year#337, d_moy#339]
[info]             :              :     :           +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]             :              :     :              +- *(2) ColumnarToRow
[info]             :              :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#39931]
[info]             :              :        +- *(3) Project [t_time_sk#1728]
[info]             :              :           +- *(3) Filter (((isnotnull(t_time#1730) AND (t_time#1730 >= 30838)) AND (t_time#1730 <= 59638)) AND isnotnull(t_time_sk#1728))
[info]             :              :              +- *(3) ColumnarToRow
[info]             :              :                 +- BatchScan[t_time_sk#1728, t_time#1730] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_time:int>
[info]             :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#39940]
[info]             :                 +- *(4) Project [sm_ship_mode_sk#1682]
[info]             :                    +- *(4) Filter (sm_carrier#1686 IN (DHL,BARIAN) AND isnotnull(sm_ship_mode_sk#1682))
[info]             :                       +- *(4) ColumnarToRow
[info]             :                          +- BatchScan[sm_ship_mode_sk#1682, sm_carrier#1686] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/ship_mode], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
[info]             +- *(12) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337], functions=[sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)])
[info]                +- Exchange hashpartitioning(w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, 4), true, [id=#40087]
[info]                   +- *(11) HashAggregate(keys=[w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337], functions=[partial_sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#898 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#339 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#907 as decimal(12,2))) * promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true) ELSE 0.00 END)])
[info]                      +- *(11) Project [cs_quantity#895, cs_sales_price#898, cs_net_paid_inc_tax#907, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, d_moy#339]
[info]                         +- *(11) BroadcastHashJoin [cs_ship_mode_sk#890], [sm_ship_mode_sk#1682], Inner, BuildRight
[info]                            :- *(11) Project [cs_ship_mode_sk#890, cs_quantity#895, cs_sales_price#898, cs_net_paid_inc_tax#907, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, d_moy#339]
[info]                            :  +- *(11) BroadcastHashJoin [cs_sold_time_sk#878], [t_time_sk#1728], Inner, BuildRight
[info]                            :     :- *(11) Project [cs_sold_time_sk#878, cs_ship_mode_sk#890, cs_quantity#895, cs_sales_price#898, cs_net_paid_inc_tax#907, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633, d_year#337, d_moy#339]
[info]                            :     :  +- *(11) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                            :     :     :- *(11) Project [cs_sold_time_sk#878, cs_ship_mode_sk#890, cs_quantity#895, cs_sales_price#898, cs_net_paid_inc_tax#907, cs_sold_date_sk#911, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633]
[info]                            :     :     :  +- *(11) BroadcastHashJoin [cs_warehouse_sk#891], [w_warehouse_sk#1621], Inner, BuildRight
[info]                            :     :     :     :- *(11) Project [cs_sold_time_sk#878, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_quantity#895, cs_sales_price#898, cs_net_paid_inc_tax#907, cs_sold_date_sk#911]
[info]                            :     :     :     :  +- *(11) Filter (((isnotnull(cs_warehouse_sk#891) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_sold_time_sk#878)) AND isnotnull(cs_ship_mode_sk#890))
[info]                            :     :     :     :     +- *(11) ColumnarToRow
[info]                            :     :     :     :        +- BatchScan[cs_sold_time_sk#878, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_quantity#895, cs_sales_price#898, cs_net_paid_inc_tax#907, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantity:int,cs_sales_price...
[info]                            :     :     :     +- ReusedExchange [w_warehouse_sk#1621, w_warehouse_name#1623, w_warehouse_sq_ft#1624, w_city#1629, w_county#1630, w_state#1631, w_country#1633], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#39913]
[info]                            :     :     +- ReusedExchange [d_date_sk#331, d_year#337, d_moy#339], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#39922]
[info]                            :     +- ReusedExchange [t_time_sk#1728], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#39931]
[info]                            +- ReusedExchange [sm_ship_mode_sk#1682], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#39940]
[info] 
[info] 
[info]   Stopped after 1 iterations, 563 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q66                                                 564            564           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q67
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_category#18226 ASC NULLS FIRST,i_class#18227 ASC NULLS FIRST,i_brand#18228 ASC NULLS FIRST,i_product_name#18229 ASC NULLS FIRST,d_year#18230 ASC NULLS FIRST,d_qoy#18231 ASC NULLS FIRST,d_moy#18232 ASC NULLS FIRST,s_store_id#18233 ASC NULLS FIRST,sumsales#18212 ASC NULLS FIRST,rk#18213 ASC NULLS FIRST], output=[i_category#18226,i_class#18227,i_brand#18228,i_product_name#18229,d_year#18230,d_qoy#18231,d_moy#18232,s_store_id#18233,sumsales#18212,rk#18213])
[info] +- *(7) Filter (isnotnull(rk#18213) AND (rk#18213 <= 100))
[info]    +- Window [rank(sumsales#18212) windowspecdefinition(i_category#18226, sumsales#18212 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#18213], [i_category#18226], [sumsales#18212 DESC NULLS LAST]
[info]       +- *(6) Sort [i_category#18226 ASC NULLS FIRST, sumsales#18212 DESC NULLS LAST], false, 0
[info]          +- Exchange hashpartitioning(i_category#18226, 4), true, [id=#40329]
[info]             +- *(5) HashAggregate(keys=[i_category#18226, i_class#18227, i_brand#18228, i_product_name#18229, d_year#18230, d_qoy#18231, d_moy#18232, s_store_id#18233, spark_grouping_id#18217], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                +- Exchange hashpartitioning(i_category#18226, i_class#18227, i_brand#18228, i_product_name#18229, d_year#18230, d_qoy#18231, d_moy#18232, s_store_id#18233, spark_grouping_id#18217, 4), true, [id=#40325]
[info]                   +- *(4) HashAggregate(keys=[i_category#18226, i_class#18227, i_brand#18228, i_product_name#18229, d_year#18230, d_qoy#18231, d_moy#18232, s_store_id#18233, spark_grouping_id#18217], functions=[partial_sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                      +- *(4) Expand [List(ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 0), List(ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, null, 1), List(ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, null, null, 3), List(ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, null, null, null, 7), List(ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, i_brand#504, i_product_name#517, null, null, null, null, 15), List(ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, i_brand#504, null, null, null, null, null, 31), List(ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, null, null, null, null, null, null, 63), List(ss_quantity#1173, ss_sales_price#1176, i_category#508, null, null, null, null, null, null, null, 127), List(ss_quantity#1173, ss_sales_price#1176, null, null, null, null, null, null, null, null, 255)], [ss_quantity#1173, ss_sales_price#1176, i_category#18226, i_class#18227, i_brand#18228, i_product_name#18229, d_year#18230, d_qoy#18231, d_moy#18232, s_store_id#18233, spark_grouping_id#18217]
[info]                         +- *(4) Project [ss_quantity#1173, ss_sales_price#1176, i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671]
[info]                            +- *(4) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                               :- *(4) Project [ss_item_sk#1165, ss_quantity#1173, ss_sales_price#1176, d_year#337, d_moy#339, d_qoy#341, s_store_id#671]
[info]                               :  +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, d_year#337, d_moy#339, d_qoy#341]
[info]                               :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                               :     :     :  +- *(4) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165))
[info]                               :     :     :     +- *(4) ColumnarToRow
[info]                               :     :     :        +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
[info]                               :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40300]
[info]                               :     :        +- *(1) Project [d_date_sk#331, d_year#337, d_moy#339, d_qoy#341]
[info]                               :     :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                               :     :              +- *(1) ColumnarToRow
[info]                               :     :                 +- BatchScan[d_date_sk#331, d_month_seq#334, d_year#337, d_moy#339, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40309]
[info]                               :        +- *(2) Project [s_store_sk#670, s_store_id#671]
[info]                               :           +- *(2) Filter isnotnull(s_store_sk#670)
[info]                               :              +- *(2) ColumnarToRow
[info]                               :                 +- BatchScan[s_store_sk#670, s_store_id#671] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string>
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40318]
[info]                                  +- *(3) Project [i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]                                     +- *(3) Filter isnotnull(i_item_sk#496)
[info]                                        +- *(3) ColumnarToRow
[info]                                           +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 201 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q67                                                 202            202           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q68
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_last_name#165 ASC NULLS FIRST,ss_ticket_number#1172L ASC NULLS FIRST], output=[c_last_name#165,c_first_name#164,ca_city#239,bought_city#18288,ss_ticket_number#1172L,extended_price#18289,extended_tax#18291,list_price#18290])
[info] +- *(8) Project [c_last_name#165, c_first_name#164, ca_city#239, bought_city#18288, ss_ticket_number#1172L, extended_price#18289, extended_tax#18291, list_price#18290]
[info]    +- *(8) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight, NOT (ca_city#239 = bought_city#18288)
[info]       :- *(8) Project [ss_ticket_number#1172L, bought_city#18288, extended_price#18289, list_price#18290, extended_tax#18291, c_current_addr_sk#160, c_first_name#164, c_last_name#165]
[info]       :  +- *(8) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]       :     :- *(8) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, ca_city#239], functions=[sum(UnscaledValue(ss_ext_sales_price#1178)), sum(UnscaledValue(ss_ext_list_price#1180)), sum(UnscaledValue(ss_ext_tax#1181))])
[info]       :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, ca_city#239, 4), true, [id=#40564]
[info]       :     :     +- *(5) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, ca_city#239], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178)), partial_sum(UnscaledValue(ss_ext_list_price#1180)), partial_sum(UnscaledValue(ss_ext_tax#1181))])
[info]       :     :        +- *(5) Project [ss_customer_sk#1166, ss_addr_sk#1169, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_ext_list_price#1180, ss_ext_tax#1181, ca_city#239]
[info]       :     :           +- *(5) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]       :     :              :- *(5) Project [ss_customer_sk#1166, ss_addr_sk#1169, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_ext_list_price#1180, ss_ext_tax#1181]
[info]       :     :              :  +- *(5) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]       :     :              :     :- *(5) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_ext_list_price#1180, ss_ext_tax#1181]
[info]       :     :              :     :  +- *(5) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]       :     :              :     :     :- *(5) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_ext_list_price#1180, ss_ext_tax#1181]
[info]       :     :              :     :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :              :     :     :     :- *(5) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_ext_list_price#1180, ss_ext_tax#1181, ss_sold_date_sk#1186]
[info]       :     :              :     :     :     :  +- *(5) Filter ((((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_addr_sk#1169)) AND isnotnull(ss_customer_sk#1166))
[info]       :     :              :     :     :     :     +- *(5) ColumnarToRow
[info]       :     :              :     :     :     :        +- BatchScan[ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_ext_list_price#1180, ss_ext_tax#1181, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_ticket_number:bigint,...
[info]       :     :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40531]
[info]       :     :              :     :     :        +- *(1) Project [d_date_sk#331]
[info]       :     :              :     :     :           +- *(1) Filter ((((isnotnull(d_dom#340) AND (d_dom#340 >= 1)) AND (d_dom#340 <= 2)) AND d_year#337 IN (1999,2000,2001)) AND isnotnull(d_date_sk#331))
[info]       :     :              :     :     :              +- *(1) ColumnarToRow
[info]       :     :              :     :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_dom:int>
[info]       :     :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40540]
[info]       :     :              :     :        +- *(2) Project [s_store_sk#670]
[info]       :     :              :     :           +- *(2) Filter (s_city#692 IN (Midway,Fairview) AND isnotnull(s_store_sk#670))
[info]       :     :              :     :              +- *(2) ColumnarToRow
[info]       :     :              :     :                 +- BatchScan[s_store_sk#670, s_city#692] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_city:string>
[info]       :     :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40549]
[info]       :     :              :        +- *(3) Project [hd_demo_sk#448]
[info]       :     :              :           +- *(3) Filter (((hd_dep_count#451 = 4) OR (hd_vehicle_count#452 = 3)) AND isnotnull(hd_demo_sk#448))
[info]       :     :              :              +- *(3) ColumnarToRow
[info]       :     :              :                 +- BatchScan[hd_demo_sk#448, hd_dep_count#451, hd_vehicle_count#452] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
[info]       :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40558]
[info]       :     :                 +- *(4) Project [ca_address_sk#233, ca_city#239]
[info]       :     :                    +- *(4) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_city#239))
[info]       :     :                       +- *(4) ColumnarToRow
[info]       :     :                          +- BatchScan[ca_address_sk#233, ca_city#239] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_city:string>
[info]       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40572]
[info]       :        +- *(6) Project [c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165]
[info]       :           +- *(6) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]       :              +- *(6) ColumnarToRow
[info]       :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string>
[info]       +- ReusedExchange [ca_address_sk#233, ca_city#239], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40558]
[info] 
[info] 
[info]   Stopped after 1 iterations, 254 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q68                                                 254            254           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q69
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[cd_gender#291 ASC NULLS FIRST,cd_marital_status#292 ASC NULLS FIRST,cd_education_status#293 ASC NULLS FIRST,cd_purchase_estimate#294 ASC NULLS FIRST,cd_credit_rating#295 ASC NULLS FIRST], output=[cd_gender#291,cd_marital_status#292,cd_education_status#293,cnt1#18355L,cd_purchase_estimate#294,cnt2#18356L,cd_credit_rating#295,cnt3#18357L])
[info] +- *(15) HashAggregate(keys=[cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295], functions=[count(1)])
[info]    +- Exchange hashpartitioning(cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, 4), true, [id=#40989]
[info]       +- *(14) HashAggregate(keys=[cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295], functions=[partial_count(1)])
[info]          +- *(14) Project [cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295]
[info]             +- *(14) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]                :- *(14) Project [c_current_cdemo_sk#158]
[info]                :  +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                :     :- *(14) Project [c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :  +- SortMergeJoin [c_customer_sk#156], [cs_ship_customer_sk#884], LeftAnti
[info]                :     :     :- SortMergeJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], LeftAnti
[info]                :     :     :  :- SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], LeftSemi
[info]                :     :     :  :  :- *(2) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                :     :     :  :  :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#40849]
[info]                :     :     :  :  :     +- *(1) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :     :  :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_current_cdemo_sk#158))
[info]                :     :     :  :  :           +- *(1) ColumnarToRow
[info]                :     :     :  :  :              +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
[info]                :     :     :  :  +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                :     :     :  :     +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#40867]
[info]                :     :     :  :        +- *(4) Project [ss_customer_sk#1166]
[info]                :     :     :  :           +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :  :              :- *(4) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                :     :     :  :              :  +- *(4) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :     :     :  :              :     +- *(4) ColumnarToRow
[info]                :     :     :  :              :        +- BatchScan[ss_sold_time_sk#1164, ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_sales_price#1176, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_ext_tax#1181, ss_coupon_amt#1182, ss_net_paid#1183, ss_net_paid_inc_tax#1184, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_a...
[info]                :     :     :  :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40862]
[info]                :     :     :  :                 +- *(3) Project [d_date_sk#331]
[info]                :     :     :  :                    +- *(3) Filter (((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2001)) AND (d_moy#339 >= 4)) AND (d_moy#339 <= 6)) AND isnotnull(d_date_sk#331))
[info]                :     :     :  :                       +- *(3) ColumnarToRow
[info]                :     :     :  :                          +- BatchScan[d_date_sk#331, d_date_id#332, d_date#333, d_month_seq#334, d_week_seq#335, d_quarter_seq#336, d_year#337, d_dow#338, d_moy#339, d_dom#340, d_qoy#341, d_fy_year#342, d_fy_quarter_seq#343, d_fy_week_seq#344, d_day_name#345, d_quarter_name#346, d_holiday#347, d_weekend#348, d_following_holiday#349, d_first_dom#350, d_last_dom#351, d_same_day_ly#352, d_same_day_lq#353, d_current_day#354, ... 4 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:in...
[info]                :     :     :  +- *(8) Sort [ws_bill_customer_sk#1024 ASC NULLS FIRST], false, 0
[info]                :     :     :     +- Exchange hashpartitioning(ws_bill_customer_sk#1024, 4), true, [id=#40958]
[info]                :     :     :        +- *(7) Project [ws_bill_customer_sk#1024]
[info]                :     :     :           +- *(7) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :              :- *(7) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                :     :     :              :  +- *(7) Filter isnotnull(ws_sold_date_sk#1054)
[info]                :     :     :              :     +- *(7) ColumnarToRow
[info]                :     :     :              :        +- BatchScan[ws_sold_time_sk#1021, ws_ship_date_sk#1022, ws_item_sk#1023, ws_bill_customer_sk#1024, ws_bill_cdemo_sk#1025, ws_bill_hdemo_sk#1026, ws_bill_addr_sk#1027, ws_ship_customer_sk#1028, ws_ship_cdemo_sk#1029, ws_ship_hdemo_sk#1030, ws_ship_addr_sk#1031, ws_web_page_sk#1032, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_promo_sk#1036, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_list_price#1040, ws_sales_price#1041, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cde...
[info]                :     :     :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40862]
[info]                :     :     +- *(11) Sort [cs_ship_customer_sk#884 ASC NULLS FIRST], false, 0
[info]                :     :        +- Exchange hashpartitioning(cs_ship_customer_sk#884, 4), true, [id=#40976]
[info]                :     :           +- *(10) Project [cs_ship_customer_sk#884]
[info]                :     :              +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :                 :- *(10) Project [cs_ship_customer_sk#884, cs_sold_date_sk#911]
[info]                :     :                 :  +- *(10) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :                 :     +- *(10) ColumnarToRow
[info]                :     :                 :        +- BatchScan[cs_sold_time_sk#878, cs_ship_date_sk#879, cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_bill_addr_sk#883, cs_ship_customer_sk#884, cs_ship_cdemo_sk#885, cs_ship_hdemo_sk#886, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_catalog_page_sk#889, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_list_price#897, cs_sales_price#898, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bi...
[info]                :     :                 +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40862]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40917]
[info]                :        +- *(12) Project [ca_address_sk#233]
[info]                :           +- *(12) Filter (ca_state#241 IN (KY,GA,NM) AND isnotnull(ca_address_sk#233))
[info]                :              +- *(12) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#40926]
[info]                   +- *(13) Project [cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295]
[info]                      +- *(13) Filter isnotnull(cd_demo_sk#290)
[info]                         +- *(13) ColumnarToRow
[info]                            +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_pur...
[info] 
[info] 
[info]   Stopped after 1 iterations, 295 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q69                                                 296            296           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q70
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#18443 DESC NULLS LAST,CASE WHEN (cast(lochierarchy#18443 as int) = 0) THEN s_state#18462 END ASC NULLS FIRST,rank_within_parent#18444 ASC NULLS FIRST], output=[total_sum#18442,s_state#18462,s_county#18463,lochierarchy#18443,rank_within_parent#18444])
[info] +- *(13) Project [total_sum#18442, s_state#18462, s_county#18463, lochierarchy#18443, rank_within_parent#18444]
[info]    +- Window [rank(_w3#18478) windowspecdefinition(_w1#18476, _w2#18477, _w3#18478 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#18444], [_w1#18476, _w2#18477], [_w3#18478 DESC NULLS LAST]
[info]       +- *(12) Sort [_w1#18476 ASC NULLS FIRST, _w2#18477 ASC NULLS FIRST, _w3#18478 DESC NULLS LAST], false, 0
[info]          +- Exchange hashpartitioning(_w1#18476, _w2#18477, 4), true, [id=#41404]
[info]             +- *(11) HashAggregate(keys=[s_state#18462, s_county#18463, spark_grouping_id#18459], functions=[sum(UnscaledValue(ss_net_profit#1185))])
[info]                +- Exchange hashpartitioning(s_state#18462, s_county#18463, spark_grouping_id#18459, 4), true, [id=#41400]
[info]                   +- *(10) HashAggregate(keys=[s_state#18462, s_county#18463, spark_grouping_id#18459], functions=[partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]                      +- *(10) Expand [List(ss_net_profit#1185, s_state#694, s_county#693, 0), List(ss_net_profit#1185, s_state#694, null, 1), List(ss_net_profit#1185, null, null, 3)], [ss_net_profit#1185, s_state#18462, s_county#18463, spark_grouping_id#18459]
[info]                         +- *(10) Project [ss_net_profit#1185, s_state#694, s_county#693]
[info]                            +- *(10) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :- *(10) Project [ss_store_sk#1170, ss_net_profit#1185]
[info]                               :  +- *(10) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :- *(10) Project [ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                               :     :  +- *(10) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]                               :     :     +- *(10) ColumnarToRow
[info]                               :     :        +- BatchScan[ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_net_profit:decimal(7,2)>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41219]
[info]                               :        +- *(1) Project [d_date_sk#331]
[info]                               :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                               :              +- *(1) ColumnarToRow
[info]                               :                 +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41328]
[info]                                  +- SortMergeJoin [s_state#694], [s_state#18439], LeftSemi
[info]                                     :- *(3) Sort [s_state#694 ASC NULLS FIRST], false, 0
[info]                                     :  +- Exchange hashpartitioning(s_state#694, 4), true, [id=#41228]
[info]                                     :     +- *(2) Project [s_store_sk#670, s_county#693, s_state#694]
[info]                                     :        +- *(2) Filter isnotnull(s_store_sk#670)
[info]                                     :           +- *(2) ColumnarToRow
[info]                                     :              +- BatchScan[s_store_sk#670, s_county#693, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_county:string,s_state:string>
[info]                                     +- *(9) Sort [s_state#18439 ASC NULLS FIRST], false, 0
[info]                                        +- Exchange hashpartitioning(s_state#18439, 4), true, [id=#41323]
[info]                                           +- *(8) Project [s_state#18439]
[info]                                              +- *(8) Filter (isnotnull(ranking#18440) AND (ranking#18440 <= 5))
[info]                                                 +- Window [rank(_w1#18450) windowspecdefinition(s_state#694, _w1#18450 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS ranking#18440], [s_state#694], [_w1#18450 DESC NULLS LAST]
[info]                                                    +- *(7) Sort [s_state#694 ASC NULLS FIRST, _w1#18450 DESC NULLS LAST], false, 0
[info]                                                       +- *(7) HashAggregate(keys=[s_state#694], functions=[sum(UnscaledValue(ss_net_profit#1185))])
[info]                                                          +- Exchange hashpartitioning(s_state#694, 4), true, [id=#41313]
[info]                                                             +- *(6) HashAggregate(keys=[s_state#694], functions=[partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]                                                                +- *(6) Project [ss_net_profit#1185, s_state#694]
[info]                                                                   +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                                                                      :- *(6) Project [ss_net_profit#1185, ss_sold_date_sk#1186, s_state#694]
[info]                                                                      :  +- *(6) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                                                                      :     :- *(6) Project [ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                                                                      :     :  +- *(6) Filter (isnotnull(ss_store_sk#1170) AND isnotnull(ss_sold_date_sk#1186))
[info]                                                                      :     :     +- *(6) ColumnarToRow
[info]                                                                      :     :        +- BatchScan[ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_net_profit:decimal(7,2)>
[info]                                                                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41241]
[info]                                                                      :        +- *(4) Project [s_store_sk#670, s_state#694]
[info]                                                                      :           +- *(4) Filter isnotnull(s_store_sk#670)
[info]                                                                      :              +- *(4) ColumnarToRow
[info]                                                                      :                 +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]                                                                      +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41219]
[info] 
[info] 
[info]   Stopped after 1 iterations, 281 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q70                                                 282            282           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q71
[info] == Physical Plan ==
[info] *(11) Sort [ext_price#18565 DESC NULLS LAST, brand_id#18563 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(ext_price#18565 DESC NULLS LAST, brand_id#18563 ASC NULLS FIRST, 4), true, [id=#41719]
[info]    +- *(10) HashAggregate(keys=[i_brand#504, i_brand_id#503, t_hour#1731, t_minute#1732], functions=[sum(UnscaledValue(ext_price#18551))])
[info]       +- Exchange hashpartitioning(i_brand#504, i_brand_id#503, t_hour#1731, t_minute#1732, 4), true, [id=#41715]
[info]          +- *(9) HashAggregate(keys=[i_brand#504, i_brand_id#503, t_hour#1731, t_minute#1732], functions=[partial_sum(UnscaledValue(ext_price#18551))])
[info]             +- *(9) Project [i_brand_id#503, i_brand#504, ext_price#18551, t_hour#1731, t_minute#1732]
[info]                +- *(9) BroadcastHashJoin [time_sk#18554], [t_time_sk#1728], Inner, BuildRight
[info]                   :- *(9) Project [i_brand_id#503, i_brand#504, ext_price#18551, time_sk#18554]
[info]                   :  +- *(9) BroadcastHashJoin [i_item_sk#496], [sold_item_sk#18553], Inner, BuildLeft
[info]                   :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41606]
[info]                   :     :  +- *(1) Project [i_item_sk#496, i_brand_id#503, i_brand#504]
[info]                   :     :     +- *(1) Filter ((isnotnull(i_manager_id#516) AND (i_manager_id#516 = 1)) AND isnotnull(i_item_sk#496))
[info]                   :     :        +- *(1) ColumnarToRow
[info]                   :     :           +- BatchScan[i_item_sk#496, i_brand_id#503, i_brand#504, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manager_id:int>
[info]                   :     +- Union
[info]                   :        :- *(3) Project [ws_ext_sales_price#1043 AS ext_price#18551, ws_item_sk#1023 AS sold_item_sk#18553, ws_sold_time_sk#1021 AS time_sk#18554]
[info]                   :        :  +- *(3) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                   :        :     :- *(3) Project [ws_sold_time_sk#1021, ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                   :        :     :  +- *(3) Filter ((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_item_sk#1023)) AND isnotnull(ws_sold_time_sk#1021))
[info]                   :        :     :     +- *(3) ColumnarToRow
[info]                   :        :     :        +- BatchScan[ws_sold_time_sk#1021, ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                   :        :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41617]
[info]                   :        :        +- *(2) Project [d_date_sk#331]
[info]                   :        :           +- *(2) Filter ((((isnotnull(d_moy#339) AND isnotnull(d_year#337)) AND (d_moy#339 = 11)) AND (d_year#337 = 1999)) AND isnotnull(d_date_sk#331))
[info]                   :        :              +- *(2) ColumnarToRow
[info]                   :        :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                   :        :- *(5) Project [cs_ext_sales_price#900 AS ext_price#18555, cs_item_sk#892 AS sold_item_sk#18557, cs_sold_time_sk#878 AS time_sk#18558]
[info]                   :        :  +- *(5) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                   :        :     :- *(5) Project [cs_sold_time_sk#878, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]                   :        :     :  +- *(5) Filter ((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_sold_time_sk#878))
[info]                   :        :     :     +- *(5) ColumnarToRow
[info]                   :        :     :        +- BatchScan[cs_sold_time_sk#878, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_sold_time_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]                   :        :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41617]
[info]                   :        +- *(7) Project [ss_ext_sales_price#1178 AS ext_price#18559, ss_item_sk#1165 AS sold_item_sk#18561, ss_sold_time_sk#1164 AS time_sk#18562]
[info]                   :           +- *(7) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                   :              :- *(7) Project [ss_sold_time_sk#1164, ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                   :              :  +- *(7) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_sold_time_sk#1164))
[info]                   :              :     +- *(7) ColumnarToRow
[info]                   :              :        +- BatchScan[ss_sold_time_sk#1164, ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                   :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41617]
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#41659]
[info]                      +- *(8) Project [t_time_sk#1728, t_hour#1731, t_minute#1732]
[info]                         +- *(8) Filter (((t_meal_time#1737 = breakfast) OR (t_meal_time#1737 = dinner)) AND isnotnull(t_time_sk#1728))
[info]                            +- *(8) ColumnarToRow
[info]                               +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732, t_meal_time#1737] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int,t_meal_time:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 282 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q71                                                 282            282           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q72
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[total_cnt#18682L DESC NULLS LAST,i_item_desc#500 ASC NULLS FIRST,w_warehouse_name#1623 ASC NULLS FIRST,d_week_seq#335 ASC NULLS FIRST], output=[i_item_desc#500,w_warehouse_name#1623,d_week_seq#335,no_promo#18680L,promo#18681L,total_cnt#18682L])
[info] +- *(18) HashAggregate(keys=[i_item_desc#500, w_warehouse_name#1623, d_week_seq#335], functions=[count(1)])
[info]    +- Exchange hashpartitioning(i_item_desc#500, w_warehouse_name#1623, d_week_seq#335, 4), true, [id=#42138]
[info]       +- *(17) HashAggregate(keys=[i_item_desc#500, w_warehouse_name#1623, d_week_seq#335], functions=[partial_count(1)])
[info]          +- *(17) Project [w_warehouse_name#1623, i_item_desc#500, d_week_seq#335]
[info]             +- SortMergeJoin [cs_item_sk#892, cs_order_number#894L], [cr_item_sk#42, cr_order_number#56L], LeftOuter
[info]                :- *(14) Sort [cs_item_sk#892 ASC NULLS FIRST, cs_order_number#894L ASC NULLS FIRST], false, 0
[info]                :  +- Exchange hashpartitioning(cs_item_sk#892, cs_order_number#894L, 4), true, [id=#42120]
[info]                :     +- *(13) Project [cs_item_sk#892, cs_order_number#894L, w_warehouse_name#1623, i_item_desc#500, d_week_seq#335]
[info]                :        +- *(13) BroadcastHashJoin [cs_promo_sk#893], [p_promo_sk#589], LeftOuter, BuildRight
[info]                :           :- *(13) Project [cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, w_warehouse_name#1623, i_item_desc#500, d_week_seq#335]
[info]                :           :  +- *(13) BroadcastHashJoin [cs_ship_date_sk#879], [d_date_sk#18712], Inner, BuildRight, (d_date#18714 > cast(cast(d_date#333 as timestamp) + CalendarInterval(months= 0, days = 5, microsecond = 0) as date))
[info]                :           :     :- *(13) Project [cs_ship_date_sk#879, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, w_warehouse_name#1623, i_item_desc#500, d_date#333, d_week_seq#335]
[info]                :           :     :  +- *(13) BroadcastHashJoin [d_week_seq#335, inv_date_sk#476], [d_week_seq#18687, d_date_sk#18683], Inner, BuildRight
[info]                :           :     :     :- *(13) Project [cs_ship_date_sk#879, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500, d_date#333, d_week_seq#335]
[info]                :           :     :     :  +- *(13) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :           :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500]
[info]                :           :     :     :     :  +- *(13) BroadcastHashJoin [cs_bill_hdemo_sk#882], [hd_demo_sk#448], Inner, BuildRight
[info]                :           :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500]
[info]                :           :     :     :     :     :  +- *(13) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]                :           :     :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500]
[info]                :           :     :     :     :     :     :  +- *(13) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                :           :     :     :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623]
[info]                :           :     :     :     :     :     :     :  +- *(13) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#1621], Inner, BuildRight
[info]                :           :     :     :     :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_warehouse_sk#474, inv_date_sk#476]
[info]                :           :     :     :     :     :     :     :     :  +- *(13) SortMergeJoin [cs_item_sk#892], [inv_item_sk#473], Inner, (inv_quantity_on_hand#475 < cs_quantity#895)
[info]                :           :     :     :     :     :     :     :     :     :- *(2) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                :           :     :     :     :     :     :     :     :     :  +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#42030]
[info]                :           :     :     :     :     :     :     :     :     :     +- *(1) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_sold_date_sk#911]
[info]                :           :     :     :     :     :     :     :     :     :        +- *(1) Filter (((((isnotnull(cs_quantity#895) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_bill_cdemo_sk#881)) AND isnotnull(cs_bill_hdemo_sk#882)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_ship_date_sk#879))
[info]                :           :     :     :     :     :     :     :     :     :           +- *(1) ColumnarToRow
[info]                :           :     :     :     :     :     :     :     :     :              +- BatchScan[cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ship_date_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_item_sk:int,cs_promo_sk:i...
[info]                :           :     :     :     :     :     :     :     :     +- *(4) Sort [inv_item_sk#473 ASC NULLS FIRST], false, 0
[info]                :           :     :     :     :     :     :     :     :        +- Exchange hashpartitioning(inv_item_sk#473, 4), true, [id=#42040]
[info]                :           :     :     :     :     :     :     :     :           +- *(3) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]                :           :     :     :     :     :     :     :     :              +- *(3) Filter (((isnotnull(inv_quantity_on_hand#475) AND isnotnull(inv_item_sk#473)) AND isnotnull(inv_warehouse_sk#474)) AND isnotnull(inv_date_sk#476))
[info]                :           :     :     :     :     :     :     :     :                 +- *(3) ColumnarToRow
[info]                :           :     :     :     :     :     :     :     :                    +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]                :           :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42052]
[info]                :           :     :     :     :     :     :     :        +- *(5) Project [w_warehouse_sk#1621, w_warehouse_name#1623]
[info]                :           :     :     :     :     :     :     :           +- *(5) Filter isnotnull(w_warehouse_sk#1621)
[info]                :           :     :     :     :     :     :     :              +- *(5) ColumnarToRow
[info]                :           :     :     :     :     :     :     :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
[info]                :           :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42061]
[info]                :           :     :     :     :     :     :        +- *(6) Project [i_item_sk#496, i_item_desc#500]
[info]                :           :     :     :     :     :     :           +- *(6) Filter isnotnull(i_item_sk#496)
[info]                :           :     :     :     :     :     :              +- *(6) ColumnarToRow
[info]                :           :     :     :     :     :     :                 +- BatchScan[i_item_sk#496, i_item_desc#500] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
[info]                :           :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42070]
[info]                :           :     :     :     :     :        +- *(7) Project [cd_demo_sk#290]
[info]                :           :     :     :     :     :           +- *(7) Filter ((isnotnull(cd_marital_status#292) AND (cd_marital_status#292 = D)) AND isnotnull(cd_demo_sk#290))
[info]                :           :     :     :     :     :              +- *(7) ColumnarToRow
[info]                :           :     :     :     :     :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>
[info]                :           :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42079]
[info]                :           :     :     :     :        +- *(8) Project [hd_demo_sk#448]
[info]                :           :     :     :     :           +- *(8) Filter ((isnotnull(hd_buy_potential#450) AND (hd_buy_potential#450 = >10000)) AND isnotnull(hd_demo_sk#448))
[info]                :           :     :     :     :              +- *(8) ColumnarToRow
[info]                :           :     :     :     :                 +- BatchScan[hd_demo_sk#448, hd_buy_potential#450] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>
[info]                :           :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42088]
[info]                :           :     :     :        +- *(9) Project [d_date_sk#331, d_date#333, d_week_seq#335]
[info]                :           :     :     :           +- *(9) Filter (((isnotnull(d_year#337) AND (d_year#337 = 1999)) AND isnotnull(d_date_sk#331)) AND isnotnull(d_week_seq#335))
[info]                :           :     :     :              +- *(9) ColumnarToRow
[info]                :           :     :     :                 +- BatchScan[d_date_sk#331, d_date#333, d_week_seq#335, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_week_seq:int,d_year:int>
[info]                :           :     :     +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, true] as bigint), 32) | (cast(input[0, int, true] as bigint) & 4294967295)))), [id=#42097]
[info]                :           :     :        +- *(10) Project [d_date_sk#18683, d_week_seq#18687]
[info]                :           :     :           +- *(10) Filter (isnotnull(d_week_seq#18687) AND isnotnull(d_date_sk#18683))
[info]                :           :     :              +- *(10) ColumnarToRow
[info]                :           :     :                 +- BatchScan[d_date_sk#18683, d_week_seq#18687] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
[info]                :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42106]
[info]                :           :        +- *(11) Project [d_date_sk#18712, d_date#18714]
[info]                :           :           +- *(11) Filter (isnotnull(d_date#18714) AND isnotnull(d_date_sk#18712))
[info]                :           :              +- *(11) ColumnarToRow
[info]                :           :                 +- BatchScan[d_date_sk#18712, d_date#18714] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42115]
[info]                :              +- *(12) Project [p_promo_sk#589]
[info]                :                 +- *(12) Filter isnotnull(p_promo_sk#589)
[info]                :                    +- *(12) ColumnarToRow
[info]                :                       +- BatchScan[p_promo_sk#589] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int>
[info]                +- *(16) Sort [cr_item_sk#42 ASC NULLS FIRST, cr_order_number#56L ASC NULLS FIRST], false, 0
[info]                   +- Exchange hashpartitioning(cr_item_sk#42, cr_order_number#56L, 4), true, [id=#42129]
[info]                      +- *(15) Project [cr_item_sk#42, cr_order_number#56L]
[info]                         +- *(15) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]                            +- *(15) ColumnarToRow
[info]                               +- BatchScan[cr_item_sk#42, cr_order_number#56L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint>
[info] 
[info] 
[info]   Stopped after 1 iterations, 404 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q72                                                 405            405           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q73
[info] == Physical Plan ==
[info] *(7) Sort [cnt#18792L DESC NULLS LAST], true, 0
[info] +- Exchange rangepartitioning(cnt#18792L DESC NULLS LAST, 4), true, [id=#42332]
[info]    +- *(6) Project [c_last_name#165, c_first_name#164, c_salutation#163, c_preferred_cust_flag#166, ss_ticket_number#1172L, cnt#18792L]
[info]       +- *(6) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]          :- *(6) Filter ((cnt#18792L >= 1) AND (cnt#18792L <= 5))
[info]          :  +- *(6) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166], functions=[count(1)])
[info]          :     +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_customer_sk#1166, 4), true, [id=#42318]
[info]          :        +- *(4) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166], functions=[partial_count(1)])
[info]          :           +- *(4) Project [ss_customer_sk#1166, ss_ticket_number#1172L]
[info]          :              +- *(4) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]          :                 :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_ticket_number#1172L]
[info]          :                 :  +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]          :                 :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L]
[info]          :                 :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]          :                 :     :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186]
[info]          :                 :     :     :  +- *(4) Filter (((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_customer_sk#1166))
[info]          :                 :     :     :     +- *(4) ColumnarToRow
[info]          :                 :     :     :        +- BatchScan[ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_hdemo_sk:int,ss_store_sk:int,ss_ticket_number:bigint>
[info]          :                 :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42294]
[info]          :                 :     :        +- *(1) Project [d_date_sk#331]
[info]          :                 :     :           +- *(1) Filter ((((isnotnull(d_dom#340) AND (d_dom#340 >= 1)) AND (d_dom#340 <= 2)) AND d_year#337 IN (1999,2000,2001)) AND isnotnull(d_date_sk#331))
[info]          :                 :     :              +- *(1) ColumnarToRow
[info]          :                 :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_dom:int>
[info]          :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42303]
[info]          :                 :        +- *(2) Project [s_store_sk#670]
[info]          :                 :           +- *(2) Filter (s_county#693 IN (Williamson County,Franklin Parish,Bronx County,Orange County) AND isnotnull(s_store_sk#670))
[info]          :                 :              +- *(2) ColumnarToRow
[info]          :                 :                 +- BatchScan[s_store_sk#670, s_county#693] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_county:string>
[info]          :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42312]
[info]          :                    +- *(3) Project [hd_demo_sk#448]
[info]          :                       +- *(3) Filter (((((CASE WHEN (hd_vehicle_count#452 > 0) THEN (cast(hd_dep_count#451 as double) / cast(hd_vehicle_count#452 as double)) ELSE null END > 1.0) AND isnotnull(hd_vehicle_count#452)) AND ((hd_buy_potential#450 = >10000) OR (hd_buy_potential#450 = unknown))) AND (hd_vehicle_count#452 > 0)) AND isnotnull(hd_demo_sk#448))
[info]          :                          +- *(3) ColumnarToRow
[info]          :                             +- BatchScan[hd_demo_sk#448, hd_buy_potential#450, hd_dep_count#451, hd_vehicle_count#452] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string,hd_dep_count:int,hd_vehicle_count:int>
[info]          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42327]
[info]             +- *(5) Project [c_customer_sk#156, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166]
[info]                +- *(5) Filter isnotnull(c_customer_sk#156)
[info]                   +- *(5) ColumnarToRow
[info]                      +- BatchScan[c_customer_sk#156, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_c...
[info] 
[info] 
[info]   Stopped after 1 iterations, 178 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q73                                                 178            178           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q74
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[customer_id#18883 ASC NULLS FIRST,customer_id#18883 ASC NULLS FIRST,customer_id#18883 ASC NULLS FIRST], output=[customer_id#18883,customer_first_name#18884,customer_last_name#18885])
[info] +- *(23) Project [customer_id#18883, customer_first_name#18884, customer_last_name#18885]
[info]    +- *(23) SortMergeJoin [customer_id#18863], [customer_id#18895], Inner, (CASE WHEN (year_total#18893 > 0.00) THEN CheckOverflow((promote_precision(year_total#18899) / promote_precision(year_total#18893)), DecimalType(37,20), true) ELSE null END > CASE WHEN (year_total#18867 > 0.00) THEN CheckOverflow((promote_precision(year_total#18887) / promote_precision(year_total#18867)), DecimalType(37,20), true) ELSE null END)
[info]       :- *(17) Project [customer_id#18863, year_total#18867, customer_id#18883, customer_first_name#18884, customer_last_name#18885, year_total#18887, year_total#18893]
[info]       :  +- *(17) SortMergeJoin [customer_id#18863], [customer_id#18889], Inner
[info]       :     :- *(11) SortMergeJoin [customer_id#18863], [customer_id#18883], Inner
[info]       :     :  :- *(5) Sort [customer_id#18863 ASC NULLS FIRST], false, 0
[info]       :     :  :  +- Exchange hashpartitioning(customer_id#18863, 4), true, [id=#42778]
[info]       :     :  :     +- Union
[info]       :     :  :        :- *(4) Filter (isnotnull(year_total#18867) AND (year_total#18867 > 0.00))
[info]       :     :  :        :  +- *(4) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :  :        :     +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#42772]
[info]       :     :  :        :        +- *(3) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :  :        :           +- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, d_year#337]
[info]       :     :  :        :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :  :        :                 :- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :  :        :                 :  +- *(3) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :  :        :                 :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42753]
[info]       :     :  :        :                 :     :  +- *(1) Project [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165]
[info]       :     :  :        :                 :     :     +- *(1) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_customer_id#157))
[info]       :     :  :        :                 :     :        +- *(1) ColumnarToRow
[info]       :     :  :        :                 :     :           +- BatchScan[c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string>
[info]       :     :  :        :                 :     +- *(3) Project [ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :  :        :                 :        +- *(3) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :  :        :                 :           +- *(3) ColumnarToRow
[info]       :     :  :        :                 :              +- BatchScan[ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_net_paid:decimal(7,2)>
[info]       :     :  :        :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42766]
[info]       :     :  :        :                    +- *(2) Project [d_date_sk#331, d_year#337]
[info]       :     :  :        :                       +- *(2) Filter (((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND d_year#337 IN (2001,2002)) AND isnotnull(d_date_sk#331))
[info]       :     :  :        :                          +- *(2) ColumnarToRow
[info]       :     :  :        :                             +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :  :        +- LocalTableScan <empty>, [customer_id#18869, year_total#18873]
[info]       :     :  +- *(10) Sort [customer_id#18883 ASC NULLS FIRST], false, 0
[info]       :     :     +- Exchange hashpartitioning(customer_id#18883, 4), true, [id=#42984]
[info]       :     :        +- Union
[info]       :     :           :- *(9) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :           :  +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#42937]
[info]       :     :           :     +- *(8) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :           :        +- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, d_year#337]
[info]       :     :           :           +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :           :              :- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :           :              :  +- *(8) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :           :              :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42753]
[info]       :     :           :              :     +- *(8) Project [ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :           :              :        +- *(8) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :           :              :           +- *(8) ColumnarToRow
[info]       :     :           :              :              +- BatchScan[ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_net_paid:decimal(7,2)>
[info]       :     :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42801]
[info]       :     :           :                 +- *(7) Project [d_date_sk#331, d_year#337]
[info]       :     :           :                    +- *(7) Filter (((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND d_year#337 IN (2001,2002)) AND isnotnull(d_date_sk#331))
[info]       :     :           :                       +- *(7) ColumnarToRow
[info]       :     :           :                          +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :           +- LocalTableScan <empty>, [customer_id#18869, customer_first_name#18870, customer_last_name#18871, year_total#18873]
[info]       :     +- *(16) Sort [customer_id#18889 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(customer_id#18889, 4), true, [id=#43045]
[info]       :           +- Union
[info]       :              :- LocalTableScan <empty>, [customer_id#18889, year_total#18893]
[info]       :              +- *(15) Filter (isnotnull(year_total#18873) AND (year_total#18873 > 0.00))
[info]       :                 +- *(15) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]       :                    +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#43018]
[info]       :                       +- *(14) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ws_net_paid#1049))])
[info]       :                          +- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, d_year#337]
[info]       :                             +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                                :- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]       :                                :  +- *(14) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]       :                                :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42753]
[info]       :                                :     +- *(14) Project [ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]       :                                :        +- *(14) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]       :                                :           +- *(14) ColumnarToRow
[info]       :                                :              +- BatchScan[ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_net_paid:decimal(7,2)>
[info]       :                                +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42766]
[info]       +- *(22) Sort [customer_id#18895 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(customer_id#18895, 4), true, [id=#43126]
[info]             +- Union
[info]                :- LocalTableScan <empty>, [customer_id#18895, year_total#18899]
[info]                +- *(21) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]                   +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#43100]
[info]                      +- *(20) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ws_net_paid#1049))])
[info]                         +- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, d_year#337]
[info]                            +- *(20) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]                               :  +- *(20) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]                               :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42753]
[info]                               :     +- *(20) Project [ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]                               :        +- *(20) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]                               :           +- *(20) ColumnarToRow
[info]                               :              +- BatchScan[ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_net_paid:decimal(7,2)>
[info]                               +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#42801]
[info] 
[info] 
[info]   Stopped after 1 iterations, 672 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q74                                                 673            673           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q75
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[sales_cnt_diff#19425L ASC NULLS FIRST], output=[prev_year#19421,year#19422,i_brand_id#503,i_class_id#505,i_category_id#507,i_manufact_id#509,prev_yr_cnt#19423L,curr_yr_cnt#19424L,sales_cnt_diff#19425L,sales_amt_diff#19426])
[info] +- *(51) Project [d_year#19775 AS prev_year#19421, d_year#337 AS year#19422, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#19467L AS prev_yr_cnt#19423L, sales_cnt#19433L AS curr_yr_cnt#19424L, (sales_cnt#19433L - sales_cnt#19467L) AS sales_cnt_diff#19425L, CheckOverflow((promote_precision(cast(sales_amt#19434 as decimal(19,2))) - promote_precision(cast(sales_amt#19468 as decimal(19,2)))), DecimalType(19,2), true) AS sales_amt_diff#19426]
[info]    +- *(51) SortMergeJoin [i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], [i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632], Inner, (CheckOverflow((promote_precision(cast(sales_cnt#19433L as decimal(17,2))) / promote_precision(cast(sales_cnt#19467L as decimal(17,2)))), DecimalType(37,20), true) < 0.90000000000000000000)
[info]       :- *(25) Sort [i_brand_id#503 ASC NULLS FIRST, i_class_id#505 ASC NULLS FIRST, i_category_id#507 ASC NULLS FIRST, i_manufact_id#509 ASC NULLS FIRST], false, 0
[info]       :  +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, 4), true, [id=#44182]
[info]       :     +- *(24) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], functions=[sum(cast(sales_cnt#19427 as bigint)), sum(UnscaledValue(sales_amt#19428))])
[info]       :        +- Exchange hashpartitioning(d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, 4), true, [id=#44178]
[info]       :           +- *(23) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], functions=[partial_sum(cast(sales_cnt#19427 as bigint)), partial_sum(UnscaledValue(sales_amt#19428))])
[info]       :              +- *(23) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#19427, sales_amt#19428], functions=[])
[info]       :                 +- Exchange hashpartitioning(d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#19427, sales_amt#19428, 4), true, [id=#44173]
[info]       :                    +- *(22) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#19427, sales_amt#19428], functions=[])
[info]       :                       +- Union
[info]       :                          :- *(7) Project [d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, (cs_quantity#895 - coalesce(cr_return_quantity#57, 0)) AS sales_cnt#19427, CheckOverflow((promote_precision(cast(cs_ext_sales_price#900 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#58, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19428]
[info]       :                          :  +- SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], LeftOuter
[info]       :                          :     :- *(4) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]       :                          :     :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#43830]
[info]       :                          :     :     +- *(3) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, d_year#337]
[info]       :                          :     :        +- *(3) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :                          :     :           :- *(3) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                          :     :           :  +- *(3) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]       :                          :     :           :     :- *(3) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]       :                          :     :           :     :  +- *(3) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]       :                          :     :           :     :     +- *(3) ColumnarToRow
[info]       :                          :     :           :     :        +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>
[info]       :                          :     :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43816]
[info]       :                          :     :           :        +- *(1) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                          :     :           :           +- *(1) Filter ((((((isnotnull(i_category#508) AND (i_category#508 = Books)) AND isnotnull(i_item_sk#496)) AND isnotnull(i_category_id#507)) AND isnotnull(i_manufact_id#509)) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505))
[info]       :                          :     :           :              +- *(1) ColumnarToRow
[info]       :                          :     :           :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_category#508, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
[info]       :                          :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43825]
[info]       :                          :     :              +- *(2) Project [d_date_sk#331, d_year#337]
[info]       :                          :     :                 +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND isnotnull(d_date_sk#331))
[info]       :                          :     :                    +- *(2) ColumnarToRow
[info]       :                          :     :                       +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :                          :     +- *(6) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]       :                          :        +- Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#43839]
[info]       :                          :           +- *(5) Project [cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58]
[info]       :                          :              +- *(5) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]       :                          :                 +- *(5) ColumnarToRow
[info]       :                          :                    +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
[info]       :                          :- *(14) Project [d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, (ss_quantity#1173 - coalesce(sr_return_quantity#800, 0)) AS sales_cnt#19440, CheckOverflow((promote_precision(cast(ss_ext_sales_price#1178 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#801, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19441]
[info]       :                          :  +- SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], LeftOuter
[info]       :                          :     :- *(11) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]       :                          :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#44128]
[info]       :                          :     :     +- *(10) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, d_year#337]
[info]       :                          :     :        +- *(10) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :                          :     :           :- *(10) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                          :     :           :  +- *(10) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]       :                          :     :           :     :- *(10) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]       :                          :     :           :     :  +- *(10) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]       :                          :     :           :     :     +- *(10) ColumnarToRow
[info]       :                          :     :           :     :        +- BatchScan[ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>
[info]       :                          :     :           :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43816]
[info]       :                          :     :           +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43825]
[info]       :                          :     +- *(13) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]       :                          :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#43879]
[info]       :                          :           +- *(12) Project [sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801]
[info]       :                          :              +- *(12) Filter (isnotnull(sr_item_sk#792) AND isnotnull(sr_ticket_number#799L))
[info]       :                          :                 +- *(12) ColumnarToRow
[info]       :                          :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
[info]       :                          +- *(21) Project [d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, (ws_quantity#1038 - coalesce(wr_return_quantity#1276, 0)) AS sales_cnt#19447, CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#1277, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19448]
[info]       :                             +- SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], LeftOuter
[info]       :                                :- *(18) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]       :                                :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#44161]
[info]       :                                :     +- *(17) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, d_year#337]
[info]       :                                :        +- *(17) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                                :           :- *(17) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                                :           :  +- *(17) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]       :                                :           :     :- *(17) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]       :                                :           :     :  +- *(17) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]       :                                :           :     :     +- *(17) ColumnarToRow
[info]       :                                :           :     :        +- BatchScan[ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>
[info]       :                                :           :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43816]
[info]       :                                :           +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43825]
[info]       :                                +- *(20) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]       :                                   +- Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#43919]
[info]       :                                      +- *(19) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277]
[info]       :                                         +- *(19) Filter (isnotnull(wr_item_sk#1264) AND isnotnull(wr_order_number#1275L))
[info]       :                                            +- *(19) ColumnarToRow
[info]       :                                               +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
[info]       +- *(50) Sort [i_brand_id#19626 ASC NULLS FIRST, i_class_id#19628 ASC NULLS FIRST, i_category_id#19630 ASC NULLS FIRST, i_manufact_id#19632 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632, 4), true, [id=#44591]
[info]             +- *(49) HashAggregate(keys=[d_year#19775, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632], functions=[sum(cast(sales_cnt#19427 as bigint)), sum(UnscaledValue(sales_amt#19428))])
[info]                +- Exchange hashpartitioning(d_year#19775, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632, 4), true, [id=#44571]
[info]                   +- *(48) HashAggregate(keys=[d_year#19775, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632], functions=[partial_sum(cast(sales_cnt#19427 as bigint)), partial_sum(UnscaledValue(sales_amt#19428))])
[info]                      +- *(48) HashAggregate(keys=[d_year#19775, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632, sales_cnt#19427, sales_amt#19428], functions=[])
[info]                         +- Exchange hashpartitioning(d_year#19775, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632, sales_cnt#19427, sales_amt#19428, 4), true, [id=#44468]
[info]                            +- *(47) HashAggregate(keys=[d_year#19775, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632, sales_cnt#19427, sales_amt#19428], functions=[])
[info]                               +- Union
[info]                                  :- *(32) Project [d_year#19775, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632, (cs_quantity#895 - coalesce(cr_return_quantity#57, 0)) AS sales_cnt#19427, CheckOverflow((promote_precision(cast(cs_ext_sales_price#900 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#58, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19428]
[info]                                  :  +- SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], LeftOuter
[info]                                  :     :- *(29) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                                  :     :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#44210]
[info]                                  :     :     +- *(28) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632, d_year#19775]
[info]                                  :     :        +- *(28) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#19769], Inner, BuildRight
[info]                                  :     :           :- *(28) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632]
[info]                                  :     :           :  +- *(28) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#19619], Inner, BuildRight
[info]                                  :     :           :     :- *(28) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]                                  :     :           :     :  +- *(28) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]                                  :     :           :     :     +- *(28) ColumnarToRow
[info]                                  :     :           :     :        +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>
[info]                                  :     :           :     +- ReusedExchange [i_item_sk#19619, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43816]
[info]                                  :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43963]
[info]                                  :     :              +- *(27) Project [d_date_sk#19769, d_year#19775]
[info]                                  :     :                 +- *(27) Filter ((isnotnull(d_year#19775) AND (d_year#19775 = 2001)) AND isnotnull(d_date_sk#19769))
[info]                                  :     :                    +- *(27) ColumnarToRow
[info]                                  :     :                       +- BatchScan[d_date_sk#19769, d_year#19775] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                                  :     +- *(31) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]                                  :        +- ReusedExchange [cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58], Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#43839]
[info]                                  :- *(39) Project [d_year#19775, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632, (ss_quantity#1173 - coalesce(sr_return_quantity#800, 0)) AS sales_cnt#19454, CheckOverflow((promote_precision(cast(ss_ext_sales_price#1178 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#801, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19455]
[info]                                  :  +- SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], LeftOuter
[info]                                  :     :- *(36) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                                  :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#44303]
[info]                                  :     :     +- *(35) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632, d_year#19775]
[info]                                  :     :        +- *(35) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#19769], Inner, BuildRight
[info]                                  :     :           :- *(35) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632]
[info]                                  :     :           :  +- *(35) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#19619], Inner, BuildRight
[info]                                  :     :           :     :- *(35) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                                  :     :           :     :  +- *(35) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                                  :     :           :     :     +- *(35) ColumnarToRow
[info]                                  :     :           :     :        +- BatchScan[ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>
[info]                                  :     :           :     +- ReusedExchange [i_item_sk#19619, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43816]
[info]                                  :     :           +- ReusedExchange [d_date_sk#19769, d_year#19775], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43963]
[info]                                  :     +- *(38) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                                  :        +- ReusedExchange [sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801], Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#43879]
[info]                                  +- *(46) Project [d_year#19775, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632, (ws_quantity#1038 - coalesce(wr_return_quantity#1276, 0)) AS sales_cnt#19461, CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#1277, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#19462]
[info]                                     +- SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], LeftOuter
[info]                                        :- *(43) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]                                        :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#44396]
[info]                                        :     +- *(42) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632, d_year#19775]
[info]                                        :        +- *(42) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#19769], Inner, BuildRight
[info]                                        :           :- *(42) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632]
[info]                                        :           :  +- *(42) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#19619], Inner, BuildRight
[info]                                        :           :     :- *(42) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                                        :           :     :  +- *(42) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                                        :           :     :     +- *(42) ColumnarToRow
[info]                                        :           :     :        +- BatchScan[ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>
[info]                                        :           :     +- ReusedExchange [i_item_sk#19619, i_brand_id#19626, i_class_id#19628, i_category_id#19630, i_manufact_id#19632], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43816]
[info]                                        :           +- ReusedExchange [d_date_sk#19769, d_year#19775], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#43963]
[info]                                        +- *(45) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]                                           +- ReusedExchange [wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277], Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#43919]
[info] 
[info] 
[info]   Stopped after 1 iterations, 976 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q75                                                 977            977           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q76
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#20030 ASC NULLS FIRST,col_name#20031 ASC NULLS FIRST,d_year#337 ASC NULLS FIRST,d_qoy#341 ASC NULLS FIRST,i_category#508 ASC NULLS FIRST], output=[channel#20030,col_name#20031,d_year#337,d_qoy#341,i_category#508,sales_cnt#20039L,sales_amt#20040])
[info] +- *(11) HashAggregate(keys=[channel#20030, col_name#20031, d_year#337, d_qoy#341, i_category#508], functions=[count(1), sum(UnscaledValue(ext_sales_price#20032))])
[info]    +- Exchange hashpartitioning(channel#20030, col_name#20031, d_year#337, d_qoy#341, i_category#508, 4), true, [id=#44970]
[info]       +- *(10) HashAggregate(keys=[channel#20030, col_name#20031, d_year#337, d_qoy#341, i_category#508], functions=[partial_count(1), partial_sum(UnscaledValue(ext_sales_price#20032))])
[info]          +- Union
[info]             :- *(3) Project [store AS channel#20030, ss_store_sk#1170 AS col_name#20031, d_year#337, d_qoy#341, i_category#508, ss_ext_sales_price#1178 AS ext_sales_price#20032]
[info]             :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :     :- *(3) Project [ss_store_sk#1170, ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_category#508]
[info]             :     :  +- *(3) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :     :     :- *(3) Project [ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]             :     :     :  +- *(3) Filter ((isnull(ss_store_sk#1170) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_sold_date_sk#1186))
[info]             :     :     :     +- *(3) ColumnarToRow
[info]             :     :     :        +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]             :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44831]
[info]             :     :        +- *(1) Project [i_item_sk#496, i_category#508]
[info]             :     :           +- *(1) Filter isnotnull(i_item_sk#496)
[info]             :     :              +- *(1) ColumnarToRow
[info]             :     :                 +- BatchScan[i_item_sk#496, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_category:string>
[info]             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44840]
[info]             :        +- *(2) Project [d_date_sk#331, d_year#337, d_qoy#341]
[info]             :           +- *(2) Filter isnotnull(d_date_sk#331)
[info]             :              +- *(2) ColumnarToRow
[info]             :                 +- BatchScan[d_date_sk#331, d_year#337, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info]             :- *(6) Project [web AS channel#20041, ws_ship_customer_sk#1028 AS col_name#20042, d_year#337, d_qoy#341, i_category#508, ws_ext_sales_price#1043 AS ext_sales_price#20046]
[info]             :  +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :     :- *(6) Project [ws_ship_customer_sk#1028, ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_category#508]
[info]             :     :  +- *(6) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]             :     :     :- *(6) Project [ws_item_sk#1023, ws_ship_customer_sk#1028, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]             :     :     :  +- *(6) Filter ((isnull(ws_ship_customer_sk#1028) AND isnotnull(ws_item_sk#1023)) AND isnotnull(ws_sold_date_sk#1054))
[info]             :     :     :     +- *(6) ColumnarToRow
[info]             :     :     :        +- BatchScan[ws_item_sk#1023, ws_ship_customer_sk#1028, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_ship_customer_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]             :     :     +- ReusedExchange [i_item_sk#496, i_category#508], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44831]
[info]             :     +- ReusedExchange [d_date_sk#331, d_year#337, d_qoy#341], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44840]
[info]             +- *(9) Project [catalog AS channel#20047, cs_ship_addr_sk#887 AS col_name#20048, d_year#337, d_qoy#341, i_category#508, cs_ext_sales_price#900 AS ext_sales_price#20052]
[info]                +- *(9) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                   :- *(9) Project [cs_ship_addr_sk#887, cs_ext_sales_price#900, cs_sold_date_sk#911, i_category#508]
[info]                   :  +- *(9) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                   :     :- *(9) Project [cs_ship_addr_sk#887, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]                   :     :  +- *(9) Filter ((isnull(cs_ship_addr_sk#887) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_sold_date_sk#911))
[info]                   :     :     +- *(9) ColumnarToRow
[info]                   :     :        +- BatchScan[cs_ship_addr_sk#887, cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ship_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]                   :     +- ReusedExchange [i_item_sk#496, i_category#508], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44831]
[info]                   +- ReusedExchange [d_date_sk#331, d_year#337, d_qoy#341], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#44840]
[info] 
[info] 
[info]   Stopped after 1 iterations, 247 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q76                                                 248            248           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q77
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#20288 ASC NULLS FIRST,id#20289 ASC NULLS FIRST], output=[channel#20288,id#20289,sales#20210,returns#20211,profit#20212])
[info] +- *(27) HashAggregate(keys=[channel#20288, id#20289, spark_grouping_id#20285], functions=[sum(sales#20213), sum(returns#20201), sum(profit#20280)])
[info]    +- Exchange hashpartitioning(channel#20288, id#20289, spark_grouping_id#20285, 4), true, [id=#45882]
[info]       +- *(26) HashAggregate(keys=[channel#20288, id#20289, spark_grouping_id#20285], functions=[partial_sum(sales#20213), partial_sum(returns#20201), partial_sum(profit#20280)])
[info]          +- *(26) Expand [List(sales#20213, returns#20201, profit#20280, channel#20199, id#20200, 0), List(sales#20213, returns#20201, profit#20280, channel#20199, null, 1), List(sales#20213, returns#20201, profit#20280, null, null, 3)], [sales#20213, returns#20201, profit#20280, channel#20288, id#20289, spark_grouping_id#20285]
[info]             +- Union
[info]                :- *(9) Project [sales#20213, coalesce(returns#20215, 0.00) AS returns#20201, CheckOverflow((promote_precision(cast(profit#20214 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#20216, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS profit#20280, store channel AS channel#20199, s_store_sk#670 AS id#20200]
[info]                :  +- SortMergeJoin [s_store_sk#670], [s_store_sk#20237], LeftOuter
[info]                :     :- *(4) Sort [s_store_sk#670 ASC NULLS FIRST], false, 0
[info]                :     :  +- *(4) HashAggregate(keys=[s_store_sk#670], functions=[sum(UnscaledValue(ss_ext_sales_price#1178)), sum(UnscaledValue(ss_net_profit#1185))])
[info]                :     :     +- Exchange hashpartitioning(s_store_sk#670, 4), true, [id=#45484]
[info]                :     :        +- *(3) HashAggregate(keys=[s_store_sk#670], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178)), partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]                :     :           +- *(3) Project [ss_ext_sales_price#1178, ss_net_profit#1185, s_store_sk#670]
[info]                :     :              +- *(3) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :     :                 :- *(3) Project [ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185]
[info]                :     :                 :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :                 :     :- *(3) Project [ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                :     :                 :     :  +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]                :     :                 :     :     +- *(3) ColumnarToRow
[info]                :     :                 :     :        +- BatchScan[ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>
[info]                :     :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45469]
[info]                :     :                 :        +- *(1) Project [d_date_sk#331]
[info]                :     :                 :           +- *(1) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 11172)) AND (d_date#333 <= 11202)) AND isnotnull(d_date_sk#331))
[info]                :     :                 :              +- *(1) ColumnarToRow
[info]                :     :                 :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45478]
[info]                :     :                    +- *(2) Project [s_store_sk#670]
[info]                :     :                       +- *(2) Filter isnotnull(s_store_sk#670)
[info]                :     :                          +- *(2) ColumnarToRow
[info]                :     :                             +- BatchScan[s_store_sk#670] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int>
[info]                :     +- *(8) Sort [s_store_sk#20237 ASC NULLS FIRST], false, 0
[info]                :        +- *(8) HashAggregate(keys=[s_store_sk#20237], functions=[sum(UnscaledValue(sr_return_amt#801)), sum(UnscaledValue(sr_net_loss#809))])
[info]                :           +- Exchange hashpartitioning(s_store_sk#20237, 4), true, [id=#45679]
[info]                :              +- *(7) HashAggregate(keys=[s_store_sk#20237], functions=[partial_sum(UnscaledValue(sr_return_amt#801)), partial_sum(UnscaledValue(sr_net_loss#809))])
[info]                :                 +- *(7) Project [sr_return_amt#801, sr_net_loss#809, s_store_sk#20237]
[info]                :                    +- *(7) BroadcastHashJoin [sr_store_sk#797], [s_store_sk#20237], Inner, BuildRight
[info]                :                       :- *(7) Project [sr_store_sk#797, sr_return_amt#801, sr_net_loss#809]
[info]                :                       :  +- *(7) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#331], Inner, BuildRight
[info]                :                       :     :- *(7) Project [sr_store_sk#797, sr_return_amt#801, sr_net_loss#809, sr_returned_date_sk#810]
[info]                :                       :     :  +- *(7) Filter (isnotnull(sr_returned_date_sk#810) AND isnotnull(sr_store_sk#797))
[info]                :                       :     :     +- *(7) ColumnarToRow
[info]                :                       :     :        +- BatchScan[sr_store_sk#797, sr_return_amt#801, sr_net_loss#809, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
[info]                :                       :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45469]
[info]                :                       +- ReusedExchange [s_store_sk#20237], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45478]
[info]                :- *(16) Project [sales#20217, returns#20219, CheckOverflow((promote_precision(cast(profit#20218 as decimal(18,2))) - promote_precision(cast(profit_loss#20220 as decimal(18,2)))), DecimalType(18,2), true) AS profit#20205, catalog channel AS channel#20203, cs_call_center_sk#888 AS id#20204]
[info]                :  +- BroadcastNestedLoopJoin BuildRight, Inner
[info]                :     :- *(12) HashAggregate(keys=[cs_call_center_sk#888], functions=[sum(UnscaledValue(cs_ext_sales_price#900)), sum(UnscaledValue(cs_net_profit#910))])
[info]                :     :  +- Exchange hashpartitioning(cs_call_center_sk#888, 4), true, [id=#45744]
[info]                :     :     +- *(11) HashAggregate(keys=[cs_call_center_sk#888], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900)), partial_sum(UnscaledValue(cs_net_profit#910))])
[info]                :     :        +- *(11) Project [cs_call_center_sk#888, cs_ext_sales_price#900, cs_net_profit#910]
[info]                :     :           +- *(11) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :              :- *(11) Project [cs_call_center_sk#888, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911]
[info]                :     :              :  +- *(11) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :              :     +- *(11) ColumnarToRow
[info]                :     :              :        +- BatchScan[cs_call_center_sk#888, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_call_center_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>
[info]                :     :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45469]
[info]                :     +- BroadcastExchange IdentityBroadcastMode, [id=#45766]
[info]                :        +- *(15) HashAggregate(keys=[], functions=[sum(UnscaledValue(cr_return_amount#58)), sum(UnscaledValue(cr_net_loss#66))])
[info]                :           +- Exchange SinglePartition, true, [id=#45762]
[info]                :              +- *(14) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(cr_return_amount#58)), partial_sum(UnscaledValue(cr_net_loss#66))])
[info]                :                 +- *(14) Project [cr_return_amount#58, cr_net_loss#66]
[info]                :                    +- *(14) BroadcastHashJoin [cr_returned_date_sk#67], [d_date_sk#331], Inner, BuildRight
[info]                :                       :- *(14) Project [cr_return_amount#58, cr_net_loss#66, cr_returned_date_sk#67]
[info]                :                       :  +- *(14) Filter isnotnull(cr_returned_date_sk#67)
[info]                :                       :     +- *(14) ColumnarToRow
[info]                :                       :        +- BatchScan[cr_return_amount#58, cr_net_loss#66, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
[info]                :                       +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45469]
[info]                +- *(25) Project [sales#20221, coalesce(returns#20223, 0.00) AS returns#20208, CheckOverflow((promote_precision(cast(profit#20222 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#20224, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS profit#20281, web channel AS channel#20297, wp_web_page_sk#1773 AS id#20298]
[info]                   +- SortMergeJoin [wp_web_page_sk#1773], [wp_web_page_sk#20266], LeftOuter
[info]                      :- *(20) Sort [wp_web_page_sk#1773 ASC NULLS FIRST], false, 0
[info]                      :  +- *(20) HashAggregate(keys=[wp_web_page_sk#1773], functions=[sum(UnscaledValue(ws_ext_sales_price#1043)), sum(UnscaledValue(ws_net_profit#1053))])
[info]                      :     +- Exchange hashpartitioning(wp_web_page_sk#1773, 4), true, [id=#45787]
[info]                      :        +- *(19) HashAggregate(keys=[wp_web_page_sk#1773], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043)), partial_sum(UnscaledValue(ws_net_profit#1053))])
[info]                      :           +- *(19) Project [ws_ext_sales_price#1043, ws_net_profit#1053, wp_web_page_sk#1773]
[info]                      :              +- *(19) BroadcastHashJoin [ws_web_page_sk#1032], [wp_web_page_sk#1773], Inner, BuildRight
[info]                      :                 :- *(19) Project [ws_web_page_sk#1032, ws_ext_sales_price#1043, ws_net_profit#1053]
[info]                      :                 :  +- *(19) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                      :                 :     :- *(19) Project [ws_web_page_sk#1032, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054]
[info]                      :                 :     :  +- *(19) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_web_page_sk#1032))
[info]                      :                 :     :     +- *(19) ColumnarToRow
[info]                      :                 :     :        +- BatchScan[ws_web_page_sk#1032, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_web_page_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>
[info]                      :                 :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45469]
[info]                      :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45583]
[info]                      :                    +- *(18) Project [wp_web_page_sk#1773]
[info]                      :                       +- *(18) Filter isnotnull(wp_web_page_sk#1773)
[info]                      :                          +- *(18) ColumnarToRow
[info]                      :                             +- BatchScan[wp_web_page_sk#1773] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_page], ReadSchema: struct<wp_web_page_sk:int>
[info]                      +- *(24) Sort [wp_web_page_sk#20266 ASC NULLS FIRST], false, 0
[info]                         +- *(24) HashAggregate(keys=[wp_web_page_sk#20266], functions=[sum(UnscaledValue(wr_return_amt#1277)), sum(UnscaledValue(wr_net_loss#1285))])
[info]                            +- Exchange hashpartitioning(wp_web_page_sk#20266, 4), true, [id=#45826]
[info]                               +- *(23) HashAggregate(keys=[wp_web_page_sk#20266], functions=[partial_sum(UnscaledValue(wr_return_amt#1277)), partial_sum(UnscaledValue(wr_net_loss#1285))])
[info]                                  +- *(23) Project [wr_return_amt#1277, wr_net_loss#1285, wp_web_page_sk#20266]
[info]                                     +- *(23) BroadcastHashJoin [wr_web_page_sk#1273], [wp_web_page_sk#20266], Inner, BuildRight
[info]                                        :- *(23) Project [wr_web_page_sk#1273, wr_return_amt#1277, wr_net_loss#1285]
[info]                                        :  +- *(23) BroadcastHashJoin [wr_returned_date_sk#1286], [d_date_sk#331], Inner, BuildRight
[info]                                        :     :- *(23) Project [wr_web_page_sk#1273, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286]
[info]                                        :     :  +- *(23) Filter (isnotnull(wr_returned_date_sk#1286) AND isnotnull(wr_web_page_sk#1273))
[info]                                        :     :     +- *(23) ColumnarToRow
[info]                                        :     :        +- BatchScan[wr_web_page_sk#1273, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_web_page_sk:int,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
[info]                                        :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45469]
[info]                                        +- ReusedExchange [wp_web_page_sk#20266], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#45583]
[info] 
[info] 
[info]   Stopped after 1 iterations, 640 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q77                                                 641            641           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q78
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ratio#20419 ASC NULLS FIRST,ss_qty#20437L DESC NULLS LAST,ss_wc#20438 DESC NULLS LAST,ss_sp#20439 DESC NULLS LAST,other_chan_qty#20423L ASC NULLS FIRST,other_chan_wholesale_cost#20424 ASC NULLS FIRST,other_chan_sales_price#20425 ASC NULLS FIRST,round((cast(ss_qty#20437L as double) / cast(coalesce((ws_qty#20428L + cs_qty#20433L), 1) as double)), 2) ASC NULLS FIRST], output=[ratio#20419,store_qty#20420L,store_wholesale_cost#20421,store_sales_price#20422,other_chan_qty#20423L,other_chan_wholesale_cost#20424,other_chan_sales_price#20425])
[info] +- *(26) Project [round((cast(ss_qty#20437L as double) / cast(coalesce((ws_qty#20428L + cs_qty#20433L), 1) as double)), 2) AS ratio#20419, ss_qty#20437L AS store_qty#20420L, ss_wc#20438 AS store_wholesale_cost#20421, ss_sp#20439 AS store_sales_price#20422, (coalesce(ws_qty#20428L, 0) + coalesce(cs_qty#20433L, 0)) AS other_chan_qty#20423L, CheckOverflow((promote_precision(cast(coalesce(ws_wc#20429, 0.00) as decimal(18,2))) + promote_precision(cast(coalesce(cs_wc#20434, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS other_chan_wholesale_cost#20424, CheckOverflow((promote_precision(cast(coalesce(ws_sp#20430, 0.00) as decimal(18,2))) + promote_precision(cast(coalesce(cs_sp#20435, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS other_chan_sales_price#20425, ss_wc#20438, ss_sp#20439, ws_qty#20428L, ss_qty#20437L, cs_qty#20433L]
[info]    +- *(26) SortMergeJoin [ss_sold_year#20436, ss_item_sk#1165, ss_customer_sk#1166], [cs_sold_year#20431, cs_item_sk#892, cs_customer_sk#20432], Inner
[info]       :- *(17) Project [ss_sold_year#20436, ss_item_sk#1165, ss_customer_sk#1166, ss_qty#20437L, ss_wc#20438, ss_sp#20439, ws_qty#20428L, ws_wc#20429, ws_sp#20430]
[info]       :  +- *(17) SortMergeJoin [ss_sold_year#20436, ss_item_sk#1165, ss_customer_sk#1166], [ws_sold_year#20426, ws_item_sk#1023, ws_customer_sk#20427], Inner
[info]       :     :- *(8) Sort [ss_sold_year#20436 ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST, ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(ss_sold_year#20436, ss_item_sk#1165, ss_customer_sk#1166, 4), true, [id=#46247]
[info]       :     :     +- *(7) HashAggregate(keys=[d_year#337, ss_item_sk#1165, ss_customer_sk#1166], functions=[sum(cast(ss_quantity#1173 as bigint)), sum(UnscaledValue(ss_wholesale_cost#1174)), sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :        +- Exchange hashpartitioning(d_year#337, ss_item_sk#1165, ss_customer_sk#1166, 4), true, [id=#46243]
[info]       :     :           +- *(6) HashAggregate(keys=[d_year#337, ss_item_sk#1165, ss_customer_sk#1166], functions=[partial_sum(cast(ss_quantity#1173 as bigint)), partial_sum(UnscaledValue(ss_wholesale_cost#1174)), partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :              +- *(6) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, d_year#337]
[info]       :     :                 +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :                    :- *(6) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                    :  +- *(6) Filter isnull(sr_ticket_number#799L)
[info]       :     :                    :     +- SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], LeftOuter
[info]       :     :                    :        :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]       :     :                    :        :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#46215]
[info]       :     :                    :        :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                    :        :        +- *(1) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_item_sk#1165))
[info]       :     :                    :        :           +- *(1) ColumnarToRow
[info]       :     :                    :        :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_wholesale_cos...
[info]       :     :                    :        +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]       :     :                    :           +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#46224]
[info]       :     :                    :              +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]       :     :                    :                 +- *(3) Filter (isnotnull(sr_ticket_number#799L) AND isnotnull(sr_item_sk#792))
[info]       :     :                    :                    +- *(3) ColumnarToRow
[info]       :     :                    :                       +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]       :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46237]
[info]       :     :                       +- *(5) Project [d_date_sk#331, d_year#337]
[info]       :     :                          +- *(5) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]       :     :                             +- *(5) ColumnarToRow
[info]       :     :                                +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     +- *(16) Sort [ws_sold_year#20426 ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST, ws_customer_sk#20427 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(ws_sold_year#20426, ws_item_sk#1023, ws_customer_sk#20427, 4), true, [id=#46373]
[info]       :           +- *(15) Filter (coalesce(ws_qty#20428L, 0) > 0)
[info]       :              +- *(15) HashAggregate(keys=[d_year#337, ws_item_sk#1023, ws_bill_customer_sk#1024], functions=[sum(cast(ws_quantity#1038 as bigint)), sum(UnscaledValue(ws_wholesale_cost#1039)), sum(UnscaledValue(ws_sales_price#1041))])
[info]       :                 +- Exchange hashpartitioning(d_year#337, ws_item_sk#1023, ws_bill_customer_sk#1024, 4), true, [id=#46368]
[info]       :                    +- *(14) HashAggregate(keys=[d_year#337, ws_item_sk#1023, ws_bill_customer_sk#1024], functions=[partial_sum(cast(ws_quantity#1038 as bigint)), partial_sum(UnscaledValue(ws_wholesale_cost#1039)), partial_sum(UnscaledValue(ws_sales_price#1041))])
[info]       :                       +- *(14) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, d_year#337]
[info]       :                          +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                             :- *(14) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, ws_sold_date_sk#1054]
[info]       :                             :  +- *(14) Filter isnull(wr_order_number#1275L)
[info]       :                             :     +- SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], LeftOuter
[info]       :                             :        :- *(10) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]       :                             :        :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#46257]
[info]       :                             :        :     +- *(9) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, ws_sold_date_sk#1054]
[info]       :                             :        :        +- *(9) Filter ((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_customer_sk#1024)) AND isnotnull(ws_item_sk#1023))
[info]       :                             :        :           +- *(9) ColumnarToRow
[info]       :                             :        :              +- BatchScan[ws_item_sk#1023, ws_bill_customer_sk#1024, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_order_number:bigint,ws_quantity:int,ws_wholesale...
[info]       :                             :        +- *(12) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]       :                             :           +- Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#46266]
[info]       :                             :              +- *(11) Project [wr_item_sk#1264, wr_order_number#1275L]
[info]       :                             :                 +- *(11) Filter (isnotnull(wr_order_number#1275L) AND isnotnull(wr_item_sk#1264))
[info]       :                             :                    +- *(11) ColumnarToRow
[info]       :                             :                       +- BatchScan[wr_item_sk#1264, wr_order_number#1275L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint>
[info]       :                             +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46237]
[info]       +- *(25) Sort [cs_sold_year#20431 ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST, cs_customer_sk#20432 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(cs_sold_year#20431, cs_item_sk#892, cs_customer_sk#20432, 4), true, [id=#46401]
[info]             +- *(24) Filter (coalesce(cs_qty#20433L, 0) > 0)
[info]                +- *(24) HashAggregate(keys=[d_year#337, cs_item_sk#892, cs_bill_customer_sk#880], functions=[sum(cast(cs_quantity#895 as bigint)), sum(UnscaledValue(cs_wholesale_cost#896)), sum(UnscaledValue(cs_sales_price#898))])
[info]                   +- Exchange hashpartitioning(d_year#337, cs_item_sk#892, cs_bill_customer_sk#880, 4), true, [id=#46396]
[info]                      +- *(23) HashAggregate(keys=[d_year#337, cs_item_sk#892, cs_bill_customer_sk#880], functions=[partial_sum(cast(cs_quantity#895 as bigint)), partial_sum(UnscaledValue(cs_wholesale_cost#896)), partial_sum(UnscaledValue(cs_sales_price#898))])
[info]                         +- *(23) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, d_year#337]
[info]                            +- *(23) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(23) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, cs_sold_date_sk#911]
[info]                               :  +- *(23) Filter isnull(cr_order_number#56L)
[info]                               :     +- SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], LeftOuter
[info]                               :        :- *(19) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                               :        :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#46304]
[info]                               :        :     +- *(18) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, cs_sold_date_sk#911]
[info]                               :        :        +- *(18) Filter ((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_item_sk#892))
[info]                               :        :           +- *(18) ColumnarToRow
[info]                               :        :              +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_wholesale...
[info]                               :        +- *(21) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]                               :           +- Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#46313]
[info]                               :              +- *(20) Project [cr_item_sk#42, cr_order_number#56L]
[info]                               :                 +- *(20) Filter (isnotnull(cr_order_number#56L) AND isnotnull(cr_item_sk#42))
[info]                               :                    +- *(20) ColumnarToRow
[info]                               :                       +- BatchScan[cr_item_sk#42, cr_order_number#56L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint>
[info]                               +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46237]
[info] 
[info] 
[info]   Stopped after 1 iterations, 380 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q78                                                 380            380           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q79
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_last_name#165 ASC NULLS FIRST,c_first_name#164 ASC NULLS FIRST,substring(s_city#692, 1, 30) ASC NULLS FIRST,profit#20525 ASC NULLS FIRST], output=[c_last_name#165,c_first_name#164,substring(s_city, 1, 30)#20528,ss_ticket_number#1172L,amt#20524,profit#20525])
[info] +- *(6) Project [c_last_name#165, c_first_name#164, substring(s_city#692, 1, 30) AS substring(s_city, 1, 30)#20528, ss_ticket_number#1172L, amt#20524, profit#20525, s_city#692]
[info]    +- *(6) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]       :- *(6) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, s_city#692], functions=[sum(UnscaledValue(ss_coupon_amt#1182)), sum(UnscaledValue(ss_net_profit#1185))])
[info]       :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, s_city#692, 4), true, [id=#46575]
[info]       :     +- *(4) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166, ss_addr_sk#1169, s_city#692], functions=[partial_sum(UnscaledValue(ss_coupon_amt#1182)), partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]       :        +- *(4) Project [ss_customer_sk#1166, ss_addr_sk#1169, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185, s_city#692]
[info]       :           +- *(4) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]       :              :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185, s_city#692]
[info]       :              :  +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]       :              :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185]
[info]       :              :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :              :     :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]       :              :     :     :  +- *(4) Filter (((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_customer_sk#1166))
[info]       :              :     :     :     +- *(4) ColumnarToRow
[info]       :              :     :     :        +- BatchScan[ss_customer_sk#1166, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_ticket_number#1172L, ss_coupon_amt#1182, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_ticket_number:bigint,...
[info]       :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46551]
[info]       :              :     :        +- *(1) Project [d_date_sk#331]
[info]       :              :     :           +- *(1) Filter (((isnotnull(d_dow#338) AND (d_dow#338 = 1)) AND d_year#337 IN (1999,2000,2001)) AND isnotnull(d_date_sk#331))
[info]       :              :     :              +- *(1) ColumnarToRow
[info]       :              :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_dow#338] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_dow:int>
[info]       :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46560]
[info]       :              :        +- *(2) Project [s_store_sk#670, s_city#692]
[info]       :              :           +- *(2) Filter (((isnotnull(s_number_employees#676) AND (s_number_employees#676 >= 200)) AND (s_number_employees#676 <= 295)) AND isnotnull(s_store_sk#670))
[info]       :              :              +- *(2) ColumnarToRow
[info]       :              :                 +- BatchScan[s_store_sk#670, s_number_employees#676, s_city#692] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_number_employees:int,s_city:string>
[info]       :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46569]
[info]       :                 +- *(3) Project [hd_demo_sk#448]
[info]       :                    +- *(3) Filter (((hd_dep_count#451 = 6) OR (hd_vehicle_count#452 > 2)) AND isnotnull(hd_demo_sk#448))
[info]       :                       +- *(3) ColumnarToRow
[info]       :                          +- BatchScan[hd_demo_sk#448, hd_dep_count#451, hd_vehicle_count#452] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
[info]       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#46583]
[info]          +- *(5) Project [c_customer_sk#156, c_first_name#164, c_last_name#165]
[info]             +- *(5) Filter isnotnull(c_customer_sk#156)
[info]                +- *(5) ColumnarToRow
[info]                   +- BatchScan[c_customer_sk#156, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 191 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q79                                                 192            192           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q80
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#20639 ASC NULLS FIRST,id#20640 ASC NULLS FIRST], output=[channel#20639,id#20640,sales#20610,returns#20611,profit#20612])
[info] +- *(32) HashAggregate(keys=[channel#20639, id#20640, spark_grouping_id#20636], functions=[sum(sales#20614), sum(returns#20615), sum(profit#20616)])
[info]    +- Exchange hashpartitioning(channel#20639, id#20640, spark_grouping_id#20636, 4), true, [id=#47418]
[info]       +- *(31) HashAggregate(keys=[channel#20639, id#20640, spark_grouping_id#20636], functions=[partial_sum(sales#20614), partial_sum(returns#20615), partial_sum(profit#20616)])
[info]          +- *(31) Expand [List(sales#20614, returns#20615, profit#20616, channel#20637, id#20638, 0), List(sales#20614, returns#20615, profit#20616, channel#20637, null, 1), List(sales#20614, returns#20615, profit#20616, null, null, 3)], [sales#20614, returns#20615, profit#20616, channel#20639, id#20640, spark_grouping_id#20636]
[info]             +- Union
[info]                :- *(10) HashAggregate(keys=[s_store_id#671], functions=[sum(UnscaledValue(ss_ext_sales_price#1178)), sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ss_net_profit#1185 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#809 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]                :  +- Exchange hashpartitioning(s_store_id#671, 4), true, [id=#47161]
[info]                :     +- *(9) HashAggregate(keys=[s_store_id#671], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178)), partial_sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ss_net_profit#1185 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#809 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]                :        +- *(9) Project [ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809, s_store_id#671]
[info]                :           +- *(9) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]                :              :- *(9) Project [ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809, s_store_id#671]
[info]                :              :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :              :     :- *(9) Project [ss_item_sk#1165, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809, s_store_id#671]
[info]                :              :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :              :     :     :- *(9) Project [ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809]
[info]                :              :     :     :  +- *(9) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :              :     :     :     :- *(9) Project [ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186, sr_return_amt#801, sr_net_loss#809]
[info]                :              :     :     :     :  +- SortMergeJoin [ss_item_sk#1165, ss_ticket_number#1172L], [sr_item_sk#792, sr_ticket_number#799L], LeftOuter
[info]                :              :     :     :     :     :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]                :              :     :     :     :     :  +- Exchange hashpartitioning(ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#47107]
[info]                :              :     :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                :              :     :     :     :     :        +- *(1) Filter (((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_promo_sk#1171))
[info]                :              :     :     :     :     :           +- *(1) ColumnarToRow
[info]                :              :     :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:bigint,ss_ext_sales_price:...
[info]                :              :     :     :     :     +- *(4) Sort [sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]                :              :     :     :     :        +- Exchange hashpartitioning(sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#47116]
[info]                :              :     :     :     :           +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L, sr_return_amt#801, sr_net_loss#809]
[info]                :              :     :     :     :              +- *(3) Filter (isnotnull(sr_item_sk#792) AND isnotnull(sr_ticket_number#799L))
[info]                :              :     :     :     :                 +- *(3) ColumnarToRow
[info]                :              :     :     :     :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L, sr_return_amt#801, sr_net_loss#809] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
[info]                :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47128]
[info]                :              :     :     :        +- *(5) Project [d_date_sk#331]
[info]                :              :     :     :           +- *(5) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 11192)) AND (d_date#333 <= 11222)) AND isnotnull(d_date_sk#331))
[info]                :              :     :     :              +- *(5) ColumnarToRow
[info]                :              :     :     :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47137]
[info]                :              :     :        +- *(6) Project [s_store_sk#670, s_store_id#671]
[info]                :              :     :           +- *(6) Filter isnotnull(s_store_sk#670)
[info]                :              :     :              +- *(6) ColumnarToRow
[info]                :              :     :                 +- BatchScan[s_store_sk#670, s_store_id#671] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string>
[info]                :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47146]
[info]                :              :        +- *(7) Project [i_item_sk#496]
[info]                :              :           +- *(7) Filter ((isnotnull(i_current_price#501) AND (i_current_price#501 > 50.00)) AND isnotnull(i_item_sk#496))
[info]                :              :              +- *(7) ColumnarToRow
[info]                :              :                 +- BatchScan[i_item_sk#496, i_current_price#501] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2)>
[info]                :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47155]
[info]                :                 +- *(8) Project [p_promo_sk#589]
[info]                :                    +- *(8) Filter ((isnotnull(p_channel_tv#600) AND (p_channel_tv#600 = N)) AND isnotnull(p_promo_sk#589))
[info]                :                       +- *(8) ColumnarToRow
[info]                :                          +- BatchScan[p_promo_sk#589, p_channel_tv#600] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int,p_channel_tv:string>
[info]                :- *(20) HashAggregate(keys=[cp_catalog_page_id#1], functions=[sum(UnscaledValue(cs_ext_sales_price#900)), sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(cs_net_profit#910 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#66 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]                :  +- Exchange hashpartitioning(cp_catalog_page_id#1, 4), true, [id=#47365]
[info]                :     +- *(19) HashAggregate(keys=[cp_catalog_page_id#1], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900)), partial_sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(cs_net_profit#910 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#66 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]                :        +- *(19) Project [cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66, cp_catalog_page_id#1]
[info]                :           +- *(19) BroadcastHashJoin [cs_promo_sk#893], [p_promo_sk#589], Inner, BuildRight
[info]                :              :- *(19) Project [cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66, cp_catalog_page_id#1]
[info]                :              :  +- *(19) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                :              :     :- *(19) Project [cs_item_sk#892, cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66, cp_catalog_page_id#1]
[info]                :              :     :  +- *(19) BroadcastHashJoin [cs_catalog_page_sk#889], [cp_catalog_page_sk#0], Inner, BuildRight
[info]                :              :     :     :- *(19) Project [cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66]
[info]                :              :     :     :  +- *(19) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :              :     :     :     :- *(19) Project [cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911, cr_return_amount#58, cr_net_loss#66]
[info]                :              :     :     :     :  +- SortMergeJoin [cs_item_sk#892, cs_order_number#894L], [cr_item_sk#42, cr_order_number#56L], LeftOuter
[info]                :              :     :     :     :     :- *(12) Sort [cs_item_sk#892 ASC NULLS FIRST, cs_order_number#894L ASC NULLS FIRST], false, 0
[info]                :              :     :     :     :     :  +- Exchange hashpartitioning(cs_item_sk#892, cs_order_number#894L, 4), true, [id=#47170]
[info]                :              :     :     :     :     :     +- *(11) Project [cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911]
[info]                :              :     :     :     :     :        +- *(11) Filter (((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_catalog_page_sk#889)) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_promo_sk#893))
[info]                :              :     :     :     :     :           +- *(11) ColumnarToRow
[info]                :              :     :     :     :     :              +- BatchScan[cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_catalog_page_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:bigint,cs_ext_sales_...
[info]                :              :     :     :     :     +- *(14) Sort [cr_item_sk#42 ASC NULLS FIRST, cr_order_number#56L ASC NULLS FIRST], false, 0
[info]                :              :     :     :     :        +- Exchange hashpartitioning(cr_item_sk#42, cr_order_number#56L, 4), true, [id=#47179]
[info]                :              :     :     :     :           +- *(13) Project [cr_item_sk#42, cr_order_number#56L, cr_return_amount#58, cr_net_loss#66]
[info]                :              :     :     :     :              +- *(13) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]                :              :     :     :     :                 +- *(13) ColumnarToRow
[info]                :              :     :     :     :                    +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_return_amount#58, cr_net_loss#66] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
[info]                :              :     :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47128]
[info]                :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47200]
[info]                :              :     :        +- *(16) Project [cp_catalog_page_sk#0, cp_catalog_page_id#1]
[info]                :              :     :           +- *(16) Filter isnotnull(cp_catalog_page_sk#0)
[info]                :              :     :              +- *(16) ColumnarToRow
[info]                :              :     :                 +- BatchScan[cp_catalog_page_sk#0, cp_catalog_page_id#1] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_page], ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>
[info]                :              :     +- ReusedExchange [i_item_sk#496], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47146]
[info]                :              +- ReusedExchange [p_promo_sk#589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47155]
[info]                +- *(30) HashAggregate(keys=[web_site_id#1367], functions=[sum(UnscaledValue(ws_ext_sales_price#1043)), sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ws_net_profit#1053 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#1285 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]                   +- Exchange hashpartitioning(web_site_id#1367, 4), true, [id=#47409]
[info]                      +- *(29) HashAggregate(keys=[web_site_id#1367], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043)), partial_sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ws_net_profit#1053 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#1285 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]                         +- *(29) Project [ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285, web_site_id#1367]
[info]                            +- *(29) BroadcastHashJoin [ws_promo_sk#1036], [p_promo_sk#589], Inner, BuildRight
[info]                               :- *(29) Project [ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285, web_site_id#1367]
[info]                               :  +- *(29) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                               :     :- *(29) Project [ws_item_sk#1023, ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285, web_site_id#1367]
[info]                               :     :  +- *(29) BroadcastHashJoin [ws_web_site_sk#1033], [web_site_sk#1366], Inner, BuildRight
[info]                               :     :     :- *(29) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285]
[info]                               :     :     :  +- *(29) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :     :     :     :- *(29) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054, wr_return_amt#1277, wr_net_loss#1285]
[info]                               :     :     :     :  +- SortMergeJoin [ws_item_sk#1023, ws_order_number#1037L], [wr_item_sk#1264, wr_order_number#1275L], LeftOuter
[info]                               :     :     :     :     :- *(22) Sort [ws_item_sk#1023 ASC NULLS FIRST, ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]                               :     :     :     :     :  +- Exchange hashpartitioning(ws_item_sk#1023, ws_order_number#1037L, 4), true, [id=#47233]
[info]                               :     :     :     :     :     +- *(21) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_order_number#1037L, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054]
[info]                               :     :     :     :     :        +- *(21) Filter (((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_web_site_sk#1033)) AND isnotnull(ws_item_sk#1023)) AND isnotnull(ws_promo_sk#1036))
[info]                               :     :     :     :     :           +- *(21) ColumnarToRow
[info]                               :     :     :     :     :              +- BatchScan[ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_order_number#1037L, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_promo_sk:int,ws_order_number:bigint,ws_ext_sales_pric...
[info]                               :     :     :     :     +- *(24) Sort [wr_item_sk#1264 ASC NULLS FIRST, wr_order_number#1275L ASC NULLS FIRST], false, 0
[info]                               :     :     :     :        +- Exchange hashpartitioning(wr_item_sk#1264, wr_order_number#1275L, 4), true, [id=#47242]
[info]                               :     :     :     :           +- *(23) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285]
[info]                               :     :     :     :              +- *(23) Filter (isnotnull(wr_item_sk#1264) AND isnotnull(wr_order_number#1275L))
[info]                               :     :     :     :                 +- *(23) ColumnarToRow
[info]                               :     :     :     :                    +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
[info]                               :     :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47128]
[info]                               :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47263]
[info]                               :     :        +- *(26) Project [web_site_sk#1366, web_site_id#1367]
[info]                               :     :           +- *(26) Filter isnotnull(web_site_sk#1366)
[info]                               :     :              +- *(26) ColumnarToRow
[info]                               :     :                 +- BatchScan[web_site_sk#1366, web_site_id#1367] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_site], ReadSchema: struct<web_site_sk:int,web_site_id:string>
[info]                               :     +- ReusedExchange [i_item_sk#496], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47146]
[info]                               +- ReusedExchange [p_promo_sk#589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47155]
[info] 
[info] 
[info]   Stopped after 1 iterations, 720 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q80                                                 721            721           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q81
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#157 ASC NULLS FIRST,c_salutation#163 ASC NULLS FIRST,c_first_name#164 ASC NULLS FIRST,c_last_name#165 ASC NULLS FIRST,ca_street_number#235 ASC NULLS FIRST,ca_street_name#236 ASC NULLS FIRST,ca_street_type#237 ASC NULLS FIRST,ca_suite_number#238 ASC NULLS FIRST,ca_city#239 ASC NULLS FIRST,ca_county#240 ASC NULLS FIRST,ca_state#241 ASC NULLS FIRST,ca_zip#242 ASC NULLS FIRST,ca_country#243 ASC NULLS FIRST,ca_gmt_offset#244 ASC NULLS FIRST,ca_location_type#245 ASC NULLS FIRST,ctr_total_return#20766 ASC NULLS FIRST], output=[c_customer_id#157,c_salutation#163,c_first_name#164,c_last_name#165,ca_street_number#235,ca_street_name#236,ca_street_type#237,ca_suite_number#238,ca_city#239,ca_county#240,ca_state#241,ca_zip#242,ca_country#243,ca_gmt_offset#244,ca_location_type#245,ctr_total_return#20766])
[info] +- *(14) Project [c_customer_id#157, c_salutation#163, c_first_name#164, c_last_name#165, ca_street_number#235, ca_street_name#236, ca_street_type#237, ca_suite_number#238, ca_city#239, ca_county#240, ca_state#241, ca_zip#242, ca_country#243, ca_gmt_offset#244, ca_location_type#245, ctr_total_return#20766]
[info]    +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]       :- *(14) Project [ctr_total_return#20766, c_customer_id#157, c_current_addr_sk#160, c_salutation#163, c_first_name#164, c_last_name#165]
[info]       :  +- *(14) BroadcastHashJoin [ctr_customer_sk#20764], [c_customer_sk#156], Inner, BuildRight
[info]       :     :- *(14) Project [ctr_customer_sk#20764, ctr_total_return#20766]
[info]       :     :  +- *(14) SortMergeJoin [ctr_state#20765], [ctr_state#20765#20787], Inner, (cast(ctr_total_return#20766 as decimal(24,7)) > (CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#20770)
[info]       :     :     :- *(5) Sort [ctr_state#20765 ASC NULLS FIRST], false, 0
[info]       :     :     :  +- Exchange hashpartitioning(ctr_state#20765, 4), true, [id=#47708]
[info]       :     :     :     +- *(4) Filter isnotnull(ctr_total_return#20766)
[info]       :     :     :        +- *(4) HashAggregate(keys=[cr_returning_customer_sk#47, ca_state#241], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#60))])
[info]       :     :     :           +- Exchange hashpartitioning(cr_returning_customer_sk#47, ca_state#241, 4), true, [id=#47703]
[info]       :     :     :              +- *(3) HashAggregate(keys=[cr_returning_customer_sk#47, ca_state#241], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#60))])
[info]       :     :     :                 +- *(3) Project [cr_returning_customer_sk#47, cr_return_amt_inc_tax#60, ca_state#241]
[info]       :     :     :                    +- *(3) BroadcastHashJoin [cr_returning_addr_sk#50], [ca_address_sk#233], Inner, BuildRight
[info]       :     :     :                       :- *(3) Project [cr_returning_customer_sk#47, cr_returning_addr_sk#50, cr_return_amt_inc_tax#60]
[info]       :     :     :                       :  +- *(3) BroadcastHashJoin [cr_returned_date_sk#67], [d_date_sk#331], Inner, BuildRight
[info]       :     :     :                       :     :- *(3) Project [cr_returning_customer_sk#47, cr_returning_addr_sk#50, cr_return_amt_inc_tax#60, cr_returned_date_sk#67]
[info]       :     :     :                       :     :  +- *(3) Filter ((isnotnull(cr_returned_date_sk#67) AND isnotnull(cr_returning_addr_sk#50)) AND isnotnull(cr_returning_customer_sk#47))
[info]       :     :     :                       :     :     +- *(3) ColumnarToRow
[info]       :     :     :                       :     :        +- BatchScan[cr_returning_customer_sk#47, cr_returning_addr_sk#50, cr_return_amt_inc_tax#60, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>
[info]       :     :     :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47688]
[info]       :     :     :                       :        +- *(1) Project [d_date_sk#331]
[info]       :     :     :                       :           +- *(1) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]       :     :     :                       :              +- *(1) ColumnarToRow
[info]       :     :     :                       :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47697]
[info]       :     :     :                          +- *(2) Project [ca_address_sk#233, ca_state#241]
[info]       :     :     :                             +- *(2) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_state#241))
[info]       :     :     :                                +- *(2) ColumnarToRow
[info]       :     :     :                                   +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]       :     :     +- *(11) Sort [ctr_state#20765#20787 ASC NULLS FIRST], false, 0
[info]       :     :        +- Exchange hashpartitioning(ctr_state#20765#20787, 4), true, [id=#47866]
[info]       :     :           +- *(10) Filter isnotnull((CAST(avg(ctr_total_return) AS DECIMAL(21,6)) * CAST(1.2 AS DECIMAL(21,6)))#20770)
[info]       :     :              +- *(10) HashAggregate(keys=[ctr_state#20765], functions=[avg(ctr_total_return#20766)])
[info]       :     :                 +- Exchange hashpartitioning(ctr_state#20765, 4), true, [id=#47861]
[info]       :     :                    +- *(9) HashAggregate(keys=[ctr_state#20765], functions=[partial_avg(ctr_total_return#20766)])
[info]       :     :                       +- *(9) HashAggregate(keys=[cr_returning_customer_sk#47, ca_state#241], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#60))])
[info]       :     :                          +- Exchange hashpartitioning(cr_returning_customer_sk#47, ca_state#241, 4), true, [id=#47814]
[info]       :     :                             +- *(8) HashAggregate(keys=[cr_returning_customer_sk#47, ca_state#241], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#60))])
[info]       :     :                                +- *(8) Project [cr_returning_customer_sk#47, cr_return_amt_inc_tax#60, ca_state#241]
[info]       :     :                                   +- *(8) BroadcastHashJoin [cr_returning_addr_sk#50], [ca_address_sk#233], Inner, BuildRight
[info]       :     :                                      :- *(8) Project [cr_returning_customer_sk#47, cr_returning_addr_sk#50, cr_return_amt_inc_tax#60]
[info]       :     :                                      :  +- *(8) BroadcastHashJoin [cr_returned_date_sk#67], [d_date_sk#331], Inner, BuildRight
[info]       :     :                                      :     :- *(8) Project [cr_returning_customer_sk#47, cr_returning_addr_sk#50, cr_return_amt_inc_tax#60, cr_returned_date_sk#67]
[info]       :     :                                      :     :  +- *(8) Filter (isnotnull(cr_returned_date_sk#67) AND isnotnull(cr_returning_addr_sk#50))
[info]       :     :                                      :     :     +- *(8) ColumnarToRow
[info]       :     :                                      :     :        +- BatchScan[cr_returning_customer_sk#47, cr_returning_addr_sk#50, cr_return_amt_inc_tax#60, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_amt_inc_tax:decimal(7,2)>
[info]       :     :                                      :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47688]
[info]       :     :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47731]
[info]       :     :                                         +- *(7) Project [ca_address_sk#233, ca_state#241]
[info]       :     :                                            +- *(7) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_state#241))
[info]       :     :                                               +- *(7) ColumnarToRow
[info]       :     :                                                  +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47759]
[info]       :        +- *(12) Project [c_customer_sk#156, c_customer_id#157, c_current_addr_sk#160, c_salutation#163, c_first_name#164, c_last_name#165]
[info]       :           +- *(12) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160))
[info]       :              +- *(12) ColumnarToRow
[info]       :                 +- BatchScan[c_customer_sk#156, c_customer_id#157, c_current_addr_sk#160, c_salutation#163, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_n...
[info]       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47768]
[info]          +- *(13) Project [ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_street_type#237, ca_suite_number#238, ca_city#239, ca_county#240, ca_state#241, ca_zip#242, ca_country#243, ca_gmt_offset#244, ca_location_type#245]
[info]             +- *(13) Filter ((isnotnull(ca_state#241) AND (ca_state#241 = GA)) AND isnotnull(ca_address_sk#233))
[info]                +- *(13) ColumnarToRow
[info]                   +- BatchScan[ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_street_type#237, ca_suite_number#238, ca_city#239, ca_county#240, ca_state#241, ca_zip#242, ca_country#243, ca_gmt_offset#244, ca_location_type#245] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_s...
[info] 
[info] 
[info]   Stopped after 1 iterations, 340 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q81                                                 341            341           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q82
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST], output=[i_item_id#497,i_item_desc#500,i_current_price#501])
[info] +- *(8) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_current_price#501], functions=[])
[info]    +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_current_price#501, 4), true, [id=#48034]
[info]       +- *(7) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_current_price#501], functions=[])
[info]          +- *(7) Project [i_item_id#497, i_item_desc#500, i_current_price#501]
[info]             +- *(7) SortMergeJoin [i_item_sk#496], [ss_item_sk#1165], Inner
[info]                :- *(4) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]                :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#48015]
[info]                :     +- *(3) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501]
[info]                :        +- *(3) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]                :           :- *(3) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, inv_date_sk#476]
[info]                :           :  +- *(3) BroadcastHashJoin [i_item_sk#496], [inv_item_sk#473], Inner, BuildLeft
[info]                :           :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#47997]
[info]                :           :     :  +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501]
[info]                :           :     :     +- *(1) Filter (((((cast(i_current_price#501 as decimal(12,2)) <= 92.00) AND isnotnull(i_current_price#501)) AND (i_current_price#501 >= 62.00)) AND i_manufact_id#509 IN (129,270,821,423)) AND isnotnull(i_item_sk#496))
[info]                :           :     :        +- *(1) ColumnarToRow
[info]                :           :     :           +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_manufact_...
[info]                :           :     +- *(3) Project [inv_item_sk#473, inv_date_sk#476]
[info]                :           :        +- *(3) Filter ((((isnotnull(inv_quantity_on_hand#475) AND (inv_quantity_on_hand#475 >= 100)) AND (inv_quantity_on_hand#475 <= 500)) AND isnotnull(inv_item_sk#473)) AND isnotnull(inv_date_sk#476))
[info]                :           :           +- *(3) ColumnarToRow
[info]                :           :              +- BatchScan[inv_item_sk#473, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_quantity_on_hand:int>
[info]                :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48010]
[info]                :              +- *(2) Project [d_date_sk#331]
[info]                :                 +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 11102)) AND (d_date#333 <= 11162)) AND isnotnull(d_date_sk#331))
[info]                :                    +- *(2) ColumnarToRow
[info]                :                       +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                +- *(6) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                   +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#48025]
[info]                      +- *(5) Project [ss_item_sk#1165]
[info]                         +- *(5) Filter isnotnull(ss_item_sk#1165)
[info]                            +- *(5) ColumnarToRow
[info]                               +- BatchScan[ss_item_sk#1165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 143 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q82                                                 143            143           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q83
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[item_id#20886 ASC NULLS FIRST,sr_item_qty#20887L ASC NULLS FIRST], output=[item_id#20886,sr_item_qty#20887L,sr_dev#20880,cr_item_qty#20891L,cr_dev#20881,wr_item_qty#20895L,wr_dev#20882,average#20883])
[info] +- *(23) Project [item_id#20886, sr_item_qty#20887L, (((cast(sr_item_qty#20887L as double) / cast(((sr_item_qty#20887L + cr_item_qty#20891L) + wr_item_qty#20895L) as double)) / 3.0) * 100.0) AS sr_dev#20880, cr_item_qty#20891L, (((cast(cr_item_qty#20891L as double) / cast(((sr_item_qty#20887L + cr_item_qty#20891L) + wr_item_qty#20895L) as double)) / 3.0) * 100.0) AS cr_dev#20881, wr_item_qty#20895L, (((cast(wr_item_qty#20895L as double) / cast(((sr_item_qty#20887L + cr_item_qty#20891L) + wr_item_qty#20895L) as double)) / 3.0) * 100.0) AS wr_dev#20882, CheckOverflow((promote_precision(cast(cast(((sr_item_qty#20887L + cr_item_qty#20891L) + wr_item_qty#20895L) as decimal(20,0)) as decimal(21,1))) / 3.0), DecimalType(27,6), true) AS average#20883]
[info]    +- *(23) SortMergeJoin [item_id#20886], [item_id#20894], Inner
[info]       :- *(15) Project [item_id#20886, sr_item_qty#20887L, cr_item_qty#20891L]
[info]       :  +- *(15) SortMergeJoin [item_id#20886], [item_id#20890], Inner
[info]       :     :- *(7) Sort [item_id#20886 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(item_id#20886, 4), true, [id=#48525]
[info]       :     :     +- *(6) HashAggregate(keys=[i_item_id#497], functions=[sum(cast(sr_return_quantity#800 as bigint))])
[info]       :     :        +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#48521]
[info]       :     :           +- *(5) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(cast(sr_return_quantity#800 as bigint))])
[info]       :     :              +- *(5) Project [sr_return_quantity#800, i_item_id#497]
[info]       :     :                 +- *(5) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#331], Inner, BuildRight
[info]       :     :                    :- *(5) Project [sr_return_quantity#800, sr_returned_date_sk#810, i_item_id#497]
[info]       :     :                    :  +- *(5) BroadcastHashJoin [sr_item_sk#792], [i_item_sk#496], Inner, BuildRight
[info]       :     :                    :     :- *(5) Project [sr_item_sk#792, sr_return_quantity#800, sr_returned_date_sk#810]
[info]       :     :                    :     :  +- *(5) Filter (isnotnull(sr_item_sk#792) AND isnotnull(sr_returned_date_sk#810))
[info]       :     :                    :     :     +- *(5) ColumnarToRow
[info]       :     :                    :     :        +- BatchScan[sr_item_sk#792, sr_return_quantity#800, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_return_quantity:int>
[info]       :     :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48490]
[info]       :     :                    :        +- *(1) Project [i_item_sk#496, i_item_id#497]
[info]       :     :                    :           +- *(1) Filter (isnotnull(i_item_sk#496) AND isnotnull(i_item_id#497))
[info]       :     :                    :              +- *(1) ColumnarToRow
[info]       :     :                    :                 +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]       :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48515]
[info]       :     :                       +- *(4) Project [d_date_sk#331]
[info]       :     :                          +- *(4) BroadcastHashJoin [d_date#333], [d_date#333#20943], LeftSemi, BuildRight
[info]       :     :                             :- *(4) Project [d_date_sk#331, d_date#333]
[info]       :     :                             :  +- *(4) Filter isnotnull(d_date_sk#331)
[info]       :     :                             :     +- *(4) ColumnarToRow
[info]       :     :                             :        +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]       :     :                             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, date, true])), [id=#48510]
[info]       :     :                                +- *(3) Project [d_date#333 AS d_date#333#20943]
[info]       :     :                                   +- *(3) BroadcastHashJoin [d_week_seq#335], [d_week_seq#335#20911], LeftSemi, BuildRight
[info]       :     :                                      :- *(3) ColumnarToRow
[info]       :     :                                      :  +- BatchScan[d_date#333, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date:date,d_week_seq:int>
[info]       :     :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48505]
[info]       :     :                                         +- *(2) Project [d_week_seq#335 AS d_week_seq#335#20911]
[info]       :     :                                            +- *(2) Filter cast(d_date#333 as string) IN (2000-06-30,2000-09-27,2000-11-17)
[info]       :     :                                               +- *(2) ColumnarToRow
[info]       :     :                                                  +- BatchScan[d_date#333, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date:date,d_week_seq:int>
[info]       :     +- *(14) Sort [item_id#20890 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(item_id#20890, 4), true, [id=#48782]
[info]       :           +- *(13) HashAggregate(keys=[i_item_id#497], functions=[sum(cast(cr_return_quantity#57 as bigint))])
[info]       :              +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#48736]
[info]       :                 +- *(12) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(cast(cr_return_quantity#57 as bigint))])
[info]       :                    +- *(12) Project [cr_return_quantity#57, i_item_id#497]
[info]       :                       +- *(12) BroadcastHashJoin [cr_returned_date_sk#67], [d_date_sk#331], Inner, BuildRight
[info]       :                          :- *(12) Project [cr_return_quantity#57, cr_returned_date_sk#67, i_item_id#497]
[info]       :                          :  +- *(12) BroadcastHashJoin [cr_item_sk#42], [i_item_sk#496], Inner, BuildRight
[info]       :                          :     :- *(12) Project [cr_item_sk#42, cr_return_quantity#57, cr_returned_date_sk#67]
[info]       :                          :     :  +- *(12) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_returned_date_sk#67))
[info]       :                          :     :     +- *(12) ColumnarToRow
[info]       :                          :     :        +- BatchScan[cr_item_sk#42, cr_return_quantity#57, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_return_quantity:int>
[info]       :                          :     +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48490]
[info]       :                          +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48515]
[info]       +- *(22) Sort [item_id#20894 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(item_id#20894, 4), true, [id=#48877]
[info]             +- *(21) HashAggregate(keys=[i_item_id#497], functions=[sum(cast(wr_return_quantity#1276 as bigint))])
[info]                +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#48852]
[info]                   +- *(20) HashAggregate(keys=[i_item_id#497], functions=[partial_sum(cast(wr_return_quantity#1276 as bigint))])
[info]                      +- *(20) Project [wr_return_quantity#1276, i_item_id#497]
[info]                         +- *(20) BroadcastHashJoin [wr_returned_date_sk#1286], [d_date_sk#331], Inner, BuildRight
[info]                            :- *(20) Project [wr_return_quantity#1276, wr_returned_date_sk#1286, i_item_id#497]
[info]                            :  +- *(20) BroadcastHashJoin [wr_item_sk#1264], [i_item_sk#496], Inner, BuildRight
[info]                            :     :- *(20) Project [wr_item_sk#1264, wr_return_quantity#1276, wr_returned_date_sk#1286]
[info]                            :     :  +- *(20) Filter (isnotnull(wr_item_sk#1264) AND isnotnull(wr_returned_date_sk#1286))
[info]                            :     :     +- *(20) ColumnarToRow
[info]                            :     :        +- BatchScan[wr_item_sk#1264, wr_return_quantity#1276, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_return_quantity:int>
[info]                            :     +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48490]
[info]                            +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#48515]
[info] 
[info] 
[info]   Stopped after 1 iterations, 479 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q83                                                 479            479           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q84
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#157 ASC NULLS FIRST], output=[customer_id#20962,customername#20963])
[info] +- *(9) Project [c_customer_id#157 AS customer_id#20962, concat(c_last_name#165, , , c_first_name#164) AS customername#20963, c_customer_id#157]
[info]    +- *(9) SortMergeJoin [cd_demo_sk#290], [sr_cdemo_sk#794], Inner
[info]       :- *(6) Sort [cd_demo_sk#290 ASC NULLS FIRST], false, 0
[info]       :  +- Exchange hashpartitioning(cd_demo_sk#290, 4), true, [id=#49078]
[info]       :     +- *(5) Project [c_customer_id#157, c_first_name#164, c_last_name#165, cd_demo_sk#290]
[info]       :        +- *(5) BroadcastHashJoin [hd_income_band_sk#449], [ib_income_band_sk#1711], Inner, BuildRight
[info]       :           :- *(5) Project [c_customer_id#157, c_first_name#164, c_last_name#165, cd_demo_sk#290, hd_income_band_sk#449]
[info]       :           :  +- *(5) BroadcastHashJoin [c_current_hdemo_sk#159], [hd_demo_sk#448], Inner, BuildRight
[info]       :           :     :- *(5) Project [c_customer_id#157, c_current_hdemo_sk#159, c_first_name#164, c_last_name#165, cd_demo_sk#290]
[info]       :           :     :  +- *(5) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]       :           :     :     :- *(5) Project [c_customer_id#157, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_first_name#164, c_last_name#165]
[info]       :           :     :     :  +- *(5) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]       :           :     :     :     :- *(5) Project [c_customer_id#157, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_name#164, c_last_name#165]
[info]       :           :     :     :     :  +- *(5) Filter ((isnotnull(c_current_addr_sk#160) AND isnotnull(c_current_cdemo_sk#158)) AND isnotnull(c_current_hdemo_sk#159))
[info]       :           :     :     :     :     +- *(5) ColumnarToRow
[info]       :           :     :     :     :        +- BatchScan[c_customer_id#157, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_id:string,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int,c...
[info]       :           :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49046]
[info]       :           :     :     :        +- *(1) Project [ca_address_sk#233]
[info]       :           :     :     :           +- *(1) Filter ((isnotnull(ca_city#239) AND (ca_city#239 = Edgewood)) AND isnotnull(ca_address_sk#233))
[info]       :           :     :     :              +- *(1) ColumnarToRow
[info]       :           :     :     :                 +- BatchScan[ca_address_sk#233, ca_city#239] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_city:string>
[info]       :           :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49055]
[info]       :           :     :        +- *(2) Project [cd_demo_sk#290]
[info]       :           :     :           +- *(2) Filter isnotnull(cd_demo_sk#290)
[info]       :           :     :              +- *(2) ColumnarToRow
[info]       :           :     :                 +- BatchScan[cd_demo_sk#290] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int>
[info]       :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49064]
[info]       :           :        +- *(3) Project [hd_demo_sk#448, hd_income_band_sk#449]
[info]       :           :           +- *(3) Filter (isnotnull(hd_demo_sk#448) AND isnotnull(hd_income_band_sk#449))
[info]       :           :              +- *(3) ColumnarToRow
[info]       :           :                 +- BatchScan[hd_demo_sk#448, hd_income_band_sk#449] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_income_band_sk:int>
[info]       :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49073]
[info]       :              +- *(4) Project [ib_income_band_sk#1711]
[info]       :                 +- *(4) Filter ((((isnotnull(ib_lower_bound#1712) AND isnotnull(ib_upper_bound#1713)) AND (ib_lower_bound#1712 >= 38128)) AND (ib_upper_bound#1713 <= 88128)) AND isnotnull(ib_income_band_sk#1711))
[info]       :                    +- *(4) ColumnarToRow
[info]       :                       +- BatchScan[ib_income_band_sk#1711, ib_lower_bound#1712, ib_upper_bound#1713] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/income_band], ReadSchema: struct<ib_income_band_sk:int,ib_lower_bound:int,ib_upper_bound:int>
[info]       +- *(8) Sort [sr_cdemo_sk#794 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(sr_cdemo_sk#794, 4), true, [id=#49088]
[info]             +- *(7) Project [sr_cdemo_sk#794]
[info]                +- *(7) Filter isnotnull(sr_cdemo_sk#794)
[info]                   +- *(7) ColumnarToRow
[info]                      +- BatchScan[sr_cdemo_sk#794] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_cdemo_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 160 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q84                                                 160            160           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q85
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[substring(r_reason_desc, 1, 20)#21018 ASC NULLS FIRST,aggOrder#21023 ASC NULLS FIRST,avg(wr_refunded_cash)#21020 ASC NULLS FIRST,avg(wr_fee)#21021 ASC NULLS FIRST], output=[substring(r_reason_desc, 1, 20)#21018,avg(ws_quantity)#21019,avg(wr_refunded_cash)#21020,avg(wr_fee)#21021])
[info] +- *(12) HashAggregate(keys=[r_reason_desc#1477], functions=[avg(cast(ws_quantity#1038 as bigint)), avg(UnscaledValue(wr_refunded_cash#1282)), avg(UnscaledValue(wr_fee#1280))])
[info]    +- Exchange hashpartitioning(r_reason_desc#1477, 4), true, [id=#49392]
[info]       +- *(11) HashAggregate(keys=[r_reason_desc#1477], functions=[partial_avg(cast(ws_quantity#1038 as bigint)), partial_avg(UnscaledValue(wr_refunded_cash#1282)), partial_avg(UnscaledValue(wr_fee#1280))])
[info]          +- *(11) Project [ws_quantity#1038, wr_fee#1280, wr_refunded_cash#1282, r_reason_desc#1477]
[info]             +- *(11) BroadcastHashJoin [wr_reason_sk#1274], [r_reason_sk#1475], Inner, BuildRight
[info]                :- *(11) Project [ws_quantity#1038, wr_reason_sk#1274, wr_fee#1280, wr_refunded_cash#1282]
[info]                :  +- *(11) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :- *(11) Project [ws_quantity#1038, ws_sold_date_sk#1054, wr_reason_sk#1274, wr_fee#1280, wr_refunded_cash#1282]
[info]                :     :  +- *(11) BroadcastHashJoin [wr_refunded_addr_sk#1268], [ca_address_sk#233], Inner, BuildRight, ((((ca_state#241 IN (IN,OH,NJ) AND (ws_net_profit#1053 >= 100.00)) AND (ws_net_profit#1053 <= 200.00)) OR ((ca_state#241 IN (WI,CT,KY) AND (ws_net_profit#1053 >= 150.00)) AND (ws_net_profit#1053 <= 300.00))) OR ((ca_state#241 IN (LA,IA,AR) AND (ws_net_profit#1053 >= 50.00)) AND (ws_net_profit#1053 <= 250.00)))
[info]                :     :     :- *(11) Project [ws_quantity#1038, ws_net_profit#1053, ws_sold_date_sk#1054, wr_refunded_addr_sk#1268, wr_reason_sk#1274, wr_fee#1280, wr_refunded_cash#1282]
[info]                :     :     :  +- *(11) BroadcastHashJoin [wr_returning_cdemo_sk#1270, cd_marital_status#292, cd_education_status#293], [cd_demo_sk#21006, cd_marital_status#21008, cd_education_status#21009], Inner, BuildRight
[info]                :     :     :     :- *(11) Project [ws_quantity#1038, ws_net_profit#1053, ws_sold_date_sk#1054, wr_refunded_addr_sk#1268, wr_returning_cdemo_sk#1270, wr_reason_sk#1274, wr_fee#1280, wr_refunded_cash#1282, cd_marital_status#292, cd_education_status#293]
[info]                :     :     :     :  +- *(11) BroadcastHashJoin [wr_refunded_cdemo_sk#1266], [cd_demo_sk#290], Inner, BuildRight, ((((((cd_marital_status#292 = M) AND (cd_education_status#293 = Advanced Degree)) AND (ws_sales_price#1041 >= 100.00)) AND (ws_sales_price#1041 <= 150.00)) OR ((((cd_marital_status#292 = S) AND (cd_education_status#293 = College)) AND (ws_sales_price#1041 >= 50.00)) AND (ws_sales_price#1041 <= 100.00))) OR ((((cd_marital_status#292 = W) AND (cd_education_status#293 = 2 yr Degree)) AND (ws_sales_price#1041 >= 150.00)) AND (ws_sales_price#1041 <= 200.00)))
[info]                :     :     :     :     :- *(11) Project [ws_quantity#1038, ws_sales_price#1041, ws_net_profit#1053, ws_sold_date_sk#1054, wr_refunded_cdemo_sk#1266, wr_refunded_addr_sk#1268, wr_returning_cdemo_sk#1270, wr_reason_sk#1274, wr_fee#1280, wr_refunded_cash#1282]
[info]                :     :     :     :     :  +- *(11) BroadcastHashJoin [ws_web_page_sk#1032], [wp_web_page_sk#1773], Inner, BuildRight
[info]                :     :     :     :     :     :- *(11) Project [ws_web_page_sk#1032, ws_quantity#1038, ws_sales_price#1041, ws_net_profit#1053, ws_sold_date_sk#1054, wr_refunded_cdemo_sk#1266, wr_refunded_addr_sk#1268, wr_returning_cdemo_sk#1270, wr_reason_sk#1274, wr_fee#1280, wr_refunded_cash#1282]
[info]                :     :     :     :     :     :  +- *(11) SortMergeJoin [ws_item_sk#1023, ws_order_number#1037L], [wr_item_sk#1264, wr_order_number#1275L], Inner
[info]                :     :     :     :     :     :     :- *(2) Sort [ws_item_sk#1023 ASC NULLS FIRST, ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :     :  +- Exchange hashpartitioning(ws_item_sk#1023, ws_order_number#1037L, 4), true, [id=#49319]
[info]                :     :     :     :     :     :     :     +- *(1) Project [ws_item_sk#1023, ws_web_page_sk#1032, ws_order_number#1037L, ws_quantity#1038, ws_sales_price#1041, ws_net_profit#1053, ws_sold_date_sk#1054]
[info]                :     :     :     :     :     :     :        +- *(1) Filter (((isnotnull(ws_item_sk#1023) AND isnotnull(ws_order_number#1037L)) AND isnotnull(ws_web_page_sk#1032)) AND isnotnull(ws_sold_date_sk#1054))
[info]                :     :     :     :     :     :     :           +- *(1) ColumnarToRow
[info]                :     :     :     :     :     :     :              +- BatchScan[ws_item_sk#1023, ws_web_page_sk#1032, ws_order_number#1037L, ws_quantity#1038, ws_sales_price#1041, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_web_page_sk:int,ws_order_number:bigint,ws_quantity:int,ws_sales_price:de...
[info]                :     :     :     :     :     :     +- *(4) Sort [wr_item_sk#1264 ASC NULLS FIRST, wr_order_number#1275L ASC NULLS FIRST], false, 0
[info]                :     :     :     :     :     :        +- Exchange hashpartitioning(wr_item_sk#1264, wr_order_number#1275L, 4), true, [id=#49329]
[info]                :     :     :     :     :     :           +- *(3) Project [wr_item_sk#1264, wr_refunded_cdemo_sk#1266, wr_refunded_addr_sk#1268, wr_returning_cdemo_sk#1270, wr_reason_sk#1274, wr_order_number#1275L, wr_fee#1280, wr_refunded_cash#1282]
[info]                :     :     :     :     :     :              +- *(3) Filter (((((isnotnull(wr_item_sk#1264) AND isnotnull(wr_order_number#1275L)) AND isnotnull(wr_refunded_cdemo_sk#1266)) AND isnotnull(wr_returning_cdemo_sk#1270)) AND isnotnull(wr_refunded_addr_sk#1268)) AND isnotnull(wr_reason_sk#1274))
[info]                :     :     :     :     :     :                 +- *(3) ColumnarToRow
[info]                :     :     :     :     :     :                    +- BatchScan[wr_item_sk#1264, wr_refunded_cdemo_sk#1266, wr_refunded_addr_sk#1268, wr_returning_cdemo_sk#1270, wr_reason_sk#1274, wr_order_number#1275L, wr_fee#1280, wr_refunded_cash#1282] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_refunded_cdemo_sk:int,wr_refunded_addr_sk:int,wr_returning_cdemo_sk:int,...
[info]                :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49341]
[info]                :     :     :     :     :        +- *(5) Project [wp_web_page_sk#1773]
[info]                :     :     :     :     :           +- *(5) Filter isnotnull(wp_web_page_sk#1773)
[info]                :     :     :     :     :              +- *(5) ColumnarToRow
[info]                :     :     :     :     :                 +- BatchScan[wp_web_page_sk#1773] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_page], ReadSchema: struct<wp_web_page_sk:int>
[info]                :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49350]
[info]                :     :     :     :        +- *(6) Project [cd_demo_sk#290, cd_marital_status#292, cd_education_status#293]
[info]                :     :     :     :           +- *(6) Filter ((isnotnull(cd_demo_sk#290) AND isnotnull(cd_marital_status#292)) AND isnotnull(cd_education_status#293))
[info]                :     :     :     :              +- *(6) ColumnarToRow
[info]                :     :     :     :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, true], input[1, string, true], input[2, string, true])), [id=#49359]
[info]                :     :     :        +- *(7) Project [cd_demo_sk#21006, cd_marital_status#21008, cd_education_status#21009]
[info]                :     :     :           +- *(7) Filter ((isnotnull(cd_marital_status#21008) AND isnotnull(cd_demo_sk#21006)) AND isnotnull(cd_education_status#21009))
[info]                :     :     :              +- *(7) ColumnarToRow
[info]                :     :     :                 +- BatchScan[cd_demo_sk#21006, cd_marital_status#21008, cd_education_status#21009] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49368]
[info]                :     :        +- *(8) Project [ca_address_sk#233, ca_state#241]
[info]                :     :           +- *(8) Filter ((isnotnull(ca_country#243) AND (ca_country#243 = United States)) AND isnotnull(ca_address_sk#233))
[info]                :     :              +- *(8) ColumnarToRow
[info]                :     :                 +- BatchScan[ca_address_sk#233, ca_state#241, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49377]
[info]                :        +- *(9) Project [d_date_sk#331]
[info]                :           +- *(9) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                :              +- *(9) ColumnarToRow
[info]                :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49386]
[info]                   +- *(10) Project [r_reason_sk#1475, r_reason_desc#1477]
[info]                      +- *(10) Filter isnotnull(r_reason_sk#1475)
[info]                         +- *(10) ColumnarToRow
[info]                            +- BatchScan[r_reason_sk#1475, r_reason_desc#1477] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/reason], ReadSchema: struct<r_reason_sk:int,r_reason_desc:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 309 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q85                                                 309            309           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q86
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#21118 DESC NULLS LAST,CASE WHEN (cast(lochierarchy#21118 as int) = 0) THEN i_category#21127 END ASC NULLS FIRST,rank_within_parent#21119 ASC NULLS FIRST], output=[total_sum#21117,i_category#21127,i_class#21128,lochierarchy#21118,rank_within_parent#21119])
[info] +- *(6) Project [total_sum#21117, i_category#21127, i_class#21128, lochierarchy#21118, rank_within_parent#21119]
[info]    +- Window [rank(_w3#21143) windowspecdefinition(_w1#21141, _w2#21142, _w3#21143 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#21119], [_w1#21141, _w2#21142], [_w3#21143 DESC NULLS LAST]
[info]       +- *(5) Sort [_w1#21141 ASC NULLS FIRST, _w2#21142 ASC NULLS FIRST, _w3#21143 DESC NULLS LAST], false, 0
[info]          +- Exchange hashpartitioning(_w1#21141, _w2#21142, 4), true, [id=#49545]
[info]             +- *(4) HashAggregate(keys=[i_category#21127, i_class#21128, spark_grouping_id#21124], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]                +- Exchange hashpartitioning(i_category#21127, i_class#21128, spark_grouping_id#21124, 4), true, [id=#49541]
[info]                   +- *(3) HashAggregate(keys=[i_category#21127, i_class#21128, spark_grouping_id#21124], functions=[partial_sum(UnscaledValue(ws_net_paid#1049))])
[info]                      +- *(3) Expand [List(ws_net_paid#1049, i_category#508, i_class#506, 0), List(ws_net_paid#1049, i_category#508, null, 1), List(ws_net_paid#1049, null, null, 3)], [ws_net_paid#1049, i_category#21127, i_class#21128, spark_grouping_id#21124]
[info]                         +- *(3) Project [ws_net_paid#1049, i_category#508, i_class#506]
[info]                            +- *(3) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                               :- *(3) Project [ws_item_sk#1023, ws_net_paid#1049]
[info]                               :  +- *(3) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :     :- *(3) Project [ws_item_sk#1023, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]                               :     :  +- *(3) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_item_sk#1023))
[info]                               :     :     +- *(3) ColumnarToRow
[info]                               :     :        +- BatchScan[ws_item_sk#1023, ws_net_paid#1049, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_net_paid:decimal(7,2)>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49525]
[info]                               :        +- *(1) Project [d_date_sk#331]
[info]                               :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                               :              +- *(1) ColumnarToRow
[info]                               :                 +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49534]
[info]                                  +- *(2) Project [i_item_sk#496, i_class#506, i_category#508]
[info]                                     +- *(2) Filter isnotnull(i_item_sk#496)
[info]                                        +- *(2) ColumnarToRow
[info]                                           +- BatchScan[i_item_sk#496, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 154 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q86                                                 154            154           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q87
[info] == Physical Plan ==
[info] *(17) HashAggregate(keys=[], functions=[count(1)])
[info] +- Exchange SinglePartition, true, [id=#50157]
[info]    +- *(16) HashAggregate(keys=[], functions=[partial_count(1)])
[info]       +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]          +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]             +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                   +- *(16) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                      +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, d_date#333, 4), true, [id=#50105]
[info]                         +- *(15) HashAggregate(keys=[c_last_name#165, c_first_name#164, d_date#333], functions=[])
[info]                            +- *(15) Project [c_last_name#165, c_first_name#164, d_date#333]
[info]                               +- SortMergeJoin [coalesce(c_last_name#165, ), isnull(c_last_name#165), coalesce(c_first_name#164, ), isnull(c_first_name#164), coalesce(d_date#333, 0), isnull(d_date#333)], [coalesce(c_last_name#21420, ), isnull(c_last_name#21420), coalesce(c_first_name#21419, ), isnull(c_first_name#21419), coalesce(d_date#21367, 0), isnull(d_date#21367)], LeftAnti
[info]                                  :- SortMergeJoin [coalesce(c_last_name#165, ), isnull(c_last_name#165), coalesce(c_first_name#164, ), isnull(c_first_name#164), coalesce(d_date#333, 0), isnull(d_date#333)], [coalesce(c_last_name#21356, ), isnull(c_last_name#21356), coalesce(c_first_name#21355, ), isnull(c_first_name#21355), coalesce(d_date#21302, 0), isnull(d_date#21302)], LeftAnti
[info]                                  :  :- *(4) Sort [coalesce(c_last_name#165, ) ASC NULLS FIRST, isnull(c_last_name#165) ASC NULLS FIRST, coalesce(c_first_name#164, ) ASC NULLS FIRST, isnull(c_first_name#164) ASC NULLS FIRST, coalesce(d_date#333, 0) ASC NULLS FIRST, isnull(d_date#333) ASC NULLS FIRST], false, 0
[info]                                  :  :  +- Exchange hashpartitioning(coalesce(c_last_name#165, ), isnull(c_last_name#165), coalesce(c_first_name#164, ), isnull(c_first_name#164), coalesce(d_date#333, 0), isnull(d_date#333), 4), true, [id=#49874]
[info]                                  :  :     +- *(3) Project [d_date#333, c_first_name#164, c_last_name#165]
[info]                                  :  :        +- *(3) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                                  :  :           :- *(3) Project [ss_customer_sk#1166, d_date#333]
[info]                                  :  :           :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                                  :  :           :     :- *(3) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                                  :  :           :     :  +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_customer_sk#1166))
[info]                                  :  :           :     :     +- *(3) ColumnarToRow
[info]                                  :  :           :     :        +- BatchScan[ss_customer_sk#1166, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int>
[info]                                  :  :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49860]
[info]                                  :  :           :        +- *(1) Project [d_date_sk#331, d_date#333]
[info]                                  :  :           :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                                  :  :           :              +- *(1) ColumnarToRow
[info]                                  :  :           :                 +- BatchScan[d_date_sk#331, d_date#333, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>
[info]                                  :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49869]
[info]                                  :  :              +- *(2) Project [c_customer_sk#156, c_first_name#164, c_last_name#165]
[info]                                  :  :                 +- *(2) Filter isnotnull(c_customer_sk#156)
[info]                                  :  :                    +- *(2) ColumnarToRow
[info]                                  :  :                       +- BatchScan[c_customer_sk#156, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
[info]                                  :  +- *(9) Sort [coalesce(c_last_name#21356, ) ASC NULLS FIRST, isnull(c_last_name#21356) ASC NULLS FIRST, coalesce(c_first_name#21355, ) ASC NULLS FIRST, isnull(c_first_name#21355) ASC NULLS FIRST, coalesce(d_date#21302, 0) ASC NULLS FIRST, isnull(d_date#21302) ASC NULLS FIRST], false, 0
[info]                                  :     +- Exchange hashpartitioning(coalesce(c_last_name#21356, ), isnull(c_last_name#21356), coalesce(c_first_name#21355, ), isnull(c_first_name#21355), coalesce(d_date#21302, 0), isnull(d_date#21302), 4), true, [id=#50007]
[info]                                  :        +- *(8) HashAggregate(keys=[c_last_name#21356, c_first_name#21355, d_date#21302], functions=[])
[info]                                  :           +- Exchange hashpartitioning(c_last_name#21356, c_first_name#21355, d_date#21302, 4), true, [id=#50003]
[info]                                  :              +- *(7) HashAggregate(keys=[c_last_name#21356, c_first_name#21355, d_date#21302], functions=[])
[info]                                  :                 +- *(7) Project [c_last_name#21356, c_first_name#21355, d_date#21302]
[info]                                  :                    +- *(7) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#21347], Inner, BuildRight
[info]                                  :                       :- *(7) Project [cs_bill_customer_sk#880, d_date#21302]
[info]                                  :                       :  +- *(7) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#21300], Inner, BuildRight
[info]                                  :                       :     :- *(7) Project [cs_bill_customer_sk#880, cs_sold_date_sk#911]
[info]                                  :                       :     :  +- *(7) Filter (isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_bill_customer_sk#880))
[info]                                  :                       :     :     +- *(7) ColumnarToRow
[info]                                  :                       :     :        +- BatchScan[cs_bill_customer_sk#880, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int>
[info]                                  :                       :     +- ReusedExchange [d_date_sk#21300, d_date#21302], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49860]
[info]                                  :                       +- ReusedExchange [c_customer_sk#21347, c_first_name#21355, c_last_name#21356], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49869]
[info]                                  +- *(14) Sort [coalesce(c_last_name#21420, ) ASC NULLS FIRST, isnull(c_last_name#21420) ASC NULLS FIRST, coalesce(c_first_name#21419, ) ASC NULLS FIRST, isnull(c_first_name#21419) ASC NULLS FIRST, coalesce(d_date#21367, 0) ASC NULLS FIRST, isnull(d_date#21367) ASC NULLS FIRST], false, 0
[info]                                     +- Exchange hashpartitioning(coalesce(c_last_name#21420, ), isnull(c_last_name#21420), coalesce(c_first_name#21419, ), isnull(c_first_name#21419), coalesce(d_date#21367, 0), isnull(d_date#21367), 4), true, [id=#50090]
[info]                                        +- *(13) HashAggregate(keys=[c_last_name#21420, c_first_name#21419, d_date#21367], functions=[])
[info]                                           +- Exchange hashpartitioning(c_last_name#21420, c_first_name#21419, d_date#21367, 4), true, [id=#50065]
[info]                                              +- *(12) HashAggregate(keys=[c_last_name#21420, c_first_name#21419, d_date#21367], functions=[])
[info]                                                 +- *(12) Project [c_last_name#21420, c_first_name#21419, d_date#21367]
[info]                                                    +- *(12) BroadcastHashJoin [ws_bill_customer_sk#1024], [c_customer_sk#21411], Inner, BuildRight
[info]                                                       :- *(12) Project [ws_bill_customer_sk#1024, d_date#21367]
[info]                                                       :  +- *(12) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#21365], Inner, BuildRight
[info]                                                       :     :- *(12) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                                                       :     :  +- *(12) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_bill_customer_sk#1024))
[info]                                                       :     :     +- *(12) ColumnarToRow
[info]                                                       :     :        +- BatchScan[ws_bill_customer_sk#1024, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int>
[info]                                                       :     +- ReusedExchange [d_date_sk#21365, d_date#21367], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49860]
[info]                                                       +- ReusedExchange [c_customer_sk#21411, c_first_name#21419, c_last_name#21420], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#49869]
[info] 
[info] 
[info]   Stopped after 1 iterations, 299 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q87                                                 300            300           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q88
[info] == Physical Plan ==
[info] BroadcastNestedLoopJoin BuildRight, Inner
[info] :- BroadcastNestedLoopJoin BuildRight, Inner
[info] :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info] :  :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info] :  :  :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info] :  :  :  :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info] :  :  :  :  :  :- BroadcastNestedLoopJoin BuildRight, Inner
[info] :  :  :  :  :  :  :- *(5) HashAggregate(keys=[], functions=[count(1)])
[info] :  :  :  :  :  :  :  +- Exchange SinglePartition, true, [id=#51072]
[info] :  :  :  :  :  :  :     +- *(4) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :  :  :  :  :  :        +- *(4) Project
[info] :  :  :  :  :  :  :           +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info] :  :  :  :  :  :  :              :- *(4) Project [ss_store_sk#1170]
[info] :  :  :  :  :  :  :              :  +- *(4) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info] :  :  :  :  :  :  :              :     :- *(4) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info] :  :  :  :  :  :  :              :     :  +- *(4) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info] :  :  :  :  :  :  :              :     :     :- *(4) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info] :  :  :  :  :  :  :              :     :     :  +- *(4) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info] :  :  :  :  :  :  :              :     :     :     +- *(4) ColumnarToRow
[info] :  :  :  :  :  :  :              :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info] :  :  :  :  :  :  :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51048]
[info] :  :  :  :  :  :  :              :     :        +- *(1) Project [hd_demo_sk#448]
[info] :  :  :  :  :  :  :              :     :           +- *(1) Filter (((((hd_dep_count#451 = 4) AND (hd_vehicle_count#452 <= 6)) OR ((hd_dep_count#451 = 2) AND (hd_vehicle_count#452 <= 4))) OR ((hd_dep_count#451 = 0) AND (hd_vehicle_count#452 <= 2))) AND isnotnull(hd_demo_sk#448))
[info] :  :  :  :  :  :  :              :     :              +- *(1) ColumnarToRow
[info] :  :  :  :  :  :  :              :     :                 +- BatchScan[hd_demo_sk#448, hd_dep_count#451, hd_vehicle_count#452] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
[info] :  :  :  :  :  :  :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51057]
[info] :  :  :  :  :  :  :              :        +- *(2) Project [t_time_sk#1728]
[info] :  :  :  :  :  :  :              :           +- *(2) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 8)) AND (t_minute#1732 >= 30)) AND isnotnull(t_time_sk#1728))
[info] :  :  :  :  :  :  :              :              +- *(2) ColumnarToRow
[info] :  :  :  :  :  :  :              :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info] :  :  :  :  :  :  :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51066]
[info] :  :  :  :  :  :  :                 +- *(3) Project [s_store_sk#670]
[info] :  :  :  :  :  :  :                    +- *(3) Filter ((isnotnull(s_store_name#675) AND (s_store_name#675 = ese)) AND isnotnull(s_store_sk#670))
[info] :  :  :  :  :  :  :                       +- *(3) ColumnarToRow
[info] :  :  :  :  :  :  :                          +- BatchScan[s_store_sk#670, s_store_name#675] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string>
[info] :  :  :  :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#51461]
[info] :  :  :  :  :  :     +- *(10) HashAggregate(keys=[], functions=[count(1)])
[info] :  :  :  :  :  :        +- Exchange SinglePartition, true, [id=#51409]
[info] :  :  :  :  :  :           +- *(9) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :  :  :  :  :              +- *(9) Project
[info] :  :  :  :  :  :                 +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info] :  :  :  :  :  :                    :- *(9) Project [ss_store_sk#1170]
[info] :  :  :  :  :  :                    :  +- *(9) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info] :  :  :  :  :  :                    :     :- *(9) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info] :  :  :  :  :  :                    :     :  +- *(9) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info] :  :  :  :  :  :                    :     :     :- *(9) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info] :  :  :  :  :  :                    :     :     :  +- *(9) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info] :  :  :  :  :  :                    :     :     :     +- *(9) ColumnarToRow
[info] :  :  :  :  :  :                    :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info] :  :  :  :  :  :                    :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51048]
[info] :  :  :  :  :  :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51094]
[info] :  :  :  :  :  :                    :        +- *(7) Project [t_time_sk#1728]
[info] :  :  :  :  :  :                    :           +- *(7) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 9)) AND (t_minute#1732 < 30)) AND isnotnull(t_time_sk#1728))
[info] :  :  :  :  :  :                    :              +- *(7) ColumnarToRow
[info] :  :  :  :  :  :                    :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info] :  :  :  :  :  :                    +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51066]
[info] :  :  :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#51527]
[info] :  :  :  :  :     +- *(15) HashAggregate(keys=[], functions=[count(1)])
[info] :  :  :  :  :        +- Exchange SinglePartition, true, [id=#51499]
[info] :  :  :  :  :           +- *(14) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :  :  :  :              +- *(14) Project
[info] :  :  :  :  :                 +- *(14) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info] :  :  :  :  :                    :- *(14) Project [ss_store_sk#1170]
[info] :  :  :  :  :                    :  +- *(14) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info] :  :  :  :  :                    :     :- *(14) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info] :  :  :  :  :                    :     :  +- *(14) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info] :  :  :  :  :                    :     :     :- *(14) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info] :  :  :  :  :                    :     :     :  +- *(14) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info] :  :  :  :  :                    :     :     :     +- *(14) ColumnarToRow
[info] :  :  :  :  :                    :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info] :  :  :  :  :                    :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51048]
[info] :  :  :  :  :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51133]
[info] :  :  :  :  :                    :        +- *(12) Project [t_time_sk#1728]
[info] :  :  :  :  :                    :           +- *(12) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 9)) AND (t_minute#1732 >= 30)) AND isnotnull(t_time_sk#1728))
[info] :  :  :  :  :                    :              +- *(12) ColumnarToRow
[info] :  :  :  :  :                    :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info] :  :  :  :  :                    +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51066]
[info] :  :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#51593]
[info] :  :  :  :     +- *(20) HashAggregate(keys=[], functions=[count(1)])
[info] :  :  :  :        +- Exchange SinglePartition, true, [id=#51565]
[info] :  :  :  :           +- *(19) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :  :  :              +- *(19) Project
[info] :  :  :  :                 +- *(19) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info] :  :  :  :                    :- *(19) Project [ss_store_sk#1170]
[info] :  :  :  :                    :  +- *(19) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info] :  :  :  :                    :     :- *(19) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info] :  :  :  :                    :     :  +- *(19) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info] :  :  :  :                    :     :     :- *(19) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info] :  :  :  :                    :     :     :  +- *(19) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info] :  :  :  :                    :     :     :     +- *(19) ColumnarToRow
[info] :  :  :  :                    :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info] :  :  :  :                    :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51048]
[info] :  :  :  :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51172]
[info] :  :  :  :                    :        +- *(17) Project [t_time_sk#1728]
[info] :  :  :  :                    :           +- *(17) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 10)) AND (t_minute#1732 < 30)) AND isnotnull(t_time_sk#1728))
[info] :  :  :  :                    :              +- *(17) ColumnarToRow
[info] :  :  :  :                    :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info] :  :  :  :                    +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51066]
[info] :  :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#51659]
[info] :  :  :     +- *(25) HashAggregate(keys=[], functions=[count(1)])
[info] :  :  :        +- Exchange SinglePartition, true, [id=#51631]
[info] :  :  :           +- *(24) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :  :              +- *(24) Project
[info] :  :  :                 +- *(24) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info] :  :  :                    :- *(24) Project [ss_store_sk#1170]
[info] :  :  :                    :  +- *(24) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info] :  :  :                    :     :- *(24) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info] :  :  :                    :     :  +- *(24) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info] :  :  :                    :     :     :- *(24) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info] :  :  :                    :     :     :  +- *(24) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info] :  :  :                    :     :     :     +- *(24) ColumnarToRow
[info] :  :  :                    :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info] :  :  :                    :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51048]
[info] :  :  :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51211]
[info] :  :  :                    :        +- *(22) Project [t_time_sk#1728]
[info] :  :  :                    :           +- *(22) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 10)) AND (t_minute#1732 >= 30)) AND isnotnull(t_time_sk#1728))
[info] :  :  :                    :              +- *(22) ColumnarToRow
[info] :  :  :                    :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info] :  :  :                    +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51066]
[info] :  :  +- BroadcastExchange IdentityBroadcastMode, [id=#51725]
[info] :  :     +- *(30) HashAggregate(keys=[], functions=[count(1)])
[info] :  :        +- Exchange SinglePartition, true, [id=#51697]
[info] :  :           +- *(29) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :  :              +- *(29) Project
[info] :  :                 +- *(29) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info] :  :                    :- *(29) Project [ss_store_sk#1170]
[info] :  :                    :  +- *(29) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info] :  :                    :     :- *(29) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info] :  :                    :     :  +- *(29) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info] :  :                    :     :     :- *(29) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info] :  :                    :     :     :  +- *(29) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info] :  :                    :     :     :     +- *(29) ColumnarToRow
[info] :  :                    :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info] :  :                    :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51048]
[info] :  :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51250]
[info] :  :                    :        +- *(27) Project [t_time_sk#1728]
[info] :  :                    :           +- *(27) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 11)) AND (t_minute#1732 < 30)) AND isnotnull(t_time_sk#1728))
[info] :  :                    :              +- *(27) ColumnarToRow
[info] :  :                    :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info] :  :                    +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51066]
[info] :  +- BroadcastExchange IdentityBroadcastMode, [id=#51791]
[info] :     +- *(35) HashAggregate(keys=[], functions=[count(1)])
[info] :        +- Exchange SinglePartition, true, [id=#51763]
[info] :           +- *(34) HashAggregate(keys=[], functions=[partial_count(1)])
[info] :              +- *(34) Project
[info] :                 +- *(34) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info] :                    :- *(34) Project [ss_store_sk#1170]
[info] :                    :  +- *(34) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info] :                    :     :- *(34) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info] :                    :     :  +- *(34) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info] :                    :     :     :- *(34) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info] :                    :     :     :  +- *(34) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info] :                    :     :     :     +- *(34) ColumnarToRow
[info] :                    :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info] :                    :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51048]
[info] :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51289]
[info] :                    :        +- *(32) Project [t_time_sk#1728]
[info] :                    :           +- *(32) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 11)) AND (t_minute#1732 >= 30)) AND isnotnull(t_time_sk#1728))
[info] :                    :              +- *(32) ColumnarToRow
[info] :                    :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info] :                    +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51066]
[info] +- BroadcastExchange IdentityBroadcastMode, [id=#51857]
[info]    +- *(40) HashAggregate(keys=[], functions=[count(1)])
[info]       +- Exchange SinglePartition, true, [id=#51829]
[info]          +- *(39) HashAggregate(keys=[], functions=[partial_count(1)])
[info]             +- *(39) Project
[info]                +- *(39) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                   :- *(39) Project [ss_store_sk#1170]
[info]                   :  +- *(39) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info]                   :     :- *(39) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info]                   :     :  +- *(39) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]                   :     :     :- *(39) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info]                   :     :     :  +- *(39) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info]                   :     :     :     +- *(39) ColumnarToRow
[info]                   :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info]                   :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51048]
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51328]
[info]                   :        +- *(37) Project [t_time_sk#1728]
[info]                   :           +- *(37) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 12)) AND (t_minute#1732 < 30)) AND isnotnull(t_time_sk#1728))
[info]                   :              +- *(37) ColumnarToRow
[info]                   :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info]                   +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51066]
[info] 
[info] 
[info]   Stopped after 1 iterations, 989 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q88                                                 990            990           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q89
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#21634 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#21635 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,s_store_name#675 ASC NULLS FIRST], output=[i_category#508,i_class#506,i_brand#504,s_store_name#675,s_company_name#687,d_moy#339,sum_sales#21634,avg_monthly_sales#21635])
[info] +- *(7) Project [i_category#508, i_class#506, i_brand#504, s_store_name#675, s_company_name#687, d_moy#339, sum_sales#21634, avg_monthly_sales#21635]
[info]    +- *(7) Filter (CASE WHEN NOT (avg_monthly_sales#21635 = 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#21634 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#21635 as decimal(22,6)))), DecimalType(22,6), true))) / promote_precision(cast(avg_monthly_sales#21635 as decimal(22,6)))), DecimalType(38,16), true) ELSE null END > 0.1000000000000000)
[info]       +- Window [avg(_w0#21639) windowspecdefinition(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#21635], [i_category#508, i_brand#504, s_store_name#675, s_company_name#687]
[info]          +- *(6) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, s_store_name#675 ASC NULLS FIRST, s_company_name#687 ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, 4), true, [id=#52025]
[info]                +- *(5) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, s_store_name#675, s_company_name#687, d_moy#339], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]                   +- Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, s_store_name#675, s_company_name#687, d_moy#339, 4), true, [id=#52021]
[info]                      +- *(4) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, s_store_name#675, s_company_name#687, d_moy#339], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]                         +- *(4) Project [i_brand#504, i_class#506, i_category#508, ss_sales_price#1176, d_moy#339, s_store_name#675, s_company_name#687]
[info]                            +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :- *(4) Project [i_brand#504, i_class#506, i_category#508, ss_store_sk#1170, ss_sales_price#1176, d_moy#339]
[info]                               :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :- *(4) Project [i_brand#504, i_class#506, i_category#508, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                               :     :  +- *(4) BroadcastHashJoin [i_item_sk#496], [ss_item_sk#1165], Inner, BuildLeft
[info]                               :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#51993]
[info]                               :     :     :  +- *(1) Project [i_item_sk#496, i_brand#504, i_class#506, i_category#508]
[info]                               :     :     :     +- *(1) Filter (((i_category#508 IN (Books,Electronics,Sports) AND i_class#506 IN (computers,stereo,football)) OR (i_category#508 IN (Men,Jewelry,Women) AND i_class#506 IN (shirts,birdal,dresses))) AND isnotnull(i_item_sk#496))
[info]                               :     :     :        +- *(1) ColumnarToRow
[info]                               :     :     :           +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string>
[info]                               :     :     +- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                               :     :        +- *(4) Filter ((isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]                               :     :           +- *(4) ColumnarToRow
[info]                               :     :              +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52006]
[info]                               :        +- *(2) Project [d_date_sk#331, d_moy#339]
[info]                               :           +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 1999)) AND isnotnull(d_date_sk#331))
[info]                               :              +- *(2) ColumnarToRow
[info]                               :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52015]
[info]                                  +- *(3) Project [s_store_sk#670, s_store_name#675, s_company_name#687]
[info]                                     +- *(3) Filter isnotnull(s_store_sk#670)
[info]                                        +- *(3) ColumnarToRow
[info]                                           +- BatchScan[s_store_sk#670, s_store_name#675, s_company_name#687] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 197 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q89                                                 197            197           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q90
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[am_pm_ratio#21673 ASC NULLS FIRST], output=[am_pm_ratio#21673])
[info] +- *(11) Project [CheckOverflow((promote_precision(cast(amc#21671L as decimal(15,4))) / promote_precision(cast(pmc#21672L as decimal(15,4)))), DecimalType(35,20), true) AS am_pm_ratio#21673]
[info]    +- BroadcastNestedLoopJoin BuildRight, Inner
[info]       :- *(5) HashAggregate(keys=[], functions=[count(1)])
[info]       :  +- Exchange SinglePartition, true, [id=#52291]
[info]       :     +- *(4) HashAggregate(keys=[], functions=[partial_count(1)])
[info]       :        +- *(4) Project
[info]       :           +- *(4) BroadcastHashJoin [ws_web_page_sk#1032], [wp_web_page_sk#1773], Inner, BuildRight
[info]       :              :- *(4) Project [ws_web_page_sk#1032]
[info]       :              :  +- *(4) BroadcastHashJoin [ws_sold_time_sk#1021], [t_time_sk#1728], Inner, BuildRight
[info]       :              :     :- *(4) Project [ws_sold_time_sk#1021, ws_web_page_sk#1032]
[info]       :              :     :  +- *(4) BroadcastHashJoin [ws_ship_hdemo_sk#1030], [hd_demo_sk#448], Inner, BuildRight
[info]       :              :     :     :- *(4) Project [ws_sold_time_sk#1021, ws_ship_hdemo_sk#1030, ws_web_page_sk#1032]
[info]       :              :     :     :  +- *(4) Filter ((isnotnull(ws_ship_hdemo_sk#1030) AND isnotnull(ws_sold_time_sk#1021)) AND isnotnull(ws_web_page_sk#1032))
[info]       :              :     :     :     +- *(4) ColumnarToRow
[info]       :              :     :     :        +- BatchScan[ws_sold_time_sk#1021, ws_ship_hdemo_sk#1030, ws_web_page_sk#1032] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_hdemo_sk:int,ws_web_page_sk:int>
[info]       :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52267]
[info]       :              :     :        +- *(1) Project [hd_demo_sk#448]
[info]       :              :     :           +- *(1) Filter ((isnotnull(hd_dep_count#451) AND (hd_dep_count#451 = 6)) AND isnotnull(hd_demo_sk#448))
[info]       :              :     :              +- *(1) ColumnarToRow
[info]       :              :     :                 +- BatchScan[hd_demo_sk#448, hd_dep_count#451] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int>
[info]       :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52276]
[info]       :              :        +- *(2) Project [t_time_sk#1728]
[info]       :              :           +- *(2) Filter (((isnotnull(t_hour#1731) AND (t_hour#1731 >= 8)) AND (t_hour#1731 <= 9)) AND isnotnull(t_time_sk#1728))
[info]       :              :              +- *(2) ColumnarToRow
[info]       :              :                 +- BatchScan[t_time_sk#1728, t_hour#1731] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int>
[info]       :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52285]
[info]       :                 +- *(3) Project [wp_web_page_sk#1773]
[info]       :                    +- *(3) Filter (((isnotnull(wp_char_count#1783) AND (wp_char_count#1783 >= 5000)) AND (wp_char_count#1783 <= 5200)) AND isnotnull(wp_web_page_sk#1773))
[info]       :                       +- *(3) ColumnarToRow
[info]       :                          +- BatchScan[wp_web_page_sk#1773, wp_char_count#1783] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_page], ReadSchema: struct<wp_web_page_sk:int,wp_char_count:int>
[info]       +- BroadcastExchange IdentityBroadcastMode, [id=#52450]
[info]          +- *(10) HashAggregate(keys=[], functions=[count(1)])
[info]             +- Exchange SinglePartition, true, [id=#52398]
[info]                +- *(9) HashAggregate(keys=[], functions=[partial_count(1)])
[info]                   +- *(9) Project
[info]                      +- *(9) BroadcastHashJoin [ws_web_page_sk#1032], [wp_web_page_sk#1773], Inner, BuildRight
[info]                         :- *(9) Project [ws_web_page_sk#1032]
[info]                         :  +- *(9) BroadcastHashJoin [ws_sold_time_sk#1021], [t_time_sk#1728], Inner, BuildRight
[info]                         :     :- *(9) Project [ws_sold_time_sk#1021, ws_web_page_sk#1032]
[info]                         :     :  +- *(9) BroadcastHashJoin [ws_ship_hdemo_sk#1030], [hd_demo_sk#448], Inner, BuildRight
[info]                         :     :     :- *(9) Project [ws_sold_time_sk#1021, ws_ship_hdemo_sk#1030, ws_web_page_sk#1032]
[info]                         :     :     :  +- *(9) Filter ((isnotnull(ws_ship_hdemo_sk#1030) AND isnotnull(ws_sold_time_sk#1021)) AND isnotnull(ws_web_page_sk#1032))
[info]                         :     :     :     +- *(9) ColumnarToRow
[info]                         :     :     :        +- BatchScan[ws_sold_time_sk#1021, ws_ship_hdemo_sk#1030, ws_web_page_sk#1032] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_hdemo_sk:int,ws_web_page_sk:int>
[info]                         :     :     +- ReusedExchange [hd_demo_sk#448], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52267]
[info]                         :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52313]
[info]                         :        +- *(7) Project [t_time_sk#1728]
[info]                         :           +- *(7) Filter (((isnotnull(t_hour#1731) AND (t_hour#1731 >= 19)) AND (t_hour#1731 <= 20)) AND isnotnull(t_time_sk#1728))
[info]                         :              +- *(7) ColumnarToRow
[info]                         :                 +- BatchScan[t_time_sk#1728, t_hour#1731] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int>
[info]                         +- ReusedExchange [wp_web_page_sk#1773], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52285]
[info] 
[info] 
[info]   Stopped after 1 iterations, 243 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q90                                                 243            243           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q91
[info] == Physical Plan ==
[info] *(9) Sort [Returns_Loss#21715 DESC NULLS LAST], true, 0
[info] +- Exchange rangepartitioning(Returns_Loss#21715 DESC NULLS LAST, 4), true, [id=#52708]
[info]    +- *(8) HashAggregate(keys=[cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cd_marital_status#292, cd_education_status#293], functions=[sum(UnscaledValue(cr_net_loss#66))])
[info]       +- Exchange hashpartitioning(cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cd_marital_status#292, cd_education_status#293, 4), true, [id=#52704]
[info]          +- *(7) HashAggregate(keys=[cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cd_marital_status#292, cd_education_status#293], functions=[partial_sum(UnscaledValue(cr_net_loss#66))])
[info]             +- *(7) Project [cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cr_net_loss#66, cd_marital_status#292, cd_education_status#293]
[info]                +- *(7) BroadcastHashJoin [c_current_hdemo_sk#159], [hd_demo_sk#448], Inner, BuildRight
[info]                   :- *(7) Project [cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cr_net_loss#66, c_current_hdemo_sk#159, cd_marital_status#292, cd_education_status#293]
[info]                   :  +- *(7) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]                   :     :- *(7) Project [cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cr_net_loss#66, c_current_cdemo_sk#158, c_current_hdemo_sk#159]
[info]                   :     :  +- *(7) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                   :     :     :- *(7) Project [cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cr_net_loss#66, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160]
[info]                   :     :     :  +- *(7) BroadcastHashJoin [cr_returning_customer_sk#47], [c_customer_sk#156], Inner, BuildRight
[info]                   :     :     :     :- *(7) Project [cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cr_returning_customer_sk#47, cr_net_loss#66]
[info]                   :     :     :     :  +- *(7) BroadcastHashJoin [cr_returned_date_sk#67], [d_date_sk#331], Inner, BuildRight
[info]                   :     :     :     :     :- *(7) Project [cc_call_center_id#1493, cc_name#1498, cc_manager#1503, cr_returning_customer_sk#47, cr_net_loss#66, cr_returned_date_sk#67]
[info]                   :     :     :     :     :  +- *(7) BroadcastHashJoin [cc_call_center_sk#1492], [cr_call_center_sk#51], Inner, BuildLeft
[info]                   :     :     :     :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52649]
[info]                   :     :     :     :     :     :  +- *(1) Project [cc_call_center_sk#1492, cc_call_center_id#1493, cc_name#1498, cc_manager#1503]
[info]                   :     :     :     :     :     :     +- *(1) Filter isnotnull(cc_call_center_sk#1492)
[info]                   :     :     :     :     :     :        +- *(1) ColumnarToRow
[info]                   :     :     :     :     :     :           +- BatchScan[cc_call_center_sk#1492, cc_call_center_id#1493, cc_name#1498, cc_manager#1503] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/call_center], ReadSchema: struct<cc_call_center_sk:int,cc_call_center_id:string,cc_name:string,cc_manager:string>
[info]                   :     :     :     :     :     +- *(7) Project [cr_returning_customer_sk#47, cr_call_center_sk#51, cr_net_loss#66, cr_returned_date_sk#67]
[info]                   :     :     :     :     :        +- *(7) Filter ((isnotnull(cr_call_center_sk#51) AND isnotnull(cr_returned_date_sk#67)) AND isnotnull(cr_returning_customer_sk#47))
[info]                   :     :     :     :     :           +- *(7) ColumnarToRow
[info]                   :     :     :     :     :              +- BatchScan[cr_returning_customer_sk#47, cr_call_center_sk#51, cr_net_loss#66, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_returning_customer_sk:int,cr_call_center_sk:int,cr_net_loss:decimal(7,2)>
[info]                   :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52662]
[info]                   :     :     :     :        +- *(2) Project [d_date_sk#331]
[info]                   :     :     :     :           +- *(2) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 1998)) AND (d_moy#339 = 11)) AND isnotnull(d_date_sk#331))
[info]                   :     :     :     :              +- *(2) ColumnarToRow
[info]                   :     :     :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                   :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52671]
[info]                   :     :     :        +- *(3) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160]
[info]                   :     :     :           +- *(3) Filter (((isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160)) AND isnotnull(c_current_cdemo_sk#158)) AND isnotnull(c_current_hdemo_sk#159))
[info]                   :     :     :              +- *(3) ColumnarToRow
[info]                   :     :     :                 +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int>
[info]                   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52680]
[info]                   :     :        +- *(4) Project [ca_address_sk#233]
[info]                   :     :           +- *(4) Filter ((isnotnull(ca_gmt_offset#244) AND (ca_gmt_offset#244 = -7.00)) AND isnotnull(ca_address_sk#233))
[info]                   :     :              +- *(4) ColumnarToRow
[info]                   :     :                 +- BatchScan[ca_address_sk#233, ca_gmt_offset#244] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52689]
[info]                   :        +- *(5) Project [cd_demo_sk#290, cd_marital_status#292, cd_education_status#293]
[info]                   :           +- *(5) Filter ((((cd_marital_status#292 = M) AND (cd_education_status#293 = Unknown)) OR ((cd_marital_status#292 = W) AND (cd_education_status#293 = Advanced Degree))) AND isnotnull(cd_demo_sk#290))
[info]                   :              +- *(5) ColumnarToRow
[info]                   :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52698]
[info]                      +- *(6) Project [hd_demo_sk#448]
[info]                         +- *(6) Filter ((isnotnull(hd_buy_potential#450) AND StartsWith(hd_buy_potential#450, Unknown)) AND isnotnull(hd_demo_sk#448))
[info]                            +- *(6) ColumnarToRow
[info]                               +- BatchScan[hd_demo_sk#448, hd_buy_potential#450] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 267 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q91                                                 268            268           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q92
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[Excess Discount Amount #21757 ASC NULLS FIRST], output=[Excess Discount Amount #21757])
[info] +- *(10) HashAggregate(keys=[], functions=[sum(UnscaledValue(ws_ext_discount_amt#1042))])
[info]    +- Exchange SinglePartition, true, [id=#52954]
[info]       +- *(9) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ws_ext_discount_amt#1042))])
[info]          +- *(9) Project [ws_ext_discount_amt#1042]
[info]             +- *(9) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :- *(9) Project [ws_ext_discount_amt#1042, ws_sold_date_sk#1054]
[info]                :  +- *(9) SortMergeJoin [i_item_sk#496], [ws_item_sk#1023#21764], Inner, (cast(ws_ext_discount_amt#1042 as decimal(14,7)) > (CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#21759)
[info]                :     :- *(3) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]                :     :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#52884]
[info]                :     :     +- *(2) Project [ws_ext_discount_amt#1042, ws_sold_date_sk#1054, i_item_sk#496]
[info]                :     :        +- *(2) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                :     :           :- *(2) Project [ws_item_sk#1023, ws_ext_discount_amt#1042, ws_sold_date_sk#1054]
[info]                :     :           :  +- *(2) Filter ((isnotnull(ws_item_sk#1023) AND isnotnull(ws_ext_discount_amt#1042)) AND isnotnull(ws_sold_date_sk#1054))
[info]                :     :           :     +- *(2) ColumnarToRow
[info]                :     :           :        +- BatchScan[ws_item_sk#1023, ws_ext_discount_amt#1042, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_ext_discount_amt:decimal(7,2)>
[info]                :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52879]
[info]                :     :              +- *(1) Project [i_item_sk#496]
[info]                :     :                 +- *(1) Filter ((isnotnull(i_manufact_id#509) AND (i_manufact_id#509 = 350)) AND isnotnull(i_item_sk#496))
[info]                :     :                    +- *(1) ColumnarToRow
[info]                :     :                       +- BatchScan[i_item_sk#496, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>
[info]                :     +- *(7) Sort [ws_item_sk#1023#21764 ASC NULLS FIRST], false, 0
[info]                :        +- Exchange hashpartitioning(ws_item_sk#1023#21764, 4), true, [id=#52909]
[info]                :           +- *(6) Filter isnotnull((CAST(1.3 AS DECIMAL(11,6)) * CAST(avg(ws_ext_discount_amt) AS DECIMAL(11,6)))#21759)
[info]                :              +- *(6) HashAggregate(keys=[ws_item_sk#1023], functions=[avg(UnscaledValue(ws_ext_discount_amt#1042))])
[info]                :                 +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#52904]
[info]                :                    +- *(5) HashAggregate(keys=[ws_item_sk#1023], functions=[partial_avg(UnscaledValue(ws_ext_discount_amt#1042))])
[info]                :                       +- *(5) Project [ws_item_sk#1023, ws_ext_discount_amt#1042]
[info]                :                          +- *(5) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :                             :- *(5) Project [ws_item_sk#1023, ws_ext_discount_amt#1042, ws_sold_date_sk#1054]
[info]                :                             :  +- *(5) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_item_sk#1023))
[info]                :                             :     +- *(5) ColumnarToRow
[info]                :                             :        +- BatchScan[ws_item_sk#1023, ws_ext_discount_amt#1042, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_ext_discount_amt:decimal(7,2)>
[info]                :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52898]
[info]                :                                +- *(4) Project [d_date_sk#331]
[info]                :                                   +- *(4) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10983)) AND (d_date#333 <= 11073)) AND isnotnull(d_date_sk#331))
[info]                :                                      +- *(4) ColumnarToRow
[info]                :                                         +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#52898]
[info] 
[info] 
[info]   Stopped after 1 iterations, 188 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q92                                                 189            189           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q93
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[sumsales#21793 ASC NULLS FIRST,ss_customer_sk#1166 ASC NULLS FIRST], output=[ss_customer_sk#1166,sumsales#21793])
[info] +- *(7) HashAggregate(keys=[ss_customer_sk#1166], functions=[sum(act_sales#21792)])
[info]    +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#53071]
[info]       +- *(6) HashAggregate(keys=[ss_customer_sk#1166], functions=[partial_sum(act_sales#21792)])
[info]          +- *(6) Project [ss_customer_sk#1166, CASE WHEN isnotnull(sr_return_quantity#800) THEN CheckOverflow((promote_precision(cast(cast((ss_quantity#1173 - sr_return_quantity#800) as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true) ELSE CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_sales_price#1176 as decimal(12,2)))), DecimalType(18,2), true) END AS act_sales#21792]
[info]             +- *(6) BroadcastHashJoin [sr_reason_sk#798], [r_reason_sk#1475], Inner, BuildRight
[info]                :- *(6) Project [ss_customer_sk#1166, ss_quantity#1173, ss_sales_price#1176, sr_reason_sk#798, sr_return_quantity#800]
[info]                :  +- *(6) SortMergeJoin [ss_item_sk#1165, ss_ticket_number#1172L], [sr_item_sk#792, sr_ticket_number#799L], Inner
[info]                :     :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]                :     :  +- Exchange hashpartitioning(ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#53043]
[info]                :     :     +- *(1) ColumnarToRow
[info]                :     :        +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_ticket_number#1172L, ss_quantity#1173, ss_sales_price#1176] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_sales_price:d...
[info]                :     +- *(4) Sort [sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]                :        +- Exchange hashpartitioning(sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#53053]
[info]                :           +- *(3) Project [sr_item_sk#792, sr_reason_sk#798, sr_ticket_number#799L, sr_return_quantity#800]
[info]                :              +- *(3) Filter ((isnotnull(sr_item_sk#792) AND isnotnull(sr_ticket_number#799L)) AND isnotnull(sr_reason_sk#798))
[info]                :                 +- *(3) ColumnarToRow
[info]                :                    +- BatchScan[sr_item_sk#792, sr_reason_sk#798, sr_ticket_number#799L, sr_return_quantity#800] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_reason_sk:int,sr_ticket_number:bigint,sr_return_quantity:int>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53065]
[info]                   +- *(5) Project [r_reason_sk#1475]
[info]                      +- *(5) Filter ((isnotnull(r_reason_desc#1477) AND (r_reason_desc#1477 = reason 28)) AND isnotnull(r_reason_sk#1475))
[info]                         +- *(5) ColumnarToRow
[info]                            +- BatchScan[r_reason_sk#1475, r_reason_desc#1477] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/reason], ReadSchema: struct<r_reason_sk:int,r_reason_desc:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 128 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q93                                                 128            128           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q94
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[order count #21830L ASC NULLS FIRST], output=[order count #21830L,total shipping cost #21831,total net profit #21832])
[info] +- *(10) HashAggregate(keys=[], functions=[sum(UnscaledValue(ws_ext_ship_cost#1048)), sum(UnscaledValue(ws_net_profit#1053)), count(distinct ws_order_number#1037L)])
[info]    +- Exchange SinglePartition, true, [id=#53297]
[info]       +- *(9) HashAggregate(keys=[], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#1048)), merge_sum(UnscaledValue(ws_net_profit#1053)), partial_count(distinct ws_order_number#1037L)])
[info]          +- *(9) HashAggregate(keys=[ws_order_number#1037L], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#1048)), merge_sum(UnscaledValue(ws_net_profit#1053))])
[info]             +- *(9) HashAggregate(keys=[ws_order_number#1037L], functions=[partial_sum(UnscaledValue(ws_ext_ship_cost#1048)), partial_sum(UnscaledValue(ws_net_profit#1053))])
[info]                +- *(9) Project [ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                   +- *(9) BroadcastHashJoin [ws_web_site_sk#1033], [web_site_sk#1366], Inner, BuildRight
[info]                      :- *(9) Project [ws_web_site_sk#1033, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                      :  +- *(9) BroadcastHashJoin [ws_ship_addr_sk#1031], [ca_address_sk#233], Inner, BuildRight
[info]                      :     :- *(9) Project [ws_ship_addr_sk#1031, ws_web_site_sk#1033, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                      :     :  +- *(9) BroadcastHashJoin [ws_ship_date_sk#1022], [d_date_sk#331], Inner, BuildRight
[info]                      :     :     :- *(9) BroadcastHashJoin [ws_order_number#1037L], [wr_order_number#1275L], LeftAnti, BuildRight
[info]                      :     :     :  :- *(9) Project [ws_ship_date_sk#1022, ws_ship_addr_sk#1031, ws_web_site_sk#1033, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                      :     :     :  :  +- SortMergeJoin [ws_order_number#1037L], [ws_order_number#1037L#21870L], LeftSemi, NOT (ws_warehouse_sk#1035 = ws_warehouse_sk#1035#21849)
[info]                      :     :     :  :     :- *(2) Sort [ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :     :  +- Exchange hashpartitioning(ws_order_number#1037L, 4), true, [id=#53244]
[info]                      :     :     :  :     :     +- *(1) Project [ws_ship_date_sk#1022, ws_ship_addr_sk#1031, ws_web_site_sk#1033, ws_warehouse_sk#1035, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                      :     :     :  :     :        +- *(1) Filter ((isnotnull(ws_ship_date_sk#1022) AND isnotnull(ws_ship_addr_sk#1031)) AND isnotnull(ws_web_site_sk#1033))
[info]                      :     :     :  :     :           +- *(1) ColumnarToRow
[info]                      :     :     :  :     :              +- BatchScan[ws_ship_date_sk#1022, ws_ship_addr_sk#1031, ws_web_site_sk#1033, ws_warehouse_sk#1035, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_ship_date_sk:int,ws_ship_addr_sk:int,ws_web_site_sk:int,ws_warehouse_sk:int,ws_order_nu...
[info]                      :     :     :  :     +- *(4) Sort [ws_order_number#1037L#21870L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :        +- Exchange hashpartitioning(ws_order_number#1037L#21870L, 4), true, [id=#53252]
[info]                      :     :     :  :           +- *(3) Project [ws_warehouse_sk#1035 AS ws_warehouse_sk#1035#21849, ws_order_number#1037L AS ws_order_number#1037L#21870L]
[info]                      :     :     :  :              +- *(3) ColumnarToRow
[info]                      :     :     :  :                 +- BatchScan[ws_sold_time_sk#1021, ws_ship_date_sk#1022, ws_item_sk#1023, ws_bill_customer_sk#1024, ws_bill_cdemo_sk#1025, ws_bill_hdemo_sk#1026, ws_bill_addr_sk#1027, ws_ship_customer_sk#1028, ws_ship_cdemo_sk#1029, ws_ship_hdemo_sk#1030, ws_ship_addr_sk#1031, ws_web_page_sk#1032, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_promo_sk#1036, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_list_price#1040, ws_sales_price#1041, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cde...
[info]                      :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, true])), [id=#53263]
[info]                      :     :     :     +- *(5) Project [wr_order_number#1275L]
[info]                      :     :     :        +- *(5) ColumnarToRow
[info]                      :     :     :           +- BatchScan[wr_returned_time_sk#1263, wr_item_sk#1264, wr_refunded_customer_sk#1265, wr_refunded_cdemo_sk#1266, wr_refunded_hdemo_sk#1267, wr_refunded_addr_sk#1268, wr_returning_customer_sk#1269, wr_returning_cdemo_sk#1270, wr_returning_hdemo_sk#1271, wr_returning_addr_sk#1272, wr_web_page_sk#1273, wr_reason_sk#1274, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277, wr_return_tax#1278, wr_return_amt_inc_tax#1279, wr_fee#1280, wr_return_ship_cost#1281, wr_refunded_cash#1282, wr_reversed_charge#1283, wr_account_credit#1284, wr_net_loss#1285, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_returned_time_sk:int,wr_item_sk:int,wr_refunded_customer_sk:int,wr_refunded_cdemo_sk:in...
[info]                      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53271]
[info]                      :     :        +- *(6) Project [d_date_sk#331]
[info]                      :     :           +- *(6) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10623)) AND (d_date#333 <= 10683)) AND isnotnull(d_date_sk#331))
[info]                      :     :              +- *(6) ColumnarToRow
[info]                      :     :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53280]
[info]                      :        +- *(7) Project [ca_address_sk#233]
[info]                      :           +- *(7) Filter ((isnotnull(ca_state#241) AND (ca_state#241 = IL)) AND isnotnull(ca_address_sk#233))
[info]                      :              +- *(7) ColumnarToRow
[info]                      :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53289]
[info]                         +- *(8) Project [web_site_sk#1366]
[info]                            +- *(8) Filter ((isnotnull(web_company_name#1380) AND (web_company_name#1380 = pri)) AND isnotnull(web_site_sk#1366))
[info]                               +- *(8) ColumnarToRow
[info]                                  +- BatchScan[web_site_sk#1366, web_company_name#1380] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_site], ReadSchema: struct<web_site_sk:int,web_company_name:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 191 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q94                                                 191            191           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q95
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[order count #21984L ASC NULLS FIRST], output=[order count #21984L,total shipping cost #21985,total net profit #21986])
[info] +- *(21) HashAggregate(keys=[], functions=[sum(UnscaledValue(ws_ext_ship_cost#1048)), sum(UnscaledValue(ws_net_profit#1053)), count(distinct ws_order_number#1037L)])
[info]    +- Exchange SinglePartition, true, [id=#53747]
[info]       +- *(20) HashAggregate(keys=[], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#1048)), merge_sum(UnscaledValue(ws_net_profit#1053)), partial_count(distinct ws_order_number#1037L)])
[info]          +- *(20) HashAggregate(keys=[ws_order_number#1037L], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#1048)), merge_sum(UnscaledValue(ws_net_profit#1053))])
[info]             +- *(20) HashAggregate(keys=[ws_order_number#1037L], functions=[partial_sum(UnscaledValue(ws_ext_ship_cost#1048)), partial_sum(UnscaledValue(ws_net_profit#1053))])
[info]                +- *(20) Project [ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                   +- *(20) BroadcastHashJoin [ws_web_site_sk#1033], [web_site_sk#1366], Inner, BuildRight
[info]                      :- *(20) Project [ws_web_site_sk#1033, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                      :  +- *(20) BroadcastHashJoin [ws_ship_addr_sk#1031], [ca_address_sk#233], Inner, BuildRight
[info]                      :     :- *(20) Project [ws_ship_addr_sk#1031, ws_web_site_sk#1033, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                      :     :  +- *(20) BroadcastHashJoin [ws_ship_date_sk#1022], [d_date_sk#331], Inner, BuildRight
[info]                      :     :     :- SortMergeJoin [ws_order_number#1037L], [wr_order_number#1275L], LeftSemi
[info]                      :     :     :  :- SortMergeJoin [ws_order_number#1037L], [ws_order_number#1037L#22086L], LeftSemi
[info]                      :     :     :  :  :- *(2) Sort [ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :  :  +- Exchange hashpartitioning(ws_order_number#1037L, 4), true, [id=#53562]
[info]                      :     :     :  :  :     +- *(1) Project [ws_ship_date_sk#1022, ws_ship_addr_sk#1031, ws_web_site_sk#1033, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053]
[info]                      :     :     :  :  :        +- *(1) Filter ((isnotnull(ws_ship_date_sk#1022) AND isnotnull(ws_ship_addr_sk#1031)) AND isnotnull(ws_web_site_sk#1033))
[info]                      :     :     :  :  :           +- *(1) ColumnarToRow
[info]                      :     :     :  :  :              +- BatchScan[ws_ship_date_sk#1022, ws_ship_addr_sk#1031, ws_web_site_sk#1033, ws_order_number#1037L, ws_ext_ship_cost#1048, ws_net_profit#1053] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_ship_date_sk:int,ws_ship_addr_sk:int,ws_web_site_sk:int,ws_order_number:bigint,ws_ext_s...
[info]                      :     :     :  :  +- *(8) Sort [ws_order_number#1037L#22086L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :     +- Exchange hashpartitioning(ws_order_number#1037L#22086L, 4), true, [id=#53695]
[info]                      :     :     :  :        +- *(7) Project [ws_order_number#1037L AS ws_order_number#1037L#22086L]
[info]                      :     :     :  :           +- *(7) SortMergeJoin [ws_order_number#1037L], [ws_order_number#22005L], Inner, NOT (ws_warehouse_sk#1035 = ws_warehouse_sk#22003)
[info]                      :     :     :  :              :- *(4) Sort [ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :              :  +- Exchange hashpartitioning(ws_order_number#1037L, 4), true, [id=#53571]
[info]                      :     :     :  :              :     +- *(3) Project [ws_warehouse_sk#1035, ws_order_number#1037L]
[info]                      :     :     :  :              :        +- *(3) Filter (isnotnull(ws_order_number#1037L) AND isnotnull(ws_warehouse_sk#1035))
[info]                      :     :     :  :              :           +- *(3) ColumnarToRow
[info]                      :     :     :  :              :              +- BatchScan[ws_warehouse_sk#1035, ws_order_number#1037L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_warehouse_sk:int,ws_order_number:bigint>
[info]                      :     :     :  :              +- *(6) Sort [ws_order_number#22005L ASC NULLS FIRST], false, 0
[info]                      :     :     :  :                 +- ReusedExchange [ws_warehouse_sk#22003, ws_order_number#22005L], Exchange hashpartitioning(ws_order_number#1037L, 4), true, [id=#53571]
[info]                      :     :     :  +- *(16) Project [wr_order_number#1275L]
[info]                      :     :     :     +- *(16) SortMergeJoin [wr_order_number#1275L], [ws_order_number#1037L], Inner
[info]                      :     :     :        :- *(10) Sort [wr_order_number#1275L ASC NULLS FIRST], false, 0
[info]                      :     :     :        :  +- Exchange hashpartitioning(wr_order_number#1275L, 4), true, [id=#53599]
[info]                      :     :     :        :     +- *(9) Project [wr_order_number#1275L]
[info]                      :     :     :        :        +- *(9) Filter isnotnull(wr_order_number#1275L)
[info]                      :     :     :        :           +- *(9) ColumnarToRow
[info]                      :     :     :        :              +- BatchScan[wr_order_number#1275L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_order_number:bigint>
[info]                      :     :     :        +- *(15) Project [ws_order_number#1037L]
[info]                      :     :     :           +- *(15) SortMergeJoin [ws_order_number#1037L], [ws_order_number#22039L], Inner, NOT (ws_warehouse_sk#1035 = ws_warehouse_sk#22037)
[info]                      :     :     :              :- *(12) Sort [ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]                      :     :     :              :  +- ReusedExchange [ws_warehouse_sk#1035, ws_order_number#1037L], Exchange hashpartitioning(ws_order_number#1037L, 4), true, [id=#53571]
[info]                      :     :     :              +- *(14) Sort [ws_order_number#22039L ASC NULLS FIRST], false, 0
[info]                      :     :     :                 +- ReusedExchange [ws_warehouse_sk#22037, ws_order_number#22039L], Exchange hashpartitioning(ws_order_number#1037L, 4), true, [id=#53571]
[info]                      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53638]
[info]                      :     :        +- *(17) Project [d_date_sk#331]
[info]                      :     :           +- *(17) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10623)) AND (d_date#333 <= 10683)) AND isnotnull(d_date_sk#331))
[info]                      :     :              +- *(17) ColumnarToRow
[info]                      :     :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53647]
[info]                      :        +- *(18) Project [ca_address_sk#233]
[info]                      :           +- *(18) Filter ((isnotnull(ca_state#241) AND (ca_state#241 = IL)) AND isnotnull(ca_address_sk#233))
[info]                      :              +- *(18) ColumnarToRow
[info]                      :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53656]
[info]                         +- *(19) Project [web_site_sk#1366]
[info]                            +- *(19) Filter ((isnotnull(web_company_name#1380) AND (web_company_name#1380 = pri)) AND isnotnull(web_site_sk#1366))
[info]                               +- *(19) ColumnarToRow
[info]                                  +- BatchScan[web_site_sk#1366, web_company_name#1380] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_site], ReadSchema: struct<web_site_sk:int,web_company_name:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 315 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q95                                                 316            316           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q96
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[count(1)#22108L ASC NULLS FIRST], output=[count(1)#22108L])
[info] +- *(5) HashAggregate(keys=[], functions=[count(1)])
[info]    +- Exchange SinglePartition, true, [id=#53891]
[info]       +- *(4) HashAggregate(keys=[], functions=[partial_count(1)])
[info]          +- *(4) Project
[info]             +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :- *(4) Project [ss_store_sk#1170]
[info]                :  +- *(4) BroadcastHashJoin [ss_sold_time_sk#1164], [t_time_sk#1728], Inner, BuildRight
[info]                :     :- *(4) Project [ss_sold_time_sk#1164, ss_store_sk#1170]
[info]                :     :  +- *(4) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]                :     :     :- *(4) Project [ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170]
[info]                :     :     :  +- *(4) Filter ((isnotnull(ss_hdemo_sk#1168) AND isnotnull(ss_sold_time_sk#1164)) AND isnotnull(ss_store_sk#1170))
[info]                :     :     :     +- *(4) ColumnarToRow
[info]                :     :     :        +- BatchScan[ss_sold_time_sk#1164, ss_hdemo_sk#1168, ss_store_sk#1170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53867]
[info]                :     :        +- *(1) Project [hd_demo_sk#448]
[info]                :     :           +- *(1) Filter ((isnotnull(hd_dep_count#451) AND (hd_dep_count#451 = 7)) AND isnotnull(hd_demo_sk#448))
[info]                :     :              +- *(1) ColumnarToRow
[info]                :     :                 +- BatchScan[hd_demo_sk#448, hd_dep_count#451] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53876]
[info]                :        +- *(2) Project [t_time_sk#1728]
[info]                :           +- *(2) Filter ((((isnotnull(t_hour#1731) AND isnotnull(t_minute#1732)) AND (t_hour#1731 = 20)) AND (t_minute#1732 >= 30)) AND isnotnull(t_time_sk#1728))
[info]                :              +- *(2) ColumnarToRow
[info]                :                 +- BatchScan[t_time_sk#1728, t_hour#1731, t_minute#1732] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/time_dim], ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#53885]
[info]                   +- *(3) Project [s_store_sk#670]
[info]                      +- *(3) Filter ((isnotnull(s_store_name#675) AND (s_store_name#675 = ese)) AND isnotnull(s_store_sk#670))
[info]                         +- *(3) ColumnarToRow
[info]                            +- BatchScan[s_store_sk#670, s_store_name#675] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 116 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q96                                                 117            117           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q97
[info] == Physical Plan ==
[info] CollectLimit 100
[info] +- *(10) HashAggregate(keys=[], functions=[sum(cast(CASE WHEN (isnotnull(customer_sk#22140) AND isnull(customer_sk#22142)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (isnull(customer_sk#22140) AND isnotnull(customer_sk#22142)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (isnotnull(customer_sk#22140) AND isnotnull(customer_sk#22142)) THEN 1 ELSE 0 END as bigint))])
[info]    +- Exchange SinglePartition, true, [id=#54171]
[info]       +- *(9) HashAggregate(keys=[], functions=[partial_sum(cast(CASE WHEN (isnotnull(customer_sk#22140) AND isnull(customer_sk#22142)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (isnull(customer_sk#22140) AND isnotnull(customer_sk#22142)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (isnotnull(customer_sk#22140) AND isnotnull(customer_sk#22142)) THEN 1 ELSE 0 END as bigint))])
[info]          +- *(9) Project [customer_sk#22140, customer_sk#22142]
[info]             +- SortMergeJoin [customer_sk#22140, item_sk#22141], [customer_sk#22142, item_sk#22143], FullOuter
[info]                :- *(4) Sort [customer_sk#22140 ASC NULLS FIRST, item_sk#22141 ASC NULLS FIRST], false, 0
[info]                :  +- Exchange hashpartitioning(customer_sk#22140, item_sk#22141, 4), true, [id=#54055]
[info]                :     +- *(3) HashAggregate(keys=[ss_customer_sk#1166, ss_item_sk#1165], functions=[])
[info]                :        +- Exchange hashpartitioning(ss_customer_sk#1166, ss_item_sk#1165, 4), true, [id=#54051]
[info]                :           +- *(2) HashAggregate(keys=[ss_customer_sk#1166, ss_item_sk#1165], functions=[])
[info]                :              +- *(2) Project [ss_item_sk#1165, ss_customer_sk#1166]
[info]                :                 +- *(2) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :                    :- *(2) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                :                    :  +- *(2) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :                    :     +- *(2) ColumnarToRow
[info]                :                    :        +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int>
[info]                :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54045]
[info]                :                       +- *(1) Project [d_date_sk#331]
[info]                :                          +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                :                             +- *(1) ColumnarToRow
[info]                :                                +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                +- *(8) Sort [customer_sk#22142 ASC NULLS FIRST, item_sk#22143 ASC NULLS FIRST], false, 0
[info]                   +- Exchange hashpartitioning(customer_sk#22142, item_sk#22143, 4), true, [id=#54118]
[info]                      +- *(7) HashAggregate(keys=[cs_bill_customer_sk#880, cs_item_sk#892], functions=[])
[info]                         +- Exchange hashpartitioning(cs_bill_customer_sk#880, cs_item_sk#892, 4), true, [id=#54114]
[info]                            +- *(6) HashAggregate(keys=[cs_bill_customer_sk#880, cs_item_sk#892], functions=[])
[info]                               +- *(6) Project [cs_bill_customer_sk#880, cs_item_sk#892]
[info]                                  +- *(6) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                                     :- *(6) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_sold_date_sk#911]
[info]                                     :  +- *(6) Filter isnotnull(cs_sold_date_sk#911)
[info]                                     :     +- *(6) ColumnarToRow
[info]                                     :        +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int>
[info]                                     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54045]
[info] 
[info] 
[info]   Stopped after 1 iterations, 134 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q97                                                 135            135           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q98
[info] == Physical Plan ==
[info] *(7) Project [i_item_desc#500, i_category#508, i_class#506, i_current_price#501, itemrevenue#22183, revenueratio#22184]
[info] +- *(7) Sort [i_category#508 ASC NULLS FIRST, i_class#506 ASC NULLS FIRST, i_item_id#497 ASC NULLS FIRST, i_item_desc#500 ASC NULLS FIRST, revenueratio#22184 ASC NULLS FIRST], true, 0
[info]    +- Exchange rangepartitioning(i_category#508 ASC NULLS FIRST, i_class#506 ASC NULLS FIRST, i_item_id#497 ASC NULLS FIRST, i_item_desc#500 ASC NULLS FIRST, revenueratio#22184 ASC NULLS FIRST, 4), true, [id=#54319]
[info]       +- *(6) Project [i_item_desc#500, i_category#508, i_class#506, i_current_price#501, itemrevenue#22183, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#22189) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#22191)), DecimalType(38,17), true) AS revenueratio#22184, i_item_id#497]
[info]          +- Window [sum(_w1#22190) windowspecdefinition(i_class#506, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#22191], [i_class#506]
[info]             +- *(5) Sort [i_class#506 ASC NULLS FIRST], false, 0
[info]                +- Exchange hashpartitioning(i_class#506, 4), true, [id=#54311]
[info]                   +- *(4) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                      +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, 4), true, [id=#54307]
[info]                         +- *(3) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                            +- *(3) Project [ss_ext_sales_price#1178, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                               +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                                  :- *(3) Project [ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                                  :  +- *(3) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                                  :     :- *(3) Project [ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                                  :     :  +- *(3) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                                  :     :     +- *(3) ColumnarToRow
[info]                                  :     :        +- BatchScan[ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54292]
[info]                                  :        +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                                  :           +- *(1) Filter (i_category#508 IN (Sports,Books,Home) AND isnotnull(i_item_sk#496))
[info]                                  :              +- *(1) ColumnarToRow
[info]                                  :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
[info]                                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54301]
[info]                                     +- *(2) Project [d_date_sk#331]
[info]                                        +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10644)) AND (d_date#333 <= 10674)) AND isnotnull(d_date_sk#331))
[info]                                           +- *(2) ColumnarToRow
[info]                                              +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 109 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q98                                                 109            109           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q99
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[substring(w_warehouse_name, 1, 20)#22244 ASC NULLS FIRST,sm_type#1684 ASC NULLS FIRST,cc_name#1498 ASC NULLS FIRST], output=[substring(w_warehouse_name, 1, 20)#22244,sm_type#1684,cc_name#1498,30 days #22234L,31 - 60 days #22235L,61 - 90 days #22236L,91 - 120 days #22237L,>120 days #22238L])
[info] +- *(6) HashAggregate(keys=[substring(w_warehouse_name#1623, 1, 20)#22269, sm_type#1684, cc_name#1498], functions=[sum(cast(CASE WHEN ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 30) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 30) AND ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 60)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 60) AND ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 90)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN (((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 90) AND ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 120)) THEN 1 ELSE 0 END as bigint)), sum(cast(CASE WHEN ((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 120) THEN 1 ELSE 0 END as bigint))])
[info]    +- Exchange hashpartitioning(substring(w_warehouse_name#1623, 1, 20)#22269, sm_type#1684, cc_name#1498, 4), true, [id=#54498]
[info]       +- *(5) HashAggregate(keys=[substring(w_warehouse_name#1623, 1, 20) AS substring(w_warehouse_name#1623, 1, 20)#22269, sm_type#1684, cc_name#1498], functions=[partial_sum(cast(CASE WHEN ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 30) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 30) AND ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 60)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 60) AND ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 90)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN (((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 90) AND ((cs_ship_date_sk#879 - cs_sold_date_sk#911) <= 120)) THEN 1 ELSE 0 END as bigint)), partial_sum(cast(CASE WHEN ((cs_ship_date_sk#879 - cs_sold_date_sk#911) > 120) THEN 1 ELSE 0 END as bigint))])
[info]          +- *(5) Project [cs_ship_date_sk#879, cs_sold_date_sk#911, w_warehouse_name#1623, sm_type#1684, cc_name#1498]
[info]             +- *(5) BroadcastHashJoin [cs_ship_date_sk#879], [d_date_sk#331], Inner, BuildRight
[info]                :- *(5) Project [cs_ship_date_sk#879, cs_sold_date_sk#911, w_warehouse_name#1623, sm_type#1684, cc_name#1498]
[info]                :  +- *(5) BroadcastHashJoin [cs_call_center_sk#888], [cc_call_center_sk#1492], Inner, BuildRight
[info]                :     :- *(5) Project [cs_ship_date_sk#879, cs_call_center_sk#888, cs_sold_date_sk#911, w_warehouse_name#1623, sm_type#1684]
[info]                :     :  +- *(5) BroadcastHashJoin [cs_ship_mode_sk#890], [sm_ship_mode_sk#1682], Inner, BuildRight
[info]                :     :     :- *(5) Project [cs_ship_date_sk#879, cs_call_center_sk#888, cs_ship_mode_sk#890, cs_sold_date_sk#911, w_warehouse_name#1623]
[info]                :     :     :  +- *(5) BroadcastHashJoin [cs_warehouse_sk#891], [w_warehouse_sk#1621], Inner, BuildRight
[info]                :     :     :     :- *(5) Project [cs_ship_date_sk#879, cs_call_center_sk#888, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_sold_date_sk#911]
[info]                :     :     :     :  +- *(5) Filter (((isnotnull(cs_warehouse_sk#891) AND isnotnull(cs_ship_mode_sk#890)) AND isnotnull(cs_call_center_sk#888)) AND isnotnull(cs_ship_date_sk#879))
[info]                :     :     :     :     +- *(5) ColumnarToRow
[info]                :     :     :     :        +- BatchScan[cs_ship_date_sk#879, cs_call_center_sk#888, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ship_date_sk:int,cs_call_center_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int>
[info]                :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54465]
[info]                :     :     :        +- *(1) Project [w_warehouse_sk#1621, w_warehouse_name#1623]
[info]                :     :     :           +- *(1) Filter isnotnull(w_warehouse_sk#1621)
[info]                :     :     :              +- *(1) ColumnarToRow
[info]                :     :     :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
[info]                :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54474]
[info]                :     :        +- *(2) Project [sm_ship_mode_sk#1682, sm_type#1684]
[info]                :     :           +- *(2) Filter isnotnull(sm_ship_mode_sk#1682)
[info]                :     :              +- *(2) ColumnarToRow
[info]                :     :                 +- BatchScan[sm_ship_mode_sk#1682, sm_type#1684] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/ship_mode], ReadSchema: struct<sm_ship_mode_sk:int,sm_type:string>
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54483]
[info]                :        +- *(3) Project [cc_call_center_sk#1492, cc_name#1498]
[info]                :           +- *(3) Filter isnotnull(cc_call_center_sk#1492)
[info]                :              +- *(3) ColumnarToRow
[info]                :                 +- BatchScan[cc_call_center_sk#1492, cc_name#1498] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/call_center], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#54492]
[info]                   +- *(4) Project [d_date_sk#331]
[info]                      +- *(4) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                         +- *(4) ColumnarToRow
[info]                            +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 159 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q99                                                 159            159           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q5a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#22468 ASC NULLS FIRST,id#22469 ASC NULLS FIRST], output=[channel#22468,id#22469,sales#22537,returns#22538,profit#22539])
[info] +- *(78) HashAggregate(keys=[channel#22468, id#22469, sales#22537, returns#22538, profit#22539], functions=[])
[info]    +- Exchange hashpartitioning(channel#22468, id#22469, sales#22537, returns#22538, profit#22539, 4), true, [id=#56744]
[info]       +- *(77) HashAggregate(keys=[channel#22468, id#22469, sales#22537, returns#22538, profit#22539], functions=[])
[info]          +- Union
[info]             :- *(51) HashAggregate(keys=[channel#22468, id#22469, sales#22537, returns#22538, profit#22539], functions=[])
[info]             :  +- Exchange hashpartitioning(channel#22468, id#22469, sales#22537, returns#22538, profit#22539, 4), true, [id=#56476]
[info]             :     +- *(50) HashAggregate(keys=[channel#22468, id#22469, sales#22537, returns#22538, profit#22539], functions=[])
[info]             :        +- Union
[info]             :           :- *(24) HashAggregate(keys=[channel#22468, id#22469], functions=[sum(sales#22432), sum(returns#22434), sum(profit#22470)])
[info]             :           :  +- Exchange hashpartitioning(channel#22468, id#22469, 4), true, [id=#56046]
[info]             :           :     +- *(23) HashAggregate(keys=[channel#22468, id#22469], functions=[partial_sum(sales#22432), partial_sum(returns#22434), partial_sum(profit#22470)])
[info]             :           :        +- Union
[info]             :           :           :- *(6) HashAggregate(keys=[s_store_id#671], functions=[sum(UnscaledValue(sales_price#22422)), sum(UnscaledValue(return_amt#22424)), sum(UnscaledValue(profit#22423)), sum(UnscaledValue(net_loss#22425))])
[info]             :           :           :  +- Exchange hashpartitioning(s_store_id#671, 4), true, [id=#55597]
[info]             :           :           :     +- *(5) HashAggregate(keys=[s_store_id#671], functions=[partial_sum(UnscaledValue(sales_price#22422)), partial_sum(UnscaledValue(return_amt#22424)), partial_sum(UnscaledValue(profit#22423)), partial_sum(UnscaledValue(net_loss#22425))])
[info]             :           :           :        +- *(5) Project [sales_price#22422, profit#22423, return_amt#22424, net_loss#22425, s_store_id#671]
[info]             :           :           :           +- *(5) BroadcastHashJoin [store_sk#22420], [s_store_sk#670], Inner, BuildRight
[info]             :           :           :              :- *(5) Project [store_sk#22420, sales_price#22422, profit#22423, return_amt#22424, net_loss#22425]
[info]             :           :           :              :  +- *(5) BroadcastHashJoin [date_sk#22421], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :              :     :- Union
[info]             :           :           :              :     :  :- *(1) Project [ss_store_sk#1170 AS store_sk#22420, ss_sold_date_sk#1186 AS date_sk#22421, ss_ext_sales_price#1178 AS sales_price#22422, ss_net_profit#1185 AS profit#22423, 0.00 AS return_amt#22424, 0.00 AS net_loss#22425]
[info]             :           :           :              :     :  :  +- *(1) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]             :           :           :              :     :  :     +- *(1) ColumnarToRow
[info]             :           :           :              :     :  :        +- BatchScan[ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>
[info]             :           :           :              :     :  +- *(2) Project [sr_store_sk#797 AS store_sk#22426, sr_returned_date_sk#810 AS date_sk#22427, 0.00 AS sales_price#22428, 0.00 AS profit#22429, sr_return_amt#801 AS return_amt#22430, sr_net_loss#809 AS net_loss#22431]
[info]             :           :           :              :     :     +- *(2) Filter (isnotnull(sr_returned_date_sk#810) AND isnotnull(sr_store_sk#797))
[info]             :           :           :              :     :        +- *(2) ColumnarToRow
[info]             :           :           :              :     :           +- BatchScan[sr_store_sk#797, sr_return_amt#801, sr_net_loss#809, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
[info]             :           :           :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#55582]
[info]             :           :           :              :        +- *(3) Project [d_date_sk#331]
[info]             :           :           :              :           +- *(3) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10442)) AND (d_date#333 <= 10456)) AND isnotnull(d_date_sk#331))
[info]             :           :           :              :              +- *(3) ColumnarToRow
[info]             :           :           :              :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]             :           :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#55591]
[info]             :           :           :                 +- *(4) Project [s_store_sk#670, s_store_id#671]
[info]             :           :           :                    +- *(4) Filter isnotnull(s_store_sk#670)
[info]             :           :           :                       +- *(4) ColumnarToRow
[info]             :           :           :                          +- BatchScan[s_store_sk#670, s_store_id#671] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string>
[info]             :           :           :- *(12) HashAggregate(keys=[cp_catalog_page_id#1], functions=[sum(UnscaledValue(sales_price#22438)), sum(UnscaledValue(return_amt#22440)), sum(UnscaledValue(profit#22439)), sum(UnscaledValue(net_loss#22441))])
[info]             :           :           :  +- Exchange hashpartitioning(cp_catalog_page_id#1, 4), true, [id=#56018]
[info]             :           :           :     +- *(11) HashAggregate(keys=[cp_catalog_page_id#1], functions=[partial_sum(UnscaledValue(sales_price#22438)), partial_sum(UnscaledValue(return_amt#22440)), partial_sum(UnscaledValue(profit#22439)), partial_sum(UnscaledValue(net_loss#22441))])
[info]             :           :           :        +- *(11) Project [sales_price#22438, profit#22439, return_amt#22440, net_loss#22441, cp_catalog_page_id#1]
[info]             :           :           :           +- *(11) BroadcastHashJoin [page_sk#22436], [cp_catalog_page_sk#0], Inner, BuildRight
[info]             :           :           :              :- *(11) Project [page_sk#22436, sales_price#22438, profit#22439, return_amt#22440, net_loss#22441]
[info]             :           :           :              :  +- *(11) BroadcastHashJoin [date_sk#22437], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :              :     :- Union
[info]             :           :           :              :     :  :- *(7) Project [cs_catalog_page_sk#889 AS page_sk#22436, cs_sold_date_sk#911 AS date_sk#22437, cs_ext_sales_price#900 AS sales_price#22438, cs_net_profit#910 AS profit#22439, 0.00 AS return_amt#22440, 0.00 AS net_loss#22441]
[info]             :           :           :              :     :  :  +- *(7) Filter (isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_catalog_page_sk#889))
[info]             :           :           :              :     :  :     +- *(7) ColumnarToRow
[info]             :           :           :              :     :  :        +- BatchScan[cs_catalog_page_sk#889, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_catalog_page_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>
[info]             :           :           :              :     :  +- *(8) Project [cr_catalog_page_sk#52 AS page_sk#22442, cr_returned_date_sk#67 AS date_sk#22443, 0.00 AS sales_price#22444, 0.00 AS profit#22445, cr_return_amount#58 AS return_amt#22446, cr_net_loss#66 AS net_loss#22447]
[info]             :           :           :              :     :     +- *(8) Filter (isnotnull(cr_returned_date_sk#67) AND isnotnull(cr_catalog_page_sk#52))
[info]             :           :           :              :     :        +- *(8) ColumnarToRow
[info]             :           :           :              :     :           +- BatchScan[cr_catalog_page_sk#52, cr_return_amount#58, cr_net_loss#66, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_catalog_page_sk:int,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
[info]             :           :           :              :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#55582]
[info]             :           :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#55627]
[info]             :           :           :                 +- *(10) Project [cp_catalog_page_sk#0, cp_catalog_page_id#1]
[info]             :           :           :                    +- *(10) Filter isnotnull(cp_catalog_page_sk#0)
[info]             :           :           :                       +- *(10) ColumnarToRow
[info]             :           :           :                          +- BatchScan[cp_catalog_page_sk#0, cp_catalog_page_id#1] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_page], ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>
[info]             :           :           +- *(22) HashAggregate(keys=[web_site_id#1367], functions=[sum(UnscaledValue(sales_price#22454)), sum(UnscaledValue(return_amt#22456)), sum(UnscaledValue(profit#22455)), sum(UnscaledValue(net_loss#22457))])
[info]             :           :              +- Exchange hashpartitioning(web_site_id#1367, 4), true, [id=#56038]
[info]             :           :                 +- *(21) HashAggregate(keys=[web_site_id#1367], functions=[partial_sum(UnscaledValue(sales_price#22454)), partial_sum(UnscaledValue(return_amt#22456)), partial_sum(UnscaledValue(profit#22455)), partial_sum(UnscaledValue(net_loss#22457))])
[info]             :           :                    +- *(21) Project [sales_price#22454, profit#22455, return_amt#22456, net_loss#22457, web_site_id#1367]
[info]             :           :                       +- *(21) BroadcastHashJoin [wsr_web_site_sk#22452], [web_site_sk#1366], Inner, BuildRight
[info]             :           :                          :- *(21) Project [wsr_web_site_sk#22452, sales_price#22454, profit#22455, return_amt#22456, net_loss#22457]
[info]             :           :                          :  +- *(21) BroadcastHashJoin [date_sk#22453], [d_date_sk#331], Inner, BuildRight
[info]             :           :                          :     :- Union
[info]             :           :                          :     :  :- *(13) Project [ws_web_site_sk#1033 AS wsr_web_site_sk#22452, ws_sold_date_sk#1054 AS date_sk#22453, ws_ext_sales_price#1043 AS sales_price#22454, ws_net_profit#1053 AS profit#22455, 0.00 AS return_amt#22456, 0.00 AS net_loss#22457]
[info]             :           :                          :     :  :  +- *(13) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_web_site_sk#1033))
[info]             :           :                          :     :  :     +- *(13) ColumnarToRow
[info]             :           :                          :     :  :        +- BatchScan[ws_web_site_sk#1033, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_web_site_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>
[info]             :           :                          :     :  +- *(18) Project [ws_web_site_sk#1033 AS wsr_web_site_sk#22458, wr_returned_date_sk#1286 AS date_sk#22459, 0.00 AS sales_price#22460, 0.00 AS profit#22461, wr_return_amt#1277 AS return_amt#22462, wr_net_loss#1285 AS net_loss#22463]
[info]             :           :                          :     :     +- *(18) SortMergeJoin [wr_item_sk#1264, wr_order_number#1275L], [ws_item_sk#1023, ws_order_number#1037L], Inner
[info]             :           :                          :     :        :- *(15) Sort [wr_item_sk#1264 ASC NULLS FIRST, wr_order_number#1275L ASC NULLS FIRST], false, 0
[info]             :           :                          :     :        :  +- Exchange hashpartitioning(wr_item_sk#1264, wr_order_number#1275L, 4), true, [id=#55647]
[info]             :           :                          :     :        :     +- *(14) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286]
[info]             :           :                          :     :        :        +- *(14) Filter isnotnull(wr_returned_date_sk#1286)
[info]             :           :                          :     :        :           +- *(14) ColumnarToRow
[info]             :           :                          :     :        :              +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
[info]             :           :                          :     :        +- *(17) Sort [ws_item_sk#1023 ASC NULLS FIRST, ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]             :           :                          :     :           +- Exchange hashpartitioning(ws_item_sk#1023, ws_order_number#1037L, 4), true, [id=#55657]
[info]             :           :                          :     :              +- *(16) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_order_number#1037L]
[info]             :           :                          :     :                 +- *(16) Filter ((isnotnull(ws_item_sk#1023) AND isnotnull(ws_order_number#1037L)) AND isnotnull(ws_web_site_sk#1033))
[info]             :           :                          :     :                    +- *(16) ColumnarToRow
[info]             :           :                          :     :                       +- BatchScan[ws_item_sk#1023, ws_web_site_sk#1033, ws_order_number#1037L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_order_number:bigint>
[info]             :           :                          :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#55582]
[info]             :           :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#55681]
[info]             :           :                             +- *(20) Project [web_site_sk#1366, web_site_id#1367]
[info]             :           :                                +- *(20) Filter isnotnull(web_site_sk#1366)
[info]             :           :                                   +- *(20) ColumnarToRow
[info]             :           :                                      +- BatchScan[web_site_sk#1366, web_site_id#1367] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_site], ReadSchema: struct<web_site_sk:int,web_site_id:string>
[info]             :           +- *(49) HashAggregate(keys=[channel#22468], functions=[sum(sales#22477), sum(returns#22478), sum(profit#22479)])
[info]             :              +- Exchange hashpartitioning(channel#22468, 4), true, [id=#56468]
[info]             :                 +- *(48) HashAggregate(keys=[channel#22468], functions=[partial_sum(sales#22477), partial_sum(returns#22478), partial_sum(profit#22479)])
[info]             :                    +- *(48) HashAggregate(keys=[channel#22468, id#22469], functions=[sum(sales#22432), sum(returns#22434), sum(profit#22470)])
[info]             :                       +- ReusedExchange [channel#22468, id#22469, sum#22712, sum#22713, sum#22714], Exchange hashpartitioning(channel#22468, id#22469, 4), true, [id=#56046]
[info]             +- *(76) HashAggregate(keys=[], functions=[sum(sales#22477), sum(returns#22478), sum(profit#22479)])
[info]                +- Exchange SinglePartition, true, [id=#56736]
[info]                   +- *(75) HashAggregate(keys=[], functions=[partial_sum(sales#22477), partial_sum(returns#22478), partial_sum(profit#22479)])
[info]                      +- *(75) HashAggregate(keys=[channel#22468, id#22469], functions=[sum(sales#22432), sum(returns#22434), sum(profit#22470)])
[info]                         +- ReusedExchange [channel#22468, id#22469, sum#22748, sum#22749, sum#22750], Exchange hashpartitioning(channel#22468, id#22469, 4), true, [id=#56046]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1483 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q5a-v2.7                                           1483           1483           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q6-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[cnt#22893L ASC NULLS FIRST,ca_state#241 ASC NULLS FIRST], output=[state#22892,cnt#22893L])
[info] +- *(13) Project [state#22892, cnt#22893L, ca_state#241]
[info]    +- *(13) Filter (count(1)#22899L >= 10)
[info]       +- *(13) HashAggregate(keys=[ca_state#241], functions=[count(1)])
[info]          +- Exchange hashpartitioning(ca_state#241, 4), true, [id=#57057]
[info]             +- *(12) HashAggregate(keys=[ca_state#241], functions=[partial_count(1)])
[info]                +- *(12) Project [ca_state#241]
[info]                   +- *(12) SortMergeJoin [ss_item_sk#1165], [i_item_sk#496], Inner
[info]                      :- *(8) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                      :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#57026]
[info]                      :     +- *(7) Project [ca_state#241, ss_item_sk#1165]
[info]                      :        +- *(7) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                      :           :- *(7) Project [ca_state#241, ss_item_sk#1165, ss_sold_date_sk#1186]
[info]                      :           :  +- *(7) SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner
[info]                      :           :     :- *(3) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                      :           :     :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#56999]
[info]                      :           :     :     +- *(2) Project [ca_state#241, c_customer_sk#156]
[info]                      :           :     :        +- *(2) BroadcastHashJoin [ca_address_sk#233], [c_current_addr_sk#160], Inner, BuildLeft
[info]                      :           :     :           :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#56990]
[info]                      :           :     :           :  +- *(1) Project [ca_address_sk#233, ca_state#241]
[info]                      :           :     :           :     +- *(1) Filter isnotnull(ca_address_sk#233)
[info]                      :           :     :           :        +- *(1) ColumnarToRow
[info]                      :           :     :           :           +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                      :           :     :           +- *(2) Project [c_customer_sk#156, c_current_addr_sk#160]
[info]                      :           :     :              +- *(2) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_customer_sk#156))
[info]                      :           :     :                 +- *(2) ColumnarToRow
[info]                      :           :     :                    +- BatchScan[c_customer_sk#156, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
[info]                      :           :     +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                      :           :        +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#57009]
[info]                      :           :           +- *(4) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                      :           :              +- *(4) Filter ((isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_item_sk#1165))
[info]                      :           :                 +- *(4) ColumnarToRow
[info]                      :           :                    +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int>
[info]                      :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57021]
[info]                      :              +- *(6) Project [d_date_sk#331]
[info]                      :                 +- *(6) Filter ((isnotnull(d_month_seq#334) AND isnotnull(d_date_sk#331)) AND (d_month_seq#334 = Subquery scalar-subquery#22890, [id=#56891]))
[info]                      :                    :  +- Subquery scalar-subquery#22890, [id=#56891]
[info]                      :                    :     +- *(1) HashAggregate(keys=[d_month_seq#334], functions=[])
[info]                      :                    :        +- *(1) HashAggregate(keys=[d_month_seq#334], functions=[])
[info]                      :                    :           +- *(1) Project [d_month_seq#334]
[info]                      :                    :              +- *(1) Filter (((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2000)) AND (d_moy#339 = 1))
[info]                      :                    :                 +- *(1) ColumnarToRow
[info]                      :                    :                    +- BatchScan[d_month_seq#334, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>
[info]                      :                    +- *(6) ColumnarToRow
[info]                      :                       +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                      +- *(11) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]                         +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#57048]
[info]                            +- *(10) Project [i_item_sk#496]
[info]                               +- *(10) Filter (cast(i_current_price#501 as decimal(14,7)) > CheckOverflow((1.200000 * promote_precision(avg(i_current_price)#22897)), DecimalType(14,7), true))
[info]                                  +- *(10) BroadcastHashJoin [i_category#508], [i_category#508#22903], LeftOuter, BuildRight
[info]                                     :- *(10) Project [i_item_sk#496, i_current_price#501, i_category#508]
[info]                                     :  +- *(10) Filter (isnotnull(i_current_price#501) AND isnotnull(i_item_sk#496))
[info]                                     :     +- *(10) ColumnarToRow
[info]                                     :        +- BatchScan[i_item_sk#496, i_current_price#501, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_category:string>
[info]                                     +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true])), [id=#57042]
[info]                                        +- *(9) HashAggregate(keys=[i_category#508], functions=[avg(UnscaledValue(i_current_price#501))])
[info]                                           +- *(9) HashAggregate(keys=[i_category#508], functions=[partial_avg(UnscaledValue(i_current_price#501))])
[info]                                              +- *(9) Project [i_current_price#501, i_category#508]
[info]                                                 +- *(9) Filter isnotnull(i_category#508)
[info]                                                    +- *(9) ColumnarToRow
[info]                                                       +- BatchScan[i_current_price#501, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_current_price:decimal(7,2),i_category:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 294 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q6-v2.7                                             295            295           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q10a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[cd_gender#291 ASC NULLS FIRST,cd_marital_status#292 ASC NULLS FIRST,cd_education_status#293 ASC NULLS FIRST,cd_purchase_estimate#294 ASC NULLS FIRST,cd_credit_rating#295 ASC NULLS FIRST,cd_dep_count#296 ASC NULLS FIRST,cd_dep_employed_count#297 ASC NULLS FIRST,cd_dep_college_count#298 ASC NULLS FIRST], output=[cd_gender#291,cd_marital_status#292,cd_education_status#293,cnt1#22965L,cd_purchase_estimate#294,cnt2#22966L,cd_credit_rating#295,cnt3#22967L,cd_dep_count#296,cnt4#22968L,cd_dep_employed_count#297,cnt5#22969L,cd_dep_college_count#298,cnt6#22970L])
[info] +- *(14) HashAggregate(keys=[cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[count(1)])
[info]    +- Exchange hashpartitioning(cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298, 4), true, [id=#57425]
[info]       +- *(13) HashAggregate(keys=[cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[partial_count(1)])
[info]          +- *(13) Project [cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]             +- *(13) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]                :- *(13) Project [c_current_cdemo_sk#158]
[info]                :  +- *(13) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                :     :- *(13) Project [c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :  +- SortMergeJoin [c_customer_sk#156], [customer_sk#22962], LeftSemi
[info]                :     :     :- SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], LeftSemi
[info]                :     :     :  :- *(2) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                :     :     :  :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#57298]
[info]                :     :     :  :     +- *(1) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :     :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_current_cdemo_sk#158))
[info]                :     :     :  :           +- *(1) ColumnarToRow
[info]                :     :     :  :              +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
[info]                :     :     :  +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                :     :     :     +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#57316]
[info]                :     :     :        +- *(4) Project [ss_customer_sk#1166]
[info]                :     :     :           +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :              :- *(4) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                :     :     :              :  +- *(4) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :     :     :              :     +- *(4) ColumnarToRow
[info]                :     :     :              :        +- BatchScan[ss_sold_time_sk#1164, ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_sales_price#1176, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_ext_tax#1181, ss_coupon_amt#1182, ss_net_paid#1183, ss_net_paid_inc_tax#1184, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_a...
[info]                :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57311]
[info]                :     :     :                 +- *(3) Project [d_date_sk#331]
[info]                :     :     :                    +- *(3) Filter (((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2002)) AND (d_moy#339 >= 4)) AND (d_moy#339 <= 7)) AND isnotnull(d_date_sk#331))
[info]                :     :     :                       +- *(3) ColumnarToRow
[info]                :     :     :                          +- BatchScan[d_date_sk#331, d_date_id#332, d_date#333, d_month_seq#334, d_week_seq#335, d_quarter_seq#336, d_year#337, d_dow#338, d_moy#339, d_dom#340, d_qoy#341, d_fy_year#342, d_fy_quarter_seq#343, d_fy_week_seq#344, d_day_name#345, d_quarter_name#346, d_holiday#347, d_weekend#348, d_following_holiday#349, d_first_dom#350, d_last_dom#351, d_same_day_ly#352, d_same_day_lq#353, d_current_day#354, ... 4 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:in...
[info]                :     :     +- *(10) Sort [customer_sk#22962 ASC NULLS FIRST], false, 0
[info]                :     :        +- Exchange hashpartitioning(customer_sk#22962, 4), true, [id=#57412]
[info]                :     :           +- Union
[info]                :     :              :- *(7) Project [ws_bill_customer_sk#1024 AS customer_sk#22962]
[info]                :     :              :  +- *(7) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :              :     :- *(7) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                :     :              :     :  +- *(7) Filter isnotnull(ws_sold_date_sk#1054)
[info]                :     :              :     :     +- *(7) ColumnarToRow
[info]                :     :              :     :        +- BatchScan[ws_bill_customer_sk#1024, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int>
[info]                :     :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57330]
[info]                :     :              :        +- *(6) Project [d_date_sk#331]
[info]                :     :              :           +- *(6) Filter (((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2002)) AND (d_moy#339 >= 4)) AND (d_moy#339 <= 7)) AND isnotnull(d_date_sk#331))
[info]                :     :              :              +- *(6) ColumnarToRow
[info]                :     :              :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]                :     :              +- *(9) Project [cs_ship_customer_sk#884 AS customer_sk#22977]
[info]                :     :                 +- *(9) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :                    :- *(9) Project [cs_ship_customer_sk#884, cs_sold_date_sk#911]
[info]                :     :                    :  +- *(9) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :                    :     +- *(9) ColumnarToRow
[info]                :     :                    :        +- BatchScan[cs_ship_customer_sk#884, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ship_customer_sk:int>
[info]                :     :                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57330]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57362]
[info]                :        +- *(11) Project [ca_address_sk#233]
[info]                :           +- *(11) Filter (ca_county#240 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#233))
[info]                :              +- *(11) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_county#240] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_county:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57371]
[info]                   +- *(12) Project [cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]                      +- *(12) Filter isnotnull(cd_demo_sk#290)
[info]                         +- *(12) ColumnarToRow
[info]                            +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293, cd_purchase_estimate#294, cd_credit_rating#295, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_pur...
[info] 
[info] 
[info]   Stopped after 1 iterations, 345 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q10a-v2.7                                           345            345           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q11-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[customer_id#23104 ASC NULLS FIRST,customer_first_name#23105 ASC NULLS FIRST,customer_last_name#23106 ASC NULLS FIRST,customer_email_address#23110 ASC NULLS FIRST], output=[customer_id#23104,customer_first_name#23105,customer_last_name#23106,customer_email_address#23110])
[info] +- *(23) Project [customer_id#23104, customer_first_name#23105, customer_last_name#23106, customer_email_address#23110]
[info]    +- *(23) SortMergeJoin [customer_id#23076], [customer_id#23124], Inner, (CASE WHEN (year_total#23122 > 0.00) THEN CheckOverflow((promote_precision(year_total#23132) / promote_precision(year_total#23122)), DecimalType(38,20), true) ELSE 0E-20 END > CASE WHEN (year_total#23084 > 0.00) THEN CheckOverflow((promote_precision(year_total#23112) / promote_precision(year_total#23084)), DecimalType(38,20), true) ELSE 0E-20 END)
[info]       :- *(17) Project [customer_id#23076, year_total#23084, customer_id#23104, customer_first_name#23105, customer_last_name#23106, customer_email_address#23110, year_total#23112, year_total#23122]
[info]       :  +- *(17) SortMergeJoin [customer_id#23076], [customer_id#23114], Inner
[info]       :     :- *(11) SortMergeJoin [customer_id#23076], [customer_id#23104], Inner
[info]       :     :  :- *(5) Sort [customer_id#23076 ASC NULLS FIRST], false, 0
[info]       :     :  :  +- Exchange hashpartitioning(customer_id#23076, 4), true, [id=#57872]
[info]       :     :  :     +- Union
[info]       :     :  :        :- *(4) Filter (isnotnull(year_total#23084) AND (year_total#23084 > 0.00))
[info]       :     :  :        :  +- *(4) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :  :        :     +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, 4), true, [id=#57866]
[info]       :     :  :        :        +- *(3) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :  :        :           +- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, d_year#337]
[info]       :     :  :        :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :  :        :                 :- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :  :        :                 :  +- *(3) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :  :        :                 :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57847]
[info]       :     :  :        :                 :     :  +- *(1) Project [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172]
[info]       :     :  :        :                 :     :     +- *(1) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_customer_id#157))
[info]       :     :  :        :                 :     :        +- *(1) ColumnarToRow
[info]       :     :  :        :                 :     :           +- BatchScan[c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
[info]       :     :  :        :                 :     +- *(3) Project [ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :  :        :                 :        +- *(3) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :  :        :                 :           +- *(3) ColumnarToRow
[info]       :     :  :        :                 :              +- BatchScan[ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:decimal(7,2)>
[info]       :     :  :        :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57860]
[info]       :     :  :        :                    +- *(2) Project [d_date_sk#331, d_year#337]
[info]       :     :  :        :                       +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]       :     :  :        :                          +- *(2) ColumnarToRow
[info]       :     :  :        :                             +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :  :        +- LocalTableScan <empty>, [customer_id#23086, year_total#23094]
[info]       :     :  +- *(10) Sort [customer_id#23104 ASC NULLS FIRST], false, 0
[info]       :     :     +- Exchange hashpartitioning(customer_id#23104, 4), true, [id=#58078]
[info]       :     :        +- Union
[info]       :     :           :- *(9) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :           :  +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, 4), true, [id=#58031]
[info]       :     :           :     +- *(8) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#1180 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#1177 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :     :           :        +- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, d_year#337]
[info]       :     :           :           +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :           :              :- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :           :              :  +- *(8) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :           :              :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57847]
[info]       :     :           :              :     +- *(8) Project [ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186]
[info]       :     :           :              :        +- *(8) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :           :              :           +- *(8) ColumnarToRow
[info]       :     :           :              :              +- BatchScan[ss_customer_sk#1166, ss_ext_discount_amt#1177, ss_ext_list_price#1180, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:decimal(7,2)>
[info]       :     :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57895]
[info]       :     :           :                 +- *(7) Project [d_date_sk#331, d_year#337]
[info]       :     :           :                    +- *(7) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND isnotnull(d_date_sk#331))
[info]       :     :           :                       +- *(7) ColumnarToRow
[info]       :     :           :                          +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :           +- LocalTableScan <empty>, [customer_id#23086, customer_first_name#23087, customer_last_name#23088, customer_email_address#23092, year_total#23094]
[info]       :     +- *(16) Sort [customer_id#23114 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(customer_id#23114, 4), true, [id=#58118]
[info]       :           +- Union
[info]       :              :- LocalTableScan <empty>, [customer_id#23114, year_total#23122]
[info]       :              +- *(15) Filter (isnotnull(year_total#23094) AND (year_total#23094 > 0.00))
[info]       :                 +- *(15) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :                    +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#58112]
[info]       :                       +- *(14) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]       :                          +- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, d_year#337]
[info]       :                             +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                                :- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]       :                                :  +- *(14) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]       :                                :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57847]
[info]       :                                :     +- *(14) Project [ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]       :                                :        +- *(14) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]       :                                :           +- *(14) ColumnarToRow
[info]       :                                :              +- BatchScan[ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_price:decimal(7,2)>
[info]       :                                +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57860]
[info]       +- *(22) Sort [customer_id#23124 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(customer_id#23124, 4), true, [id=#58220]
[info]             +- Union
[info]                :- LocalTableScan <empty>, [customer_id#23124, year_total#23132]
[info]                +- *(21) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]                   +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337, 4), true, [id=#58194]
[info]                      +- *(20) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, d_year#337], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#1045 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#1042 as decimal(8,2)))), DecimalType(8,2), true)))])
[info]                         +- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, d_year#337]
[info]                            +- *(20) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]                               :  +- *(20) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]                               :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166, c_birth_country#170, c_login#171, c_email_address#172], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57847]
[info]                               :     +- *(20) Project [ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054]
[info]                               :        +- *(20) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]                               :           +- *(20) ColumnarToRow
[info]                               :              +- BatchScan[ws_bill_customer_sk#1024, ws_ext_discount_amt#1042, ws_ext_list_price#1045, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_price:decimal(7,2)>
[info]                               +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#57895]
[info] 
[info] 
[info]   Stopped after 1 iterations, 693 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q11-v2.7                                            694            694           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q12-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_category#508 ASC NULLS FIRST,i_class#506 ASC NULLS FIRST,i_item_id#497 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST,revenueratio#23254 ASC NULLS FIRST], output=[i_item_id#497,i_item_desc#500,i_category#508,i_class#506,i_current_price#501,itemrevenue#23253,revenueratio#23254])
[info] +- *(6) Project [i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, itemrevenue#23253, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#23259) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#23261)), DecimalType(38,17), true) AS revenueratio#23254]
[info]    +- Window [sum(_w1#23260) windowspecdefinition(i_class#506, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#23261], [i_class#506]
[info]       +- *(5) Sort [i_class#506 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_class#506, 4), true, [id=#58362]
[info]             +- *(4) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, 4), true, [id=#58358]
[info]                   +- *(3) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043))])
[info]                      +- *(3) Project [ws_ext_sales_price#1043, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                         +- *(3) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                            :- *(3) Project [ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :  +- *(3) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                            :     :- *(3) Project [ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                            :     :  +- *(3) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                            :     :     +- *(3) ColumnarToRow
[info]                            :     :        +- BatchScan[ws_item_sk#1023, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
[info]                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#58343]
[info]                            :        +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :           +- *(1) Filter (i_category#508 IN (Sports,Books,Home) AND isnotnull(i_item_sk#496))
[info]                            :              +- *(1) ColumnarToRow
[info]                            :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#58352]
[info]                               +- *(2) Project [d_date_sk#331]
[info]                                  +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10644)) AND (d_date#333 <= 10674)) AND isnotnull(d_date_sk#331))
[info]                                     +- *(2) ColumnarToRow
[info]                                        +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 131 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q12-v2.7                                            132            132           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q14-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#23358 ASC NULLS FIRST,i_brand_id#503 ASC NULLS FIRST,i_class_id#505 ASC NULLS FIRST,i_category_id#507 ASC NULLS FIRST], output=[channel#23358,i_brand_id#503,i_class_id#505,i_category_id#507,sales#23359,number_sales#23360L,channel#23364,i_brand_id#23398,i_class_id#23400,i_category_id#23402,sales#23365,number_sales#23366L])
[info] +- *(79) SortMergeJoin [i_brand_id#503, i_class_id#505, i_category_id#507], [i_brand_id#23398, i_class_id#23400, i_category_id#23402], Inner
[info]    :- *(39) Sort [i_brand_id#503 ASC NULLS FIRST, i_class_id#505 ASC NULLS FIRST, i_category_id#507 ASC NULLS FIRST], false, 0
[info]    :  +- *(39) Project [channel#23358, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23359, number_sales#23360L]
[info]    :     +- *(39) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#23387) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#23387 as decimal(32,6)) > cast(Subquery scalar-subquery#23361, [id=#59354] as decimal(32,6))))
[info]    :        :  +- Subquery scalar-subquery#23361, [id=#59354]
[info]    :        :     +- *(8) HashAggregate(keys=[], functions=[avg(CheckOverflow((promote_precision(cast(cast(quantity#23372 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#23373 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :        :        +- Exchange SinglePartition, true, [id=#59350]
[info]    :        :           +- *(7) HashAggregate(keys=[], functions=[partial_avg(CheckOverflow((promote_precision(cast(cast(quantity#23372 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#23373 as decimal(12,2)))), DecimalType(18,2), true))])
[info]    :        :              +- Union
[info]    :        :                 :- *(2) Project [ss_quantity#1173 AS quantity#23372, ss_list_price#1175 AS list_price#23373]
[info]    :        :                 :  +- *(2) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :        :                 :     :- *(2) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]    :        :                 :     :  +- *(2) Filter isnotnull(ss_sold_date_sk#1186)
[info]    :        :                 :     :     +- *(2) ColumnarToRow
[info]    :        :                 :     :        +- BatchScan[ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>
[info]    :        :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#59271]
[info]    :        :                 :        +- *(1) Project [d_date_sk#331]
[info]    :        :                 :           +- *(1) Filter (((isnotnull(d_year#337) AND (d_year#337 >= 1998)) AND (d_year#337 <= 2000)) AND isnotnull(d_date_sk#331))
[info]    :        :                 :              +- *(1) ColumnarToRow
[info]    :        :                 :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]    :        :                 :- *(4) Project [cs_quantity#895 AS quantity#23374, cs_list_price#897 AS list_price#23375]
[info]    :        :                 :  +- *(4) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :        :                 :     :- *(4) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]    :        :                 :     :  +- *(4) Filter isnotnull(cs_sold_date_sk#911)
[info]    :        :                 :     :     +- *(4) ColumnarToRow
[info]    :        :                 :     :        +- BatchScan[cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>
[info]    :        :                 :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#59271]
[info]    :        :                 +- *(6) Project [ws_quantity#1038 AS quantity#23376, ws_list_price#1040 AS list_price#23377]
[info]    :        :                    +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]    :        :                       :- *(6) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]    :        :                       :  +- *(6) Filter isnotnull(ws_sold_date_sk#1054)
[info]    :        :                       :     +- *(6) ColumnarToRow
[info]    :        :                       :        +- BatchScan[ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>
[info]    :        :                       +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#59271]
[info]    :        +- *(39) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]    :           +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#61133]
[info]    :              +- *(38) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]    :                 +- *(38) Project [ss_quantity#1173, ss_list_price#1175, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                    +- *(38) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :                       :- *(38) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :  +- *(38) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :- SortMergeJoin [ss_item_sk#1165], [ss_item_sk#23371], LeftSemi
[info]    :                       :     :  :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]    :                       :     :  :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#60186]
[info]    :                       :     :  :     +- *(1) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]    :                       :     :  :        +- *(1) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]    :                       :     :  :           +- *(1) ColumnarToRow
[info]    :                       :     :  :              +- BatchScan[ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>
[info]    :                       :     :  +- *(18) Sort [ss_item_sk#23371 ASC NULLS FIRST], false, 0
[info]    :                       :     :     +- Exchange hashpartitioning(ss_item_sk#23371, 4), true, [id=#60862]
[info]    :                       :     :        +- *(17) Project [i_item_sk#496 AS ss_item_sk#23371]
[info]    :                       :     :           +- *(17) BroadcastHashJoin [i_brand_id#503, i_class_id#505, i_category_id#507], [brand_id#23368, class_id#23369, category_id#23370], Inner, BuildLeft
[info]    :                       :     :              :- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, true], input[2, int, true], input[3, int, true])), [id=#60195]
[info]    :                       :     :              :  +- *(3) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :              :     +- *(3) Filter ((isnotnull(i_category_id#507) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505))
[info]    :                       :     :              :        +- *(3) ColumnarToRow
[info]    :                       :     :              :           +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :     :              +- *(17) HashAggregate(keys=[brand_id#23368, class_id#23369, category_id#23370], functions=[])
[info]    :                       :     :                 +- *(17) HashAggregate(keys=[brand_id#23368, class_id#23369, category_id#23370], functions=[])
[info]    :                       :     :                    +- *(17) HashAggregate(keys=[brand_id#23368, class_id#23369, category_id#23370], functions=[])
[info]    :                       :     :                       +- Exchange hashpartitioning(brand_id#23368, class_id#23369, category_id#23370, 4), true, [id=#60813]
[info]    :                       :     :                          +- *(16) HashAggregate(keys=[brand_id#23368, class_id#23369, category_id#23370], functions=[])
[info]    :                       :     :                             +- SortMergeJoin [coalesce(brand_id#23368, 0), isnull(brand_id#23368), coalesce(class_id#23369, 0), isnull(class_id#23369), coalesce(category_id#23370, 0), isnull(category_id#23370)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]    :                       :     :                                :- SortMergeJoin [coalesce(brand_id#23368, 0), isnull(brand_id#23368), coalesce(class_id#23369, 0), isnull(class_id#23369), coalesce(category_id#23370, 0), isnull(category_id#23370)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]    :                       :     :                                :  :- *(7) Sort [coalesce(brand_id#23368, 0) ASC NULLS FIRST, isnull(brand_id#23368) ASC NULLS FIRST, coalesce(class_id#23369, 0) ASC NULLS FIRST, isnull(class_id#23369) ASC NULLS FIRST, coalesce(category_id#23370, 0) ASC NULLS FIRST, isnull(category_id#23370) ASC NULLS FIRST], false, 0
[info]    :                       :     :                                :  :  +- Exchange hashpartitioning(coalesce(brand_id#23368, 0), isnull(brand_id#23368), coalesce(class_id#23369, 0), isnull(class_id#23369), coalesce(category_id#23370, 0), isnull(category_id#23370), 4), true, [id=#60220]
[info]    :                       :     :                                :  :     +- *(6) Project [i_brand_id#503 AS brand_id#23368, i_class_id#505 AS class_id#23369, i_category_id#507 AS category_id#23370]
[info]    :                       :     :                                :  :        +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :                       :     :                                :  :           :- *(6) Project [ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :  :           :  +- *(6) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :                                :  :           :     :- *(6) Project [ss_item_sk#1165, ss_sold_date_sk#1186]
[info]    :                       :     :                                :  :           :     :  +- *(6) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]    :                       :     :                                :  :           :     :     +- *(6) ColumnarToRow
[info]    :                       :     :                                :  :           :     :        +- BatchScan[ss_item_sk#1165, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int>
[info]    :                       :     :                                :  :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60206]
[info]    :                       :     :                                :  :           :        +- *(4) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :  :           :           +- *(4) Filter (((isnotnull(i_item_sk#496) AND isnotnull(i_class_id#505)) AND isnotnull(i_category_id#507)) AND isnotnull(i_brand_id#503))
[info]    :                       :     :                                :  :           :              +- *(4) ColumnarToRow
[info]    :                       :     :                                :  :           :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :     :                                :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60215]
[info]    :                       :     :                                :  :              +- *(5) Project [d_date_sk#331]
[info]    :                       :     :                                :  :                 +- *(5) Filter (((isnotnull(d_year#337) AND (d_year#337 >= 1998)) AND (d_year#337 <= 2000)) AND isnotnull(d_date_sk#331))
[info]    :                       :     :                                :  :                    +- *(5) ColumnarToRow
[info]    :                       :     :                                :  :                       +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]    :                       :     :                                :  +- *(11) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]    :                       :     :                                :     +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#60737]
[info]    :                       :     :                                :        +- *(10) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :           +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :                       :     :                                :              :- *(10) Project [cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :              :  +- *(10) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :                                :              :     :- *(10) Project [cs_item_sk#892, cs_sold_date_sk#911]
[info]    :                       :     :                                :              :     :  +- *(10) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]    :                       :     :                                :              :     :     +- *(10) ColumnarToRow
[info]    :                       :     :                                :              :     :        +- BatchScan[cs_item_sk#892, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int>
[info]    :                       :     :                                :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60233]
[info]    :                       :     :                                :              :        +- *(8) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                :              :           +- *(8) Filter isnotnull(i_item_sk#496)
[info]    :                       :     :                                :              :              +- *(8) ColumnarToRow
[info]    :                       :     :                                :              :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :     :                                :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60215]
[info]    :                       :     :                                +- *(15) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]    :                       :     :                                   +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#60767]
[info]    :                       :     :                                      +- *(14) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                         +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]    :                       :     :                                            :- *(14) Project [ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :     :                                            :  +- *(14) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]    :                       :     :                                            :     :- *(14) Project [ws_item_sk#1023, ws_sold_date_sk#1054]
[info]    :                       :     :                                            :     :  +- *(14) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]    :                       :     :                                            :     :     +- *(14) ColumnarToRow
[info]    :                       :     :                                            :     :        +- BatchScan[ws_item_sk#1023, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int>
[info]    :                       :     :                                            :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60233]
[info]    :                       :     :                                            +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60215]
[info]    :                       :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#61106]
[info]    :                       :        +- SortMergeJoin [i_item_sk#496], [ss_item_sk#23371], LeftSemi
[info]    :                       :           :- *(20) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]    :                       :           :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#60302]
[info]    :                       :           :     +- *(19) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]    :                       :           :        +- *(19) Filter (((isnotnull(i_item_sk#496) AND isnotnull(i_brand_id#503)) AND isnotnull(i_category_id#507)) AND isnotnull(i_class_id#505))
[info]    :                       :           :           +- *(19) ColumnarToRow
[info]    :                       :           :              +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]    :                       :           +- *(36) Sort [ss_item_sk#23371 ASC NULLS FIRST], false, 0
[info]    :                       :              +- ReusedExchange [ss_item_sk#23371], Exchange hashpartitioning(ss_item_sk#23371, 4), true, [id=#60862]
[info]    :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60421]
[info]    :                          +- *(37) Project [d_date_sk#331]
[info]    :                             +- *(37) Filter ((isnotnull(d_week_seq#335) AND isnotnull(d_date_sk#331)) AND (d_week_seq#335 = Subquery scalar-subquery#23357, [id=#59371]))
[info]    :                                :  +- Subquery scalar-subquery#23357, [id=#59371]
[info]    :                                :     +- *(1) Project [d_week_seq#335]
[info]    :                                :        +- *(1) Filter (((((isnotnull(d_dom#340) AND isnotnull(d_year#337)) AND isnotnull(d_moy#339)) AND (d_year#337 = 1999)) AND (d_moy#339 = 12)) AND (d_dom#340 = 16))
[info]    :                                :           +- *(1) ColumnarToRow
[info]    :                                :              +- BatchScan[d_week_seq#335, d_year#337, d_moy#339, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>
[info]    :                                +- *(37) ColumnarToRow
[info]    :                                   +- BatchScan[d_date_sk#331, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
[info]    +- *(78) Sort [i_brand_id#23398 ASC NULLS FIRST, i_class_id#23400 ASC NULLS FIRST, i_category_id#23402 ASC NULLS FIRST], false, 0
[info]       +- *(78) Project [channel#23364, i_brand_id#23398, i_class_id#23400, i_category_id#23402, sales#23365, number_sales#23366L]
[info]          +- *(78) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#23390) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#23390 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23361, [id=#59354] as decimal(32,6))))
[info]             :  +- ReusedSubquery Subquery scalar-subquery#23361, [id=#59354]
[info]             +- *(78) HashAggregate(keys=[i_brand_id#23398, i_class_id#23400, i_category_id#23402], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]                +- Exchange hashpartitioning(i_brand_id#23398, i_class_id#23400, i_category_id#23402, 4), true, [id=#61633]
[info]                   +- *(77) HashAggregate(keys=[i_brand_id#23398, i_class_id#23400, i_category_id#23402], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]                      +- *(77) Project [ss_quantity#1173, ss_list_price#1175, i_brand_id#23398, i_class_id#23400, i_category_id#23402]
[info]                         +- *(77) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                            :- *(77) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186, i_brand_id#23398, i_class_id#23400, i_category_id#23402]
[info]                            :  +- *(77) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#23391], Inner, BuildRight
[info]                            :     :- SortMergeJoin [ss_item_sk#1165], [ss_item_sk#23371], LeftSemi
[info]                            :     :  :- *(41) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                            :     :  :  +- ReusedExchange [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186], Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#60186]
[info]                            :     :  +- *(57) Sort [ss_item_sk#23371 ASC NULLS FIRST], false, 0
[info]                            :     :     +- ReusedExchange [ss_item_sk#23371], Exchange hashpartitioning(ss_item_sk#23371, 4), true, [id=#60862]
[info]                            :     +- ReusedExchange [i_item_sk#23391, i_brand_id#23398, i_class_id#23400, i_category_id#23402], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#61106]
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#60675]
[info]                               +- *(76) Project [d_date_sk#331]
[info]                                  +- *(76) Filter ((isnotnull(d_week_seq#335) AND isnotnull(d_date_sk#331)) AND (d_week_seq#335 = Subquery scalar-subquery#23363, [id=#59616]))
[info]                                     :  +- Subquery scalar-subquery#23363, [id=#59616]
[info]                                     :     +- *(1) Project [d_week_seq#335]
[info]                                     :        +- *(1) Filter (((((isnotnull(d_dom#340) AND isnotnull(d_year#337)) AND isnotnull(d_moy#339)) AND (d_year#337 = 1998)) AND (d_moy#339 = 12)) AND (d_dom#340 = 16))
[info]                                     :           +- *(1) ColumnarToRow
[info]                                     :              +- BatchScan[d_week_seq#335, d_year#337, d_moy#339, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>
[info]                                     +- *(76) ColumnarToRow
[info]                                        +- BatchScan[d_date_sk#331, d_week_seq#335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 1607 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q14-v2.7                                           1607           1607           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q14a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#23919 ASC NULLS FIRST,i_brand_id#503 ASC NULLS FIRST,i_class_id#505 ASC NULLS FIRST,i_category_id#507 ASC NULLS FIRST], output=[channel#23919,i_brand_id#503,i_class_id#505,i_category_id#507,sum_sales#23933,number_sales#23934L])
[info] +- *(607) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23933, number_sales#23934L], functions=[])
[info]    +- Exchange hashpartitioning(channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23933, number_sales#23934L, 4), true, [id=#87874]
[info]       +- *(606) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23933, number_sales#23934L], functions=[])
[info]          +- Union
[info]             :- *(485) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23933, number_sales#23934L], functions=[])
[info]             :  +- Exchange hashpartitioning(channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23933, number_sales#23934L, 4), true, [id=#87700]
[info]             :     +- *(484) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23933, number_sales#23934L], functions=[])
[info]             :        +- Union
[info]             :           :- *(363) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23933, number_sales#23934L], functions=[])
[info]             :           :  +- Exchange hashpartitioning(channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23933, number_sales#23934L, 4), true, [id=#87526]
[info]             :           :     +- *(362) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23933, number_sales#23934L], functions=[])
[info]             :           :        +- Union
[info]             :           :           :- *(241) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23933, number_sales#23934L], functions=[])
[info]             :           :           :  +- Exchange hashpartitioning(channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23933, number_sales#23934L, 4), true, [id=#87352]
[info]             :           :           :     +- *(240) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sum_sales#23933, number_sales#23934L], functions=[])
[info]             :           :           :        +- Union
[info]             :           :           :           :- *(119) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(sales#23920), sum(number_sales#23921L)])
[info]             :           :           :           :  +- Exchange hashpartitioning(channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#87178]
[info]             :           :           :           :     +- *(118) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(sales#23920), partial_sum(number_sales#23921L)])
[info]             :           :           :           :        +- Union
[info]             :           :           :           :           :- *(39) Project [channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23920, number_sales#23921L]
[info]             :           :           :           :           :  +- *(39) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#23982) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#23982 as decimal(32,6)) > cast(Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]             :           :           :           :           :     :  +- Subquery scalar-subquery#23922, [id=#67843]
[info]             :           :           :           :           :     :     +- *(8) HashAggregate(keys=[], functions=[avg(CheckOverflow((promote_precision(cast(cast(quantity#23911 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#23912 as decimal(12,2)))), DecimalType(18,2), true))])
[info]             :           :           :           :           :     :        +- Exchange SinglePartition, true, [id=#67839]
[info]             :           :           :           :           :     :           +- *(7) HashAggregate(keys=[], functions=[partial_avg(CheckOverflow((promote_precision(cast(cast(quantity#23911 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(list_price#23912 as decimal(12,2)))), DecimalType(18,2), true))])
[info]             :           :           :           :           :     :              +- Union
[info]             :           :           :           :           :     :                 :- *(2) Project [ss_quantity#1173 AS quantity#23911, ss_list_price#1175 AS list_price#23912]
[info]             :           :           :           :           :     :                 :  +- *(2) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :     :                 :     :- *(2) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]             :           :           :           :           :     :                 :     :  +- *(2) Filter isnotnull(ss_sold_date_sk#1186)
[info]             :           :           :           :           :     :                 :     :     +- *(2) ColumnarToRow
[info]             :           :           :           :           :     :                 :     :        +- BatchScan[ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>
[info]             :           :           :           :           :     :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#67765]
[info]             :           :           :           :           :     :                 :        +- *(1) Project [d_date_sk#331]
[info]             :           :           :           :           :     :                 :           +- *(1) Filter (((isnotnull(d_year#337) AND (d_year#337 >= 1999)) AND (d_year#337 <= 2001)) AND isnotnull(d_date_sk#331))
[info]             :           :           :           :           :     :                 :              +- *(1) ColumnarToRow
[info]             :           :           :           :           :     :                 :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]             :           :           :           :           :     :                 :- *(4) Project [cs_quantity#895 AS quantity#23913, cs_list_price#897 AS list_price#23914]
[info]             :           :           :           :           :     :                 :  +- *(4) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :     :                 :     :- *(4) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]             :           :           :           :           :     :                 :     :  +- *(4) Filter isnotnull(cs_sold_date_sk#911)
[info]             :           :           :           :           :     :                 :     :     +- *(4) ColumnarToRow
[info]             :           :           :           :           :     :                 :     :        +- BatchScan[cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>
[info]             :           :           :           :           :     :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#67779]
[info]             :           :           :           :           :     :                 :        +- *(3) Project [d_date_sk#331]
[info]             :           :           :           :           :     :                 :           +- *(3) Filter (((isnotnull(d_year#337) AND (d_year#337 >= 1998)) AND (d_year#337 <= 2000)) AND isnotnull(d_date_sk#331))
[info]             :           :           :           :           :     :                 :              +- *(3) ColumnarToRow
[info]             :           :           :           :           :     :                 :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]             :           :           :           :           :     :                 +- *(6) Project [ws_quantity#1038 AS quantity#23915, ws_list_price#1040 AS list_price#23916]
[info]             :           :           :           :           :     :                    +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :     :                       :- *(6) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]             :           :           :           :           :     :                       :  +- *(6) Filter isnotnull(ws_sold_date_sk#1054)
[info]             :           :           :           :           :     :                       :     +- *(6) ColumnarToRow
[info]             :           :           :           :           :     :                       :        +- BatchScan[ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>
[info]             :           :           :           :           :     :                       +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#67779]
[info]             :           :           :           :           :     +- *(39) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :           :           :           :           :        +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#79425]
[info]             :           :           :           :           :           +- *(38) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]             :           :           :           :           :              +- *(38) Project [ss_quantity#1173, ss_list_price#1175, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                 +- *(38) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :                    :- *(38) Project [ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :  +- *(38) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :           :           :                    :     :- SortMergeJoin [ss_item_sk#1165], [ss_item_sk#23910], LeftSemi
[info]             :           :           :           :           :                    :     :  :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :     :  :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#75116]
[info]             :           :           :           :           :                    :     :  :     +- *(1) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186]
[info]             :           :           :           :           :                    :     :  :        +- *(1) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]             :           :           :           :           :                    :     :  :           +- *(1) ColumnarToRow
[info]             :           :           :           :           :                    :     :  :              +- BatchScan[ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>
[info]             :           :           :           :           :                    :     :  +- *(18) Sort [ss_item_sk#23910 ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :     :     +- Exchange hashpartitioning(ss_item_sk#23910, 4), true, [id=#79154]
[info]             :           :           :           :           :                    :     :        +- *(17) Project [i_item_sk#496 AS ss_item_sk#23910]
[info]             :           :           :           :           :                    :     :           +- *(17) BroadcastHashJoin [i_brand_id#503, i_class_id#505, i_category_id#507], [brand_id#23907, class_id#23908, category_id#23909], Inner, BuildLeft
[info]             :           :           :           :           :                    :     :              :- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, true], input[2, int, true], input[3, int, true])), [id=#75125]
[info]             :           :           :           :           :                    :     :              :  +- *(3) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :              :     +- *(3) Filter ((isnotnull(i_category_id#507) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505))
[info]             :           :           :           :           :                    :     :              :        +- *(3) ColumnarToRow
[info]             :           :           :           :           :                    :     :              :           +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]             :           :           :           :           :                    :     :              +- *(17) HashAggregate(keys=[brand_id#23907, class_id#23908, category_id#23909], functions=[])
[info]             :           :           :           :           :                    :     :                 +- *(17) HashAggregate(keys=[brand_id#23907, class_id#23908, category_id#23909], functions=[])
[info]             :           :           :           :           :                    :     :                    +- *(17) HashAggregate(keys=[brand_id#23907, class_id#23908, category_id#23909], functions=[])
[info]             :           :           :           :           :                    :     :                       +- Exchange hashpartitioning(brand_id#23907, class_id#23908, category_id#23909, 4), true, [id=#79105]
[info]             :           :           :           :           :                    :     :                          +- *(16) HashAggregate(keys=[brand_id#23907, class_id#23908, category_id#23909], functions=[])
[info]             :           :           :           :           :                    :     :                             +- SortMergeJoin [coalesce(brand_id#23907, 0), isnull(brand_id#23907), coalesce(class_id#23908, 0), isnull(class_id#23908), coalesce(category_id#23909, 0), isnull(category_id#23909)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]             :           :           :           :           :                    :     :                                :- SortMergeJoin [coalesce(brand_id#23907, 0), isnull(brand_id#23907), coalesce(class_id#23908, 0), isnull(class_id#23908), coalesce(category_id#23909, 0), isnull(category_id#23909)], [coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507)], LeftSemi
[info]             :           :           :           :           :                    :     :                                :  :- *(7) Sort [coalesce(brand_id#23907, 0) ASC NULLS FIRST, isnull(brand_id#23907) ASC NULLS FIRST, coalesce(class_id#23908, 0) ASC NULLS FIRST, isnull(class_id#23908) ASC NULLS FIRST, coalesce(category_id#23909, 0) ASC NULLS FIRST, isnull(category_id#23909) ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :     :                                :  :  +- Exchange hashpartitioning(coalesce(brand_id#23907, 0), isnull(brand_id#23907), coalesce(class_id#23908, 0), isnull(class_id#23908), coalesce(category_id#23909, 0), isnull(category_id#23909), 4), true, [id=#75150]
[info]             :           :           :           :           :                    :     :                                :  :     +- *(6) Project [i_brand_id#503 AS brand_id#23907, i_class_id#505 AS class_id#23908, i_category_id#507 AS category_id#23909]
[info]             :           :           :           :           :                    :     :                                :  :        +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :                    :     :                                :  :           :- *(6) Project [ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :                                :  :           :  +- *(6) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :           :           :                    :     :                                :  :           :     :- *(6) Project [ss_item_sk#1165, ss_sold_date_sk#1186]
[info]             :           :           :           :           :                    :     :                                :  :           :     :  +- *(6) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]             :           :           :           :           :                    :     :                                :  :           :     :     +- *(6) ColumnarToRow
[info]             :           :           :           :           :                    :     :                                :  :           :     :        +- BatchScan[ss_item_sk#1165, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int>
[info]             :           :           :           :           :                    :     :                                :  :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75136]
[info]             :           :           :           :           :                    :     :                                :  :           :        +- *(4) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :                                :  :           :           +- *(4) Filter (((isnotnull(i_item_sk#496) AND isnotnull(i_class_id#505)) AND isnotnull(i_brand_id#503)) AND isnotnull(i_category_id#507))
[info]             :           :           :           :           :                    :     :                                :  :           :              +- *(4) ColumnarToRow
[info]             :           :           :           :           :                    :     :                                :  :           :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]             :           :           :           :           :                    :     :                                :  :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75145]
[info]             :           :           :           :           :                    :     :                                :  :              +- *(5) Project [d_date_sk#331]
[info]             :           :           :           :           :                    :     :                                :  :                 +- *(5) Filter (((isnotnull(d_year#337) AND (d_year#337 >= 1999)) AND (d_year#337 <= 2001)) AND isnotnull(d_date_sk#331))
[info]             :           :           :           :           :                    :     :                                :  :                    +- *(5) ColumnarToRow
[info]             :           :           :           :           :                    :     :                                :  :                       +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]             :           :           :           :           :                    :     :                                :  +- *(11) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :     :                                :     +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#79029]
[info]             :           :           :           :           :                    :     :                                :        +- *(10) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :                                :           +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :                    :     :                                :              :- *(10) Project [cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :                                :              :  +- *(10) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :           :           :                    :     :                                :              :     :- *(10) Project [cs_item_sk#892, cs_sold_date_sk#911]
[info]             :           :           :           :           :                    :     :                                :              :     :  +- *(10) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]             :           :           :           :           :                    :     :                                :              :     :     +- *(10) ColumnarToRow
[info]             :           :           :           :           :                    :     :                                :              :     :        +- BatchScan[cs_item_sk#892, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int>
[info]             :           :           :           :           :                    :     :                                :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75163]
[info]             :           :           :           :           :                    :     :                                :              :        +- *(8) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :                                :              :           +- *(8) Filter isnotnull(i_item_sk#496)
[info]             :           :           :           :           :                    :     :                                :              :              +- *(8) ColumnarToRow
[info]             :           :           :           :           :                    :     :                                :              :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]             :           :           :           :           :                    :     :                                :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75145]
[info]             :           :           :           :           :                    :     :                                +- *(15) Sort [coalesce(i_brand_id#503, 0) ASC NULLS FIRST, isnull(i_brand_id#503) ASC NULLS FIRST, coalesce(i_class_id#505, 0) ASC NULLS FIRST, isnull(i_class_id#505) ASC NULLS FIRST, coalesce(i_category_id#507, 0) ASC NULLS FIRST, isnull(i_category_id#507) ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :     :                                   +- Exchange hashpartitioning(coalesce(i_brand_id#503, 0), isnull(i_brand_id#503), coalesce(i_class_id#505, 0), isnull(i_class_id#505), coalesce(i_category_id#507, 0), isnull(i_category_id#507), 4), true, [id=#79059]
[info]             :           :           :           :           :                    :     :                                      +- *(14) Project [i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :                                         +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :                    :     :                                            :- *(14) Project [ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :     :                                            :  +- *(14) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :           :           :                    :     :                                            :     :- *(14) Project [ws_item_sk#1023, ws_sold_date_sk#1054]
[info]             :           :           :           :           :                    :     :                                            :     :  +- *(14) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]             :           :           :           :           :                    :     :                                            :     :     +- *(14) ColumnarToRow
[info]             :           :           :           :           :                    :     :                                            :     :        +- BatchScan[ws_item_sk#1023, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int>
[info]             :           :           :           :           :                    :     :                                            :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75163]
[info]             :           :           :           :           :                    :     :                                            +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75145]
[info]             :           :           :           :           :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#79398]
[info]             :           :           :           :           :                    :        +- SortMergeJoin [i_item_sk#496], [ss_item_sk#23910], LeftSemi
[info]             :           :           :           :           :                    :           :- *(20) Sort [i_item_sk#496 ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :           :  +- Exchange hashpartitioning(i_item_sk#496, 4), true, [id=#75232]
[info]             :           :           :           :           :                    :           :     +- *(19) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :           :        +- *(19) Filter isnotnull(i_item_sk#496)
[info]             :           :           :           :           :                    :           :           +- *(19) ColumnarToRow
[info]             :           :           :           :           :                    :           :              +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
[info]             :           :           :           :           :                    :           +- *(36) Sort [ss_item_sk#23910 ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :              +- ReusedExchange [ss_item_sk#23910], Exchange hashpartitioning(ss_item_sk#23910, 4), true, [id=#79154]
[info]             :           :           :           :           :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75351]
[info]             :           :           :           :           :                       +- *(37) Project [d_date_sk#331]
[info]             :           :           :           :           :                          +- *(37) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2000)) AND (d_moy#339 = 11)) AND isnotnull(d_date_sk#331))
[info]             :           :           :           :           :                             +- *(37) ColumnarToRow
[info]             :           :           :           :           :                                +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             :           :           :           :           :- *(78) Project [channel#23924, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23925, number_sales#23926L]
[info]             :           :           :           :           :  +- *(78) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#23985) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#23985 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]             :           :           :           :           :     :  +- ReusedSubquery Subquery scalar-subquery#23922, [id=#67843]
[info]             :           :           :           :           :     +- *(78) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :           :           :           :           :        +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#79903]
[info]             :           :           :           :           :           +- *(77) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]             :           :           :           :           :              +- *(77) Project [cs_quantity#895, cs_list_price#897, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                 +- *(77) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :           :                    :- *(77) Project [cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :           :                    :  +- *(77) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :           :           :                    :     :- SortMergeJoin [cs_item_sk#892], [ss_item_sk#23910], LeftSemi
[info]             :           :           :           :           :                    :     :  :- *(41) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :     :  :  +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#75368]
[info]             :           :           :           :           :                    :     :  :     +- *(40) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911]
[info]             :           :           :           :           :                    :     :  :        +- *(40) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]             :           :           :           :           :                    :     :  :           +- *(40) ColumnarToRow
[info]             :           :           :           :           :                    :     :  :              +- BatchScan[cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>
[info]             :           :           :           :           :                    :     :  +- *(57) Sort [ss_item_sk#23910 ASC NULLS FIRST], false, 0
[info]             :           :           :           :           :                    :     :     +- ReusedExchange [ss_item_sk#23910], Exchange hashpartitioning(ss_item_sk#23910, 4), true, [id=#79154]
[info]             :           :           :           :           :                    :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#79398]
[info]             :           :           :           :           :                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75351]
[info]             :           :           :           :           +- *(117) Project [channel#23929, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23930, number_sales#23931L]
[info]             :           :           :           :              +- *(117) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#23988) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#23988 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]             :           :           :           :                 :  +- ReusedSubquery Subquery scalar-subquery#23922, [id=#67843]
[info]             :           :           :           :                 +- *(117) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :           :           :           :                    +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#80451]
[info]             :           :           :           :                       +- *(116) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true)), partial_count(1)])
[info]             :           :           :           :                          +- *(116) Project [ws_quantity#1038, ws_list_price#1040, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :                             +- *(116) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :           :                                :- *(116) Project [ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507]
[info]             :           :           :           :                                :  +- *(116) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :           :                                :     :- SortMergeJoin [ws_item_sk#1023], [ss_item_sk#23910], LeftSemi
[info]             :           :           :           :                                :     :  :- *(80) Sort [ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]             :           :           :           :                                :     :  :  +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#75620]
[info]             :           :           :           :                                :     :  :     +- *(79) Project [ws_item_sk#1023, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054]
[info]             :           :           :           :                                :     :  :        +- *(79) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]             :           :           :           :                                :     :  :           +- *(79) ColumnarToRow
[info]             :           :           :           :                                :     :  :              +- BatchScan[ws_item_sk#1023, ws_quantity#1038, ws_list_price#1040, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>
[info]             :           :           :           :                                :     :  +- *(96) Sort [ss_item_sk#23910 ASC NULLS FIRST], false, 0
[info]             :           :           :           :                                :     :     +- ReusedExchange [ss_item_sk#23910], Exchange hashpartitioning(ss_item_sk#23910, 4), true, [id=#79154]
[info]             :           :           :           :                                :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#79398]
[info]             :           :           :           :                                +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#75351]
[info]             :           :           :           +- *(239) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505], functions=[sum(sum_sales#23933), sum(number_sales#23934L)])
[info]             :           :           :              +- Exchange hashpartitioning(channel#23919, i_brand_id#503, i_class_id#505, 4), true, [id=#87344]
[info]             :           :           :                 +- *(238) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505], functions=[partial_sum(sum_sales#23933), partial_sum(number_sales#23934L)])
[info]             :           :           :                    +- *(238) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(sales#23920), sum(number_sales#23921L)])
[info]             :           :           :                       +- Exchange hashpartitioning(channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#87339]
[info]             :           :           :                          +- *(237) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(sales#23920), partial_sum(number_sales#23921L)])
[info]             :           :           :                             +- Union
[info]             :           :           :                                :- *(158) Project [channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23920, number_sales#23921L]
[info]             :           :           :                                :  +- *(158) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#23991) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#23991 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]             :           :           :                                :     :  +- ReusedSubquery Subquery scalar-subquery#23922, [id=#67843]
[info]             :           :           :                                :     +- *(158) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :           :           :                                :        +- ReusedExchange [i_brand_id#503, i_class_id#505, i_category_id#507, sum#25041, count#25042L], Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#79425]
[info]             :           :           :                                :- *(197) Project [channel#23924, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23925, number_sales#23926L]
[info]             :           :           :                                :  +- *(197) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#23994) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#23994 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]             :           :           :                                :     :  +- ReusedSubquery Subquery scalar-subquery#23922, [id=#67843]
[info]             :           :           :                                :     +- *(197) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :           :           :                                :        +- ReusedExchange [i_brand_id#503, i_class_id#505, i_category_id#507, sum#25045, count#25046L], Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#79903]
[info]             :           :           :                                +- *(236) Project [channel#23929, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23930, number_sales#23931L]
[info]             :           :           :                                   +- *(236) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#23997) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#23997 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]             :           :           :                                      :  +- ReusedSubquery Subquery scalar-subquery#23922, [id=#67843]
[info]             :           :           :                                      +- *(236) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :           :           :                                         +- ReusedExchange [i_brand_id#503, i_class_id#505, i_category_id#507, sum#25049, count#25050L], Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#80451]
[info]             :           :           +- *(361) HashAggregate(keys=[channel#23919, i_brand_id#503], functions=[sum(sum_sales#23933), sum(number_sales#23934L)])
[info]             :           :              +- Exchange hashpartitioning(channel#23919, i_brand_id#503, 4), true, [id=#87518]
[info]             :           :                 +- *(360) HashAggregate(keys=[channel#23919, i_brand_id#503], functions=[partial_sum(sum_sales#23933), partial_sum(number_sales#23934L)])
[info]             :           :                    +- *(360) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(sales#23920), sum(number_sales#23921L)])
[info]             :           :                       +- Exchange hashpartitioning(channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#87513]
[info]             :           :                          +- *(359) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(sales#23920), partial_sum(number_sales#23921L)])
[info]             :           :                             +- Union
[info]             :           :                                :- *(280) Project [channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23920, number_sales#23921L]
[info]             :           :                                :  +- *(280) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#24000) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#24000 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]             :           :                                :     :  +- ReusedSubquery Subquery scalar-subquery#23922, [id=#67843]
[info]             :           :                                :     +- *(280) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :           :                                :        +- ReusedExchange [i_brand_id#503, i_class_id#505, i_category_id#507, sum#25061, count#25062L], Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#79425]
[info]             :           :                                :- *(319) Project [channel#23924, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23925, number_sales#23926L]
[info]             :           :                                :  +- *(319) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#24003) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#24003 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]             :           :                                :     :  +- ReusedSubquery Subquery scalar-subquery#23922, [id=#67843]
[info]             :           :                                :     +- *(319) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :           :                                :        +- ReusedExchange [i_brand_id#503, i_class_id#505, i_category_id#507, sum#25065, count#25066L], Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#79903]
[info]             :           :                                +- *(358) Project [channel#23929, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23930, number_sales#23931L]
[info]             :           :                                   +- *(358) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#24006) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#24006 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]             :           :                                      :  +- ReusedSubquery Subquery scalar-subquery#23922, [id=#67843]
[info]             :           :                                      +- *(358) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :           :                                         +- ReusedExchange [i_brand_id#503, i_class_id#505, i_category_id#507, sum#25069, count#25070L], Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#80451]
[info]             :           +- *(483) HashAggregate(keys=[channel#23919], functions=[sum(sum_sales#23933), sum(number_sales#23934L)])
[info]             :              +- Exchange hashpartitioning(channel#23919, 4), true, [id=#87692]
[info]             :                 +- *(482) HashAggregate(keys=[channel#23919], functions=[partial_sum(sum_sales#23933), partial_sum(number_sales#23934L)])
[info]             :                    +- *(482) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(sales#23920), sum(number_sales#23921L)])
[info]             :                       +- Exchange hashpartitioning(channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#87687]
[info]             :                          +- *(481) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(sales#23920), partial_sum(number_sales#23921L)])
[info]             :                             +- Union
[info]             :                                :- *(402) Project [channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23920, number_sales#23921L]
[info]             :                                :  +- *(402) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#24009) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#24009 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]             :                                :     :  +- ReusedSubquery Subquery scalar-subquery#23922, [id=#67843]
[info]             :                                :     +- *(402) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :                                :        +- ReusedExchange [i_brand_id#503, i_class_id#505, i_category_id#507, sum#25081, count#25082L], Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#79425]
[info]             :                                :- *(441) Project [channel#23924, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23925, number_sales#23926L]
[info]             :                                :  +- *(441) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#24012) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#24012 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]             :                                :     :  +- ReusedSubquery Subquery scalar-subquery#23922, [id=#67843]
[info]             :                                :     +- *(441) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :                                :        +- ReusedExchange [i_brand_id#503, i_class_id#505, i_category_id#507, sum#25085, count#25086L], Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#79903]
[info]             :                                +- *(480) Project [channel#23929, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23930, number_sales#23931L]
[info]             :                                   +- *(480) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#24015) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#24015 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]             :                                      :  +- ReusedSubquery Subquery scalar-subquery#23922, [id=#67843]
[info]             :                                      +- *(480) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]             :                                         +- ReusedExchange [i_brand_id#503, i_class_id#505, i_category_id#507, sum#25089, count#25090L], Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#80451]
[info]             +- *(605) HashAggregate(keys=[], functions=[sum(sum_sales#23933), sum(number_sales#23934L)])
[info]                +- Exchange SinglePartition, true, [id=#87866]
[info]                   +- *(604) HashAggregate(keys=[], functions=[partial_sum(sum_sales#23933), partial_sum(number_sales#23934L)])
[info]                      +- *(604) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(sales#23920), sum(number_sales#23921L)])
[info]                         +- Exchange hashpartitioning(channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#87861]
[info]                            +- *(603) HashAggregate(keys=[channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507], functions=[partial_sum(sales#23920), partial_sum(number_sales#23921L)])
[info]                               +- Union
[info]                                  :- *(524) Project [channel#23919, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23920, number_sales#23921L]
[info]                                  :  +- *(524) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#24018) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true))#24018 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]                                  :     :  +- ReusedSubquery Subquery scalar-subquery#23922, [id=#67843]
[info]                                  :     +- *(524) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ss_list_price#1175 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]                                  :        +- ReusedExchange [i_brand_id#503, i_class_id#505, i_category_id#507, sum#25101, count#25102L], Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#79425]
[info]                                  :- *(563) Project [channel#23924, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23925, number_sales#23926L]
[info]                                  :  +- *(563) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#24021) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true))#24021 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]                                  :     :  +- ReusedSubquery Subquery scalar-subquery#23922, [id=#67843]
[info]                                  :     +- *(563) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(cs_quantity#895 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(cs_list_price#897 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]                                  :        +- ReusedExchange [i_brand_id#503, i_class_id#505, i_category_id#507, sum#25105, count#25106L], Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#79903]
[info]                                  +- *(602) Project [channel#23929, i_brand_id#503, i_class_id#505, i_category_id#507, sales#23930, number_sales#23931L]
[info]                                     +- *(602) Filter (isnotnull(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#24024) AND (cast(sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true))#24024 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#23922, [id=#67843] as decimal(32,6))))
[info]                                        :  +- ReusedSubquery Subquery scalar-subquery#23922, [id=#67843]
[info]                                        +- *(602) HashAggregate(keys=[i_brand_id#503, i_class_id#505, i_category_id#507], functions=[sum(CheckOverflow((promote_precision(cast(cast(ws_quantity#1038 as decimal(10,0)) as decimal(12,2))) * promote_precision(cast(ws_list_price#1040 as decimal(12,2)))), DecimalType(18,2), true)), count(1)])
[info]                                           +- ReusedExchange [i_brand_id#503, i_class_id#505, i_category_id#507, sum#25109, count#25110L], Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, 4), true, [id=#80451]
[info] 
[info] 
[info]   Stopped after 1 iterations, 11686 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q14a-v2.7                                         11686          11686           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q18a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ca_country#243 ASC NULLS FIRST,ca_state#241 ASC NULLS FIRST,ca_county#240 ASC NULLS FIRST,i_item_id#497 ASC NULLS FIRST], output=[i_item_id#497,ca_country#243,ca_state#241,ca_county#240,agg1#25627,agg2#25628,agg3#25629,agg4#25630,agg5#25631,agg6#25632,agg7#25633])
[info] +- Union
[info]    :- *(8) HashAggregate(keys=[i_item_id#497, ca_country#243, ca_state#241, ca_county#240], functions=[avg(agg1#25672), avg(agg2#25673), avg(agg3#25674), avg(agg4#25675), avg(agg5#25676), avg(agg6#25677), avg(agg7#25678)])
[info]    :  +- Exchange hashpartitioning(i_item_id#497, ca_country#243, ca_state#241, ca_county#240, 4), true, [id=#88849]
[info]    :     +- *(7) HashAggregate(keys=[i_item_id#497, ca_country#243, ca_state#241, ca_county#240], functions=[partial_avg(agg1#25672), partial_avg(agg2#25673), partial_avg(agg3#25674), partial_avg(agg4#25675), partial_avg(agg5#25676), partial_avg(agg6#25677), partial_avg(agg7#25678)])
[info]    :        +- *(7) Project [i_item_id#497, ca_country#243, ca_state#241, ca_county#240, cast(cs_quantity#895 as decimal(12,2)) AS agg1#25672, cast(cs_list_price#897 as decimal(12,2)) AS agg2#25673, cast(cs_coupon_amt#904 as decimal(12,2)) AS agg3#25674, cast(cs_sales_price#898 as decimal(12,2)) AS agg4#25675, cast(cs_net_profit#910 as decimal(12,2)) AS agg5#25676, cast(c_birth_year#169 as decimal(12,2)) AS agg6#25677, cast(cd_dep_count#296 as decimal(12,2)) AS agg7#25678]
[info]    :           +- *(7) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]    :              :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, ca_county#240, ca_state#241, ca_country#243]
[info]    :              :  +- *(7) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_birth_year#169, ca_county#240, ca_state#241, ca_country#243]
[info]    :              :     :  +- *(7) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]    :              :     :     :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :  +- *(7) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#25679], Inner, BuildRight
[info]    :              :     :     :     :- *(7) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :     :  +- *(7) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]    :              :     :     :     :     :- *(7) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296]
[info]    :              :     :     :     :     :  +- *(7) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]    :              :     :     :     :     :     :- *(7) Project [cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911]
[info]    :              :     :     :     :     :     :  +- *(7) Filter (((isnotnull(cs_bill_cdemo_sk#881) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_item_sk#892))
[info]    :              :     :     :     :     :     :     +- *(7) ColumnarToRow
[info]    :              :     :     :     :     :     :        +- BatchScan[cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...
[info]    :              :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88798]
[info]    :              :     :     :     :     :        +- *(1) Project [cd_demo_sk#290, cd_dep_count#296]
[info]    :              :     :     :     :     :           +- *(1) Filter ((((isnotnull(cd_gender#291) AND isnotnull(cd_education_status#293)) AND (cd_gender#291 = M)) AND (cd_education_status#293 = College)) AND isnotnull(cd_demo_sk#290))
[info]    :              :     :     :     :     :              +- *(1) ColumnarToRow
[info]    :              :     :     :     :     :                 +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_education_status#293, cd_dep_count#296] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_education_status:string,cd_dep_count:int>
[info]    :              :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88807]
[info]    :              :     :     :     :        +- *(2) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :     :           +- *(2) Filter (((c_birth_month#168 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#156)) AND isnotnull(c_current_cdemo_sk#158)) AND isnotnull(c_current_addr_sk#160))
[info]    :              :     :     :     :              +- *(2) ColumnarToRow
[info]    :              :     :     :     :                 +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_month#168, c_birth_year#169] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int,c_birth_month:int,c_birth_y...
[info]    :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88816]
[info]    :              :     :     :        +- *(3) Project [cd_demo_sk#25679]
[info]    :              :     :     :           +- *(3) Filter isnotnull(cd_demo_sk#25679)
[info]    :              :     :     :              +- *(3) ColumnarToRow
[info]    :              :     :     :                 +- BatchScan[cd_demo_sk#25679] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int>
[info]    :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88825]
[info]    :              :     :        +- *(4) Project [ca_address_sk#233, ca_county#240, ca_state#241, ca_country#243]
[info]    :              :     :           +- *(4) Filter (ca_state#241 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#233))
[info]    :              :     :              +- *(4) ColumnarToRow
[info]    :              :     :                 +- BatchScan[ca_address_sk#233, ca_county#240, ca_state#241, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string,ca_country:string>
[info]    :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88834]
[info]    :              :        +- *(5) Project [d_date_sk#331]
[info]    :              :           +- *(5) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]    :              :              +- *(5) ColumnarToRow
[info]    :              :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]    :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88843]
[info]    :                 +- *(6) Project [i_item_sk#496, i_item_id#497]
[info]    :                    +- *(6) Filter isnotnull(i_item_sk#496)
[info]    :                       +- *(6) ColumnarToRow
[info]    :                          +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]    :- *(16) HashAggregate(keys=[i_item_id#497, ca_country#243, ca_state#241], functions=[avg(agg1#25672), avg(agg2#25673), avg(agg3#25674), avg(agg4#25675), avg(agg5#25676), avg(agg6#25677), avg(agg7#25678)])
[info]    :  +- Exchange hashpartitioning(i_item_id#497, ca_country#243, ca_state#241, 4), true, [id=#89215]
[info]    :     +- *(15) HashAggregate(keys=[i_item_id#497, ca_country#243, ca_state#241], functions=[partial_avg(agg1#25672), partial_avg(agg2#25673), partial_avg(agg3#25674), partial_avg(agg4#25675), partial_avg(agg5#25676), partial_avg(agg6#25677), partial_avg(agg7#25678)])
[info]    :        +- *(15) Project [i_item_id#497, ca_country#243, ca_state#241, cast(cs_quantity#895 as decimal(12,2)) AS agg1#25672, cast(cs_list_price#897 as decimal(12,2)) AS agg2#25673, cast(cs_coupon_amt#904 as decimal(12,2)) AS agg3#25674, cast(cs_sales_price#898 as decimal(12,2)) AS agg4#25675, cast(cs_net_profit#910 as decimal(12,2)) AS agg5#25676, cast(c_birth_year#169 as decimal(12,2)) AS agg6#25677, cast(cd_dep_count#296 as decimal(12,2)) AS agg7#25678]
[info]    :           +- *(15) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]    :              :- *(15) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, ca_state#241, ca_country#243]
[info]    :              :  +- *(15) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :- *(15) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_birth_year#169, ca_state#241, ca_country#243]
[info]    :              :     :  +- *(15) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]    :              :     :     :- *(15) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :  +- *(15) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#25688], Inner, BuildRight
[info]    :              :     :     :     :- *(15) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :     :  +- *(15) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]    :              :     :     :     :     :- *(15) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296]
[info]    :              :     :     :     :     :  +- *(15) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]    :              :     :     :     :     :     :- *(15) Project [cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911]
[info]    :              :     :     :     :     :     :  +- *(15) Filter (((isnotnull(cs_bill_cdemo_sk#881) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_item_sk#892))
[info]    :              :     :     :     :     :     :     +- *(15) ColumnarToRow
[info]    :              :     :     :     :     :     :        +- BatchScan[cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...
[info]    :              :     :     :     :     :     +- ReusedExchange [cd_demo_sk#290, cd_dep_count#296], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88798]
[info]    :              :     :     :     :     +- ReusedExchange [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88807]
[info]    :              :     :     :     +- ReusedExchange [cd_demo_sk#25688], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88816]
[info]    :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88889]
[info]    :              :     :        +- *(12) Project [ca_address_sk#233, ca_state#241, ca_country#243]
[info]    :              :     :           +- *(12) Filter (ca_state#241 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#233))
[info]    :              :     :              +- *(12) ColumnarToRow
[info]    :              :     :                 +- BatchScan[ca_address_sk#233, ca_state#241, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
[info]    :              :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88834]
[info]    :              +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88843]
[info]    :- *(24) HashAggregate(keys=[i_item_id#497, ca_country#243], functions=[avg(agg1#25672), avg(agg2#25673), avg(agg3#25674), avg(agg4#25675), avg(agg5#25676), avg(agg6#25677), avg(agg7#25678)])
[info]    :  +- Exchange hashpartitioning(i_item_id#497, ca_country#243, 4), true, [id=#89283]
[info]    :     +- *(23) HashAggregate(keys=[i_item_id#497, ca_country#243], functions=[partial_avg(agg1#25672), partial_avg(agg2#25673), partial_avg(agg3#25674), partial_avg(agg4#25675), partial_avg(agg5#25676), partial_avg(agg6#25677), partial_avg(agg7#25678)])
[info]    :        +- *(23) Project [i_item_id#497, ca_country#243, cast(cs_quantity#895 as decimal(12,2)) AS agg1#25672, cast(cs_list_price#897 as decimal(12,2)) AS agg2#25673, cast(cs_coupon_amt#904 as decimal(12,2)) AS agg3#25674, cast(cs_sales_price#898 as decimal(12,2)) AS agg4#25675, cast(cs_net_profit#910 as decimal(12,2)) AS agg5#25676, cast(c_birth_year#169 as decimal(12,2)) AS agg6#25677, cast(cd_dep_count#296 as decimal(12,2)) AS agg7#25678]
[info]    :           +- *(23) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]    :              :- *(23) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169, ca_country#243]
[info]    :              :  +- *(23) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :- *(23) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_birth_year#169, ca_country#243]
[info]    :              :     :  +- *(23) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]    :              :     :     :- *(23) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :  +- *(23) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#25697], Inner, BuildRight
[info]    :              :     :     :     :- *(23) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :     :  +- *(23) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]    :              :     :     :     :     :- *(23) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296]
[info]    :              :     :     :     :     :  +- *(23) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]    :              :     :     :     :     :     :- *(23) Project [cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911]
[info]    :              :     :     :     :     :     :  +- *(23) Filter (((isnotnull(cs_bill_cdemo_sk#881) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_item_sk#892))
[info]    :              :     :     :     :     :     :     +- *(23) ColumnarToRow
[info]    :              :     :     :     :     :     :        +- BatchScan[cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...
[info]    :              :     :     :     :     :     +- ReusedExchange [cd_demo_sk#290, cd_dep_count#296], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88798]
[info]    :              :     :     :     :     +- ReusedExchange [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88807]
[info]    :              :     :     :     +- ReusedExchange [cd_demo_sk#25697], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88816]
[info]    :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88953]
[info]    :              :     :        +- *(20) Project [ca_address_sk#233, ca_country#243]
[info]    :              :     :           +- *(20) Filter (ca_state#241 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#233))
[info]    :              :     :              +- *(20) ColumnarToRow
[info]    :              :     :                 +- BatchScan[ca_address_sk#233, ca_state#241, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
[info]    :              :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88834]
[info]    :              +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88843]
[info]    :- *(32) HashAggregate(keys=[i_item_id#497], functions=[avg(agg1#25672), avg(agg2#25673), avg(agg3#25674), avg(agg4#25675), avg(agg5#25676), avg(agg6#25677), avg(agg7#25678)])
[info]    :  +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#89351]
[info]    :     +- *(31) HashAggregate(keys=[i_item_id#497], functions=[partial_avg(agg1#25672), partial_avg(agg2#25673), partial_avg(agg3#25674), partial_avg(agg4#25675), partial_avg(agg5#25676), partial_avg(agg6#25677), partial_avg(agg7#25678)])
[info]    :        +- *(31) Project [i_item_id#497, cast(cs_quantity#895 as decimal(12,2)) AS agg1#25672, cast(cs_list_price#897 as decimal(12,2)) AS agg2#25673, cast(cs_coupon_amt#904 as decimal(12,2)) AS agg3#25674, cast(cs_sales_price#898 as decimal(12,2)) AS agg4#25675, cast(cs_net_profit#910 as decimal(12,2)) AS agg5#25676, cast(c_birth_year#169 as decimal(12,2)) AS agg6#25677, cast(cd_dep_count#296 as decimal(12,2)) AS agg7#25678]
[info]    :           +- *(31) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]    :              :- *(31) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169]
[info]    :              :  +- *(31) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :- *(31) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_birth_year#169]
[info]    :              :     :  +- *(31) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]    :              :     :     :- *(31) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :  +- *(31) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#25706], Inner, BuildRight
[info]    :              :     :     :     :- *(31) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]    :              :     :     :     :  +- *(31) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]    :              :     :     :     :     :- *(31) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296]
[info]    :              :     :     :     :     :  +- *(31) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]    :              :     :     :     :     :     :- *(31) Project [cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911]
[info]    :              :     :     :     :     :     :  +- *(31) Filter (((isnotnull(cs_bill_cdemo_sk#881) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_item_sk#892))
[info]    :              :     :     :     :     :     :     +- *(31) ColumnarToRow
[info]    :              :     :     :     :     :     :        +- BatchScan[cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...
[info]    :              :     :     :     :     :     +- ReusedExchange [cd_demo_sk#290, cd_dep_count#296], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88798]
[info]    :              :     :     :     :     +- ReusedExchange [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88807]
[info]    :              :     :     :     +- ReusedExchange [cd_demo_sk#25706], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88816]
[info]    :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89017]
[info]    :              :     :        +- *(28) Project [ca_address_sk#233]
[info]    :              :     :           +- *(28) Filter (ca_state#241 IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#233))
[info]    :              :     :              +- *(28) ColumnarToRow
[info]    :              :     :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]    :              :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88834]
[info]    :              +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88843]
[info]    +- *(40) HashAggregate(keys=[], functions=[avg(agg1#25672), avg(agg2#25673), avg(agg3#25674), avg(agg4#25675), avg(agg5#25676), avg(agg6#25677), avg(agg7#25678)])
[info]       +- Exchange SinglePartition, true, [id=#89427]
[info]          +- *(39) HashAggregate(keys=[], functions=[partial_avg(agg1#25672), partial_avg(agg2#25673), partial_avg(agg3#25674), partial_avg(agg4#25675), partial_avg(agg5#25676), partial_avg(agg6#25677), partial_avg(agg7#25678)])
[info]             +- *(39) Project [cast(cs_quantity#895 as decimal(12,2)) AS agg1#25672, cast(cs_list_price#897 as decimal(12,2)) AS agg2#25673, cast(cs_coupon_amt#904 as decimal(12,2)) AS agg3#25674, cast(cs_sales_price#898 as decimal(12,2)) AS agg4#25675, cast(cs_net_profit#910 as decimal(12,2)) AS agg5#25676, cast(c_birth_year#169 as decimal(12,2)) AS agg6#25677, cast(cd_dep_count#296 as decimal(12,2)) AS agg7#25678]
[info]                +- *(39) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                   :- *(39) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cd_dep_count#296, c_birth_year#169]
[info]                   :  +- *(39) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                   :     :- *(39) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_birth_year#169]
[info]                   :     :  +- *(39) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                   :     :     :- *(39) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_addr_sk#160, c_birth_year#169]
[info]                   :     :     :  +- *(39) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#25715], Inner, BuildRight
[info]                   :     :     :     :- *(39) Project [cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169]
[info]                   :     :     :     :  +- *(39) BroadcastHashJoin [cs_bill_customer_sk#880], [c_customer_sk#156], Inner, BuildRight
[info]                   :     :     :     :     :- *(39) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911, cd_dep_count#296]
[info]                   :     :     :     :     :  +- *(39) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]                   :     :     :     :     :     :- *(39) Project [cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911]
[info]                   :     :     :     :     :     :  +- *(39) Filter (((isnotnull(cs_bill_cdemo_sk#881) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_item_sk#892))
[info]                   :     :     :     :     :     :     +- *(39) ColumnarToRow
[info]                   :     :     :     :     :     :        +- BatchScan[cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_item_sk#892, cs_quantity#895, cs_list_price#897, cs_sales_price#898, cs_coupon_amt#904, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:...
[info]                   :     :     :     :     :     +- ReusedExchange [cd_demo_sk#290, cd_dep_count#296], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88798]
[info]                   :     :     :     :     +- ReusedExchange [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160, c_birth_year#169], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88807]
[info]                   :     :     :     +- ReusedExchange [cd_demo_sk#25715], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88816]
[info]                   :     :     +- ReusedExchange [ca_address_sk#233], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89017]
[info]                   :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#88834]
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89099]
[info]                      +- *(38) Project [i_item_sk#496]
[info]                         +- *(38) Filter isnotnull(i_item_sk#496)
[info]                            +- *(38) ColumnarToRow
[info]                               +- BatchScan[i_item_sk#496] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 1243 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q18a-v2.7                                          1244           1244           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q20-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_category#508 ASC NULLS FIRST,i_class#506 ASC NULLS FIRST,i_item_id#497 ASC NULLS FIRST,i_item_desc#500 ASC NULLS FIRST,revenueratio#26103 ASC NULLS FIRST], output=[i_item_id#497,i_item_desc#500,i_category#508,i_class#506,i_current_price#501,itemrevenue#26102,revenueratio#26103])
[info] +- *(6) Project [i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, itemrevenue#26102, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#26108) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#26110)), DecimalType(38,17), true) AS revenueratio#26103]
[info]    +- Window [sum(_w1#26109) windowspecdefinition(i_class#506, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#26110], [i_class#506]
[info]       +- *(5) Sort [i_class#506 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_class#506, 4), true, [id=#89558]
[info]             +- *(4) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[sum(UnscaledValue(cs_ext_sales_price#900))])
[info]                +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, 4), true, [id=#89554]
[info]                   +- *(3) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900))])
[info]                      +- *(3) Project [cs_ext_sales_price#900, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                         +- *(3) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                            :- *(3) Project [cs_ext_sales_price#900, cs_sold_date_sk#911, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :  +- *(3) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                            :     :- *(3) Project [cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]                            :     :  +- *(3) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]                            :     :     +- *(3) ColumnarToRow
[info]                            :     :        +- BatchScan[cs_item_sk#892, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
[info]                            :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89539]
[info]                            :        +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            :           +- *(1) Filter (i_category#508 IN (Sports,Books,Home) AND isnotnull(i_item_sk#496))
[info]                            :              +- *(1) ColumnarToRow
[info]                            :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
[info]                            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89548]
[info]                               +- *(2) Project [d_date_sk#331]
[info]                                  +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10644)) AND (d_date#333 <= 10674)) AND isnotnull(d_date_sk#331))
[info]                                     +- *(2) ColumnarToRow
[info]                                        +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 115 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q20-v2.7                                            116            116           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q22-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[qoh#26153 ASC NULLS FIRST,i_product_name#26160 ASC NULLS FIRST,i_brand#26161 ASC NULLS FIRST,i_class#26162 ASC NULLS FIRST,i_category#26163 ASC NULLS FIRST], output=[i_product_name#26160,i_brand#26161,i_class#26162,i_category#26163,qoh#26153])
[info] +- *(6) HashAggregate(keys=[i_product_name#26160, i_brand#26161, i_class#26162, i_category#26163, spark_grouping_id#26155], functions=[avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]    +- Exchange hashpartitioning(i_product_name#26160, i_brand#26161, i_class#26162, i_category#26163, spark_grouping_id#26155, 4), true, [id=#89706]
[info]       +- *(5) HashAggregate(keys=[i_product_name#26160, i_brand#26161, i_class#26162, i_category#26163, spark_grouping_id#26155], functions=[partial_avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]          +- *(5) Expand [List(inv_quantity_on_hand#475, i_product_name#517, i_brand#504, i_class#506, i_category#508, 0), List(inv_quantity_on_hand#475, i_product_name#517, i_brand#504, i_class#506, null, 1), List(inv_quantity_on_hand#475, i_product_name#517, i_brand#504, null, null, 3), List(inv_quantity_on_hand#475, i_product_name#517, null, null, null, 7), List(inv_quantity_on_hand#475, null, null, null, null, 15)], [inv_quantity_on_hand#475, i_product_name#26160, i_brand#26161, i_class#26162, i_category#26163, spark_grouping_id#26155]
[info]             +- *(5) Project [inv_quantity_on_hand#475, i_product_name#517, i_brand#504, i_class#506, i_category#508]
[info]                +- BroadcastNestedLoopJoin BuildRight, Inner
[info]                   :- *(3) Project [inv_quantity_on_hand#475, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]                   :  +- *(3) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#496], Inner, BuildRight
[info]                   :     :- *(3) Project [inv_item_sk#473, inv_quantity_on_hand#475]
[info]                   :     :  +- *(3) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]                   :     :     :- *(3) Project [inv_item_sk#473, inv_quantity_on_hand#475, inv_date_sk#476]
[info]                   :     :     :  +- *(3) Filter (isnotnull(inv_date_sk#476) AND isnotnull(inv_item_sk#473))
[info]                   :     :     :     +- *(3) ColumnarToRow
[info]                   :     :     :        +- BatchScan[inv_item_sk#473, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_quantity_on_hand:int>
[info]                   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89682]
[info]                   :     :        +- *(1) Project [d_date_sk#331]
[info]                   :     :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1200)) AND (d_month_seq#334 <= 1211)) AND isnotnull(d_date_sk#331))
[info]                   :     :              +- *(1) ColumnarToRow
[info]                   :     :                 +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#89691]
[info]                   :        +- *(2) Project [i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]                   :           +- *(2) Filter isnotnull(i_item_sk#496)
[info]                   :              +- *(2) ColumnarToRow
[info]                   :                 +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
[info]                   +- BroadcastExchange IdentityBroadcastMode, [id=#89699]
[info]                      +- *(4) ColumnarToRow
[info]                         +- BatchScan[] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<>
[info] 
[info] 
[info]   Stopped after 1 iterations, 143 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q22-v2.7                                            143            143           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q22a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[qoh#26246 ASC NULLS FIRST,i_product_name#517 ASC NULLS FIRST,i_brand#504 ASC NULLS FIRST,i_class#506 ASC NULLS FIRST,i_category#508 ASC NULLS FIRST], output=[i_product_name#517,i_brand#504,i_class#506,i_category#508,qoh#26246])
[info] +- Union
[info]    :- *(5) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[avg(qoh#26245)])
[info]    :  +- *(5) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[partial_avg(qoh#26245)])
[info]    :     +- *(5) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]    :        +- Exchange hashpartitioning(i_product_name#517, i_brand#504, i_class#506, i_category#508, 4), true, [id=#90331]
[info]    :           +- *(4) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[partial_avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]    :              +- *(4) Project [inv_quantity_on_hand#475, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]    :                 +- *(4) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#1621], Inner, BuildRight
[info]    :                    :- *(4) Project [inv_warehouse_sk#474, inv_quantity_on_hand#475, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]    :                    :  +- *(4) BroadcastHashJoin [inv_item_sk#473], [i_item_sk#496], Inner, BuildRight
[info]    :                    :     :- *(4) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475]
[info]    :                    :     :  +- *(4) BroadcastHashJoin [inv_date_sk#476], [d_date_sk#331], Inner, BuildRight
[info]    :                    :     :     :- *(4) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]    :                    :     :     :  +- *(4) Filter ((isnotnull(inv_date_sk#476) AND isnotnull(inv_item_sk#473)) AND isnotnull(inv_warehouse_sk#474))
[info]    :                    :     :     :     +- *(4) ColumnarToRow
[info]    :                    :     :     :        +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]    :                    :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#90307]
[info]    :                    :     :        +- *(1) Project [d_date_sk#331]
[info]    :                    :     :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1212)) AND (d_month_seq#334 <= 1223)) AND isnotnull(d_date_sk#331))
[info]    :                    :     :              +- *(1) ColumnarToRow
[info]    :                    :     :                 +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]    :                    :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#90316]
[info]    :                    :        +- *(2) Project [i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]    :                    :           +- *(2) Filter isnotnull(i_item_sk#496)
[info]    :                    :              +- *(2) ColumnarToRow
[info]    :                    :                 +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
[info]    :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#90325]
[info]    :                       +- *(3) Project [w_warehouse_sk#1621]
[info]    :                          +- *(3) Filter isnotnull(w_warehouse_sk#1621)
[info]    :                             +- *(3) ColumnarToRow
[info]    :                                +- BatchScan[w_warehouse_sk#1621] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int>
[info]    :- *(11) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506], functions=[avg(qoh#26245)])
[info]    :  +- Exchange hashpartitioning(i_product_name#517, i_brand#504, i_class#506, 4), true, [id=#90627]
[info]    :     +- *(10) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506], functions=[partial_avg(qoh#26245)])
[info]    :        +- *(10) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]    :           +- ReusedExchange [i_product_name#517, i_brand#504, i_class#506, i_category#508, sum#26355, count#26356L], Exchange hashpartitioning(i_product_name#517, i_brand#504, i_class#506, i_category#508, 4), true, [id=#90331]
[info]    :- *(17) HashAggregate(keys=[i_product_name#517, i_brand#504], functions=[avg(qoh#26245)])
[info]    :  +- Exchange hashpartitioning(i_product_name#517, i_brand#504, 4), true, [id=#90701]
[info]    :     +- *(16) HashAggregate(keys=[i_product_name#517, i_brand#504], functions=[partial_avg(qoh#26245)])
[info]    :        +- *(16) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]    :           +- ReusedExchange [i_product_name#517, i_brand#504, i_class#506, i_category#508, sum#26363, count#26364L], Exchange hashpartitioning(i_product_name#517, i_brand#504, i_class#506, i_category#508, 4), true, [id=#90331]
[info]    :- *(23) HashAggregate(keys=[i_product_name#517], functions=[avg(qoh#26245)])
[info]    :  +- Exchange hashpartitioning(i_product_name#517, 4), true, [id=#90775]
[info]    :     +- *(22) HashAggregate(keys=[i_product_name#517], functions=[partial_avg(qoh#26245)])
[info]    :        +- *(22) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]    :           +- ReusedExchange [i_product_name#517, i_brand#504, i_class#506, i_category#508, sum#26371, count#26372L], Exchange hashpartitioning(i_product_name#517, i_brand#504, i_class#506, i_category#508, 4), true, [id=#90331]
[info]    +- *(29) HashAggregate(keys=[], functions=[avg(qoh#26245)])
[info]       +- Exchange SinglePartition, true, [id=#90849]
[info]          +- *(28) HashAggregate(keys=[], functions=[partial_avg(qoh#26245)])
[info]             +- *(28) HashAggregate(keys=[i_product_name#517, i_brand#504, i_class#506, i_category#508], functions=[avg(cast(inv_quantity_on_hand#475 as bigint))])
[info]                +- ReusedExchange [i_product_name#517, i_brand#504, i_class#506, i_category#508, sum#26379, count#26380L], Exchange hashpartitioning(i_product_name#517, i_brand#504, i_class#506, i_category#508, 4), true, [id=#90331]
[info] 
[info] 
[info]   Stopped after 1 iterations, 521 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q22a-v2.7                                           522            522           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q24-v2.7
[info] == Physical Plan ==
[info] *(12) Sort [c_last_name#165 ASC NULLS FIRST, c_first_name#164 ASC NULLS FIRST, s_store_name#675 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(c_last_name#165 ASC NULLS FIRST, c_first_name#164 ASC NULLS FIRST, s_store_name#675 ASC NULLS FIRST, 4), true, [id=#91368]
[info]    +- *(11) Project [c_last_name#165, c_first_name#164, s_store_name#675, paid#26413]
[info]       +- *(11) Filter (isnotnull(sum(netpaid#26415)#26423) AND (cast(sum(netpaid#26415)#26423 as decimal(33,8)) > cast(Subquery scalar-subquery#26414, [id=#91211] as decimal(33,8))))
[info]          :  +- Subquery scalar-subquery#26414, [id=#91211]
[info]          :     +- *(11) HashAggregate(keys=[], functions=[avg(netpaid#26415)])
[info]          :        +- Exchange SinglePartition, true, [id=#91207]
[info]          :           +- *(10) HashAggregate(keys=[], functions=[partial_avg(netpaid#26415)])
[info]          :              +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]          :                 +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511, 4), true, [id=#91202]
[info]          :                    +- *(9) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]          :                       +- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, ca_state#241]
[info]          :                          +- *(9) BroadcastHashJoin [c_current_addr_sk#160, c_birth_country#170, s_zip#695], [ca_address_sk#233, upper(ca_country#243), ca_zip#242], Inner, BuildRight
[info]          :                             :- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_current_addr_sk#160, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]          :                             :  +- *(9) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]          :                             :     :- *(9) Project [ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]          :                             :     :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]          :                             :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695]
[info]          :                             :     :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]          :                             :     :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_net_paid#1183]
[info]          :                             :     :     :     :  +- *(9) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]          :                             :     :     :     :     :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]          :                             :     :     :     :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#91147]
[info]          :                             :     :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183]
[info]          :                             :     :     :     :     :        +- *(1) Filter (((isnotnull(ss_ticket_number#1172L) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_customer_sk#1166))
[info]          :                             :     :     :     :     :           +- *(1) ColumnarToRow
[info]          :                             :     :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_paid:deci...
[info]          :                             :     :     :     :     +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]          :                             :     :     :     :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#91157]
[info]          :                             :     :     :     :           +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]          :                             :     :     :     :              +- *(3) Filter (isnotnull(sr_ticket_number#799L) AND isnotnull(sr_item_sk#792))
[info]          :                             :     :     :     :                 +- *(3) ColumnarToRow
[info]          :                             :     :     :     :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]          :                             :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91169]
[info]          :                             :     :     :        +- *(5) Project [s_store_sk#670, s_store_name#675, s_state#694, s_zip#695]
[info]          :                             :     :     :           +- *(5) Filter (((isnotnull(s_market_id#680) AND (s_market_id#680 = 8)) AND isnotnull(s_store_sk#670)) AND isnotnull(s_zip#695))
[info]          :                             :     :     :              +- *(5) ColumnarToRow
[info]          :                             :     :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_market_id#680, s_state#694, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
[info]          :                             :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91178]
[info]          :                             :     :        +- *(6) Project [i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]          :                             :     :           +- *(6) Filter isnotnull(i_item_sk#496)
[info]          :                             :     :              +- *(6) ColumnarToRow
[info]          :                             :     :                 +- BatchScan[i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
[info]          :                             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91187]
[info]          :                             :        +- *(7) Project [c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]          :                             :           +- *(7) Filter ((isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160)) AND isnotnull(c_birth_country#170))
[info]          :                             :              +- *(7) ColumnarToRow
[info]          :                             :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165, c_birth_country#170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string,c_birth_cou...
[info]          :                             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, true], upper(input[3, string, true]), input[2, string, true])), [id=#91196]
[info]          :                                +- *(8) Project [ca_address_sk#233, ca_state#241, ca_zip#242, ca_country#243]
[info]          :                                   +- *(8) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_zip#242))
[info]          :                                      +- *(8) ColumnarToRow
[info]          :                                         +- BatchScan[ca_address_sk#233, ca_state#241, ca_zip#242, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string,ca_country:string>
[info]          +- *(11) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675], functions=[sum(netpaid#26415)])
[info]             +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, 4), true, [id=#91362]
[info]                +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675], functions=[partial_sum(netpaid#26415)])
[info]                   +- *(10) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]                      +- Exchange hashpartitioning(c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511, 4), true, [id=#91357]
[info]                         +- *(9) HashAggregate(keys=[c_last_name#165, c_first_name#164, s_store_name#675, ca_state#241, s_state#694, i_color#513, i_current_price#501, i_manager_id#516, i_units#514, i_size#511], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]                            +- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_first_name#164, c_last_name#165, ca_state#241]
[info]                               +- *(9) BroadcastHashJoin [c_current_addr_sk#160, c_birth_country#170, s_zip#695], [ca_address_sk#233, upper(ca_country#243), ca_zip#242], Inner, BuildRight
[info]                                  :- *(9) Project [ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516, c_current_addr_sk#160, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]                                  :  +- *(9) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                                  :     :- *(9) Project [ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]                                  :     :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                                  :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_net_paid#1183, s_store_name#675, s_state#694, s_zip#695]
[info]                                  :     :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                                  :     :     :     :- *(9) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_net_paid#1183]
[info]                                  :     :     :     :  +- *(9) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]                                  :     :     :     :     :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                                  :     :     :     :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#91302]
[info]                                  :     :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183]
[info]                                  :     :     :     :     :        +- *(1) Filter (((isnotnull(ss_ticket_number#1172L) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_customer_sk#1166))
[info]                                  :     :     :     :     :           +- *(1) ColumnarToRow
[info]                                  :     :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_store_sk#1170, ss_ticket_number#1172L, ss_net_paid#1183] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_net_paid:deci...
[info]                                  :     :     :     :     +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                                  :     :     :     :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#91312]
[info]                                  :     :     :     :           +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]                                  :     :     :     :              +- *(3) Filter (isnotnull(sr_ticket_number#799L) AND isnotnull(sr_item_sk#792))
[info]                                  :     :     :     :                 +- *(3) ColumnarToRow
[info]                                  :     :     :     :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]                                  :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91324]
[info]                                  :     :     :        +- *(5) Project [s_store_sk#670, s_store_name#675, s_state#694, s_zip#695]
[info]                                  :     :     :           +- *(5) Filter (((isnotnull(s_market_id#680) AND (s_market_id#680 = 8)) AND isnotnull(s_store_sk#670)) AND isnotnull(s_zip#695))
[info]                                  :     :     :              +- *(5) ColumnarToRow
[info]                                  :     :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_market_id#680, s_state#694, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
[info]                                  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91333]
[info]                                  :     :        +- *(6) Project [i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516]
[info]                                  :     :           +- *(6) Filter ((isnotnull(i_color#513) AND (i_color#513 = pale)) AND isnotnull(i_item_sk#496))
[info]                                  :     :              +- *(6) ColumnarToRow
[info]                                  :     :                 +- BatchScan[i_item_sk#496, i_current_price#501, i_size#511, i_color#513, i_units#514, i_manager_id#516] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
[info]                                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91342]
[info]                                  :        +- *(7) Project [c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165, c_birth_country#170]
[info]                                  :           +- *(7) Filter ((isnotnull(c_customer_sk#156) AND isnotnull(c_current_addr_sk#160)) AND isnotnull(c_birth_country#170))
[info]                                  :              +- *(7) ColumnarToRow
[info]                                  :                 +- BatchScan[c_customer_sk#156, c_current_addr_sk#160, c_first_name#164, c_last_name#165, c_birth_country#170] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string,c_birth_cou...
[info]                                  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, true], upper(input[3, string, true]), input[2, string, true])), [id=#91351]
[info]                                     +- *(8) Project [ca_address_sk#233, ca_state#241, ca_zip#242, ca_country#243]
[info]                                        +- *(8) Filter (isnotnull(ca_address_sk#233) AND isnotnull(ca_zip#242))
[info]                                           +- *(8) ColumnarToRow
[info]                                              +- BatchScan[ca_address_sk#233, ca_state#241, ca_zip#242, ca_country#243] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string,ca_country:string>
[info] 
[info] 
[info]   Stopped after 1 iterations, 497 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q24-v2.7                                            497            497           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q27a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_item_id#497 ASC NULLS FIRST,s_state#694 ASC NULLS FIRST], output=[i_item_id#497,s_state#694,g_state#26550,agg1#26551,agg2#26552,agg3#26553,agg4#26554])
[info] +- Union
[info]    :- *(6) HashAggregate(keys=[i_item_id#497, s_state#694], functions=[avg(cast(agg1#26569 as bigint)), avg(UnscaledValue(agg2#26570)), avg(UnscaledValue(agg3#26571)), avg(UnscaledValue(agg4#26572))])
[info]    :  +- Exchange hashpartitioning(i_item_id#497, s_state#694, 4), true, [id=#91808]
[info]    :     +- *(5) HashAggregate(keys=[i_item_id#497, s_state#694], functions=[partial_avg(cast(agg1#26569 as bigint)), partial_avg(UnscaledValue(agg2#26570)), partial_avg(UnscaledValue(agg3#26571)), partial_avg(UnscaledValue(agg4#26572))])
[info]    :        +- *(5) Project [i_item_id#497, s_state#694, ss_quantity#1173 AS agg1#26569, ss_list_price#1175 AS agg2#26570, ss_coupon_amt#1182 AS agg3#26571, ss_sales_price#1176 AS agg4#26572]
[info]    :           +- *(5) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :              :- *(5) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, s_state#694]
[info]    :              :  +- *(5) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]    :              :     :- *(5) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182]
[info]    :              :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :     :- *(5) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]    :              :     :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]    :              :     :     :     :- *(5) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]    :              :     :     :     :  +- *(5) Filter (((isnotnull(ss_cdemo_sk#1167) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165))
[info]    :              :     :     :     :     +- *(5) ColumnarToRow
[info]    :              :     :     :     :        +- BatchScan[ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),...
[info]    :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91775]
[info]    :              :     :     :        +- *(1) Project [cd_demo_sk#290]
[info]    :              :     :     :           +- *(1) Filter ((((((isnotnull(cd_education_status#293) AND isnotnull(cd_marital_status#292)) AND isnotnull(cd_gender#291)) AND (cd_gender#291 = F)) AND (cd_marital_status#292 = W)) AND (cd_education_status#293 = Primary)) AND isnotnull(cd_demo_sk#290))
[info]    :              :     :     :              +- *(1) ColumnarToRow
[info]    :              :     :     :                 +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_education_status#293] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
[info]    :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91784]
[info]    :              :     :        +- *(2) Project [d_date_sk#331]
[info]    :              :     :           +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 1998)) AND isnotnull(d_date_sk#331))
[info]    :              :     :              +- *(2) ColumnarToRow
[info]    :              :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]    :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91793]
[info]    :              :        +- *(3) Project [s_store_sk#670, s_state#694]
[info]    :              :           +- *(3) Filter ((isnotnull(s_state#694) AND (s_state#694 = TN)) AND isnotnull(s_store_sk#670))
[info]    :              :              +- *(3) ColumnarToRow
[info]    :              :                 +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]    :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91802]
[info]    :                 +- *(4) Project [i_item_sk#496, i_item_id#497]
[info]    :                    +- *(4) Filter isnotnull(i_item_sk#496)
[info]    :                       +- *(4) ColumnarToRow
[info]    :                          +- BatchScan[i_item_sk#496, i_item_id#497] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string>
[info]    :- *(12) HashAggregate(keys=[i_item_id#497], functions=[avg(cast(agg1#26569 as bigint)), avg(UnscaledValue(agg2#26570)), avg(UnscaledValue(agg3#26571)), avg(UnscaledValue(agg4#26572))])
[info]    :  +- Exchange hashpartitioning(i_item_id#497, 4), true, [id=#91970]
[info]    :     +- *(11) HashAggregate(keys=[i_item_id#497], functions=[partial_avg(cast(agg1#26569 as bigint)), partial_avg(UnscaledValue(agg2#26570)), partial_avg(UnscaledValue(agg3#26571)), partial_avg(UnscaledValue(agg4#26572))])
[info]    :        +- *(11) Project [i_item_id#497, ss_quantity#1173 AS agg1#26569, ss_list_price#1175 AS agg2#26570, ss_coupon_amt#1182 AS agg3#26571, ss_sales_price#1176 AS agg4#26572]
[info]    :           +- *(11) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]    :              :- *(11) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182]
[info]    :              :  +- *(11) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]    :              :     :- *(11) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182]
[info]    :              :     :  +- *(11) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]    :              :     :     :- *(11) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]    :              :     :     :  +- *(11) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]    :              :     :     :     :- *(11) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]    :              :     :     :     :  +- *(11) Filter (((isnotnull(ss_cdemo_sk#1167) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165))
[info]    :              :     :     :     :     +- *(11) ColumnarToRow
[info]    :              :     :     :     :        +- BatchScan[ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),...
[info]    :              :     :     :     +- ReusedExchange [cd_demo_sk#290], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91775]
[info]    :              :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91784]
[info]    :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91839]
[info]    :              :        +- *(9) Project [s_store_sk#670]
[info]    :              :           +- *(9) Filter ((isnotnull(s_state#694) AND (s_state#694 = TN)) AND isnotnull(s_store_sk#670))
[info]    :              :              +- *(9) ColumnarToRow
[info]    :              :                 +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]    :              +- ReusedExchange [i_item_sk#496, i_item_id#497], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91802]
[info]    +- *(18) HashAggregate(keys=[], functions=[avg(cast(agg1#26569 as bigint)), avg(UnscaledValue(agg2#26570)), avg(UnscaledValue(agg3#26571)), avg(UnscaledValue(agg4#26572))])
[info]       +- Exchange SinglePartition, true, [id=#92022]
[info]          +- *(17) HashAggregate(keys=[], functions=[partial_avg(cast(agg1#26569 as bigint)), partial_avg(UnscaledValue(agg2#26570)), partial_avg(UnscaledValue(agg3#26571)), partial_avg(UnscaledValue(agg4#26572))])
[info]             +- *(17) Project [ss_quantity#1173 AS agg1#26569, ss_list_price#1175 AS agg2#26570, ss_coupon_amt#1182 AS agg3#26571, ss_sales_price#1176 AS agg4#26572]
[info]                +- *(17) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                   :- *(17) Project [ss_item_sk#1165, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182]
[info]                   :  +- *(17) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                   :     :- *(17) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182]
[info]                   :     :  +- *(17) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                   :     :     :- *(17) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                   :     :     :  +- *(17) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]                   :     :     :     :- *(17) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                   :     :     :     :  +- *(17) Filter (((isnotnull(ss_cdemo_sk#1167) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165))
[info]                   :     :     :     :     +- *(17) ColumnarToRow
[info]                   :     :     :     :        +- BatchScan[ss_item_sk#1165, ss_cdemo_sk#1167, ss_store_sk#1170, ss_quantity#1173, ss_list_price#1175, ss_sales_price#1176, ss_coupon_amt#1182, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list_price:decimal(7,2),...
[info]                   :     :     :     +- ReusedExchange [cd_demo_sk#290], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91775]
[info]                   :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91784]
[info]                   :     +- ReusedExchange [s_store_sk#670], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91839]
[info]                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#91894]
[info]                      +- *(16) Project [i_item_sk#496]
[info]                         +- *(16) Filter isnotnull(i_item_sk#496)
[info]                            +- *(16) ColumnarToRow
[info]                               +- BatchScan[i_item_sk#496] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int>
[info] 
[info] 
[info]   Stopped after 1 iterations, 496 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q27a-v2.7                                           497            497           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q34-v2.7
[info] == Physical Plan ==
[info] *(7) Sort [c_last_name#165 ASC NULLS FIRST, c_first_name#164 ASC NULLS FIRST, c_salutation#163 ASC NULLS FIRST, c_preferred_cust_flag#166 DESC NULLS LAST, ss_ticket_number#1172L ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(c_last_name#165 ASC NULLS FIRST, c_first_name#164 ASC NULLS FIRST, c_salutation#163 ASC NULLS FIRST, c_preferred_cust_flag#166 DESC NULLS LAST, ss_ticket_number#1172L ASC NULLS FIRST, 4), true, [id=#92217]
[info]    +- *(6) Project [c_last_name#165, c_first_name#164, c_salutation#163, c_preferred_cust_flag#166, ss_ticket_number#1172L, cnt#26714L]
[info]       +- *(6) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]          :- *(6) Filter ((cnt#26714L >= 15) AND (cnt#26714L <= 20))
[info]          :  +- *(6) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166], functions=[count(1)])
[info]          :     +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_customer_sk#1166, 4), true, [id=#92203]
[info]          :        +- *(4) HashAggregate(keys=[ss_ticket_number#1172L, ss_customer_sk#1166], functions=[partial_count(1)])
[info]          :           +- *(4) Project [ss_customer_sk#1166, ss_ticket_number#1172L]
[info]          :              +- *(4) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]          :                 :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_ticket_number#1172L]
[info]          :                 :  +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]          :                 :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L]
[info]          :                 :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]          :                 :     :     :- *(4) Project [ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186]
[info]          :                 :     :     :  +- *(4) Filter (((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_customer_sk#1166))
[info]          :                 :     :     :     +- *(4) ColumnarToRow
[info]          :                 :     :     :        +- BatchScan[ss_customer_sk#1166, ss_hdemo_sk#1168, ss_store_sk#1170, ss_ticket_number#1172L, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_hdemo_sk:int,ss_store_sk:int,ss_ticket_number:bigint>
[info]          :                 :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92179]
[info]          :                 :     :        +- *(1) Project [d_date_sk#331]
[info]          :                 :     :           +- *(1) Filter (((((d_dom#340 >= 1) AND (d_dom#340 <= 3)) OR ((d_dom#340 >= 25) AND (d_dom#340 <= 28))) AND d_year#337 IN (1999,2000,2001)) AND isnotnull(d_date_sk#331))
[info]          :                 :     :              +- *(1) ColumnarToRow
[info]          :                 :     :                 +- BatchScan[d_date_sk#331, d_year#337, d_dom#340] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_dom:int>
[info]          :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92188]
[info]          :                 :        +- *(2) Project [s_store_sk#670]
[info]          :                 :           +- *(2) Filter ((isnotnull(s_county#693) AND (s_county#693 = Williamson County)) AND isnotnull(s_store_sk#670))
[info]          :                 :              +- *(2) ColumnarToRow
[info]          :                 :                 +- BatchScan[s_store_sk#670, s_county#693] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_county:string>
[info]          :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92197]
[info]          :                    +- *(3) Project [hd_demo_sk#448]
[info]          :                       +- *(3) Filter (((((CASE WHEN (hd_vehicle_count#452 > 0) THEN (cast(hd_dep_count#451 as double) / cast(hd_vehicle_count#452 as double)) ELSE null END > 1.2) AND isnotnull(hd_vehicle_count#452)) AND ((hd_buy_potential#450 = >10000) OR (hd_buy_potential#450 = unknown))) AND (hd_vehicle_count#452 > 0)) AND isnotnull(hd_demo_sk#448))
[info]          :                          +- *(3) ColumnarToRow
[info]          :                             +- BatchScan[hd_demo_sk#448, hd_buy_potential#450, hd_dep_count#451, hd_vehicle_count#452] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string,hd_dep_count:int,hd_vehicle_count:int>
[info]          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92212]
[info]             +- *(5) Project [c_customer_sk#156, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166]
[info]                +- *(5) Filter isnotnull(c_customer_sk#156)
[info]                   +- *(5) ColumnarToRow
[info]                      +- BatchScan[c_customer_sk#156, c_salutation#163, c_first_name#164, c_last_name#165, c_preferred_cust_flag#166] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_c...
[info] 
[info] 
[info]   Stopped after 1 iterations, 171 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q34-v2.7                                            172            172           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q35-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ca_state#241 ASC NULLS FIRST,cd_gender#291 ASC NULLS FIRST,cd_marital_status#292 ASC NULLS FIRST,cd_dep_count#296 ASC NULLS FIRST,cd_dep_employed_count#297 ASC NULLS FIRST,cd_dep_college_count#298 ASC NULLS FIRST], output=[ca_state#241,cd_gender#291,cd_marital_status#292,cd_dep_count#296,cnt1#26798L,avg(cd_dep_count)#26813,max(cd_dep_count)#26814,sum(cd_dep_count)#26815L,cd_dep_employed_count#297,cnt2#26799L,avg(cd_dep_employed_count)#26816,max(cd_dep_employed_count)#26817,sum(cd_dep_employed_count)#26818L,cd_dep_college_count#298,cnt3#26800L,avg(cd_dep_college_count)#26819,max(cd_dep_college_count)#26820,sum(cd_dep_college_count)#26821L])
[info] +- *(15) HashAggregate(keys=[ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[count(1), avg(cast(cd_dep_count#296 as bigint)), max(cd_dep_count#296), sum(cast(cd_dep_count#296 as bigint)), avg(cast(cd_dep_employed_count#297 as bigint)), max(cd_dep_employed_count#297), sum(cast(cd_dep_employed_count#297 as bigint)), avg(cast(cd_dep_college_count#298 as bigint)), max(cd_dep_college_count#298), sum(cast(cd_dep_college_count#298 as bigint))])
[info]    +- Exchange hashpartitioning(ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298, 4), true, [id=#92609]
[info]       +- *(14) HashAggregate(keys=[ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[partial_count(1), partial_avg(cast(cd_dep_count#296 as bigint)), partial_max(cd_dep_count#296), partial_sum(cast(cd_dep_count#296 as bigint)), partial_avg(cast(cd_dep_employed_count#297 as bigint)), partial_max(cd_dep_employed_count#297), partial_sum(cast(cd_dep_employed_count#297 as bigint)), partial_avg(cast(cd_dep_college_count#298 as bigint)), partial_max(cd_dep_college_count#298), partial_sum(cast(cd_dep_college_count#298 as bigint))])
[info]          +- *(14) Project [ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]             +- *(14) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]                :- *(14) Project [c_current_cdemo_sk#158, ca_state#241]
[info]                :  +- *(14) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                :     :- *(14) Project [c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :  +- *(14) Filter (exists#26857 OR exists#26858)
[info]                :     :     +- SortMergeJoin [c_customer_sk#156], [cs_ship_customer_sk#884], ExistenceJoin(exists#26858)
[info]                :     :        :- SortMergeJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], ExistenceJoin(exists#26857)
[info]                :     :        :  :- SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], LeftSemi
[info]                :     :        :  :  :- *(2) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                :     :        :  :  :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#92467]
[info]                :     :        :  :  :     +- *(1) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :        :  :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_current_cdemo_sk#158))
[info]                :     :        :  :  :           +- *(1) ColumnarToRow
[info]                :     :        :  :  :              +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
[info]                :     :        :  :  +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                :     :        :  :     +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#92485]
[info]                :     :        :  :        +- *(4) Project [ss_customer_sk#1166]
[info]                :     :        :  :           +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :        :  :              :- *(4) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                :     :        :  :              :  +- *(4) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :     :        :  :              :     +- *(4) ColumnarToRow
[info]                :     :        :  :              :        +- BatchScan[ss_sold_time_sk#1164, ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_sales_price#1176, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_ext_tax#1181, ss_coupon_amt#1182, ss_net_paid#1183, ss_net_paid_inc_tax#1184, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_a...
[info]                :     :        :  :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92480]
[info]                :     :        :  :                 +- *(3) Project [d_date_sk#331]
[info]                :     :        :  :                    +- *(3) Filter ((((isnotnull(d_year#337) AND isnotnull(d_qoy#341)) AND (d_year#337 = 2002)) AND (d_qoy#341 < 4)) AND isnotnull(d_date_sk#331))
[info]                :     :        :  :                       +- *(3) ColumnarToRow
[info]                :     :        :  :                          +- BatchScan[d_date_sk#331, d_date_id#332, d_date#333, d_month_seq#334, d_week_seq#335, d_quarter_seq#336, d_year#337, d_dow#338, d_moy#339, d_dom#340, d_qoy#341, d_fy_year#342, d_fy_quarter_seq#343, d_fy_week_seq#344, d_day_name#345, d_quarter_name#346, d_holiday#347, d_weekend#348, d_following_holiday#349, d_first_dom#350, d_last_dom#351, d_same_day_ly#352, d_same_day_lq#353, d_current_day#354, ... 4 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:in...
[info]                :     :        :  +- *(8) Sort [ws_bill_customer_sk#1024 ASC NULLS FIRST], false, 0
[info]                :     :        :     +- Exchange hashpartitioning(ws_bill_customer_sk#1024, 4), true, [id=#92577]
[info]                :     :        :        +- *(7) Project [ws_bill_customer_sk#1024]
[info]                :     :        :           +- *(7) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :        :              :- *(7) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                :     :        :              :  +- *(7) Filter isnotnull(ws_sold_date_sk#1054)
[info]                :     :        :              :     +- *(7) ColumnarToRow
[info]                :     :        :              :        +- BatchScan[ws_sold_time_sk#1021, ws_ship_date_sk#1022, ws_item_sk#1023, ws_bill_customer_sk#1024, ws_bill_cdemo_sk#1025, ws_bill_hdemo_sk#1026, ws_bill_addr_sk#1027, ws_ship_customer_sk#1028, ws_ship_cdemo_sk#1029, ws_ship_hdemo_sk#1030, ws_ship_addr_sk#1031, ws_web_page_sk#1032, ws_web_site_sk#1033, ws_ship_mode_sk#1034, ws_warehouse_sk#1035, ws_promo_sk#1036, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_list_price#1040, ws_sales_price#1041, ws_ext_discount_amt#1042, ws_ext_sales_price#1043, ws_ext_wholesale_cost#1044, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_bill_cde...
[info]                :     :        :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92480]
[info]                :     :        +- *(11) Sort [cs_ship_customer_sk#884 ASC NULLS FIRST], false, 0
[info]                :     :           +- Exchange hashpartitioning(cs_ship_customer_sk#884, 4), true, [id=#92595]
[info]                :     :              +- *(10) Project [cs_ship_customer_sk#884]
[info]                :     :                 +- *(10) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :                    :- *(10) Project [cs_ship_customer_sk#884, cs_sold_date_sk#911]
[info]                :     :                    :  +- *(10) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :                    :     +- *(10) ColumnarToRow
[info]                :     :                    :        +- BatchScan[cs_sold_time_sk#878, cs_ship_date_sk#879, cs_bill_customer_sk#880, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_bill_addr_sk#883, cs_ship_customer_sk#884, cs_ship_cdemo_sk#885, cs_ship_hdemo_sk#886, cs_ship_addr_sk#887, cs_call_center_sk#888, cs_catalog_page_sk#889, cs_ship_mode_sk#890, cs_warehouse_sk#891, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_list_price#897, cs_sales_price#898, cs_ext_discount_amt#899, cs_ext_sales_price#900, cs_ext_wholesale_cost#901, ... 10 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_sold_time_sk:int,cs_ship_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_bi...
[info]                :     :                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92480]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92536]
[info]                :        +- *(12) Project [ca_address_sk#233, ca_state#241]
[info]                :           +- *(12) Filter isnotnull(ca_address_sk#233)
[info]                :              +- *(12) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92545]
[info]                   +- *(13) Project [cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]                      +- *(13) Filter isnotnull(cd_demo_sk#290)
[info]                         +- *(13) ColumnarToRow
[info]                            +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_dep_count:int,cd_dep_employed_...
[info] 
[info] 
[info]   Stopped after 1 iterations, 266 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q35-v2.7                                            266            266           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q35a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ca_state#241 ASC NULLS FIRST,cd_gender#291 ASC NULLS FIRST,cd_marital_status#292 ASC NULLS FIRST,cd_dep_count#296 ASC NULLS FIRST,cd_dep_employed_count#297 ASC NULLS FIRST,cd_dep_college_count#298 ASC NULLS FIRST], output=[ca_state#241,cd_gender#291,cd_marital_status#292,cd_dep_count#296,cnt1#26944L,avg(cd_dep_count)#26959,max(cd_dep_count)#26960,sum(cd_dep_count)#26961L,cd_dep_employed_count#297,cnt2#26945L,avg(cd_dep_employed_count)#26962,max(cd_dep_employed_count)#26963,sum(cd_dep_employed_count)#26964L,cd_dep_college_count#298,cnt3#26946L,avg(cd_dep_college_count)#26965,max(cd_dep_college_count)#26966,sum(cd_dep_college_count)#26967L])
[info] +- *(14) HashAggregate(keys=[ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[count(1), avg(cast(cd_dep_count#296 as bigint)), max(cd_dep_count#296), sum(cast(cd_dep_count#296 as bigint)), avg(cast(cd_dep_employed_count#297 as bigint)), max(cd_dep_employed_count#297), sum(cast(cd_dep_employed_count#297 as bigint)), avg(cast(cd_dep_college_count#298 as bigint)), max(cd_dep_college_count#298), sum(cast(cd_dep_college_count#298 as bigint))])
[info]    +- Exchange hashpartitioning(ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298, 4), true, [id=#92975]
[info]       +- *(13) HashAggregate(keys=[ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298], functions=[partial_count(1), partial_avg(cast(cd_dep_count#296 as bigint)), partial_max(cd_dep_count#296), partial_sum(cast(cd_dep_count#296 as bigint)), partial_avg(cast(cd_dep_employed_count#297 as bigint)), partial_max(cd_dep_employed_count#297), partial_sum(cast(cd_dep_employed_count#297 as bigint)), partial_avg(cast(cd_dep_college_count#298 as bigint)), partial_max(cd_dep_college_count#298), partial_sum(cast(cd_dep_college_count#298 as bigint))])
[info]          +- *(13) Project [ca_state#241, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]             +- *(13) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#290], Inner, BuildRight
[info]                :- *(13) Project [c_current_cdemo_sk#158, ca_state#241]
[info]                :  +- *(13) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#233], Inner, BuildRight
[info]                :     :- *(13) Project [c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :  +- SortMergeJoin [c_customer_sk#156], [customsk#26941], LeftSemi
[info]                :     :     :- SortMergeJoin [c_customer_sk#156], [ss_customer_sk#1166], LeftSemi
[info]                :     :     :  :- *(2) Sort [c_customer_sk#156 ASC NULLS FIRST], false, 0
[info]                :     :     :  :  +- Exchange hashpartitioning(c_customer_sk#156, 4), true, [id=#92848]
[info]                :     :     :  :     +- *(1) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160]
[info]                :     :     :  :        +- *(1) Filter (isnotnull(c_current_addr_sk#160) AND isnotnull(c_current_cdemo_sk#158))
[info]                :     :     :  :           +- *(1) ColumnarToRow
[info]                :     :     :  :              +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_addr_sk#160] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>
[info]                :     :     :  +- *(5) Sort [ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]                :     :     :     +- Exchange hashpartitioning(ss_customer_sk#1166, 4), true, [id=#92866]
[info]                :     :     :        +- *(4) Project [ss_customer_sk#1166]
[info]                :     :     :           +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :     :     :              :- *(4) Project [ss_customer_sk#1166, ss_sold_date_sk#1186]
[info]                :     :     :              :  +- *(4) Filter isnotnull(ss_sold_date_sk#1186)
[info]                :     :     :              :     +- *(4) ColumnarToRow
[info]                :     :     :              :        +- BatchScan[ss_sold_time_sk#1164, ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_list_price#1175, ss_sales_price#1176, ss_ext_discount_amt#1177, ss_ext_sales_price#1178, ss_ext_wholesale_cost#1179, ss_ext_list_price#1180, ss_ext_tax#1181, ss_coupon_amt#1182, ss_net_paid#1183, ss_net_paid_inc_tax#1184, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_sold_time_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_a...
[info]                :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92861]
[info]                :     :     :                 +- *(3) Project [d_date_sk#331]
[info]                :     :     :                    +- *(3) Filter ((((isnotnull(d_year#337) AND isnotnull(d_qoy#341)) AND (d_year#337 = 1999)) AND (d_qoy#341 < 4)) AND isnotnull(d_date_sk#331))
[info]                :     :     :                       +- *(3) ColumnarToRow
[info]                :     :     :                          +- BatchScan[d_date_sk#331, d_date_id#332, d_date#333, d_month_seq#334, d_week_seq#335, d_quarter_seq#336, d_year#337, d_dow#338, d_moy#339, d_dom#340, d_qoy#341, d_fy_year#342, d_fy_quarter_seq#343, d_fy_week_seq#344, d_day_name#345, d_quarter_name#346, d_holiday#347, d_weekend#348, d_following_holiday#349, d_first_dom#350, d_last_dom#351, d_same_day_ly#352, d_same_day_lq#353, d_current_day#354, ... 4 more fields] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date_id:string,d_date:date,d_month_seq:int,d_week_seq:int,d_quarter_seq:in...
[info]                :     :     +- *(10) Sort [customsk#26941 ASC NULLS FIRST], false, 0
[info]                :     :        +- Exchange hashpartitioning(customsk#26941, 4), true, [id=#92962]
[info]                :     :           +- Union
[info]                :     :              :- *(7) Project [ws_bill_customer_sk#1024 AS customsk#26941]
[info]                :     :              :  +- *(7) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :     :              :     :- *(7) Project [ws_bill_customer_sk#1024, ws_sold_date_sk#1054]
[info]                :     :              :     :  +- *(7) Filter isnotnull(ws_sold_date_sk#1054)
[info]                :     :              :     :     +- *(7) ColumnarToRow
[info]                :     :              :     :        +- BatchScan[ws_bill_customer_sk#1024, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int>
[info]                :     :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92880]
[info]                :     :              :        +- *(6) Project [d_date_sk#331]
[info]                :     :              :           +- *(6) Filter ((((isnotnull(d_year#337) AND isnotnull(d_qoy#341)) AND (d_year#337 = 1999)) AND (d_qoy#341 < 4)) AND isnotnull(d_date_sk#331))
[info]                :     :              :              +- *(6) ColumnarToRow
[info]                :     :              :                 +- BatchScan[d_date_sk#331, d_year#337, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
[info]                :     :              +- *(9) Project [cs_ship_customer_sk#884 AS customsk#26942]
[info]                :     :                 +- *(9) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :     :                    :- *(9) Project [cs_ship_customer_sk#884, cs_sold_date_sk#911]
[info]                :     :                    :  +- *(9) Filter isnotnull(cs_sold_date_sk#911)
[info]                :     :                    :     +- *(9) ColumnarToRow
[info]                :     :                    :        +- BatchScan[cs_ship_customer_sk#884, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ship_customer_sk:int>
[info]                :     :                    +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92880]
[info]                :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92912]
[info]                :        +- *(11) Project [ca_address_sk#233, ca_state#241]
[info]                :           +- *(11) Filter isnotnull(ca_address_sk#233)
[info]                :              +- *(11) ColumnarToRow
[info]                :                 +- BatchScan[ca_address_sk#233, ca_state#241] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_state:string>
[info]                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#92921]
[info]                   +- *(12) Project [cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298]
[info]                      +- *(12) Filter isnotnull(cd_demo_sk#290)
[info]                         +- *(12) ColumnarToRow
[info]                            +- BatchScan[cd_demo_sk#290, cd_gender#291, cd_marital_status#292, cd_dep_count#296, cd_dep_employed_count#297, cd_dep_college_count#298] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_dep_count:int,cd_dep_employed_...
[info] 
[info] 
[info]   Stopped after 1 iterations, 253 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q35a-v2.7                                           253            253           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q36a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#27115 DESC NULLS LAST,CASE WHEN (lochierarchy#27115 = 0) THEN i_category#508 END ASC NULLS FIRST,rank_within_parent#27107 ASC NULLS FIRST], output=[gross_margin#27145,i_category#508,i_class#506,lochierarchy#27115,rank_within_parent#27107])
[info] +- *(23) Project [gross_margin#27145, i_category#508, i_class#506, lochierarchy#27115, rank_within_parent#27107]
[info]    +- Window [rank(gross_margin#27145) windowspecdefinition(lochierarchy#27115, _w0#27160, gross_margin#27145 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#27107], [lochierarchy#27115, _w0#27160], [gross_margin#27145 ASC NULLS FIRST]
[info]       +- *(22) Sort [lochierarchy#27115 ASC NULLS FIRST, _w0#27160 ASC NULLS FIRST, gross_margin#27145 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(lochierarchy#27115, _w0#27160, 4), true, [id=#93780]
[info]             +- *(21) HashAggregate(keys=[gross_margin#27145, i_category#508, i_class#506, t_category#27113, t_class#27114, lochierarchy#27115], functions=[])
[info]                +- Exchange hashpartitioning(gross_margin#27145, i_category#508, i_class#506, t_category#27113, t_class#27114, lochierarchy#27115, 4), true, [id=#93731]
[info]                   +- *(20) HashAggregate(keys=[gross_margin#27145, i_category#508, i_class#506, t_category#27113, t_class#27114, lochierarchy#27115], functions=[])
[info]                      +- Union
[info]                         :- *(13) HashAggregate(keys=[gross_margin#27145, i_category#508, i_class#506, t_category#27113, t_class#27114, lochierarchy#27115], functions=[])
[info]                         :  +- Exchange hashpartitioning(gross_margin#27145, i_category#508, i_class#506, t_category#27113, t_class#27114, lochierarchy#27115, 4), true, [id=#93649]
[info]                         :     +- *(12) HashAggregate(keys=[gross_margin#27145, i_category#508, i_class#506, t_category#27113, t_class#27114, lochierarchy#27115], functions=[])
[info]                         :        +- Union
[info]                         :           :- *(5) HashAggregate(keys=[i_category#508, i_class#506], functions=[sum(UnscaledValue(ss_net_profit#1185)), sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                         :           :  +- Exchange hashpartitioning(i_category#508, i_class#506, 4), true, [id=#93408]
[info]                         :           :     +- *(4) HashAggregate(keys=[i_category#508, i_class#506], functions=[partial_sum(UnscaledValue(ss_net_profit#1185)), partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                         :           :        +- *(4) Project [ss_ext_sales_price#1178, ss_net_profit#1185, i_class#506, i_category#508]
[info]                         :           :           +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                         :           :              :- *(4) Project [ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, i_class#506, i_category#508]
[info]                         :           :              :  +- *(4) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                         :           :              :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185]
[info]                         :           :              :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                         :           :              :     :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                         :           :              :     :     :  +- *(4) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_store_sk#1170))
[info]                         :           :              :     :     :     +- *(4) ColumnarToRow
[info]                         :           :              :     :     :        +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>
[info]                         :           :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93384]
[info]                         :           :              :     :        +- *(1) Project [d_date_sk#331]
[info]                         :           :              :     :           +- *(1) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331))
[info]                         :           :              :     :              +- *(1) ColumnarToRow
[info]                         :           :              :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                         :           :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93393]
[info]                         :           :              :        +- *(2) Project [i_item_sk#496, i_class#506, i_category#508]
[info]                         :           :              :           +- *(2) Filter isnotnull(i_item_sk#496)
[info]                         :           :              :              +- *(2) ColumnarToRow
[info]                         :           :              :                 +- BatchScan[i_item_sk#496, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
[info]                         :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#93402]
[info]                         :           :                 +- *(3) Project [s_store_sk#670]
[info]                         :           :                    +- *(3) Filter ((isnotnull(s_state#694) AND (s_state#694 = TN)) AND isnotnull(s_store_sk#670))
[info]                         :           :                       +- *(3) ColumnarToRow
[info]                         :           :                          +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]                         :           +- *(11) HashAggregate(keys=[i_category#508], functions=[sum(ss_net_profit#27108), sum(ss_ext_sales_price#27109)])
[info]                         :              +- Exchange hashpartitioning(i_category#508, 4), true, [id=#93641]
[info]                         :                 +- *(10) HashAggregate(keys=[i_category#508], functions=[partial_sum(ss_net_profit#27108), partial_sum(ss_ext_sales_price#27109)])
[info]                         :                    +- *(10) HashAggregate(keys=[i_category#508, i_class#506], functions=[sum(UnscaledValue(ss_net_profit#1185)), sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                         :                       +- ReusedExchange [i_category#508, i_class#506, sum#27218L, sum#27219L], Exchange hashpartitioning(i_category#508, i_class#506, 4), true, [id=#93408]
[info]                         +- *(19) HashAggregate(keys=[], functions=[sum(ss_net_profit#27108), sum(ss_ext_sales_price#27109)])
[info]                            +- Exchange SinglePartition, true, [id=#93723]
[info]                               +- *(18) HashAggregate(keys=[], functions=[partial_sum(ss_net_profit#27108), partial_sum(ss_ext_sales_price#27109)])
[info]                                  +- *(18) HashAggregate(keys=[i_category#508, i_class#506], functions=[sum(UnscaledValue(ss_net_profit#1185)), sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                                     +- ReusedExchange [i_category#508, i_class#506, sum#27226L, sum#27227L], Exchange hashpartitioning(i_category#508, i_class#506, 4), true, [id=#93408]
[info] 
[info] 
[info]   Stopped after 1 iterations, 383 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q36a-v2.7                                           383            383           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q47-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#28315 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#28316 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,d_moy#339 ASC NULLS FIRST], output=[i_category#508,d_year#337,d_moy#339,avg_monthly_sales#28316,sum_sales#28315,psum#28318,nsum#28319])
[info] +- *(27) Project [i_category#508, d_year#337, d_moy#339, avg_monthly_sales#28316, sum_sales#28315, sum_sales#28539 AS psum#28318, sum_sales#29014 AS nsum#28319]
[info]    +- *(27) SortMergeJoin [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, rn#28317], [i_category#29119, i_brand#29115, s_store_name#29276, s_company_name#29288, (rn#28920 - 1)], Inner
[info]       :- *(18) Project [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, sum_sales#28315, avg_monthly_sales#28316, rn#28317, sum_sales#28539]
[info]       :  +- *(18) SortMergeJoin [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, rn#28317], [i_category#28644, i_brand#28640, s_store_name#28801, s_company_name#28813, (rn#28445 + 1)], Inner
[info]       :     :- *(9) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, s_store_name#675 ASC NULLS FIRST, s_company_name#687 ASC NULLS FIRST, rn#28317 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, rn#28317, 4), true, [id=#94270]
[info]       :     :     +- *(8) Project [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, sum_sales#28315, avg_monthly_sales#28316, rn#28317]
[info]       :     :        +- *(8) Filter (((isnotnull(avg_monthly_sales#28316) AND (avg_monthly_sales#28316 > 0.000000)) AND (CASE WHEN (avg_monthly_sales#28316 > 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#28315 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#28316 as decimal(22,6)))), DecimalType(22,6), true))) / promote_precision(cast(avg_monthly_sales#28316 as decimal(22,6)))), DecimalType(38,16), true) ELSE null END > 0.1000000000000000)) AND isnotnull(rn#28317))
[info]       :     :           +- Window [avg(_w0#28347) windowspecdefinition(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#28316], [i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337]
[info]       :     :              +- *(7) Filter (isnotnull(d_year#337) AND (d_year#337 = 1999))
[info]       :     :                 +- Window [rank(d_year#337, d_moy#339) windowspecdefinition(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#28317], [i_category#508, i_brand#504, s_store_name#675, s_company_name#687], [d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST]
[info]       :     :                    +- *(6) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, s_store_name#675 ASC NULLS FIRST, s_company_name#687 ASC NULLS FIRST, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST], false, 0
[info]       :     :                       +- Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, 4), true, [id=#94257]
[info]       :     :                          +- *(5) HashAggregate(keys=[i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :                             +- Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, 4), true, [id=#94253]
[info]       :     :                                +- *(4) HashAggregate(keys=[i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :                                   +- *(4) Project [i_brand#504, i_category#508, ss_sales_price#1176, d_year#337, d_moy#339, s_store_name#675, s_company_name#687]
[info]       :     :                                      +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]       :     :                                         :- *(4) Project [i_brand#504, i_category#508, ss_store_sk#1170, ss_sales_price#1176, d_year#337, d_moy#339]
[info]       :     :                                         :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :                                         :     :- *(4) Project [i_brand#504, i_category#508, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                                         :     :  +- *(4) BroadcastHashJoin [i_item_sk#496], [ss_item_sk#1165], Inner, BuildLeft
[info]       :     :                                         :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#94225]
[info]       :     :                                         :     :     :  +- *(1) Project [i_item_sk#496, i_brand#504, i_category#508]
[info]       :     :                                         :     :     :     +- *(1) Filter ((isnotnull(i_item_sk#496) AND isnotnull(i_brand#504)) AND isnotnull(i_category#508))
[info]       :     :                                         :     :     :        +- *(1) ColumnarToRow
[info]       :     :                                         :     :     :           +- BatchScan[i_item_sk#496, i_brand#504, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
[info]       :     :                                         :     :     +- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                                         :     :        +- *(4) Filter ((isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170))
[info]       :     :                                         :     :           +- *(4) ColumnarToRow
[info]       :     :                                         :     :              +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
[info]       :     :                                         :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#94238]
[info]       :     :                                         :        +- *(2) Project [d_date_sk#331, d_year#337, d_moy#339]
[info]       :     :                                         :           +- *(2) Filter ((((d_year#337 = 1999) OR ((d_year#337 = 1998) AND (d_moy#339 = 12))) OR ((d_year#337 = 2000) AND (d_moy#339 = 1))) AND isnotnull(d_date_sk#331))
[info]       :     :                                         :              +- *(2) ColumnarToRow
[info]       :     :                                         :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]       :     :                                         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#94247]
[info]       :     :                                            +- *(3) Project [s_store_sk#670, s_store_name#675, s_company_name#687]
[info]       :     :                                               +- *(3) Filter ((isnotnull(s_store_sk#670) AND isnotnull(s_store_name#675)) AND isnotnull(s_company_name#687))
[info]       :     :                                                  +- *(3) ColumnarToRow
[info]       :     :                                                     +- BatchScan[s_store_sk#670, s_store_name#675, s_company_name#687] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
[info]       :     +- *(17) Sort [i_category#28644 ASC NULLS FIRST, i_brand#28640 ASC NULLS FIRST, s_store_name#28801 ASC NULLS FIRST, s_company_name#28813 ASC NULLS FIRST, (rn#28445 + 1) ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(i_category#28644, i_brand#28640, s_store_name#28801, s_company_name#28813, (rn#28445 + 1), 4), true, [id=#94513]
[info]       :           +- *(16) Project [i_category#28644, i_brand#28640, s_store_name#28801, s_company_name#28813, sum_sales#28539, rn#28445]
[info]       :              +- *(16) Filter isnotnull(rn#28445)
[info]       :                 +- Window [rank(d_year#28729, d_moy#28731) windowspecdefinition(i_category#28644, i_brand#28640, s_store_name#28801, s_company_name#28813, d_year#28729 ASC NULLS FIRST, d_moy#28731 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#28445], [i_category#28644, i_brand#28640, s_store_name#28801, s_company_name#28813], [d_year#28729 ASC NULLS FIRST, d_moy#28731 ASC NULLS FIRST]
[info]       :                    +- *(15) Sort [i_category#28644 ASC NULLS FIRST, i_brand#28640 ASC NULLS FIRST, s_store_name#28801 ASC NULLS FIRST, s_company_name#28813 ASC NULLS FIRST, d_year#28729 ASC NULLS FIRST, d_moy#28731 ASC NULLS FIRST], false, 0
[info]       :                       +- Exchange hashpartitioning(i_category#28644, i_brand#28640, s_store_name#28801, s_company_name#28813, 4), true, [id=#94504]
[info]       :                          +- *(14) HashAggregate(keys=[i_category#28644, i_brand#28640, s_store_name#28801, s_company_name#28813, d_year#28729, d_moy#28731], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]       :                             +- ReusedExchange [i_category#28644, i_brand#28640, s_store_name#28801, s_company_name#28813, d_year#28729, d_moy#28731, sum#29421L], Exchange hashpartitioning(i_category#508, i_brand#504, s_store_name#675, s_company_name#687, d_year#337, d_moy#339, 4), true, [id=#94253]
[info]       +- *(26) Sort [i_category#29119 ASC NULLS FIRST, i_brand#29115 ASC NULLS FIRST, s_store_name#29276 ASC NULLS FIRST, s_company_name#29288 ASC NULLS FIRST, (rn#28920 - 1) ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_category#29119, i_brand#29115, s_store_name#29276, s_company_name#29288, (rn#28920 - 1), 4), true, [id=#94613]
[info]             +- *(25) Project [i_category#29119, i_brand#29115, s_store_name#29276, s_company_name#29288, sum_sales#29014, rn#28920]
[info]                +- *(25) Filter isnotnull(rn#28920)
[info]                   +- Window [rank(d_year#29204, d_moy#29206) windowspecdefinition(i_category#29119, i_brand#29115, s_store_name#29276, s_company_name#29288, d_year#29204 ASC NULLS FIRST, d_moy#29206 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#28920], [i_category#29119, i_brand#29115, s_store_name#29276, s_company_name#29288], [d_year#29204 ASC NULLS FIRST, d_moy#29206 ASC NULLS FIRST]
[info]                      +- *(24) Sort [i_category#29119 ASC NULLS FIRST, i_brand#29115 ASC NULLS FIRST, s_store_name#29276 ASC NULLS FIRST, s_company_name#29288 ASC NULLS FIRST, d_year#29204 ASC NULLS FIRST, d_moy#29206 ASC NULLS FIRST], false, 0
[info]                         +- ReusedExchange [i_category#29119, i_brand#29115, s_store_name#29276, s_company_name#29288, d_year#29204, d_moy#29206, sum_sales#29014], Exchange hashpartitioning(i_category#28644, i_brand#28640, s_store_name#28801, s_company_name#28813, 4), true, [id=#94504]
[info] 
[info] 
[info]   Stopped after 1 iterations, 589 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q47-v2.7                                            589            589           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q49-v2.7
[info] 09:33:29.095 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 09:33:29.096 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 09:33:29.105 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 09:33:29.105 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 09:33:29.113 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] 09:33:29.113 WARN org.apache.spark.sql.execution.window.WindowExec: No Partition Defined for Window operation! Moving all data to a single partition, this can cause serious performance degradation.
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#29554 ASC NULLS FIRST,return_rank#29552 ASC NULLS FIRST,currency_rank#29553 ASC NULLS FIRST,item#29549 ASC NULLS FIRST], output=[channel#29554,item#29549,return_ratio#29550,return_rank#29552,currency_rank#29553])
[info] +- *(32) HashAggregate(keys=[channel#29554, item#29549, return_ratio#29550, return_rank#29552, currency_rank#29553], functions=[])
[info]    +- Exchange hashpartitioning(channel#29554, item#29549, return_ratio#29550, return_rank#29552, currency_rank#29553, 4), true, [id=#95408]
[info]       +- *(31) HashAggregate(keys=[channel#29554, item#29549, return_ratio#29550, return_rank#29552, currency_rank#29553], functions=[])
[info]          +- Union
[info]             :- *(10) Project [web AS channel#29554, item#29549, return_ratio#29550, return_rank#29552, currency_rank#29553]
[info]             :  +- *(10) Filter ((return_rank#29552 <= 10) OR (currency_rank#29553 <= 10))
[info]             :     +- Window [rank(return_ratio#29550) windowspecdefinition(return_ratio#29550 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#29552], [return_ratio#29550 ASC NULLS FIRST]
[info]             :        +- *(9) Sort [return_ratio#29550 ASC NULLS FIRST], false, 0
[info]             :           +- *(9) Project [item#29549, return_ratio#29550, currency_rank#29553]
[info]             :              +- Window [rank(currency_ratio#29551) windowspecdefinition(currency_ratio#29551 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#29553], [currency_ratio#29551 ASC NULLS FIRST]
[info]             :                 +- *(8) Sort [currency_ratio#29551 ASC NULLS FIRST], false, 0
[info]             :                    +- Exchange SinglePartition, true, [id=#95068]
[info]             :                       +- *(7) HashAggregate(keys=[ws_item_sk#1023], functions=[sum(cast(coalesce(wr_return_quantity#1276, 0) as bigint)), sum(cast(coalesce(ws_quantity#1038, 0) as bigint)), sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), sum(coalesce(cast(ws_net_paid#1049 as decimal(12,2)), 0.00))])
[info]             :                          +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#95064]
[info]             :                             +- *(6) HashAggregate(keys=[ws_item_sk#1023], functions=[partial_sum(cast(coalesce(wr_return_quantity#1276, 0) as bigint)), partial_sum(cast(coalesce(ws_quantity#1038, 0) as bigint)), partial_sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(ws_net_paid#1049 as decimal(12,2)), 0.00))])
[info]             :                                +- *(6) Project [ws_item_sk#1023, ws_quantity#1038, ws_net_paid#1049, wr_return_quantity#1276, wr_return_amt#1277]
[info]             :                                   +- *(6) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :                                      :- *(6) Project [ws_item_sk#1023, ws_quantity#1038, ws_net_paid#1049, ws_sold_date_sk#1054, wr_return_quantity#1276, wr_return_amt#1277]
[info]             :                                      :  +- *(6) SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], Inner
[info]             :                                      :     :- *(2) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]             :                                      :     :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#95036]
[info]             :                                      :     :     +- *(1) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]             :                                      :     :        +- *(1) Filter ((((((((isnotnull(ws_quantity#1038) AND isnotnull(ws_net_profit#1053)) AND isnotnull(ws_net_paid#1049)) AND (ws_net_profit#1053 > 1.00)) AND (ws_net_paid#1049 > 0.00)) AND (ws_quantity#1038 > 0)) AND isnotnull(ws_item_sk#1023)) AND isnotnull(ws_order_number#1037L)) AND isnotnull(ws_sold_date_sk#1054))
[info]             :                                      :     :           +- *(1) ColumnarToRow
[info]             :                                      :     :              +- BatchScan[ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_net_paid#1049, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_net_paid:decimal(7,2),ws_net_prof...
[info]             :                                      :     +- *(4) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]             :                                      :        +- Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#95046]
[info]             :                                      :           +- *(3) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277]
[info]             :                                      :              +- *(3) Filter (((isnotnull(wr_return_amt#1277) AND (wr_return_amt#1277 > 10000.00)) AND isnotnull(wr_order_number#1275L)) AND isnotnull(wr_item_sk#1264))
[info]             :                                      :                 +- *(3) ColumnarToRow
[info]             :                                      :                    +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
[info]             :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#95058]
[info]             :                                         +- *(5) Project [d_date_sk#331]
[info]             :                                            +- *(5) Filter ((((isnotnull(d_year#337) AND isnotnull(d_moy#339)) AND (d_year#337 = 2001)) AND (d_moy#339 = 12)) AND isnotnull(d_date_sk#331))
[info]             :                                               +- *(5) ColumnarToRow
[info]             :                                                  +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]             :- *(20) Project [catalog AS channel#29560, item#29555, return_ratio#29556, return_rank#29558, currency_rank#29559]
[info]             :  +- *(20) Filter ((return_rank#29558 <= 10) OR (currency_rank#29559 <= 10))
[info]             :     +- Window [rank(return_ratio#29556) windowspecdefinition(return_ratio#29556 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#29558], [return_ratio#29556 ASC NULLS FIRST]
[info]             :        +- *(19) Sort [return_ratio#29556 ASC NULLS FIRST], false, 0
[info]             :           +- *(19) Project [item#29555, return_ratio#29556, currency_rank#29559]
[info]             :              +- Window [rank(currency_ratio#29557) windowspecdefinition(currency_ratio#29557 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#29559], [currency_ratio#29557 ASC NULLS FIRST]
[info]             :                 +- *(18) Sort [currency_ratio#29557 ASC NULLS FIRST], false, 0
[info]             :                    +- Exchange SinglePartition, true, [id=#95218]
[info]             :                       +- *(17) HashAggregate(keys=[cs_item_sk#892], functions=[sum(cast(coalesce(cr_return_quantity#57, 0) as bigint)), sum(cast(coalesce(cs_quantity#895, 0) as bigint)), sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), sum(coalesce(cast(cs_net_paid#906 as decimal(12,2)), 0.00))])
[info]             :                          +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#95214]
[info]             :                             +- *(16) HashAggregate(keys=[cs_item_sk#892], functions=[partial_sum(cast(coalesce(cr_return_quantity#57, 0) as bigint)), partial_sum(cast(coalesce(cs_quantity#895, 0) as bigint)), partial_sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(cs_net_paid#906 as decimal(12,2)), 0.00))])
[info]             :                                +- *(16) Project [cs_item_sk#892, cs_quantity#895, cs_net_paid#906, cr_return_quantity#57, cr_return_amount#58]
[info]             :                                   +- *(16) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :                                      :- *(16) Project [cs_item_sk#892, cs_quantity#895, cs_net_paid#906, cs_sold_date_sk#911, cr_return_quantity#57, cr_return_amount#58]
[info]             :                                      :  +- *(16) SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], Inner
[info]             :                                      :     :- *(12) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]             :                                      :     :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#95087]
[info]             :                                      :     :     +- *(11) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_net_paid#906, cs_sold_date_sk#911]
[info]             :                                      :     :        +- *(11) Filter ((((((((isnotnull(cs_net_paid#906) AND isnotnull(cs_quantity#895)) AND isnotnull(cs_net_profit#910)) AND (cs_net_profit#910 > 1.00)) AND (cs_net_paid#906 > 0.00)) AND (cs_quantity#895 > 0)) AND isnotnull(cs_order_number#894L)) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_sold_date_sk#911))
[info]             :                                      :     :           +- *(11) ColumnarToRow
[info]             :                                      :     :              +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_net_paid#906, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_net_paid:decimal(7,2),cs_net_prof...
[info]             :                                      :     +- *(14) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]             :                                      :        +- Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#95097]
[info]             :                                      :           +- *(13) Project [cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58]
[info]             :                                      :              +- *(13) Filter (((isnotnull(cr_return_amount#58) AND (cr_return_amount#58 > 10000.00)) AND isnotnull(cr_item_sk#42)) AND isnotnull(cr_order_number#56L))
[info]             :                                      :                 +- *(13) ColumnarToRow
[info]             :                                      :                    +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
[info]             :                                      +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#95058]
[info]             +- *(30) Project [store AS channel#29566, item#29561, return_ratio#29562, return_rank#29564, currency_rank#29565]
[info]                +- *(30) Filter ((return_rank#29564 <= 10) OR (currency_rank#29565 <= 10))
[info]                   +- Window [rank(currency_ratio#29563) windowspecdefinition(currency_ratio#29563 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#29565], [currency_ratio#29563 ASC NULLS FIRST]
[info]                      +- *(29) Sort [currency_ratio#29563 ASC NULLS FIRST], false, 0
[info]                         +- Window [rank(return_ratio#29562) windowspecdefinition(return_ratio#29562 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#29564], [return_ratio#29562 ASC NULLS FIRST]
[info]                            +- *(28) Sort [return_ratio#29562 ASC NULLS FIRST], false, 0
[info]                               +- Exchange SinglePartition, true, [id=#95344]
[info]                                  +- *(27) HashAggregate(keys=[ss_item_sk#1165], functions=[sum(cast(coalesce(sr_return_quantity#800, 0) as bigint)), sum(cast(coalesce(ss_quantity#1173, 0) as bigint)), sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), sum(coalesce(cast(ss_net_paid#1183 as decimal(12,2)), 0.00))])
[info]                                     +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#95340]
[info]                                        +- *(26) HashAggregate(keys=[ss_item_sk#1165], functions=[partial_sum(cast(coalesce(sr_return_quantity#800, 0) as bigint)), partial_sum(cast(coalesce(ss_quantity#1173, 0) as bigint)), partial_sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(ss_net_paid#1183 as decimal(12,2)), 0.00))])
[info]                                           +- *(26) Project [ss_item_sk#1165, ss_quantity#1173, ss_net_paid#1183, sr_return_quantity#800, sr_return_amt#801]
[info]                                              +- *(26) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                                                 :- *(26) Project [ss_item_sk#1165, ss_quantity#1173, ss_net_paid#1183, ss_sold_date_sk#1186, sr_return_quantity#800, sr_return_amt#801]
[info]                                                 :  +- *(26) SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], Inner
[info]                                                 :     :- *(22) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                                                 :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#95138]
[info]                                                 :     :     +- *(21) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]                                                 :     :        +- *(21) Filter ((((((((isnotnull(ss_net_paid#1183) AND isnotnull(ss_quantity#1173)) AND isnotnull(ss_net_profit#1185)) AND (ss_net_profit#1185 > 1.00)) AND (ss_net_paid#1183 > 0.00)) AND (ss_quantity#1173 > 0)) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_sold_date_sk#1186))
[info]                                                 :     :           +- *(21) ColumnarToRow
[info]                                                 :     :              +- BatchScan[ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_net_paid#1183, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_net_paid:decimal(7,2),ss_net_pro...
[info]                                                 :     +- *(24) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                                                 :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#95148]
[info]                                                 :           +- *(23) Project [sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801]
[info]                                                 :              +- *(23) Filter (((isnotnull(sr_return_amt#801) AND (sr_return_amt#801 > 10000.00)) AND isnotnull(sr_item_sk#792)) AND isnotnull(sr_ticket_number#799L))
[info]                                                 :                 +- *(23) ColumnarToRow
[info]                                                 :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
[info]                                                 +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#95058]
[info] 
[info] 
[info]   Stopped after 1 iterations, 442 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q49-v2.7                                            442            442           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q51a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[item_sk#30219 ASC NULLS FIRST,d_date#30220 ASC NULLS FIRST], output=[item_sk#30219,d_date#30220,web_sales#30221,store_sales#30222,web_cumulative#30209,store_cumulative#30210])
[info] +- *(63) Filter ((isnotnull(web_cumulative#30209) AND isnotnull(store_cumulative#30210)) AND (web_cumulative#30209 > store_cumulative#30210))
[info]    +- *(63) HashAggregate(keys=[item_sk#30219, d_date#30220, web_sales#30221, store_sales#30222], functions=[max(web_sales#30665), max(store_sales#30666)])
[info]       +- *(63) HashAggregate(keys=[item_sk#30219, d_date#30220, web_sales#30221, store_sales#30222], functions=[partial_max(web_sales#30665), partial_max(store_sales#30666)])
[info]          +- *(63) Project [item_sk#30219, d_date#30220, web_sales#30221, store_sales#30222, web_sales#30665, store_sales#30666]
[info]             +- *(63) SortMergeJoin [item_sk#30219], [item_sk#30663], Inner, (rk#30223 >= rk#30658)
[info]                :- *(31) Filter isnotnull(rk#30223)
[info]                :  +- Window [row_number() windowspecdefinition(item_sk#30219, d_date#30220 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#30223], [item_sk#30219], [d_date#30220 ASC NULLS FIRST]
[info]                :     +- *(30) Sort [item_sk#30219 ASC NULLS FIRST, d_date#30220 ASC NULLS FIRST], false, 0
[info]                :        +- Exchange hashpartitioning(item_sk#30219, 4), true, [id=#96912]
[info]                :           +- *(29) Project [CASE WHEN isnotnull(item_sk#30211) THEN item_sk#30211 ELSE item_sk#30215 END AS item_sk#30219, CASE WHEN isnotnull(d_date#333) THEN d_date#333 ELSE d_date#30604 END AS d_date#30220, cume_sales#30214 AS web_sales#30221, cume_sales#30218 AS store_sales#30222]
[info]                :              +- *(29) Filter isnotnull(CASE WHEN isnotnull(item_sk#30211) THEN item_sk#30211 ELSE item_sk#30215 END)
[info]                :                 +- SortMergeJoin [item_sk#30211, d_date#333], [item_sk#30215, d_date#30604], FullOuter
[info]                :                    :- *(14) Sort [item_sk#30211 ASC NULLS FIRST, d_date#333 ASC NULLS FIRST], false, 0
[info]                :                    :  +- Exchange hashpartitioning(item_sk#30211, d_date#333, 4), true, [id=#96686]
[info]                :                    :     +- *(13) HashAggregate(keys=[item_sk#30211, d_date#333, sumws#30212], functions=[sum(sumws#30367)])
[info]                :                    :        +- *(13) HashAggregate(keys=[item_sk#30211, d_date#333, sumws#30212], functions=[partial_sum(sumws#30367)])
[info]                :                    :           +- *(13) Project [item_sk#30211, d_date#333, sumws#30212, sumws#30367]
[info]                :                    :              +- *(13) SortMergeJoin [item_sk#30211], [item_sk#30366], Inner, (rk#30213 >= rk#30242)
[info]                :                    :                 :- *(6) Sort [item_sk#30211 ASC NULLS FIRST], false, 0
[info]                :                    :                 :  +- Exchange hashpartitioning(item_sk#30211, 4), true, [id=#96287]
[info]                :                    :                 :     +- *(5) Project [item_sk#30211, d_date#333, sumws#30212, rk#30213]
[info]                :                    :                 :        +- *(5) Filter isnotnull(rk#30213)
[info]                :                    :                 :           +- Window [row_number() windowspecdefinition(ws_item_sk#1023, d_date#333 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#30213], [ws_item_sk#1023], [d_date#333 ASC NULLS FIRST]
[info]                :                    :                 :              +- *(4) Sort [ws_item_sk#1023 ASC NULLS FIRST, d_date#333 ASC NULLS FIRST], false, 0
[info]                :                    :                 :                 +- Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#96278]
[info]                :                    :                 :                    +- *(3) HashAggregate(keys=[ws_item_sk#1023, d_date#333], functions=[sum(UnscaledValue(ws_sales_price#1041))])
[info]                :                    :                 :                       +- Exchange hashpartitioning(ws_item_sk#1023, d_date#333, 4), true, [id=#96274]
[info]                :                    :                 :                          +- *(2) HashAggregate(keys=[ws_item_sk#1023, d_date#333], functions=[partial_sum(UnscaledValue(ws_sales_price#1041))])
[info]                :                    :                 :                             +- *(2) Project [ws_item_sk#1023, ws_sales_price#1041, d_date#333]
[info]                :                    :                 :                                +- *(2) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                :                    :                 :                                   :- *(2) Project [ws_item_sk#1023, ws_sales_price#1041, ws_sold_date_sk#1054]
[info]                :                    :                 :                                   :  +- *(2) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                :                    :                 :                                   :     +- *(2) ColumnarToRow
[info]                :                    :                 :                                   :        +- BatchScan[ws_item_sk#1023, ws_sales_price#1041, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_sales_price:decimal(7,2)>
[info]                :                    :                 :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#96268]
[info]                :                    :                 :                                      +- *(1) Project [d_date_sk#331, d_date#333]
[info]                :                    :                 :                                         +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1212)) AND (d_month_seq#334 <= 1223)) AND isnotnull(d_date_sk#331))
[info]                :                    :                 :                                            +- *(1) ColumnarToRow
[info]                :                    :                 :                                               +- BatchScan[d_date_sk#331, d_date#333, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>
[info]                :                    :                 +- *(12) Sort [item_sk#30366 ASC NULLS FIRST], false, 0
[info]                :                    :                    +- Exchange hashpartitioning(item_sk#30366, 4), true, [id=#96676]
[info]                :                    :                       +- *(11) Project [item_sk#30366, sumws#30367, rk#30242]
[info]                :                    :                          +- *(11) Filter isnotnull(rk#30242)
[info]                :                    :                             +- Window [row_number() windowspecdefinition(ws_item_sk#1023, d_date#30488 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#30242], [ws_item_sk#1023], [d_date#30488 ASC NULLS FIRST]
[info]                :                    :                                +- *(10) Sort [ws_item_sk#1023 ASC NULLS FIRST, d_date#30488 ASC NULLS FIRST], false, 0
[info]                :                    :                                   +- ReusedExchange [item_sk#30366, d_date#30488, sumws#30367, ws_item_sk#1023], Exchange hashpartitioning(ws_item_sk#1023, 4), true, [id=#96278]
[info]                :                    +- *(28) Sort [item_sk#30215 ASC NULLS FIRST, d_date#30604 ASC NULLS FIRST], false, 0
[info]                :                       +- Exchange hashpartitioning(item_sk#30215, d_date#30604, 4), true, [id=#96805]
[info]                :                          +- *(27) HashAggregate(keys=[item_sk#30215, d_date#30604, sumss#30216], functions=[sum(sumss#30397)])
[info]                :                             +- *(27) HashAggregate(keys=[item_sk#30215, d_date#30604, sumss#30216], functions=[partial_sum(sumss#30397)])
[info]                :                                +- *(27) Project [item_sk#30215, d_date#30604, sumss#30216, sumss#30397]
[info]                :                                   +- *(27) SortMergeJoin [item_sk#30215], [item_sk#30396], Inner, (rk#30217 >= rk#30273)
[info]                :                                      :- *(20) Sort [item_sk#30215 ASC NULLS FIRST], false, 0
[info]                :                                      :  +- Exchange hashpartitioning(item_sk#30215, 4), true, [id=#96717]
[info]                :                                      :     +- *(19) Project [item_sk#30215, d_date#30604, sumss#30216, rk#30217]
[info]                :                                      :        +- *(19) Filter isnotnull(rk#30217)
[info]                :                                      :           +- Window [row_number() windowspecdefinition(ss_item_sk#1165, d_date#30604 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#30217], [ss_item_sk#1165], [d_date#30604 ASC NULLS FIRST]
[info]                :                                      :              +- *(18) Sort [ss_item_sk#1165 ASC NULLS FIRST, d_date#30604 ASC NULLS FIRST], false, 0
[info]                :                                      :                 +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#96708]
[info]                :                                      :                    +- *(17) HashAggregate(keys=[ss_item_sk#1165, d_date#30604], functions=[sum(UnscaledValue(ss_sales_price#1176))])
[info]                :                                      :                       +- Exchange hashpartitioning(ss_item_sk#1165, d_date#30604, 4), true, [id=#96704]
[info]                :                                      :                          +- *(16) HashAggregate(keys=[ss_item_sk#1165, d_date#30604], functions=[partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]                :                                      :                             +- *(16) Project [ss_item_sk#1165, ss_sales_price#1176, d_date#30604]
[info]                :                                      :                                +- *(16) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#30602], Inner, BuildRight
[info]                :                                      :                                   :- *(16) Project [ss_item_sk#1165, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                :                                      :                                   :  +- *(16) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                :                                      :                                   :     +- *(16) ColumnarToRow
[info]                :                                      :                                   :        +- BatchScan[ss_item_sk#1165, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_sales_price:decimal(7,2)>
[info]                :                                      :                                   +- ReusedExchange [d_date_sk#30602, d_date#30604], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#96268]
[info]                :                                      +- *(26) Sort [item_sk#30396 ASC NULLS FIRST], false, 0
[info]                :                                         +- Exchange hashpartitioning(item_sk#30396, 4), true, [id=#96795]
[info]                :                                            +- *(25) Project [item_sk#30396, sumss#30397, rk#30273]
[info]                :                                               +- *(25) Filter isnotnull(rk#30273)
[info]                :                                                  +- Window [row_number() windowspecdefinition(ss_item_sk#1165, d_date#30516 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#30273], [ss_item_sk#1165], [d_date#30516 ASC NULLS FIRST]
[info]                :                                                     +- *(24) Sort [ss_item_sk#1165 ASC NULLS FIRST, d_date#30516 ASC NULLS FIRST], false, 0
[info]                :                                                        +- ReusedExchange [item_sk#30396, d_date#30516, sumss#30397, ss_item_sk#1165], Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#96708]
[info]                +- *(62) Project [item_sk#30663, web_sales#30665, store_sales#30666, rk#30658]
[info]                   +- *(62) Filter isnotnull(rk#30658)
[info]                      +- Window [row_number() windowspecdefinition(item_sk#30663, d_date#30664 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#30658], [item_sk#30663], [d_date#30664 ASC NULLS FIRST]
[info]                         +- *(61) Sort [item_sk#30663 ASC NULLS FIRST, d_date#30664 ASC NULLS FIRST], false, 0
[info]                            +- ReusedExchange [item_sk#30663, d_date#30664, web_sales#30665, store_sales#30666], Exchange hashpartitioning(item_sk#30219, 4), true, [id=#96912]
[info] 
[info] 
[info]   Stopped after 1 iterations, 671 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q51a-v2.7                                           671            671           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q57-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#31872 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#31873 as decimal(22,6)))), DecimalType(22,6), true) ASC NULLS FIRST,d_year#337 ASC NULLS FIRST], output=[i_category#508,i_brand#504,d_year#337,d_moy#339,avg_monthly_sales#31873,sum_sales#31872,psum#31875,nsum#31876])
[info] +- *(27) Project [i_category#508, i_brand#504, d_year#337, d_moy#339, avg_monthly_sales#31873, sum_sales#31872, sum_sales#32100 AS psum#31875, sum_sales#32587 AS nsum#31876]
[info]    +- *(27) SortMergeJoin [i_category#508, i_brand#504, cc_name#1498, rn#31874], [i_category#32694, i_brand#32690, cc_name#32856, (rn#32491 - 1)], Inner
[info]       :- *(18) Project [i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, sum_sales#31872, avg_monthly_sales#31873, rn#31874, sum_sales#32100]
[info]       :  +- *(18) SortMergeJoin [i_category#508, i_brand#504, cc_name#1498, rn#31874], [i_category#32207, i_brand#32203, cc_name#32369, (rn#32004 + 1)], Inner
[info]       :     :- *(9) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, cc_name#1498 ASC NULLS FIRST, rn#31874 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, rn#31874, 4), true, [id=#97807]
[info]       :     :     +- *(8) Project [i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, sum_sales#31872, avg_monthly_sales#31873, rn#31874]
[info]       :     :        +- *(8) Filter (((isnotnull(avg_monthly_sales#31873) AND (avg_monthly_sales#31873 > 0.000000)) AND (CASE WHEN (avg_monthly_sales#31873 > 0.000000) THEN CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#31872 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#31873 as decimal(22,6)))), DecimalType(22,6), true))) / promote_precision(cast(avg_monthly_sales#31873 as decimal(22,6)))), DecimalType(38,16), true) ELSE null END > 0.1000000000000000)) AND isnotnull(rn#31874))
[info]       :     :           +- Window [avg(_w0#31904) windowspecdefinition(i_category#508, i_brand#504, cc_name#1498, d_year#337, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#31873], [i_category#508, i_brand#504, cc_name#1498, d_year#337]
[info]       :     :              +- *(7) Filter (isnotnull(d_year#337) AND (d_year#337 = 1999))
[info]       :     :                 +- Window [rank(d_year#337, d_moy#339) windowspecdefinition(i_category#508, i_brand#504, cc_name#1498, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#31874], [i_category#508, i_brand#504, cc_name#1498], [d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST]
[info]       :     :                    +- *(6) Sort [i_category#508 ASC NULLS FIRST, i_brand#504 ASC NULLS FIRST, cc_name#1498 ASC NULLS FIRST, d_year#337 ASC NULLS FIRST, d_moy#339 ASC NULLS FIRST], false, 0
[info]       :     :                       +- Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, 4), true, [id=#97794]
[info]       :     :                          +- *(5) HashAggregate(keys=[i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339], functions=[sum(UnscaledValue(cs_sales_price#898))])
[info]       :     :                             +- Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, 4), true, [id=#97790]
[info]       :     :                                +- *(4) HashAggregate(keys=[i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339], functions=[partial_sum(UnscaledValue(cs_sales_price#898))])
[info]       :     :                                   +- *(4) Project [i_brand#504, i_category#508, cs_sales_price#898, d_year#337, d_moy#339, cc_name#1498]
[info]       :     :                                      +- *(4) BroadcastHashJoin [cs_call_center_sk#888], [cc_call_center_sk#1492], Inner, BuildRight
[info]       :     :                                         :- *(4) Project [i_brand#504, i_category#508, cs_call_center_sk#888, cs_sales_price#898, d_year#337, d_moy#339]
[info]       :     :                                         :  +- *(4) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :     :                                         :     :- *(4) Project [i_brand#504, i_category#508, cs_call_center_sk#888, cs_sales_price#898, cs_sold_date_sk#911]
[info]       :     :                                         :     :  +- *(4) BroadcastHashJoin [i_item_sk#496], [cs_item_sk#892], Inner, BuildLeft
[info]       :     :                                         :     :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#97762]
[info]       :     :                                         :     :     :  +- *(1) Project [i_item_sk#496, i_brand#504, i_category#508]
[info]       :     :                                         :     :     :     +- *(1) Filter ((isnotnull(i_item_sk#496) AND isnotnull(i_brand#504)) AND isnotnull(i_category#508))
[info]       :     :                                         :     :     :        +- *(1) ColumnarToRow
[info]       :     :                                         :     :     :           +- BatchScan[i_item_sk#496, i_brand#504, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
[info]       :     :                                         :     :     +- *(4) Project [cs_call_center_sk#888, cs_item_sk#892, cs_sales_price#898, cs_sold_date_sk#911]
[info]       :     :                                         :     :        +- *(4) Filter ((isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_call_center_sk#888))
[info]       :     :                                         :     :           +- *(4) ColumnarToRow
[info]       :     :                                         :     :              +- BatchScan[cs_call_center_sk#888, cs_item_sk#892, cs_sales_price#898, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_call_center_sk:int,cs_item_sk:int,cs_sales_price:decimal(7,2)>
[info]       :     :                                         :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#97775]
[info]       :     :                                         :        +- *(2) Project [d_date_sk#331, d_year#337, d_moy#339]
[info]       :     :                                         :           +- *(2) Filter ((((d_year#337 = 1999) OR ((d_year#337 = 1998) AND (d_moy#339 = 12))) OR ((d_year#337 = 2000) AND (d_moy#339 = 1))) AND isnotnull(d_date_sk#331))
[info]       :     :                                         :              +- *(2) ColumnarToRow
[info]       :     :                                         :                 +- BatchScan[d_date_sk#331, d_year#337, d_moy#339] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
[info]       :     :                                         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#97784]
[info]       :     :                                            +- *(3) Project [cc_call_center_sk#1492, cc_name#1498]
[info]       :     :                                               +- *(3) Filter (isnotnull(cc_call_center_sk#1492) AND isnotnull(cc_name#1498))
[info]       :     :                                                  +- *(3) ColumnarToRow
[info]       :     :                                                     +- BatchScan[cc_call_center_sk#1492, cc_name#1498] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/call_center], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
[info]       :     +- *(17) Sort [i_category#32207 ASC NULLS FIRST, i_brand#32203 ASC NULLS FIRST, cc_name#32369 ASC NULLS FIRST, (rn#32004 + 1) ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(i_category#32207, i_brand#32203, cc_name#32369, (rn#32004 + 1), 4), true, [id=#98050]
[info]       :           +- *(16) Project [i_category#32207, i_brand#32203, cc_name#32369, sum_sales#32100, rn#32004]
[info]       :              +- *(16) Filter isnotnull(rn#32004)
[info]       :                 +- Window [rank(d_year#32294, d_moy#32296) windowspecdefinition(i_category#32207, i_brand#32203, cc_name#32369, d_year#32294 ASC NULLS FIRST, d_moy#32296 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#32004], [i_category#32207, i_brand#32203, cc_name#32369], [d_year#32294 ASC NULLS FIRST, d_moy#32296 ASC NULLS FIRST]
[info]       :                    +- *(15) Sort [i_category#32207 ASC NULLS FIRST, i_brand#32203 ASC NULLS FIRST, cc_name#32369 ASC NULLS FIRST, d_year#32294 ASC NULLS FIRST, d_moy#32296 ASC NULLS FIRST], false, 0
[info]       :                       +- Exchange hashpartitioning(i_category#32207, i_brand#32203, cc_name#32369, 4), true, [id=#98041]
[info]       :                          +- *(14) HashAggregate(keys=[i_category#32207, i_brand#32203, cc_name#32369, d_year#32294, d_moy#32296], functions=[sum(UnscaledValue(cs_sales_price#898))])
[info]       :                             +- ReusedExchange [i_category#32207, i_brand#32203, cc_name#32369, d_year#32294, d_moy#32296, sum#33000L], Exchange hashpartitioning(i_category#508, i_brand#504, cc_name#1498, d_year#337, d_moy#339, 4), true, [id=#97790]
[info]       +- *(26) Sort [i_category#32694 ASC NULLS FIRST, i_brand#32690 ASC NULLS FIRST, cc_name#32856 ASC NULLS FIRST, (rn#32491 - 1) ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_category#32694, i_brand#32690, cc_name#32856, (rn#32491 - 1), 4), true, [id=#98150]
[info]             +- *(25) Project [i_category#32694, i_brand#32690, cc_name#32856, sum_sales#32587, rn#32491]
[info]                +- *(25) Filter isnotnull(rn#32491)
[info]                   +- Window [rank(d_year#32781, d_moy#32783) windowspecdefinition(i_category#32694, i_brand#32690, cc_name#32856, d_year#32781 ASC NULLS FIRST, d_moy#32783 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#32491], [i_category#32694, i_brand#32690, cc_name#32856], [d_year#32781 ASC NULLS FIRST, d_moy#32783 ASC NULLS FIRST]
[info]                      +- *(24) Sort [i_category#32694 ASC NULLS FIRST, i_brand#32690 ASC NULLS FIRST, cc_name#32856 ASC NULLS FIRST, d_year#32781 ASC NULLS FIRST, d_moy#32783 ASC NULLS FIRST], false, 0
[info]                         +- ReusedExchange [i_category#32694, i_brand#32690, cc_name#32856, d_year#32781, d_moy#32783, sum_sales#32587], Exchange hashpartitioning(i_category#32207, i_brand#32203, cc_name#32369, 4), true, [id=#98041]
[info] 
[info] 
[info]   Stopped after 1 iterations, 580 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q57-v2.7                                            580            580           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q64-v2.7
[info] == Physical Plan ==
[info] *(62) Sort [product_name#33294 ASC NULLS FIRST, store_name#33296 ASC NULLS FIRST, cnt#33528L ASC NULLS FIRST, s1#33310 ASC NULLS FIRST, s1#33529 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(product_name#33294 ASC NULLS FIRST, store_name#33296 ASC NULLS FIRST, cnt#33528L ASC NULLS FIRST, s1#33310 ASC NULLS FIRST, s1#33529 ASC NULLS FIRST, 4), true, [id=#100455]
[info]    +- *(61) Project [product_name#33294, store_name#33296, store_zip#33297, b_street_number#33298, b_streen_name#33299, b_city#33300, b_zip#33301, c_street_number#33302, c_street_name#33303, c_city#33304, c_zip#33305, syear#33306, cnt#33309L, s1#33310, s2#33311, s3#33312, s1#33529, s2#33530, s3#33531, syear#33525, cnt#33528L]
[info]       +- *(61) SortMergeJoin [item_sk#33295, store_name#33296, store_zip#33297], [item_sk#33514, store_name#33515, store_zip#33516], Inner, (cnt#33528L <= cnt#33309L)
[info]          :- *(30) Sort [item_sk#33295 ASC NULLS FIRST, store_name#33296 ASC NULLS FIRST, store_zip#33297 ASC NULLS FIRST], false, 0
[info]          :  +- Exchange hashpartitioning(item_sk#33295, store_name#33296, store_zip#33297, 4), true, [id=#99838]
[info]          :     +- *(29) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33401, ca_street_name#33402, ca_city#33405, ca_zip#33408, d_year#337, d_year#33335, d_year#33363], functions=[count(1), sum(UnscaledValue(ss_wholesale_cost#1174)), sum(UnscaledValue(ss_list_price#1175)), sum(UnscaledValue(ss_coupon_amt#1182))])
[info]          :        +- Exchange hashpartitioning(i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33401, ca_street_name#33402, ca_city#33405, ca_zip#33408, d_year#337, d_year#33335, d_year#33363, 4), true, [id=#99834]
[info]          :           +- *(28) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33401, ca_street_name#33402, ca_city#33405, ca_zip#33408, d_year#337, d_year#33335, d_year#33363], functions=[partial_count(1), partial_sum(UnscaledValue(ss_wholesale_cost#1174)), partial_sum(UnscaledValue(ss_list_price#1175)), partial_sum(UnscaledValue(ss_coupon_amt#1182))])
[info]          :              +- *(28) Project [ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, d_year#33335, d_year#33363, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33401, ca_street_name#33402, ca_city#33405, ca_zip#33408, i_item_sk#496, i_product_name#517]
[info]          :                 +- *(28) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]          :                    :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#33335, d_year#33363, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33401, ca_street_name#33402, ca_city#33405, ca_zip#33408]
[info]          :                    :  +- *(28) BroadcastHashJoin [hd_income_band_sk#33395], [ib_income_band_sk#33412], Inner, BuildRight
[info]          :                    :     :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#33335, d_year#33363, hd_income_band_sk#33395, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33401, ca_street_name#33402, ca_city#33405, ca_zip#33408]
[info]          :                    :     :  +- *(28) BroadcastHashJoin [hd_income_band_sk#449], [ib_income_band_sk#1711], Inner, BuildRight
[info]          :                    :     :     :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#33335, d_year#33363, hd_income_band_sk#449, hd_income_band_sk#33395, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33401, ca_street_name#33402, ca_city#33405, ca_zip#33408]
[info]          :                    :     :     :  +- *(28) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#33399], Inner, BuildRight
[info]          :                    :     :     :     :- *(28) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#33335, d_year#33363, hd_income_band_sk#449, hd_income_band_sk#33395, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242]
[info]          :                    :     :     :     :  +- *(28) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]          :                    :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#33335, d_year#33363, hd_income_band_sk#449, hd_income_band_sk#33395]
[info]          :                    :     :     :     :     :  +- *(28) BroadcastHashJoin [c_current_hdemo_sk#159], [hd_demo_sk#33394], Inner, BuildRight
[info]          :                    :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33335, d_year#33363, hd_income_band_sk#449]
[info]          :                    :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33335, d_year#33363]
[info]          :                    :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33335, d_year#33363]
[info]          :                    :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#33385], Inner, BuildRight, NOT (cd_marital_status#292 = cd_marital_status#33387)
[info]          :                    :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33335, d_year#33363, cd_marital_status#292]
[info]          :                    :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33335, d_year#33363]
[info]          :                    :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [c_first_shipto_date_sk#161], [d_date_sk#33357], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, d_year#33335]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [c_first_sales_date_sk#162], [d_date_sk#33329], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(28) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(28) SortMergeJoin [ss_item_sk#1165], [cs_item_sk#892], Inner
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(6) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#99312]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- *(5) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(5) SortMergeJoin [ss_item_sk#1165, ss_ticket_number#1172L], [sr_item_sk#792, sr_ticket_number#799L], Inner
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :  +- Exchange hashpartitioning(ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#99294]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :        +- *(1) Filter ((((((((isnotnull(ss_item_sk#1165) AND isnotnull(ss_ticket_number#1172L)) AND isnotnull(ss_sold_date_sk#1186)) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_cdemo_sk#1167)) AND isnotnull(ss_promo_sk#1171)) AND isnotnull(ss_hdemo_sk#1168)) AND isnotnull(ss_addr_sk#1169))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :           +- *(1) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_...
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(4) Sort [sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- Exchange hashpartitioning(sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#99304]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                    +- *(3) Filter (isnotnull(sr_item_sk#792) AND isnotnull(sr_ticket_number#799L))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                       +- *(3) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                          +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- *(12) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(12) Project [cs_item_sk#892]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(12) Filter (isnotnull(sum(cs_ext_list_price#902)#33322) AND (cast(sum(cs_ext_list_price#902)#33322 as decimal(21,2)) > CheckOverflow((2.00 * promote_precision(sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))#33323)), DecimalType(21,2), true)))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(12) HashAggregate(keys=[cs_item_sk#892], functions=[sum(UnscaledValue(cs_ext_list_price#902)), sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))])
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#99341]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                    +- *(11) HashAggregate(keys=[cs_item_sk#892], functions=[partial_sum(UnscaledValue(cs_ext_list_price#902)), partial_sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))])
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                       +- *(11) Project [cs_item_sk#892, cs_ext_list_price#902, cr_refunded_cash#63, cr_reversed_charge#64, cr_store_credit#65]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                          +- *(11) SortMergeJoin [cs_item_sk#892, cs_order_number#894L], [cr_item_sk#42, cr_order_number#56L], Inner
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :- *(8) Sort [cs_item_sk#892 ASC NULLS FIRST, cs_order_number#894L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :  +- Exchange hashpartitioning(cs_item_sk#892, cs_order_number#894L, 4), true, [id=#99322]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :     +- *(7) Project [cs_item_sk#892, cs_order_number#894L, cs_ext_list_price#902]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :        +- *(7) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_order_number#894L))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :           +- *(7) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             :              +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_ext_list_price#902] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_ext_list_price:decimal(7,2)>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             +- *(10) Sort [cr_item_sk#42 ASC NULLS FIRST, cr_order_number#56L ASC NULLS FIRST], false, 0
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                +- Exchange hashpartitioning(cr_item_sk#42, cr_order_number#56L, 4), true, [id=#99332]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                   +- *(9) Project [cr_item_sk#42, cr_order_number#56L, cr_refunded_cash#63, cr_reversed_charge#64, cr_store_credit#65]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                      +- *(9) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                         +- *(9) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                            +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_refunded_cash#63, cr_reversed_charge#64, cr_store_credit#65] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_refunded_cash:decimal(7,2),cr_reversed_charge:dec...
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99356]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(13) Project [d_date_sk#331, d_year#337]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(13) Filter ((isnotnull(d_year#337) AND (d_year#337 = 1999)) AND isnotnull(d_date_sk#331))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(13) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99365]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(14) Project [s_store_sk#670, s_store_name#675, s_zip#695]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(14) Filter ((isnotnull(s_store_sk#670) AND isnotnull(s_zip#695)) AND isnotnull(s_store_name#675))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(14) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[s_store_sk#670, s_store_name#675, s_zip#695] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_zip:string>
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99374]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :        +- *(15) Project [c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :           +- *(15) Filter (((((isnotnull(c_customer_sk#156) AND isnotnull(c_first_sales_date_sk#162)) AND isnotnull(c_first_shipto_date_sk#161)) AND isnotnull(c_current_cdemo_sk#158)) AND isnotnull(c_current_hdemo_sk#159)) AND isnotnull(c_current_addr_sk#160))
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :              +- *(15) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int,c_fi...
[info]          :                    :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99383]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :        +- *(16) Project [d_date_sk#33329, d_year#33335]
[info]          :                    :     :     :     :     :     :     :     :     :     :     :           +- *(16) Filter isnotnull(d_date_sk#33329)
[info]          :                    :     :     :     :     :     :     :     :     :     :     :              +- *(16) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[d_date_sk#33329, d_year#33335] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]          :                    :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#33357, d_year#33363], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99383]
[info]          :                    :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99401]
[info]          :                    :     :     :     :     :     :     :     :     :        +- *(18) Project [cd_demo_sk#290, cd_marital_status#292]
[info]          :                    :     :     :     :     :     :     :     :     :           +- *(18) Filter (isnotnull(cd_demo_sk#290) AND isnotnull(cd_marital_status#292))
[info]          :                    :     :     :     :     :     :     :     :     :              +- *(18) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :     :     :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>
[info]          :                    :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#33385, cd_marital_status#33387], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99401]
[info]          :                    :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99419]
[info]          :                    :     :     :     :     :     :     :        +- *(20) Project [p_promo_sk#589]
[info]          :                    :     :     :     :     :     :     :           +- *(20) Filter isnotnull(p_promo_sk#589)
[info]          :                    :     :     :     :     :     :     :              +- *(20) ColumnarToRow
[info]          :                    :     :     :     :     :     :     :                 +- BatchScan[p_promo_sk#589] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int>
[info]          :                    :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99428]
[info]          :                    :     :     :     :     :     :        +- *(21) Project [hd_demo_sk#448, hd_income_band_sk#449]
[info]          :                    :     :     :     :     :     :           +- *(21) Filter (isnotnull(hd_demo_sk#448) AND isnotnull(hd_income_band_sk#449))
[info]          :                    :     :     :     :     :     :              +- *(21) ColumnarToRow
[info]          :                    :     :     :     :     :     :                 +- BatchScan[hd_demo_sk#448, hd_income_band_sk#449] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_income_band_sk:int>
[info]          :                    :     :     :     :     :     +- ReusedExchange [hd_demo_sk#33394, hd_income_band_sk#33395], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99428]
[info]          :                    :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99446]
[info]          :                    :     :     :     :        +- *(23) Project [ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242]
[info]          :                    :     :     :     :           +- *(23) Filter isnotnull(ca_address_sk#233)
[info]          :                    :     :     :     :              +- *(23) ColumnarToRow
[info]          :                    :     :     :     :                 +- BatchScan[ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_address], ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_city:string,ca_zip:string>
[info]          :                    :     :     :     +- ReusedExchange [ca_address_sk#33399, ca_street_number#33401, ca_street_name#33402, ca_city#33405, ca_zip#33408], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99446]
[info]          :                    :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99464]
[info]          :                    :     :        +- *(25) Project [ib_income_band_sk#1711]
[info]          :                    :     :           +- *(25) Filter isnotnull(ib_income_band_sk#1711)
[info]          :                    :     :              +- *(25) ColumnarToRow
[info]          :                    :     :                 +- BatchScan[ib_income_band_sk#1711] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/income_band], ReadSchema: struct<ib_income_band_sk:int>
[info]          :                    :     +- ReusedExchange [ib_income_band_sk#33412], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99464]
[info]          :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99482]
[info]          :                       +- *(27) Project [i_item_sk#496, i_product_name#517]
[info]          :                          +- *(27) Filter (((((((cast(i_current_price#501 as decimal(12,2)) <= 74.00) AND (cast(i_current_price#501 as decimal(12,2)) >= 65.00)) AND (cast(i_current_price#501 as decimal(12,2)) <= 79.00)) AND isnotnull(i_current_price#501)) AND i_color#513 IN (purple,burlywood,indian,spring,floral,medium)) AND (i_current_price#501 >= 64.00)) AND isnotnull(i_item_sk#496))
[info]          :                             +- *(27) ColumnarToRow
[info]          :                                +- BatchScan[i_item_sk#496, i_current_price#501, i_color#513, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_color:string,i_product_name:string>
[info]          +- *(60) Sort [item_sk#33514 ASC NULLS FIRST, store_name#33515 ASC NULLS FIRST, store_zip#33516 ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning(item_sk#33514, store_name#33515, store_zip#33516, 4), true, [id=#100447]
[info]                +- *(59) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33487, ca_street_name#33488, ca_city#33491, ca_zip#33494, d_year#337, d_year#33421, d_year#33449], functions=[count(1), sum(UnscaledValue(ss_wholesale_cost#1174)), sum(UnscaledValue(ss_list_price#1175)), sum(UnscaledValue(ss_coupon_amt#1182))])
[info]                   +- Exchange hashpartitioning(i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33487, ca_street_name#33488, ca_city#33491, ca_zip#33494, d_year#337, d_year#33421, d_year#33449, 4), true, [id=#100243]
[info]                      +- *(58) HashAggregate(keys=[i_product_name#517, i_item_sk#496, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33487, ca_street_name#33488, ca_city#33491, ca_zip#33494, d_year#337, d_year#33421, d_year#33449], functions=[partial_count(1), partial_sum(UnscaledValue(ss_wholesale_cost#1174)), partial_sum(UnscaledValue(ss_list_price#1175)), partial_sum(UnscaledValue(ss_coupon_amt#1182))])
[info]                         +- *(58) Project [ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, d_year#33421, d_year#33449, s_store_name#675, s_zip#695, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33487, ca_street_name#33488, ca_city#33491, ca_zip#33494, i_item_sk#496, i_product_name#517]
[info]                            +- *(58) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                               :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#33421, d_year#33449, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33487, ca_street_name#33488, ca_city#33491, ca_zip#33494]
[info]                               :  +- *(58) BroadcastHashJoin [hd_income_band_sk#33481], [ib_income_band_sk#33498], Inner, BuildRight
[info]                               :     :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#33421, d_year#33449, hd_income_band_sk#33481, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33487, ca_street_name#33488, ca_city#33491, ca_zip#33494]
[info]                               :     :  +- *(58) BroadcastHashJoin [hd_income_band_sk#449], [ib_income_band_sk#1711], Inner, BuildRight
[info]                               :     :     :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, d_year#33421, d_year#33449, hd_income_band_sk#449, hd_income_band_sk#33481, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242, ca_street_number#33487, ca_street_name#33488, ca_city#33491, ca_zip#33494]
[info]                               :     :     :  +- *(58) BroadcastHashJoin [c_current_addr_sk#160], [ca_address_sk#33485], Inner, BuildRight
[info]                               :     :     :     :- *(58) Project [ss_item_sk#1165, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#33421, d_year#33449, hd_income_band_sk#449, hd_income_band_sk#33481, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242]
[info]                               :     :     :     :  +- *(58) BroadcastHashJoin [ss_addr_sk#1169], [ca_address_sk#233], Inner, BuildRight
[info]                               :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_addr_sk#160, d_year#33421, d_year#33449, hd_income_band_sk#449, hd_income_band_sk#33481]
[info]                               :     :     :     :     :  +- *(58) BroadcastHashJoin [c_current_hdemo_sk#159], [hd_demo_sk#33480], Inner, BuildRight
[info]                               :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33421, d_year#33449, hd_income_band_sk#449]
[info]                               :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_hdemo_sk#1168], [hd_demo_sk#448], Inner, BuildRight
[info]                               :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33421, d_year#33449]
[info]                               :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33421, d_year#33449]
[info]                               :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [c_current_cdemo_sk#158], [cd_demo_sk#33471], Inner, BuildRight, NOT (cd_marital_status#292 = cd_marital_status#33473)
[info]                               :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33421, d_year#33449, cd_marital_status#292]
[info]                               :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_cdemo_sk#1167], [cd_demo_sk#290], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, d_year#33421, d_year#33449]
[info]                               :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [c_first_shipto_date_sk#161], [d_date_sk#33443], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, d_year#33421]
[info]                               :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [c_first_sales_date_sk#162], [d_date_sk#33415], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_customer_sk#1166], [c_customer_sk#156], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337, s_store_name#675, s_zip#695]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, d_year#337]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(58) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- *(58) SortMergeJoin [ss_item_sk#1165], [cs_item_sk#892], Inner
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- *(36) Sort [ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- ReusedExchange [ss_item_sk#1165, ss_customer_sk#1166, ss_cdemo_sk#1167, ss_hdemo_sk#1168, ss_addr_sk#1169, ss_store_sk#1170, ss_promo_sk#1171, ss_wholesale_cost#1174, ss_list_price#1175, ss_coupon_amt#1182, ss_sold_date_sk#1186], Exchange hashpartitioning(ss_item_sk#1165, 4), true, [id=#99312]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- *(42) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(42) Project [cs_item_sk#892]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(42) Filter (isnotnull(sum(cs_ext_list_price#902)#33327) AND (cast(sum(cs_ext_list_price#902)#33327 as decimal(21,2)) > CheckOverflow((2.00 * promote_precision(sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))#33328)), DecimalType(21,2), true)))
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(42) HashAggregate(keys=[cs_item_sk#892], functions=[sum(UnscaledValue(cs_ext_list_price#902)), sum(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cr_refunded_cash#63 as decimal(8,2))) + promote_precision(cast(cr_reversed_charge#64 as decimal(8,2)))), DecimalType(8,2), true) as decimal(9,2))) + promote_precision(cast(cr_store_credit#65 as decimal(9,2)))), DecimalType(9,2), true))])
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- ReusedExchange [cs_item_sk#892, sum#33703L, sum#33704], Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#99341]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99564]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- *(43) Project [d_date_sk#331, d_year#337]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- *(43) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- *(43) ColumnarToRow
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [s_store_sk#670, s_store_name#675, s_zip#695], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99365]
[info]                               :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [c_customer_sk#156, c_current_cdemo_sk#158, c_current_hdemo_sk#159, c_current_addr_sk#160, c_first_shipto_date_sk#161, c_first_sales_date_sk#162], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99374]
[info]                               :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#33415, d_year#33421], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99383]
[info]                               :     :     :     :     :     :     :     :     :     :     +- ReusedExchange [d_date_sk#33443, d_year#33449], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99383]
[info]                               :     :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#290, cd_marital_status#292], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99401]
[info]                               :     :     :     :     :     :     :     :     +- ReusedExchange [cd_demo_sk#33471, cd_marital_status#33473], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99401]
[info]                               :     :     :     :     :     :     :     +- ReusedExchange [p_promo_sk#589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99419]
[info]                               :     :     :     :     :     :     +- ReusedExchange [hd_demo_sk#448, hd_income_band_sk#449], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99428]
[info]                               :     :     :     :     :     +- ReusedExchange [hd_demo_sk#33480, hd_income_band_sk#33481], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99428]
[info]                               :     :     :     :     +- ReusedExchange [ca_address_sk#233, ca_street_number#235, ca_street_name#236, ca_city#239, ca_zip#242], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99446]
[info]                               :     :     :     +- ReusedExchange [ca_address_sk#33485, ca_street_number#33487, ca_street_name#33488, ca_city#33491, ca_zip#33494], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99446]
[info]                               :     :     +- ReusedExchange [ib_income_band_sk#1711], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99464]
[info]                               :     +- ReusedExchange [ib_income_band_sk#33498], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99464]
[info]                               +- ReusedExchange [i_item_sk#496, i_product_name#517], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#99482]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1527 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q64-v2.7                                           1528           1528           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q67a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[i_category#508 ASC NULLS FIRST,i_class#506 ASC NULLS FIRST,i_brand#504 ASC NULLS FIRST,i_product_name#517 ASC NULLS FIRST,d_year#337 ASC NULLS FIRST,d_qoy#341 ASC NULLS FIRST,d_moy#339 ASC NULLS FIRST,s_store_id#671 ASC NULLS FIRST,sumsales#33976 ASC NULLS FIRST,rk#33911 ASC NULLS FIRST], output=[i_category#508,i_class#506,i_brand#504,i_product_name#517,d_year#337,d_qoy#341,d_moy#339,s_store_id#671,sumsales#33976,rk#33911])
[info] +- *(55) Filter (isnotnull(rk#33911) AND (rk#33911 <= 100))
[info]    +- Window [rank(sumsales#33976) windowspecdefinition(i_category#508, sumsales#33976 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#33911], [i_category#508], [sumsales#33976 DESC NULLS LAST]
[info]       +- *(54) Sort [i_category#508 ASC NULLS FIRST, sumsales#33976 DESC NULLS LAST], false, 0
[info]          +- Exchange hashpartitioning(i_category#508, 4), true, [id=#102542]
[info]             +- Union
[info]                :- *(5) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :  +- Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#101549]
[info]                :     +- *(4) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[partial_sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :        +- *(4) Project [ss_quantity#1173, ss_sales_price#1176, d_year#337, d_moy#339, d_qoy#341, s_store_id#671, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]                :           +- *(4) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                :              :- *(4) Project [ss_item_sk#1165, ss_quantity#1173, ss_sales_price#1176, d_year#337, d_moy#339, d_qoy#341, s_store_id#671]
[info]                :              :  +- *(4) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                :              :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, d_year#337, d_moy#339, d_qoy#341]
[info]                :              :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                :              :     :     :- *(4) Project [ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]                :              :     :     :  +- *(4) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165))
[info]                :              :     :     :     +- *(4) ColumnarToRow
[info]                :              :     :     :        +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_quantity#1173, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
[info]                :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#101525]
[info]                :              :     :        +- *(1) Project [d_date_sk#331, d_year#337, d_moy#339, d_qoy#341]
[info]                :              :     :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1212)) AND (d_month_seq#334 <= 1223)) AND isnotnull(d_date_sk#331))
[info]                :              :     :              +- *(1) ColumnarToRow
[info]                :              :     :                 +- BatchScan[d_date_sk#331, d_month_seq#334, d_year#337, d_moy#339, d_qoy#341] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>
[info]                :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#101534]
[info]                :              :        +- *(2) Project [s_store_sk#670, s_store_id#671]
[info]                :              :           +- *(2) Filter isnotnull(s_store_sk#670)
[info]                :              :              +- *(2) ColumnarToRow
[info]                :              :                 +- BatchScan[s_store_sk#670, s_store_id#671] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string>
[info]                :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#101543]
[info]                :                 +- *(3) Project [i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517]
[info]                :                    +- *(3) Filter isnotnull(i_item_sk#496)
[info]                :                       +- *(3) ColumnarToRow
[info]                :                          +- BatchScan[i_item_sk#496, i_brand#504, i_class#506, i_category#508, i_product_name#517] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
[info]                :- *(11) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339], functions=[sum(sumsales#33912)])
[info]                :  +- Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, 4), true, [id=#102019]
[info]                :     +- *(10) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339], functions=[partial_sum(sumsales#33912)])
[info]                :        +- *(10) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :           +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34253], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#101549]
[info]                :- *(17) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341], functions=[sum(sumsales#33912)])
[info]                :  +- Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, 4), true, [id=#102093]
[info]                :     +- *(16) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341], functions=[partial_sum(sumsales#33912)])
[info]                :        +- *(16) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :           +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34257], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#101549]
[info]                :- *(23) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337], functions=[sum(sumsales#33912)])
[info]                :  +- Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, 4), true, [id=#102167]
[info]                :     +- *(22) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337], functions=[partial_sum(sumsales#33912)])
[info]                :        +- *(22) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :           +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34261], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#101549]
[info]                :- *(29) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517], functions=[sum(sumsales#33912)])
[info]                :  +- Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, 4), true, [id=#102241]
[info]                :     +- *(28) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517], functions=[partial_sum(sumsales#33912)])
[info]                :        +- *(28) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :           +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34265], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#101549]
[info]                :- *(35) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504], functions=[sum(sumsales#33912)])
[info]                :  +- Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, 4), true, [id=#102315]
[info]                :     +- *(34) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504], functions=[partial_sum(sumsales#33912)])
[info]                :        +- *(34) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :           +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34269], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#101549]
[info]                :- *(41) HashAggregate(keys=[i_category#508, i_class#506], functions=[sum(sumsales#33912)])
[info]                :  +- Exchange hashpartitioning(i_category#508, i_class#506, 4), true, [id=#102389]
[info]                :     +- *(40) HashAggregate(keys=[i_category#508, i_class#506], functions=[partial_sum(sumsales#33912)])
[info]                :        +- *(40) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :           +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34273], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#101549]
[info]                :- *(47) HashAggregate(keys=[i_category#508], functions=[sum(sumsales#33912)])
[info]                :  +- Exchange hashpartitioning(i_category#508, 4), true, [id=#102463]
[info]                :     +- *(46) HashAggregate(keys=[i_category#508], functions=[partial_sum(sumsales#33912)])
[info]                :        +- *(46) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                :           +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34277], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#101549]
[info]                +- *(53) HashAggregate(keys=[], functions=[sum(sumsales#33912)])
[info]                   +- Exchange SinglePartition, true, [id=#102537]
[info]                      +- *(52) HashAggregate(keys=[], functions=[partial_sum(sumsales#33912)])
[info]                         +- *(52) HashAggregate(keys=[i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#1176 as decimal(12,2))) * promote_precision(cast(cast(ss_quantity#1173 as decimal(10,0)) as decimal(12,2)))), DecimalType(18,2), true), 0.00))])
[info]                            +- ReusedExchange [i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, sum#34281], Exchange hashpartitioning(i_category#508, i_class#506, i_brand#504, i_product_name#517, d_year#337, d_qoy#341, d_moy#339, s_store_id#671, 4), true, [id=#101549]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1196 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q67a-v2.7                                          1197           1197           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q70a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#34392 DESC NULLS LAST,CASE WHEN (lochierarchy#34392 = 0) THEN s_state#694 END ASC NULLS FIRST,rank_within_parent#34383 ASC NULLS FIRST], output=[total_sum#34441,s_state#694,s_county#693,lochierarchy#34392,rank_within_parent#34383])
[info] +- *(41) Project [total_sum#34441, s_state#694, s_county#693, lochierarchy#34392, rank_within_parent#34383]
[info]    +- Window [rank(total_sum#34441) windowspecdefinition(lochierarchy#34392, _w0#34454, total_sum#34441 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#34383], [lochierarchy#34392, _w0#34454], [total_sum#34441 DESC NULLS LAST]
[info]       +- *(40) Sort [lochierarchy#34392 ASC NULLS FIRST, _w0#34454 ASC NULLS FIRST, total_sum#34441 DESC NULLS LAST], false, 0
[info]          +- Exchange hashpartitioning(lochierarchy#34392, _w0#34454, 4), true, [id=#103957]
[info]             +- *(39) HashAggregate(keys=[total_sum#34441, s_state#694, s_county#693, g_state#34390, g_county#34391, lochierarchy#34392], functions=[])
[info]                +- Exchange hashpartitioning(total_sum#34441, s_state#694, s_county#693, g_state#34390, g_county#34391, lochierarchy#34392, 4), true, [id=#103908]
[info]                   +- *(38) HashAggregate(keys=[total_sum#34441, s_state#694, s_county#693, g_state#34390, g_county#34391, lochierarchy#34392], functions=[])
[info]                      +- Union
[info]                         :- *(25) HashAggregate(keys=[total_sum#34441, s_state#694, s_county#693, g_state#34390, g_county#34391, lochierarchy#34392], functions=[])
[info]                         :  +- Exchange hashpartitioning(total_sum#34441, s_state#694, s_county#693, g_state#34390, g_county#34391, lochierarchy#34392, 4), true, [id=#103746]
[info]                         :     +- *(24) HashAggregate(keys=[total_sum#34441, s_state#694, s_county#693, g_state#34390, g_county#34391, lochierarchy#34392], functions=[])
[info]                         :        +- Union
[info]                         :           :- *(11) HashAggregate(keys=[s_state#694, s_county#693], functions=[sum(UnscaledValue(ss_net_profit#1185))])
[info]                         :           :  +- Exchange hashpartitioning(s_state#694, s_county#693, 4), true, [id=#103563]
[info]                         :           :     +- *(10) HashAggregate(keys=[s_state#694, s_county#693], functions=[partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]                         :           :        +- *(10) Project [ss_net_profit#1185, s_county#693, s_state#694]
[info]                         :           :           +- *(10) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                         :           :              :- *(10) Project [ss_store_sk#1170, ss_net_profit#1185]
[info]                         :           :              :  +- *(10) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                         :           :              :     :- *(10) Project [ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                         :           :              :     :  +- *(10) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]                         :           :              :     :     +- *(10) ColumnarToRow
[info]                         :           :              :     :        +- BatchScan[ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_net_profit:decimal(7,2)>
[info]                         :           :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#103216]
[info]                         :           :              :        +- *(1) Project [d_date_sk#331]
[info]                         :           :              :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1212)) AND (d_month_seq#334 <= 1223)) AND isnotnull(d_date_sk#331))
[info]                         :           :              :              +- *(1) ColumnarToRow
[info]                         :           :              :                 +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                         :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#103492]
[info]                         :           :                 +- SortMergeJoin [s_state#694], [s_state#34384], LeftSemi
[info]                         :           :                    :- *(3) Sort [s_state#694 ASC NULLS FIRST], false, 0
[info]                         :           :                    :  +- Exchange hashpartitioning(s_state#694, 4), true, [id=#103225]
[info]                         :           :                    :     +- *(2) Project [s_store_sk#670, s_county#693, s_state#694]
[info]                         :           :                    :        +- *(2) Filter isnotnull(s_store_sk#670)
[info]                         :           :                    :           +- *(2) ColumnarToRow
[info]                         :           :                    :              +- BatchScan[s_store_sk#670, s_county#693, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_county:string,s_state:string>
[info]                         :           :                    +- *(9) Sort [s_state#34384 ASC NULLS FIRST], false, 0
[info]                         :           :                       +- Exchange hashpartitioning(s_state#34384, 4), true, [id=#103487]
[info]                         :           :                          +- *(8) Project [s_state#34384]
[info]                         :           :                             +- *(8) Filter (isnotnull(ranking#34385) AND (ranking#34385 <= 5))
[info]                         :           :                                +- Window [rank(_w1#34409) windowspecdefinition(s_state#694, _w1#34409 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS ranking#34385], [s_state#694], [_w1#34409 DESC NULLS LAST]
[info]                         :           :                                   +- *(7) Sort [s_state#694 ASC NULLS FIRST, _w1#34409 DESC NULLS LAST], false, 0
[info]                         :           :                                      +- *(7) HashAggregate(keys=[s_state#694], functions=[sum(UnscaledValue(ss_net_profit#1185))])
[info]                         :           :                                         +- Exchange hashpartitioning(s_state#694, 4), true, [id=#103477]
[info]                         :           :                                            +- *(6) HashAggregate(keys=[s_state#694], functions=[partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]                         :           :                                               +- *(6) Project [ss_net_profit#1185, s_state#694]
[info]                         :           :                                                  +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                         :           :                                                     :- *(6) Project [ss_net_profit#1185, ss_sold_date_sk#1186, s_state#694]
[info]                         :           :                                                     :  +- *(6) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]                         :           :                                                     :     :- *(6) Project [ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]                         :           :                                                     :     :  +- *(6) Filter (isnotnull(ss_store_sk#1170) AND isnotnull(ss_sold_date_sk#1186))
[info]                         :           :                                                     :     :     +- *(6) ColumnarToRow
[info]                         :           :                                                     :     :        +- BatchScan[ss_store_sk#1170, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_net_profit:decimal(7,2)>
[info]                         :           :                                                     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#103238]
[info]                         :           :                                                     :        +- *(4) Project [s_store_sk#670, s_state#694]
[info]                         :           :                                                     :           +- *(4) Filter isnotnull(s_store_sk#670)
[info]                         :           :                                                     :              +- *(4) ColumnarToRow
[info]                         :           :                                                     :                 +- BatchScan[s_store_sk#670, s_state#694] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_state:string>
[info]                         :           :                                                     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#103216]
[info]                         :           +- *(23) HashAggregate(keys=[s_state#694], functions=[sum(total_sum#34387)])
[info]                         :              +- Exchange hashpartitioning(s_state#694, 4), true, [id=#103738]
[info]                         :                 +- *(22) HashAggregate(keys=[s_state#694], functions=[partial_sum(total_sum#34387)])
[info]                         :                    +- *(22) HashAggregate(keys=[s_state#694, s_county#693], functions=[sum(UnscaledValue(ss_net_profit#1185))])
[info]                         :                       +- ReusedExchange [s_state#694, s_county#693, sum#34536L], Exchange hashpartitioning(s_state#694, s_county#693, 4), true, [id=#103563]
[info]                         +- *(37) HashAggregate(keys=[], functions=[sum(total_sum#34387)])
[info]                            +- Exchange SinglePartition, true, [id=#103900]
[info]                               +- *(36) HashAggregate(keys=[], functions=[partial_sum(total_sum#34387)])
[info]                                  +- *(36) HashAggregate(keys=[s_state#694, s_county#693], functions=[sum(UnscaledValue(ss_net_profit#1185))])
[info]                                     +- ReusedExchange [s_state#694, s_county#693, sum#34542L], Exchange hashpartitioning(s_state#694, s_county#693, 4), true, [id=#103563]
[info] 
[info] 
[info]   Stopped after 1 iterations, 578 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q70a-v2.7                                           578            578           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q72-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[total_cnt#34659L DESC NULLS LAST,i_item_desc#500 ASC NULLS FIRST,w_warehouse_name#1623 ASC NULLS FIRST,d_week_seq#335 ASC NULLS FIRST], output=[i_item_desc#500,w_warehouse_name#1623,d_week_seq#335,no_promo#34657L,promo#34658L,total_cnt#34659L])
[info] +- *(18) HashAggregate(keys=[i_item_desc#500, w_warehouse_name#1623, d_week_seq#335], functions=[count(1)])
[info]    +- Exchange hashpartitioning(i_item_desc#500, w_warehouse_name#1623, d_week_seq#335, 4), true, [id=#104381]
[info]       +- *(17) HashAggregate(keys=[i_item_desc#500, w_warehouse_name#1623, d_week_seq#335], functions=[partial_count(1)])
[info]          +- *(17) Project [w_warehouse_name#1623, i_item_desc#500, d_week_seq#335]
[info]             +- SortMergeJoin [cs_item_sk#892, cs_order_number#894L], [cr_item_sk#42, cr_order_number#56L], LeftOuter
[info]                :- *(14) Sort [cs_item_sk#892 ASC NULLS FIRST, cs_order_number#894L ASC NULLS FIRST], false, 0
[info]                :  +- Exchange hashpartitioning(cs_item_sk#892, cs_order_number#894L, 4), true, [id=#104363]
[info]                :     +- *(13) Project [cs_item_sk#892, cs_order_number#894L, w_warehouse_name#1623, i_item_desc#500, d_week_seq#335]
[info]                :        +- *(13) BroadcastHashJoin [cs_promo_sk#893], [p_promo_sk#589], LeftOuter, BuildRight
[info]                :           :- *(13) Project [cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, w_warehouse_name#1623, i_item_desc#500, d_week_seq#335]
[info]                :           :  +- *(13) BroadcastHashJoin [cs_ship_date_sk#879], [d_date_sk#34689], Inner, BuildRight, (d_date#34691 > cast(cast(d_date#333 as timestamp) + CalendarInterval(months= 0, days = 5, microsecond = 0) as date))
[info]                :           :     :- *(13) Project [cs_ship_date_sk#879, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, w_warehouse_name#1623, i_item_desc#500, d_date#333, d_week_seq#335]
[info]                :           :     :  +- *(13) BroadcastHashJoin [d_week_seq#335, inv_date_sk#476], [d_week_seq#34664, d_date_sk#34660], Inner, BuildRight
[info]                :           :     :     :- *(13) Project [cs_ship_date_sk#879, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500, d_date#333, d_week_seq#335]
[info]                :           :     :     :  +- *(13) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                :           :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500]
[info]                :           :     :     :     :  +- *(13) BroadcastHashJoin [cs_bill_hdemo_sk#882], [hd_demo_sk#448], Inner, BuildRight
[info]                :           :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500]
[info]                :           :     :     :     :     :  +- *(13) BroadcastHashJoin [cs_bill_cdemo_sk#881], [cd_demo_sk#290], Inner, BuildRight
[info]                :           :     :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623, i_item_desc#500]
[info]                :           :     :     :     :     :     :  +- *(13) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]                :           :     :     :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_date_sk#476, w_warehouse_name#1623]
[info]                :           :     :     :     :     :     :     :  +- *(13) BroadcastHashJoin [inv_warehouse_sk#474], [w_warehouse_sk#1621], Inner, BuildRight
[info]                :           :     :     :     :     :     :     :     :- *(13) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_sold_date_sk#911, inv_warehouse_sk#474, inv_date_sk#476]
[info]                :           :     :     :     :     :     :     :     :  +- *(13) SortMergeJoin [cs_item_sk#892], [inv_item_sk#473], Inner, (inv_quantity_on_hand#475 < cs_quantity#895)
[info]                :           :     :     :     :     :     :     :     :     :- *(2) Sort [cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                :           :     :     :     :     :     :     :     :     :  +- Exchange hashpartitioning(cs_item_sk#892, 4), true, [id=#104273]
[info]                :           :     :     :     :     :     :     :     :     :     +- *(1) Project [cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_sold_date_sk#911]
[info]                :           :     :     :     :     :     :     :     :     :        +- *(1) Filter (((((isnotnull(cs_quantity#895) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_bill_cdemo_sk#881)) AND isnotnull(cs_bill_hdemo_sk#882)) AND isnotnull(cs_sold_date_sk#911)) AND isnotnull(cs_ship_date_sk#879))
[info]                :           :     :     :     :     :     :     :     :     :           +- *(1) ColumnarToRow
[info]                :           :     :     :     :     :     :     :     :     :              +- BatchScan[cs_ship_date_sk#879, cs_bill_cdemo_sk#881, cs_bill_hdemo_sk#882, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_quantity#895, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_ship_date_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_item_sk:int,cs_promo_sk:i...
[info]                :           :     :     :     :     :     :     :     :     +- *(4) Sort [inv_item_sk#473 ASC NULLS FIRST], false, 0
[info]                :           :     :     :     :     :     :     :     :        +- Exchange hashpartitioning(inv_item_sk#473, 4), true, [id=#104283]
[info]                :           :     :     :     :     :     :     :     :           +- *(3) Project [inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476]
[info]                :           :     :     :     :     :     :     :     :              +- *(3) Filter (((isnotnull(inv_quantity_on_hand#475) AND isnotnull(inv_item_sk#473)) AND isnotnull(inv_warehouse_sk#474)) AND isnotnull(inv_date_sk#476))
[info]                :           :     :     :     :     :     :     :     :                 +- *(3) ColumnarToRow
[info]                :           :     :     :     :     :     :     :     :                    +- BatchScan[inv_item_sk#473, inv_warehouse_sk#474, inv_quantity_on_hand#475, inv_date_sk#476] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/inventory], ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
[info]                :           :     :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104295]
[info]                :           :     :     :     :     :     :     :        +- *(5) Project [w_warehouse_sk#1621, w_warehouse_name#1623]
[info]                :           :     :     :     :     :     :     :           +- *(5) Filter isnotnull(w_warehouse_sk#1621)
[info]                :           :     :     :     :     :     :     :              +- *(5) ColumnarToRow
[info]                :           :     :     :     :     :     :     :                 +- BatchScan[w_warehouse_sk#1621, w_warehouse_name#1623] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/warehouse], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
[info]                :           :     :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104304]
[info]                :           :     :     :     :     :     :        +- *(6) Project [i_item_sk#496, i_item_desc#500]
[info]                :           :     :     :     :     :     :           +- *(6) Filter isnotnull(i_item_sk#496)
[info]                :           :     :     :     :     :     :              +- *(6) ColumnarToRow
[info]                :           :     :     :     :     :     :                 +- BatchScan[i_item_sk#496, i_item_desc#500] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
[info]                :           :     :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104313]
[info]                :           :     :     :     :     :        +- *(7) Project [cd_demo_sk#290]
[info]                :           :     :     :     :     :           +- *(7) Filter ((isnotnull(cd_marital_status#292) AND (cd_marital_status#292 = M)) AND isnotnull(cd_demo_sk#290))
[info]                :           :     :     :     :     :              +- *(7) ColumnarToRow
[info]                :           :     :     :     :     :                 +- BatchScan[cd_demo_sk#290, cd_marital_status#292] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer_demographics], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>
[info]                :           :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104322]
[info]                :           :     :     :     :        +- *(8) Project [hd_demo_sk#448]
[info]                :           :     :     :     :           +- *(8) Filter ((isnotnull(hd_buy_potential#450) AND (hd_buy_potential#450 = 1001-5000)) AND isnotnull(hd_demo_sk#448))
[info]                :           :     :     :     :              +- *(8) ColumnarToRow
[info]                :           :     :     :     :                 +- BatchScan[hd_demo_sk#448, hd_buy_potential#450] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/household_demographics], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>
[info]                :           :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104331]
[info]                :           :     :     :        +- *(9) Project [d_date_sk#331, d_date#333, d_week_seq#335]
[info]                :           :     :     :           +- *(9) Filter (((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND isnotnull(d_date_sk#331)) AND isnotnull(d_week_seq#335))
[info]                :           :     :     :              +- *(9) ColumnarToRow
[info]                :           :     :     :                 +- BatchScan[d_date_sk#331, d_date#333, d_week_seq#335, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date,d_week_seq:int,d_year:int>
[info]                :           :     :     +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, true] as bigint), 32) | (cast(input[0, int, true] as bigint) & 4294967295)))), [id=#104340]
[info]                :           :     :        +- *(10) Project [d_date_sk#34660, d_week_seq#34664]
[info]                :           :     :           +- *(10) Filter (isnotnull(d_date_sk#34660) AND isnotnull(d_week_seq#34664))
[info]                :           :     :              +- *(10) ColumnarToRow
[info]                :           :     :                 +- BatchScan[d_date_sk#34660, d_week_seq#34664] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
[info]                :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104349]
[info]                :           :        +- *(11) Project [d_date_sk#34689, d_date#34691]
[info]                :           :           +- *(11) Filter (isnotnull(d_date_sk#34689) AND isnotnull(d_date#34691))
[info]                :           :              +- *(11) ColumnarToRow
[info]                :           :                 +- BatchScan[d_date_sk#34689, d_date#34691] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]                :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104358]
[info]                :              +- *(12) Project [p_promo_sk#589]
[info]                :                 +- *(12) Filter isnotnull(p_promo_sk#589)
[info]                :                    +- *(12) ColumnarToRow
[info]                :                       +- BatchScan[p_promo_sk#589] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int>
[info]                +- *(16) Sort [cr_item_sk#42 ASC NULLS FIRST, cr_order_number#56L ASC NULLS FIRST], false, 0
[info]                   +- Exchange hashpartitioning(cr_item_sk#42, cr_order_number#56L, 4), true, [id=#104372]
[info]                      +- *(15) Project [cr_item_sk#42, cr_order_number#56L]
[info]                         +- *(15) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]                            +- *(15) ColumnarToRow
[info]                               +- BatchScan[cr_item_sk#42, cr_order_number#56L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint>
[info] 
[info] 
[info]   Stopped after 1 iterations, 344 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q72-v2.7                                            345            345           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q74-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[customer_first_name#34823 ASC NULLS FIRST,customer_id#34822 ASC NULLS FIRST,customer_last_name#34824 ASC NULLS FIRST], output=[customer_id#34822,customer_first_name#34823,customer_last_name#34824])
[info] +- *(23) Project [customer_id#34822, customer_first_name#34823, customer_last_name#34824]
[info]    +- *(23) SortMergeJoin [customer_id#34802], [customer_id#34834], Inner, (CASE WHEN (year_total#34832 > 0.00) THEN CheckOverflow((promote_precision(year_total#34838) / promote_precision(year_total#34832)), DecimalType(37,20), true) ELSE null END > CASE WHEN (year_total#34806 > 0.00) THEN CheckOverflow((promote_precision(year_total#34826) / promote_precision(year_total#34806)), DecimalType(37,20), true) ELSE null END)
[info]       :- *(17) Project [customer_id#34802, year_total#34806, customer_id#34822, customer_first_name#34823, customer_last_name#34824, year_total#34826, year_total#34832]
[info]       :  +- *(17) SortMergeJoin [customer_id#34802], [customer_id#34828], Inner
[info]       :     :- *(11) SortMergeJoin [customer_id#34802], [customer_id#34822], Inner
[info]       :     :  :- *(5) Sort [customer_id#34802 ASC NULLS FIRST], false, 0
[info]       :     :  :  +- Exchange hashpartitioning(customer_id#34802, 4), true, [id=#104828]
[info]       :     :  :     +- Union
[info]       :     :  :        :- *(4) Filter (isnotnull(year_total#34806) AND (year_total#34806 > 0.00))
[info]       :     :  :        :  +- *(4) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :  :        :     +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#104822]
[info]       :     :  :        :        +- *(3) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :  :        :           +- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, d_year#337]
[info]       :     :  :        :              +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :  :        :                 :- *(3) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :  :        :                 :  +- *(3) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :  :        :                 :     :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104803]
[info]       :     :  :        :                 :     :  +- *(1) Project [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165]
[info]       :     :  :        :                 :     :     +- *(1) Filter (isnotnull(c_customer_sk#156) AND isnotnull(c_customer_id#157))
[info]       :     :  :        :                 :     :        +- *(1) ColumnarToRow
[info]       :     :  :        :                 :     :           +- BatchScan[c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/customer], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string>
[info]       :     :  :        :                 :     +- *(3) Project [ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :  :        :                 :        +- *(3) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :  :        :                 :           +- *(3) ColumnarToRow
[info]       :     :  :        :                 :              +- BatchScan[ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_net_paid:decimal(7,2)>
[info]       :     :  :        :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104816]
[info]       :     :  :        :                    +- *(2) Project [d_date_sk#331, d_year#337]
[info]       :     :  :        :                       +- *(2) Filter (((isnotnull(d_year#337) AND (d_year#337 = 2001)) AND d_year#337 IN (2001,2002)) AND isnotnull(d_date_sk#331))
[info]       :     :  :        :                          +- *(2) ColumnarToRow
[info]       :     :  :        :                             +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :  :        +- LocalTableScan <empty>, [customer_id#34808, year_total#34812]
[info]       :     :  +- *(10) Sort [customer_id#34822 ASC NULLS FIRST], false, 0
[info]       :     :     +- Exchange hashpartitioning(customer_id#34822, 4), true, [id=#105034]
[info]       :     :        +- Union
[info]       :     :           :- *(9) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :           :  +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#104987]
[info]       :     :           :     +- *(8) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ss_net_paid#1183))])
[info]       :     :           :        +- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, d_year#337]
[info]       :     :           :           +- *(8) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :           :              :- *(8) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :           :              :  +- *(8) BroadcastHashJoin [c_customer_sk#156], [ss_customer_sk#1166], Inner, BuildLeft
[info]       :     :           :              :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104803]
[info]       :     :           :              :     +- *(8) Project [ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186]
[info]       :     :           :              :        +- *(8) Filter (isnotnull(ss_customer_sk#1166) AND isnotnull(ss_sold_date_sk#1186))
[info]       :     :           :              :           +- *(8) ColumnarToRow
[info]       :     :           :              :              +- BatchScan[ss_customer_sk#1166, ss_net_paid#1183, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_customer_sk:int,ss_net_paid:decimal(7,2)>
[info]       :     :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104851]
[info]       :     :           :                 +- *(7) Project [d_date_sk#331, d_year#337]
[info]       :     :           :                    +- *(7) Filter (((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND d_year#337 IN (2001,2002)) AND isnotnull(d_date_sk#331))
[info]       :     :           :                       +- *(7) ColumnarToRow
[info]       :     :           :                          +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     :           +- LocalTableScan <empty>, [customer_id#34808, customer_first_name#34809, customer_last_name#34810, year_total#34812]
[info]       :     +- *(16) Sort [customer_id#34828 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(customer_id#34828, 4), true, [id=#105095]
[info]       :           +- Union
[info]       :              :- LocalTableScan <empty>, [customer_id#34828, year_total#34832]
[info]       :              +- *(15) Filter (isnotnull(year_total#34812) AND (year_total#34812 > 0.00))
[info]       :                 +- *(15) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]       :                    +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#105068]
[info]       :                       +- *(14) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ws_net_paid#1049))])
[info]       :                          +- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, d_year#337]
[info]       :                             +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                                :- *(14) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]       :                                :  +- *(14) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]       :                                :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104803]
[info]       :                                :     +- *(14) Project [ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]       :                                :        +- *(14) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]       :                                :           +- *(14) ColumnarToRow
[info]       :                                :              +- BatchScan[ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_net_paid:decimal(7,2)>
[info]       :                                +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104816]
[info]       +- *(22) Sort [customer_id#34834 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(customer_id#34834, 4), true, [id=#105176]
[info]             +- Union
[info]                :- LocalTableScan <empty>, [customer_id#34834, year_total#34838]
[info]                +- *(21) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]                   +- Exchange hashpartitioning(c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337, 4), true, [id=#105150]
[info]                      +- *(20) HashAggregate(keys=[c_customer_id#157, c_first_name#164, c_last_name#165, d_year#337], functions=[partial_sum(UnscaledValue(ws_net_paid#1049))])
[info]                         +- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, d_year#337]
[info]                            +- *(20) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(20) Project [c_customer_id#157, c_first_name#164, c_last_name#165, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]                               :  +- *(20) BroadcastHashJoin [c_customer_sk#156], [ws_bill_customer_sk#1024], Inner, BuildLeft
[info]                               :     :- ReusedExchange [c_customer_sk#156, c_customer_id#157, c_first_name#164, c_last_name#165], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104803]
[info]                               :     +- *(20) Project [ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]                               :        +- *(20) Filter (isnotnull(ws_bill_customer_sk#1024) AND isnotnull(ws_sold_date_sk#1054))
[info]                               :           +- *(20) ColumnarToRow
[info]                               :              +- BatchScan[ws_bill_customer_sk#1024, ws_net_paid#1049, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_bill_customer_sk:int,ws_net_paid:decimal(7,2)>
[info]                               +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#104851]
[info] 
[info] 
[info]   Stopped after 1 iterations, 572 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q74-v2.7                                            573            573           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q75-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[sales_cnt_diff#35364L ASC NULLS FIRST,sales_amt_diff#35365 ASC NULLS FIRST], output=[prev_year#35360,year#35361,i_brand_id#503,i_class_id#505,i_category_id#507,i_manufact_id#509,prev_yr_cnt#35362L,curr_yr_cnt#35363L,sales_cnt_diff#35364L,sales_amt_diff#35365])
[info] +- *(51) Project [d_year#35714 AS prev_year#35360, d_year#337 AS year#35361, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#35406L AS prev_yr_cnt#35362L, sales_cnt#35372L AS curr_yr_cnt#35363L, (sales_cnt#35372L - sales_cnt#35406L) AS sales_cnt_diff#35364L, CheckOverflow((promote_precision(cast(sales_amt#35373 as decimal(19,2))) - promote_precision(cast(sales_amt#35407 as decimal(19,2)))), DecimalType(19,2), true) AS sales_amt_diff#35365]
[info]    +- *(51) SortMergeJoin [i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], [i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571], Inner, (CheckOverflow((promote_precision(cast(sales_cnt#35372L as decimal(17,2))) / promote_precision(cast(sales_cnt#35406L as decimal(17,2)))), DecimalType(37,20), true) < 0.90000000000000000000)
[info]       :- *(25) Sort [i_brand_id#503 ASC NULLS FIRST, i_class_id#505 ASC NULLS FIRST, i_category_id#507 ASC NULLS FIRST, i_manufact_id#509 ASC NULLS FIRST], false, 0
[info]       :  +- Exchange hashpartitioning(i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, 4), true, [id=#106232]
[info]       :     +- *(24) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], functions=[sum(cast(sales_cnt#35366 as bigint)), sum(UnscaledValue(sales_amt#35367))])
[info]       :        +- Exchange hashpartitioning(d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, 4), true, [id=#106228]
[info]       :           +- *(23) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], functions=[partial_sum(cast(sales_cnt#35366 as bigint)), partial_sum(UnscaledValue(sales_amt#35367))])
[info]       :              +- *(23) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#35366, sales_amt#35367], functions=[])
[info]       :                 +- Exchange hashpartitioning(d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#35366, sales_amt#35367, 4), true, [id=#106223]
[info]       :                    +- *(22) HashAggregate(keys=[d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, sales_cnt#35366, sales_amt#35367], functions=[])
[info]       :                       +- Union
[info]       :                          :- *(7) Project [d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, (cs_quantity#895 - coalesce(cr_return_quantity#57, 0)) AS sales_cnt#35366, CheckOverflow((promote_precision(cast(cs_ext_sales_price#900 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#58, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#35367]
[info]       :                          :  +- SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], LeftOuter
[info]       :                          :     :- *(4) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]       :                          :     :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#105880]
[info]       :                          :     :     +- *(3) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, d_year#337]
[info]       :                          :     :        +- *(3) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]       :                          :     :           :- *(3) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                          :     :           :  +- *(3) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]       :                          :     :           :     :- *(3) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]       :                          :     :           :     :  +- *(3) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]       :                          :     :           :     :     +- *(3) ColumnarToRow
[info]       :                          :     :           :     :        +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>
[info]       :                          :     :           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105866]
[info]       :                          :     :           :        +- *(1) Project [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                          :     :           :           +- *(1) Filter ((((((isnotnull(i_category#508) AND (i_category#508 = Books)) AND isnotnull(i_item_sk#496)) AND isnotnull(i_category_id#507)) AND isnotnull(i_manufact_id#509)) AND isnotnull(i_brand_id#503)) AND isnotnull(i_class_id#505))
[info]       :                          :     :           :              +- *(1) ColumnarToRow
[info]       :                          :     :           :                 +- BatchScan[i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_category#508, i_manufact_id#509] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact...
[info]       :                          :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105875]
[info]       :                          :     :              +- *(2) Project [d_date_sk#331, d_year#337]
[info]       :                          :     :                 +- *(2) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2002)) AND isnotnull(d_date_sk#331))
[info]       :                          :     :                    +- *(2) ColumnarToRow
[info]       :                          :     :                       +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :                          :     +- *(6) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]       :                          :        +- Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#105889]
[info]       :                          :           +- *(5) Project [cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58]
[info]       :                          :              +- *(5) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]       :                          :                 +- *(5) ColumnarToRow
[info]       :                          :                    +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
[info]       :                          :- *(14) Project [d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, (ss_quantity#1173 - coalesce(sr_return_quantity#800, 0)) AS sales_cnt#35379, CheckOverflow((promote_precision(cast(ss_ext_sales_price#1178 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#801, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#35380]
[info]       :                          :  +- SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], LeftOuter
[info]       :                          :     :- *(11) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]       :                          :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#106178]
[info]       :                          :     :     +- *(10) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, d_year#337]
[info]       :                          :     :        +- *(10) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :                          :     :           :- *(10) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                          :     :           :  +- *(10) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]       :                          :     :           :     :- *(10) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]       :                          :     :           :     :  +- *(10) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]       :                          :     :           :     :     +- *(10) ColumnarToRow
[info]       :                          :     :           :     :        +- BatchScan[ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>
[info]       :                          :     :           :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105866]
[info]       :                          :     :           +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105875]
[info]       :                          :     +- *(13) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]       :                          :        +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#105929]
[info]       :                          :           +- *(12) Project [sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801]
[info]       :                          :              +- *(12) Filter (isnotnull(sr_item_sk#792) AND isnotnull(sr_ticket_number#799L))
[info]       :                          :                 +- *(12) ColumnarToRow
[info]       :                          :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
[info]       :                          +- *(21) Project [d_year#337, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, (ws_quantity#1038 - coalesce(wr_return_quantity#1276, 0)) AS sales_cnt#35386, CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#1277, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#35387]
[info]       :                             +- SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], LeftOuter
[info]       :                                :- *(18) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]       :                                :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#106211]
[info]       :                                :     +- *(17) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509, d_year#337]
[info]       :                                :        +- *(17) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                                :           :- *(17) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509]
[info]       :                                :           :  +- *(17) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]       :                                :           :     :- *(17) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]       :                                :           :     :  +- *(17) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]       :                                :           :     :     +- *(17) ColumnarToRow
[info]       :                                :           :     :        +- BatchScan[ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>
[info]       :                                :           :     +- ReusedExchange [i_item_sk#496, i_brand_id#503, i_class_id#505, i_category_id#507, i_manufact_id#509], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105866]
[info]       :                                :           +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105875]
[info]       :                                +- *(20) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]       :                                   +- Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#105969]
[info]       :                                      +- *(19) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277]
[info]       :                                         +- *(19) Filter (isnotnull(wr_item_sk#1264) AND isnotnull(wr_order_number#1275L))
[info]       :                                            +- *(19) ColumnarToRow
[info]       :                                               +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
[info]       +- *(50) Sort [i_brand_id#35565 ASC NULLS FIRST, i_class_id#35567 ASC NULLS FIRST, i_category_id#35569 ASC NULLS FIRST, i_manufact_id#35571 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571, 4), true, [id=#106641]
[info]             +- *(49) HashAggregate(keys=[d_year#35714, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571], functions=[sum(cast(sales_cnt#35366 as bigint)), sum(UnscaledValue(sales_amt#35367))])
[info]                +- Exchange hashpartitioning(d_year#35714, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571, 4), true, [id=#106621]
[info]                   +- *(48) HashAggregate(keys=[d_year#35714, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571], functions=[partial_sum(cast(sales_cnt#35366 as bigint)), partial_sum(UnscaledValue(sales_amt#35367))])
[info]                      +- *(48) HashAggregate(keys=[d_year#35714, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571, sales_cnt#35366, sales_amt#35367], functions=[])
[info]                         +- Exchange hashpartitioning(d_year#35714, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571, sales_cnt#35366, sales_amt#35367, 4), true, [id=#106518]
[info]                            +- *(47) HashAggregate(keys=[d_year#35714, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571, sales_cnt#35366, sales_amt#35367], functions=[])
[info]                               +- Union
[info]                                  :- *(32) Project [d_year#35714, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571, (cs_quantity#895 - coalesce(cr_return_quantity#57, 0)) AS sales_cnt#35366, CheckOverflow((promote_precision(cast(cs_ext_sales_price#900 as decimal(8,2))) - promote_precision(cast(coalesce(cr_return_amount#58, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#35367]
[info]                                  :  +- SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], LeftOuter
[info]                                  :     :- *(29) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                                  :     :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#106260]
[info]                                  :     :     +- *(28) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571, d_year#35714]
[info]                                  :     :        +- *(28) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#35708], Inner, BuildRight
[info]                                  :     :           :- *(28) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571]
[info]                                  :     :           :  +- *(28) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#35558], Inner, BuildRight
[info]                                  :     :           :     :- *(28) Project [cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911]
[info]                                  :     :           :     :  +- *(28) Filter (isnotnull(cs_item_sk#892) AND isnotnull(cs_sold_date_sk#911))
[info]                                  :     :           :     :     +- *(28) ColumnarToRow
[info]                                  :     :           :     :        +- BatchScan[cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_ext_sales_price#900, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>
[info]                                  :     :           :     +- ReusedExchange [i_item_sk#35558, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105866]
[info]                                  :     :           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106013]
[info]                                  :     :              +- *(27) Project [d_date_sk#35708, d_year#35714]
[info]                                  :     :                 +- *(27) Filter ((isnotnull(d_year#35714) AND (d_year#35714 = 2001)) AND isnotnull(d_date_sk#35708))
[info]                                  :     :                    +- *(27) ColumnarToRow
[info]                                  :     :                       +- BatchScan[d_date_sk#35708, d_year#35714] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]                                  :     +- *(31) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]                                  :        +- ReusedExchange [cr_item_sk#42, cr_order_number#56L, cr_return_quantity#57, cr_return_amount#58], Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#105889]
[info]                                  :- *(39) Project [d_year#35714, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571, (ss_quantity#1173 - coalesce(sr_return_quantity#800, 0)) AS sales_cnt#35393, CheckOverflow((promote_precision(cast(ss_ext_sales_price#1178 as decimal(8,2))) - promote_precision(cast(coalesce(sr_return_amt#801, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#35394]
[info]                                  :  +- SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], LeftOuter
[info]                                  :     :- *(36) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]                                  :     :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#106353]
[info]                                  :     :     +- *(35) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571, d_year#35714]
[info]                                  :     :        +- *(35) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#35708], Inner, BuildRight
[info]                                  :     :           :- *(35) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571]
[info]                                  :     :           :  +- *(35) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#35558], Inner, BuildRight
[info]                                  :     :           :     :- *(35) Project [ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                                  :     :           :     :  +- *(35) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                                  :     :           :     :     +- *(35) ColumnarToRow
[info]                                  :     :           :     :        +- BatchScan[ss_item_sk#1165, ss_ticket_number#1172L, ss_quantity#1173, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>
[info]                                  :     :           :     +- ReusedExchange [i_item_sk#35558, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105866]
[info]                                  :     :           +- ReusedExchange [d_date_sk#35708, d_year#35714], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106013]
[info]                                  :     +- *(38) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]                                  :        +- ReusedExchange [sr_item_sk#792, sr_ticket_number#799L, sr_return_quantity#800, sr_return_amt#801], Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#105929]
[info]                                  +- *(46) Project [d_year#35714, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571, (ws_quantity#1038 - coalesce(wr_return_quantity#1276, 0)) AS sales_cnt#35400, CheckOverflow((promote_precision(cast(ws_ext_sales_price#1043 as decimal(8,2))) - promote_precision(cast(coalesce(wr_return_amt#1277, 0.00) as decimal(8,2)))), DecimalType(8,2), true) AS sales_amt#35401]
[info]                                     +- SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], LeftOuter
[info]                                        :- *(43) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]                                        :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#106446]
[info]                                        :     +- *(42) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571, d_year#35714]
[info]                                        :        +- *(42) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#35708], Inner, BuildRight
[info]                                        :           :- *(42) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571]
[info]                                        :           :  +- *(42) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#35558], Inner, BuildRight
[info]                                        :           :     :- *(42) Project [ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054]
[info]                                        :           :     :  +- *(42) Filter (isnotnull(ws_item_sk#1023) AND isnotnull(ws_sold_date_sk#1054))
[info]                                        :           :     :     +- *(42) ColumnarToRow
[info]                                        :           :     :        +- BatchScan[ws_item_sk#1023, ws_order_number#1037L, ws_quantity#1038, ws_ext_sales_price#1043, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_order_number:bigint,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>
[info]                                        :           :     +- ReusedExchange [i_item_sk#35558, i_brand_id#35565, i_class_id#35567, i_category_id#35569, i_manufact_id#35571], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#105866]
[info]                                        :           +- ReusedExchange [d_date_sk#35708, d_year#35714], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#106013]
[info]                                        +- *(45) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]                                           +- ReusedExchange [wr_item_sk#1264, wr_order_number#1275L, wr_return_quantity#1276, wr_return_amt#1277], Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#105969]
[info] 
[info] 
[info]   Stopped after 1 iterations, 819 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q75-v2.7                                            819            819           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q77a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#36190 ASC NULLS FIRST,id#36191 ASC NULLS FIRST], output=[channel#36190,id#36191,sales#36390,returns#36391,profit#36392])
[info] +- *(87) HashAggregate(keys=[channel#36190, id#36191, sales#36390, returns#36391, profit#36392], functions=[])
[info]    +- Exchange hashpartitioning(channel#36190, id#36191, sales#36390, returns#36391, profit#36392, 4), true, [id=#109791]
[info]       +- *(86) HashAggregate(keys=[channel#36190, id#36191, sales#36390, returns#36391, profit#36392], functions=[])
[info]          +- Union
[info]             :- *(57) HashAggregate(keys=[channel#36190, id#36191, sales#36390, returns#36391, profit#36392], functions=[])
[info]             :  +- Exchange hashpartitioning(channel#36190, id#36191, sales#36390, returns#36391, profit#36392, 4), true, [id=#109417]
[info]             :     +- *(56) HashAggregate(keys=[channel#36190, id#36191, sales#36390, returns#36391, profit#36392], functions=[])
[info]             :        +- Union
[info]             :           :- *(27) HashAggregate(keys=[channel#36190, id#36191], functions=[sum(sales#36178), sum(returns#36192), sum(profit#36369)])
[info]             :           :  +- Exchange hashpartitioning(channel#36190, id#36191, 4), true, [id=#108955]
[info]             :           :     +- *(26) HashAggregate(keys=[channel#36190, id#36191], functions=[partial_sum(sales#36178), partial_sum(returns#36192), partial_sum(profit#36369)])
[info]             :           :        +- Union
[info]             :           :           :- *(9) Project [store channel AS channel#36190, s_store_sk#670 AS id#36191, sales#36178, coalesce(returns#36180, 0.00) AS returns#36192, CheckOverflow((promote_precision(cast(profit#36179 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#36181, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS profit#36369]
[info]             :           :           :  +- SortMergeJoin [s_store_sk#670], [s_store_sk#36240], LeftOuter
[info]             :           :           :     :- *(4) Sort [s_store_sk#670 ASC NULLS FIRST], false, 0
[info]             :           :           :     :  +- *(4) HashAggregate(keys=[s_store_sk#670], functions=[sum(UnscaledValue(ss_ext_sales_price#1178)), sum(UnscaledValue(ss_net_profit#1185))])
[info]             :           :           :     :     +- Exchange hashpartitioning(s_store_sk#670, 4), true, [id=#108183]
[info]             :           :           :     :        +- *(3) HashAggregate(keys=[s_store_sk#670], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178)), partial_sum(UnscaledValue(ss_net_profit#1185))])
[info]             :           :           :     :           +- *(3) Project [ss_ext_sales_price#1178, ss_net_profit#1185, s_store_sk#670]
[info]             :           :           :     :              +- *(3) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]             :           :           :     :                 :- *(3) Project [ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185]
[info]             :           :           :     :                 :  +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :     :                 :     :- *(3) Project [ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]             :           :           :     :                 :     :  +- *(3) Filter (isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170))
[info]             :           :           :     :                 :     :     +- *(3) ColumnarToRow
[info]             :           :           :     :                 :     :        +- BatchScan[ss_store_sk#1170, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>
[info]             :           :           :     :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#108168]
[info]             :           :           :     :                 :        +- *(1) Project [d_date_sk#331]
[info]             :           :           :     :                 :           +- *(1) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10442)) AND (d_date#333 <= 10472)) AND isnotnull(d_date_sk#331))
[info]             :           :           :     :                 :              +- *(1) ColumnarToRow
[info]             :           :           :     :                 :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]             :           :           :     :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#108177]
[info]             :           :           :     :                    +- *(2) Project [s_store_sk#670]
[info]             :           :           :     :                       +- *(2) Filter isnotnull(s_store_sk#670)
[info]             :           :           :     :                          +- *(2) ColumnarToRow
[info]             :           :           :     :                             +- BatchScan[s_store_sk#670] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int>
[info]             :           :           :     +- *(8) Sort [s_store_sk#36240 ASC NULLS FIRST], false, 0
[info]             :           :           :        +- *(8) HashAggregate(keys=[s_store_sk#36240], functions=[sum(UnscaledValue(sr_return_amt#801)), sum(UnscaledValue(sr_net_loss#809))])
[info]             :           :           :           +- Exchange hashpartitioning(s_store_sk#36240, 4), true, [id=#108753]
[info]             :           :           :              +- *(7) HashAggregate(keys=[s_store_sk#36240], functions=[partial_sum(UnscaledValue(sr_return_amt#801)), partial_sum(UnscaledValue(sr_net_loss#809))])
[info]             :           :           :                 +- *(7) Project [sr_return_amt#801, sr_net_loss#809, s_store_sk#36240]
[info]             :           :           :                    +- *(7) BroadcastHashJoin [sr_store_sk#797], [s_store_sk#36240], Inner, BuildRight
[info]             :           :           :                       :- *(7) Project [sr_store_sk#797, sr_return_amt#801, sr_net_loss#809]
[info]             :           :           :                       :  +- *(7) BroadcastHashJoin [sr_returned_date_sk#810], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :                       :     :- *(7) Project [sr_store_sk#797, sr_return_amt#801, sr_net_loss#809, sr_returned_date_sk#810]
[info]             :           :           :                       :     :  +- *(7) Filter (isnotnull(sr_returned_date_sk#810) AND isnotnull(sr_store_sk#797))
[info]             :           :           :                       :     :     +- *(7) ColumnarToRow
[info]             :           :           :                       :     :        +- BatchScan[sr_store_sk#797, sr_return_amt#801, sr_net_loss#809, sr_returned_date_sk#810] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
[info]             :           :           :                       :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#108168]
[info]             :           :           :                       +- ReusedExchange [s_store_sk#36240], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#108177]
[info]             :           :           :- *(16) Project [catalog channel AS channel#36194, cs_call_center_sk#888 AS id#36195, sales#36182, returns#36184, CheckOverflow((promote_precision(cast(profit#36183 as decimal(18,2))) - promote_precision(cast(profit_loss#36185 as decimal(18,2)))), DecimalType(18,2), true) AS profit#36196]
[info]             :           :           :  +- BroadcastNestedLoopJoin BuildRight, Inner
[info]             :           :           :     :- *(12) HashAggregate(keys=[cs_call_center_sk#888], functions=[sum(UnscaledValue(cs_ext_sales_price#900)), sum(UnscaledValue(cs_net_profit#910))])
[info]             :           :           :     :  +- Exchange hashpartitioning(cs_call_center_sk#888, 4), true, [id=#108818]
[info]             :           :           :     :     +- *(11) HashAggregate(keys=[cs_call_center_sk#888], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900)), partial_sum(UnscaledValue(cs_net_profit#910))])
[info]             :           :           :     :        +- *(11) Project [cs_call_center_sk#888, cs_ext_sales_price#900, cs_net_profit#910]
[info]             :           :           :     :           +- *(11) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :     :              :- *(11) Project [cs_call_center_sk#888, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911]
[info]             :           :           :     :              :  +- *(11) Filter isnotnull(cs_sold_date_sk#911)
[info]             :           :           :     :              :     +- *(11) ColumnarToRow
[info]             :           :           :     :              :        +- BatchScan[cs_call_center_sk#888, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_call_center_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>
[info]             :           :           :     :              +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#108168]
[info]             :           :           :     +- BroadcastExchange IdentityBroadcastMode, [id=#108840]
[info]             :           :           :        +- *(15) HashAggregate(keys=[], functions=[sum(UnscaledValue(cr_return_amount#58)), sum(UnscaledValue(cr_net_loss#66))])
[info]             :           :           :           +- Exchange SinglePartition, true, [id=#108836]
[info]             :           :           :              +- *(14) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(cr_return_amount#58)), partial_sum(UnscaledValue(cr_net_loss#66))])
[info]             :           :           :                 +- *(14) Project [cr_return_amount#58, cr_net_loss#66]
[info]             :           :           :                    +- *(14) BroadcastHashJoin [cr_returned_date_sk#67], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :                       :- *(14) Project [cr_return_amount#58, cr_net_loss#66, cr_returned_date_sk#67]
[info]             :           :           :                       :  +- *(14) Filter isnotnull(cr_returned_date_sk#67)
[info]             :           :           :                       :     +- *(14) ColumnarToRow
[info]             :           :           :                       :        +- BatchScan[cr_return_amount#58, cr_net_loss#66, cr_returned_date_sk#67] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
[info]             :           :           :                       +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#108168]
[info]             :           :           +- *(25) Project [web channel AS channel#36197, wp_web_page_sk#1773 AS id#36198, sales#36186, coalesce(returns#36188, 0.00) AS returns#36199, CheckOverflow((promote_precision(cast(profit#36187 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#36189, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS profit#36370]
[info]             :           :              +- SortMergeJoin [wp_web_page_sk#1773], [wp_web_page_sk#36269], LeftOuter
[info]             :           :                 :- *(20) Sort [wp_web_page_sk#1773 ASC NULLS FIRST], false, 0
[info]             :           :                 :  +- *(20) HashAggregate(keys=[wp_web_page_sk#1773], functions=[sum(UnscaledValue(ws_ext_sales_price#1043)), sum(UnscaledValue(ws_net_profit#1053))])
[info]             :           :                 :     +- Exchange hashpartitioning(wp_web_page_sk#1773, 4), true, [id=#108861]
[info]             :           :                 :        +- *(19) HashAggregate(keys=[wp_web_page_sk#1773], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043)), partial_sum(UnscaledValue(ws_net_profit#1053))])
[info]             :           :                 :           +- *(19) Project [ws_ext_sales_price#1043, ws_net_profit#1053, wp_web_page_sk#1773]
[info]             :           :                 :              +- *(19) BroadcastHashJoin [ws_web_page_sk#1032], [wp_web_page_sk#1773], Inner, BuildRight
[info]             :           :                 :                 :- *(19) Project [ws_web_page_sk#1032, ws_ext_sales_price#1043, ws_net_profit#1053]
[info]             :           :                 :                 :  +- *(19) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :           :                 :                 :     :- *(19) Project [ws_web_page_sk#1032, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054]
[info]             :           :                 :                 :     :  +- *(19) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_web_page_sk#1032))
[info]             :           :                 :                 :     :     +- *(19) ColumnarToRow
[info]             :           :                 :                 :     :        +- BatchScan[ws_web_page_sk#1032, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_web_page_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>
[info]             :           :                 :                 :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#108168]
[info]             :           :                 :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#108282]
[info]             :           :                 :                    +- *(18) Project [wp_web_page_sk#1773]
[info]             :           :                 :                       +- *(18) Filter isnotnull(wp_web_page_sk#1773)
[info]             :           :                 :                          +- *(18) ColumnarToRow
[info]             :           :                 :                             +- BatchScan[wp_web_page_sk#1773] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_page], ReadSchema: struct<wp_web_page_sk:int>
[info]             :           :                 +- *(24) Sort [wp_web_page_sk#36269 ASC NULLS FIRST], false, 0
[info]             :           :                    +- *(24) HashAggregate(keys=[wp_web_page_sk#36269], functions=[sum(UnscaledValue(wr_return_amt#1277)), sum(UnscaledValue(wr_net_loss#1285))])
[info]             :           :                       +- Exchange hashpartitioning(wp_web_page_sk#36269, 4), true, [id=#108900]
[info]             :           :                          +- *(23) HashAggregate(keys=[wp_web_page_sk#36269], functions=[partial_sum(UnscaledValue(wr_return_amt#1277)), partial_sum(UnscaledValue(wr_net_loss#1285))])
[info]             :           :                             +- *(23) Project [wr_return_amt#1277, wr_net_loss#1285, wp_web_page_sk#36269]
[info]             :           :                                +- *(23) BroadcastHashJoin [wr_web_page_sk#1273], [wp_web_page_sk#36269], Inner, BuildRight
[info]             :           :                                   :- *(23) Project [wr_web_page_sk#1273, wr_return_amt#1277, wr_net_loss#1285]
[info]             :           :                                   :  +- *(23) BroadcastHashJoin [wr_returned_date_sk#1286], [d_date_sk#331], Inner, BuildRight
[info]             :           :                                   :     :- *(23) Project [wr_web_page_sk#1273, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286]
[info]             :           :                                   :     :  +- *(23) Filter (isnotnull(wr_returned_date_sk#1286) AND isnotnull(wr_web_page_sk#1273))
[info]             :           :                                   :     :     +- *(23) ColumnarToRow
[info]             :           :                                   :     :        +- BatchScan[wr_web_page_sk#1273, wr_return_amt#1277, wr_net_loss#1285, wr_returned_date_sk#1286] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_web_page_sk:int,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
[info]             :           :                                   :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#108168]
[info]             :           :                                   +- ReusedExchange [wp_web_page_sk#36269], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#108282]
[info]             :           +- *(55) HashAggregate(keys=[channel#36190], functions=[sum(sales#36201), sum(returns#36202), sum(profit#36203)])
[info]             :              +- Exchange hashpartitioning(channel#36190, 4), true, [id=#109409]
[info]             :                 +- *(54) HashAggregate(keys=[channel#36190], functions=[partial_sum(sales#36201), partial_sum(returns#36202), partial_sum(profit#36203)])
[info]             :                    +- *(54) HashAggregate(keys=[channel#36190, id#36191], functions=[sum(sales#36178), sum(returns#36192), sum(profit#36371)])
[info]             :                       +- ReusedExchange [channel#36190, id#36191, sum#36562, sum#36563, sum#36564], Exchange hashpartitioning(channel#36190, id#36191, 4), true, [id=#108955]
[info]             +- *(85) HashAggregate(keys=[], functions=[sum(sales#36201), sum(returns#36202), sum(profit#36203)])
[info]                +- Exchange SinglePartition, true, [id=#109783]
[info]                   +- *(84) HashAggregate(keys=[], functions=[partial_sum(sales#36201), partial_sum(returns#36202), partial_sum(profit#36203)])
[info]                      +- *(84) HashAggregate(keys=[channel#36190, id#36191], functions=[sum(sales#36178), sum(returns#36192), sum(profit#36373)])
[info]                         +- ReusedExchange [channel#36190, id#36191, sum#36598, sum#36599, sum#36600], Exchange hashpartitioning(channel#36190, id#36191, 4), true, [id=#108955]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1555 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q77a-v2.7                                          1555           1555           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q78-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[ss_sold_year#36778 ASC NULLS FIRST,ss_item_sk#1165 ASC NULLS FIRST,ss_customer_sk#1166 ASC NULLS FIRST,ss_qty#36779L DESC NULLS LAST,ss_wc#36780 DESC NULLS LAST,ss_sp#36781 DESC NULLS LAST,other_chan_qty#36765L ASC NULLS FIRST,other_chan_wholesale_cost#36766 ASC NULLS FIRST,other_chan_sales_price#36767 ASC NULLS FIRST,ratio#36761 ASC NULLS FIRST], output=[ratio#36761,store_qty#36762L,store_wholesale_cost#36763,store_sales_price#36764,other_chan_qty#36765L,other_chan_wholesale_cost#36766,other_chan_sales_price#36767])
[info] +- *(26) Project [round((cast(ss_qty#36779L as double) / cast(coalesce((ws_qty#36770L + cs_qty#36775L), 1) as double)), 2) AS ratio#36761, ss_qty#36779L AS store_qty#36762L, ss_wc#36780 AS store_wholesale_cost#36763, ss_sp#36781 AS store_sales_price#36764, (coalesce(ws_qty#36770L, 0) + coalesce(cs_qty#36775L, 0)) AS other_chan_qty#36765L, CheckOverflow((promote_precision(cast(coalesce(ws_wc#36771, 0.00) as decimal(18,2))) + promote_precision(cast(coalesce(cs_wc#36776, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS other_chan_wholesale_cost#36766, CheckOverflow((promote_precision(cast(coalesce(ws_sp#36772, 0.00) as decimal(18,2))) + promote_precision(cast(coalesce(cs_sp#36777, 0.00) as decimal(18,2)))), DecimalType(18,2), true) AS other_chan_sales_price#36767, ss_sold_year#36778, ss_item_sk#1165, ss_customer_sk#1166, ss_wc#36780, ss_qty#36779L, ss_sp#36781]
[info]    +- *(26) SortMergeJoin [ss_sold_year#36778, ss_item_sk#1165, ss_customer_sk#1166], [cs_sold_year#36773, cs_item_sk#892, cs_customer_sk#36774], Inner
[info]       :- *(17) Project [ss_sold_year#36778, ss_item_sk#1165, ss_customer_sk#1166, ss_qty#36779L, ss_wc#36780, ss_sp#36781, ws_qty#36770L, ws_wc#36771, ws_sp#36772]
[info]       :  +- *(17) SortMergeJoin [ss_sold_year#36778, ss_item_sk#1165, ss_customer_sk#1166], [ws_sold_year#36768, ws_item_sk#1023, ws_customer_sk#36769], Inner
[info]       :     :- *(8) Sort [ss_sold_year#36778 ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST, ss_customer_sk#1166 ASC NULLS FIRST], false, 0
[info]       :     :  +- Exchange hashpartitioning(ss_sold_year#36778, ss_item_sk#1165, ss_customer_sk#1166, 4), true, [id=#110156]
[info]       :     :     +- *(7) HashAggregate(keys=[d_year#337, ss_item_sk#1165, ss_customer_sk#1166], functions=[sum(cast(ss_quantity#1173 as bigint)), sum(UnscaledValue(ss_wholesale_cost#1174)), sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :        +- Exchange hashpartitioning(d_year#337, ss_item_sk#1165, ss_customer_sk#1166, 4), true, [id=#110152]
[info]       :     :           +- *(6) HashAggregate(keys=[d_year#337, ss_item_sk#1165, ss_customer_sk#1166], functions=[partial_sum(cast(ss_quantity#1173 as bigint)), partial_sum(UnscaledValue(ss_wholesale_cost#1174)), partial_sum(UnscaledValue(ss_sales_price#1176))])
[info]       :     :              +- *(6) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, d_year#337]
[info]       :     :                 +- *(6) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]       :     :                    :- *(6) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                    :  +- *(6) Filter isnull(sr_ticket_number#799L)
[info]       :     :                    :     +- SortMergeJoin [ss_ticket_number#1172L, ss_item_sk#1165], [sr_ticket_number#799L, sr_item_sk#792], LeftOuter
[info]       :     :                    :        :- *(2) Sort [ss_ticket_number#1172L ASC NULLS FIRST, ss_item_sk#1165 ASC NULLS FIRST], false, 0
[info]       :     :                    :        :  +- Exchange hashpartitioning(ss_ticket_number#1172L, ss_item_sk#1165, 4), true, [id=#110124]
[info]       :     :                    :        :     +- *(1) Project [ss_item_sk#1165, ss_customer_sk#1166, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, ss_sold_date_sk#1186]
[info]       :     :                    :        :        +- *(1) Filter ((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_customer_sk#1166)) AND isnotnull(ss_item_sk#1165))
[info]       :     :                    :        :           +- *(1) ColumnarToRow
[info]       :     :                    :        :              +- BatchScan[ss_item_sk#1165, ss_customer_sk#1166, ss_ticket_number#1172L, ss_quantity#1173, ss_wholesale_cost#1174, ss_sales_price#1176, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_ticket_number:bigint,ss_quantity:int,ss_wholesale_cos...
[info]       :     :                    :        +- *(4) Sort [sr_ticket_number#799L ASC NULLS FIRST, sr_item_sk#792 ASC NULLS FIRST], false, 0
[info]       :     :                    :           +- Exchange hashpartitioning(sr_ticket_number#799L, sr_item_sk#792, 4), true, [id=#110133]
[info]       :     :                    :              +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L]
[info]       :     :                    :                 +- *(3) Filter (isnotnull(sr_ticket_number#799L) AND isnotnull(sr_item_sk#792))
[info]       :     :                    :                    +- *(3) ColumnarToRow
[info]       :     :                    :                       +- BatchScan[sr_item_sk#792, sr_ticket_number#799L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint>
[info]       :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#110146]
[info]       :     :                       +- *(5) Project [d_date_sk#331, d_year#337]
[info]       :     :                          +- *(5) Filter ((isnotnull(d_year#337) AND (d_year#337 = 2000)) AND isnotnull(d_date_sk#331))
[info]       :     :                             +- *(5) ColumnarToRow
[info]       :     :                                +- BatchScan[d_date_sk#331, d_year#337] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_year:int>
[info]       :     +- *(16) Sort [ws_sold_year#36768 ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST, ws_customer_sk#36769 ASC NULLS FIRST], false, 0
[info]       :        +- Exchange hashpartitioning(ws_sold_year#36768, ws_item_sk#1023, ws_customer_sk#36769, 4), true, [id=#110282]
[info]       :           +- *(15) Filter (coalesce(ws_qty#36770L, 0) > 0)
[info]       :              +- *(15) HashAggregate(keys=[d_year#337, ws_item_sk#1023, ws_bill_customer_sk#1024], functions=[sum(cast(ws_quantity#1038 as bigint)), sum(UnscaledValue(ws_wholesale_cost#1039)), sum(UnscaledValue(ws_sales_price#1041))])
[info]       :                 +- Exchange hashpartitioning(d_year#337, ws_item_sk#1023, ws_bill_customer_sk#1024, 4), true, [id=#110277]
[info]       :                    +- *(14) HashAggregate(keys=[d_year#337, ws_item_sk#1023, ws_bill_customer_sk#1024], functions=[partial_sum(cast(ws_quantity#1038 as bigint)), partial_sum(UnscaledValue(ws_wholesale_cost#1039)), partial_sum(UnscaledValue(ws_sales_price#1041))])
[info]       :                       +- *(14) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, d_year#337]
[info]       :                          +- *(14) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]       :                             :- *(14) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, ws_sold_date_sk#1054]
[info]       :                             :  +- *(14) Filter isnull(wr_order_number#1275L)
[info]       :                             :     +- SortMergeJoin [ws_order_number#1037L, ws_item_sk#1023], [wr_order_number#1275L, wr_item_sk#1264], LeftOuter
[info]       :                             :        :- *(10) Sort [ws_order_number#1037L ASC NULLS FIRST, ws_item_sk#1023 ASC NULLS FIRST], false, 0
[info]       :                             :        :  +- Exchange hashpartitioning(ws_order_number#1037L, ws_item_sk#1023, 4), true, [id=#110166]
[info]       :                             :        :     +- *(9) Project [ws_item_sk#1023, ws_bill_customer_sk#1024, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, ws_sold_date_sk#1054]
[info]       :                             :        :        +- *(9) Filter ((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_item_sk#1023)) AND isnotnull(ws_bill_customer_sk#1024))
[info]       :                             :        :           +- *(9) ColumnarToRow
[info]       :                             :        :              +- BatchScan[ws_item_sk#1023, ws_bill_customer_sk#1024, ws_order_number#1037L, ws_quantity#1038, ws_wholesale_cost#1039, ws_sales_price#1041, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_bill_customer_sk:int,ws_order_number:bigint,ws_quantity:int,ws_wholesale...
[info]       :                             :        +- *(12) Sort [wr_order_number#1275L ASC NULLS FIRST, wr_item_sk#1264 ASC NULLS FIRST], false, 0
[info]       :                             :           +- Exchange hashpartitioning(wr_order_number#1275L, wr_item_sk#1264, 4), true, [id=#110175]
[info]       :                             :              +- *(11) Project [wr_item_sk#1264, wr_order_number#1275L]
[info]       :                             :                 +- *(11) Filter (isnotnull(wr_order_number#1275L) AND isnotnull(wr_item_sk#1264))
[info]       :                             :                    +- *(11) ColumnarToRow
[info]       :                             :                       +- BatchScan[wr_item_sk#1264, wr_order_number#1275L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint>
[info]       :                             +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#110146]
[info]       +- *(25) Sort [cs_sold_year#36773 ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST, cs_customer_sk#36774 ASC NULLS FIRST], false, 0
[info]          +- Exchange hashpartitioning(cs_sold_year#36773, cs_item_sk#892, cs_customer_sk#36774, 4), true, [id=#110310]
[info]             +- *(24) Filter (coalesce(cs_qty#36775L, 0) > 0)
[info]                +- *(24) HashAggregate(keys=[d_year#337, cs_item_sk#892, cs_bill_customer_sk#880], functions=[sum(cast(cs_quantity#895 as bigint)), sum(UnscaledValue(cs_wholesale_cost#896)), sum(UnscaledValue(cs_sales_price#898))])
[info]                   +- Exchange hashpartitioning(d_year#337, cs_item_sk#892, cs_bill_customer_sk#880, 4), true, [id=#110305]
[info]                      +- *(23) HashAggregate(keys=[d_year#337, cs_item_sk#892, cs_bill_customer_sk#880], functions=[partial_sum(cast(cs_quantity#895 as bigint)), partial_sum(UnscaledValue(cs_wholesale_cost#896)), partial_sum(UnscaledValue(cs_sales_price#898))])
[info]                         +- *(23) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, d_year#337]
[info]                            +- *(23) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(23) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, cs_sold_date_sk#911]
[info]                               :  +- *(23) Filter isnull(cr_order_number#56L)
[info]                               :     +- SortMergeJoin [cs_order_number#894L, cs_item_sk#892], [cr_order_number#56L, cr_item_sk#42], LeftOuter
[info]                               :        :- *(19) Sort [cs_order_number#894L ASC NULLS FIRST, cs_item_sk#892 ASC NULLS FIRST], false, 0
[info]                               :        :  +- Exchange hashpartitioning(cs_order_number#894L, cs_item_sk#892, 4), true, [id=#110213]
[info]                               :        :     +- *(18) Project [cs_bill_customer_sk#880, cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, cs_sold_date_sk#911]
[info]                               :        :        +- *(18) Filter ((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_bill_customer_sk#880)) AND isnotnull(cs_item_sk#892))
[info]                               :        :           +- *(18) ColumnarToRow
[info]                               :        :              +- BatchScan[cs_bill_customer_sk#880, cs_item_sk#892, cs_order_number#894L, cs_quantity#895, cs_wholesale_cost#896, cs_sales_price#898, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int,cs_order_number:bigint,cs_quantity:int,cs_wholesale...
[info]                               :        +- *(21) Sort [cr_order_number#56L ASC NULLS FIRST, cr_item_sk#42 ASC NULLS FIRST], false, 0
[info]                               :           +- Exchange hashpartitioning(cr_order_number#56L, cr_item_sk#42, 4), true, [id=#110222]
[info]                               :              +- *(20) Project [cr_item_sk#42, cr_order_number#56L]
[info]                               :                 +- *(20) Filter (isnotnull(cr_order_number#56L) AND isnotnull(cr_item_sk#42))
[info]                               :                    +- *(20) ColumnarToRow
[info]                               :                       +- BatchScan[cr_item_sk#42, cr_order_number#56L] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint>
[info]                               +- ReusedExchange [d_date_sk#331, d_year#337], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#110146]
[info] 
[info] 
[info]   Stopped after 1 iterations, 368 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q78-v2.7                                            368            368           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q80a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[channel#36962 ASC NULLS FIRST,id#36963 ASC NULLS FIRST], output=[channel#36962,id#36963,sales#37013,returns#37014,profit#37015])
[info] +- *(102) HashAggregate(keys=[channel#36962, id#36963, sales#37013, returns#37014, profit#37015], functions=[])
[info]    +- Exchange hashpartitioning(channel#36962, id#36963, sales#37013, returns#37014, profit#37015, 4), true, [id=#113659]
[info]       +- *(101) HashAggregate(keys=[channel#36962, id#36963, sales#37013, returns#37014, profit#37015], functions=[])
[info]          +- Union
[info]             :- *(67) HashAggregate(keys=[channel#36962, id#36963, sales#37013, returns#37014, profit#37015], functions=[])
[info]             :  +- Exchange hashpartitioning(channel#36962, id#36963, sales#37013, returns#37014, profit#37015, 4), true, [id=#113252]
[info]             :     +- *(66) HashAggregate(keys=[channel#36962, id#36963, sales#37013, returns#37014, profit#37015], functions=[])
[info]             :        +- Union
[info]             :           :- *(32) HashAggregate(keys=[channel#36962, id#36963], functions=[sum(sales#36952), sum(returns#36953), sum(profit#36954)])
[info]             :           :  +- Exchange hashpartitioning(channel#36962, id#36963, 4), true, [id=#112634]
[info]             :           :     +- *(31) HashAggregate(keys=[channel#36962, id#36963], functions=[partial_sum(sales#36952), partial_sum(returns#36953), partial_sum(profit#36954)])
[info]             :           :        +- Union
[info]             :           :           :- *(10) HashAggregate(keys=[s_store_id#671], functions=[sum(UnscaledValue(ss_ext_sales_price#1178)), sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ss_net_profit#1185 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#809 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]             :           :           :  +- Exchange hashpartitioning(s_store_id#671, 4), true, [id=#111959]
[info]             :           :           :     +- *(9) HashAggregate(keys=[s_store_id#671], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178)), partial_sum(coalesce(cast(sr_return_amt#801 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ss_net_profit#1185 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#809 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]             :           :           :        +- *(9) Project [ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809, s_store_id#671]
[info]             :           :           :           +- *(9) BroadcastHashJoin [ss_promo_sk#1171], [p_promo_sk#589], Inner, BuildRight
[info]             :           :           :              :- *(9) Project [ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809, s_store_id#671]
[info]             :           :           :              :  +- *(9) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :              :     :- *(9) Project [ss_item_sk#1165, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809, s_store_id#671]
[info]             :           :           :              :     :  +- *(9) BroadcastHashJoin [ss_store_sk#1170], [s_store_sk#670], Inner, BuildRight
[info]             :           :           :              :     :     :- *(9) Project [ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, sr_return_amt#801, sr_net_loss#809]
[info]             :           :           :              :     :     :  +- *(9) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :              :     :     :     :- *(9) Project [ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186, sr_return_amt#801, sr_net_loss#809]
[info]             :           :           :              :     :     :     :  +- SortMergeJoin [ss_item_sk#1165, ss_ticket_number#1172L], [sr_item_sk#792, sr_ticket_number#799L], LeftOuter
[info]             :           :           :              :     :     :     :     :- *(2) Sort [ss_item_sk#1165 ASC NULLS FIRST, ss_ticket_number#1172L ASC NULLS FIRST], false, 0
[info]             :           :           :              :     :     :     :     :  +- Exchange hashpartitioning(ss_item_sk#1165, ss_ticket_number#1172L, 4), true, [id=#111905]
[info]             :           :           :              :     :     :     :     :     +- *(1) Project [ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186]
[info]             :           :           :              :     :     :     :     :        +- *(1) Filter (((isnotnull(ss_sold_date_sk#1186) AND isnotnull(ss_store_sk#1170)) AND isnotnull(ss_item_sk#1165)) AND isnotnull(ss_promo_sk#1171))
[info]             :           :           :              :     :     :     :     :           +- *(1) ColumnarToRow
[info]             :           :           :              :     :     :     :     :              +- BatchScan[ss_item_sk#1165, ss_store_sk#1170, ss_promo_sk#1171, ss_ticket_number#1172L, ss_ext_sales_price#1178, ss_net_profit#1185, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:bigint,ss_ext_sales_price:...
[info]             :           :           :              :     :     :     :     +- *(4) Sort [sr_item_sk#792 ASC NULLS FIRST, sr_ticket_number#799L ASC NULLS FIRST], false, 0
[info]             :           :           :              :     :     :     :        +- Exchange hashpartitioning(sr_item_sk#792, sr_ticket_number#799L, 4), true, [id=#111914]
[info]             :           :           :              :     :     :     :           +- *(3) Project [sr_item_sk#792, sr_ticket_number#799L, sr_return_amt#801, sr_net_loss#809]
[info]             :           :           :              :     :     :     :              +- *(3) Filter (isnotnull(sr_item_sk#792) AND isnotnull(sr_ticket_number#799L))
[info]             :           :           :              :     :     :     :                 +- *(3) ColumnarToRow
[info]             :           :           :              :     :     :     :                    +- BatchScan[sr_item_sk#792, sr_ticket_number#799L, sr_return_amt#801, sr_net_loss#809] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_returns], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:bigint,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
[info]             :           :           :              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#111926]
[info]             :           :           :              :     :     :        +- *(5) Project [d_date_sk#331]
[info]             :           :           :              :     :     :           +- *(5) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10442)) AND (d_date#333 <= 10472)) AND isnotnull(d_date_sk#331))
[info]             :           :           :              :     :     :              +- *(5) ColumnarToRow
[info]             :           :           :              :     :     :                 +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info]             :           :           :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#111935]
[info]             :           :           :              :     :        +- *(6) Project [s_store_sk#670, s_store_id#671]
[info]             :           :           :              :     :           +- *(6) Filter isnotnull(s_store_sk#670)
[info]             :           :           :              :     :              +- *(6) ColumnarToRow
[info]             :           :           :              :     :                 +- BatchScan[s_store_sk#670, s_store_id#671] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store], ReadSchema: struct<s_store_sk:int,s_store_id:string>
[info]             :           :           :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#111944]
[info]             :           :           :              :        +- *(7) Project [i_item_sk#496]
[info]             :           :           :              :           +- *(7) Filter ((isnotnull(i_current_price#501) AND (i_current_price#501 > 50.00)) AND isnotnull(i_item_sk#496))
[info]             :           :           :              :              +- *(7) ColumnarToRow
[info]             :           :           :              :                 +- BatchScan[i_item_sk#496, i_current_price#501] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2)>
[info]             :           :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#111953]
[info]             :           :           :                 +- *(8) Project [p_promo_sk#589]
[info]             :           :           :                    +- *(8) Filter ((isnotnull(p_channel_tv#600) AND (p_channel_tv#600 = N)) AND isnotnull(p_promo_sk#589))
[info]             :           :           :                       +- *(8) ColumnarToRow
[info]             :           :           :                          +- BatchScan[p_promo_sk#589, p_channel_tv#600] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/promotion], ReadSchema: struct<p_promo_sk:int,p_channel_tv:string>
[info]             :           :           :- *(20) HashAggregate(keys=[cp_catalog_page_id#1], functions=[sum(UnscaledValue(cs_ext_sales_price#900)), sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(cs_net_profit#910 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#66 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]             :           :           :  +- Exchange hashpartitioning(cp_catalog_page_id#1, 4), true, [id=#112582]
[info]             :           :           :     +- *(19) HashAggregate(keys=[cp_catalog_page_id#1], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#900)), partial_sum(coalesce(cast(cr_return_amount#58 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(cs_net_profit#910 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#66 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]             :           :           :        +- *(19) Project [cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66, cp_catalog_page_id#1]
[info]             :           :           :           +- *(19) BroadcastHashJoin [cs_promo_sk#893], [p_promo_sk#589], Inner, BuildRight
[info]             :           :           :              :- *(19) Project [cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66, cp_catalog_page_id#1]
[info]             :           :           :              :  +- *(19) BroadcastHashJoin [cs_item_sk#892], [i_item_sk#496], Inner, BuildRight
[info]             :           :           :              :     :- *(19) Project [cs_item_sk#892, cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66, cp_catalog_page_id#1]
[info]             :           :           :              :     :  +- *(19) BroadcastHashJoin [cs_catalog_page_sk#889], [cp_catalog_page_sk#0], Inner, BuildRight
[info]             :           :           :              :     :     :- *(19) Project [cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cr_return_amount#58, cr_net_loss#66]
[info]             :           :           :              :     :     :  +- *(19) BroadcastHashJoin [cs_sold_date_sk#911], [d_date_sk#331], Inner, BuildRight
[info]             :           :           :              :     :     :     :- *(19) Project [cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911, cr_return_amount#58, cr_net_loss#66]
[info]             :           :           :              :     :     :     :  +- SortMergeJoin [cs_item_sk#892, cs_order_number#894L], [cr_item_sk#42, cr_order_number#56L], LeftOuter
[info]             :           :           :              :     :     :     :     :- *(12) Sort [cs_item_sk#892 ASC NULLS FIRST, cs_order_number#894L ASC NULLS FIRST], false, 0
[info]             :           :           :              :     :     :     :     :  +- Exchange hashpartitioning(cs_item_sk#892, cs_order_number#894L, 4), true, [id=#111968]
[info]             :           :           :              :     :     :     :     :     +- *(11) Project [cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911]
[info]             :           :           :              :     :     :     :     :        +- *(11) Filter (((isnotnull(cs_sold_date_sk#911) AND isnotnull(cs_catalog_page_sk#889)) AND isnotnull(cs_item_sk#892)) AND isnotnull(cs_promo_sk#893))
[info]             :           :           :              :     :     :     :     :           +- *(11) ColumnarToRow
[info]             :           :           :              :     :     :     :     :              +- BatchScan[cs_catalog_page_sk#889, cs_item_sk#892, cs_promo_sk#893, cs_order_number#894L, cs_ext_sales_price#900, cs_net_profit#910, cs_sold_date_sk#911] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_sales], ReadSchema: struct<cs_catalog_page_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:bigint,cs_ext_sales_...
[info]             :           :           :              :     :     :     :     +- *(14) Sort [cr_item_sk#42 ASC NULLS FIRST, cr_order_number#56L ASC NULLS FIRST], false, 0
[info]             :           :           :              :     :     :     :        +- Exchange hashpartitioning(cr_item_sk#42, cr_order_number#56L, 4), true, [id=#111977]
[info]             :           :           :              :     :     :     :           +- *(13) Project [cr_item_sk#42, cr_order_number#56L, cr_return_amount#58, cr_net_loss#66]
[info]             :           :           :              :     :     :     :              +- *(13) Filter (isnotnull(cr_item_sk#42) AND isnotnull(cr_order_number#56L))
[info]             :           :           :              :     :     :     :                 +- *(13) ColumnarToRow
[info]             :           :           :              :     :     :     :                    +- BatchScan[cr_item_sk#42, cr_order_number#56L, cr_return_amount#58, cr_net_loss#66] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_returns], ReadSchema: struct<cr_item_sk:int,cr_order_number:bigint,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
[info]             :           :           :              :     :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#111926]
[info]             :           :           :              :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#111998]
[info]             :           :           :              :     :        +- *(16) Project [cp_catalog_page_sk#0, cp_catalog_page_id#1]
[info]             :           :           :              :     :           +- *(16) Filter isnotnull(cp_catalog_page_sk#0)
[info]             :           :           :              :     :              +- *(16) ColumnarToRow
[info]             :           :           :              :     :                 +- BatchScan[cp_catalog_page_sk#0, cp_catalog_page_id#1] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/catalog_page], ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>
[info]             :           :           :              :     +- ReusedExchange [i_item_sk#496], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#111944]
[info]             :           :           :              +- ReusedExchange [p_promo_sk#589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#111953]
[info]             :           :           +- *(30) HashAggregate(keys=[web_site_id#1367], functions=[sum(UnscaledValue(ws_ext_sales_price#1043)), sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ws_net_profit#1053 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#1285 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]             :           :              +- Exchange hashpartitioning(web_site_id#1367, 4), true, [id=#112626]
[info]             :           :                 +- *(29) HashAggregate(keys=[web_site_id#1367], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#1043)), partial_sum(coalesce(cast(wr_return_amt#1277 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ws_net_profit#1053 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#1285 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2), true))])
[info]             :           :                    +- *(29) Project [ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285, web_site_id#1367]
[info]             :           :                       +- *(29) BroadcastHashJoin [ws_promo_sk#1036], [p_promo_sk#589], Inner, BuildRight
[info]             :           :                          :- *(29) Project [ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285, web_site_id#1367]
[info]             :           :                          :  +- *(29) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]             :           :                          :     :- *(29) Project [ws_item_sk#1023, ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285, web_site_id#1367]
[info]             :           :                          :     :  +- *(29) BroadcastHashJoin [ws_web_site_sk#1033], [web_site_sk#1366], Inner, BuildRight
[info]             :           :                          :     :     :- *(29) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, wr_return_amt#1277, wr_net_loss#1285]
[info]             :           :                          :     :     :  +- *(29) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]             :           :                          :     :     :     :- *(29) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054, wr_return_amt#1277, wr_net_loss#1285]
[info]             :           :                          :     :     :     :  +- SortMergeJoin [ws_item_sk#1023, ws_order_number#1037L], [wr_item_sk#1264, wr_order_number#1275L], LeftOuter
[info]             :           :                          :     :     :     :     :- *(22) Sort [ws_item_sk#1023 ASC NULLS FIRST, ws_order_number#1037L ASC NULLS FIRST], false, 0
[info]             :           :                          :     :     :     :     :  +- Exchange hashpartitioning(ws_item_sk#1023, ws_order_number#1037L, 4), true, [id=#112031]
[info]             :           :                          :     :     :     :     :     +- *(21) Project [ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_order_number#1037L, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054]
[info]             :           :                          :     :     :     :     :        +- *(21) Filter (((isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_web_site_sk#1033)) AND isnotnull(ws_item_sk#1023)) AND isnotnull(ws_promo_sk#1036))
[info]             :           :                          :     :     :     :     :           +- *(21) ColumnarToRow
[info]             :           :                          :     :     :     :     :              +- BatchScan[ws_item_sk#1023, ws_web_site_sk#1033, ws_promo_sk#1036, ws_order_number#1037L, ws_ext_sales_price#1043, ws_net_profit#1053, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_promo_sk:int,ws_order_number:bigint,ws_ext_sales_pric...
[info]             :           :                          :     :     :     :     +- *(24) Sort [wr_item_sk#1264 ASC NULLS FIRST, wr_order_number#1275L ASC NULLS FIRST], false, 0
[info]             :           :                          :     :     :     :        +- Exchange hashpartitioning(wr_item_sk#1264, wr_order_number#1275L, 4), true, [id=#112040]
[info]             :           :                          :     :     :     :           +- *(23) Project [wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285]
[info]             :           :                          :     :     :     :              +- *(23) Filter (isnotnull(wr_item_sk#1264) AND isnotnull(wr_order_number#1275L))
[info]             :           :                          :     :     :     :                 +- *(23) ColumnarToRow
[info]             :           :                          :     :     :     :                    +- BatchScan[wr_item_sk#1264, wr_order_number#1275L, wr_return_amt#1277, wr_net_loss#1285] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_returns], ReadSchema: struct<wr_item_sk:int,wr_order_number:bigint,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
[info]             :           :                          :     :     :     +- ReusedExchange [d_date_sk#331], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#111926]
[info]             :           :                          :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#112061]
[info]             :           :                          :     :        +- *(26) Project [web_site_sk#1366, web_site_id#1367]
[info]             :           :                          :     :           +- *(26) Filter isnotnull(web_site_sk#1366)
[info]             :           :                          :     :              +- *(26) ColumnarToRow
[info]             :           :                          :     :                 +- BatchScan[web_site_sk#1366, web_site_id#1367] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_site], ReadSchema: struct<web_site_sk:int,web_site_id:string>
[info]             :           :                          :     +- ReusedExchange [i_item_sk#496], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#111944]
[info]             :           :                          +- ReusedExchange [p_promo_sk#589], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#111953]
[info]             :           +- *(65) HashAggregate(keys=[channel#36962], functions=[sum(sales#36968), sum(returns#36969), sum(profit#36970)])
[info]             :              +- Exchange hashpartitioning(channel#36962, 4), true, [id=#113244]
[info]             :                 +- *(64) HashAggregate(keys=[channel#36962], functions=[partial_sum(sales#36968), partial_sum(returns#36969), partial_sum(profit#36970)])
[info]             :                    +- *(64) HashAggregate(keys=[channel#36962, id#36963], functions=[sum(sales#36952), sum(returns#36953), sum(profit#36954)])
[info]             :                       +- ReusedExchange [channel#36962, id#36963, sum#37233, sum#37234, sum#37235], Exchange hashpartitioning(channel#36962, id#36963, 4), true, [id=#112634]
[info]             +- *(100) HashAggregate(keys=[], functions=[sum(sales#36968), sum(returns#36969), sum(profit#36970)])
[info]                +- Exchange SinglePartition, true, [id=#113651]
[info]                   +- *(99) HashAggregate(keys=[], functions=[partial_sum(sales#36968), partial_sum(returns#36969), partial_sum(profit#36970)])
[info]                      +- *(99) HashAggregate(keys=[channel#36962, id#36963], functions=[sum(sales#36952), sum(returns#36953), sum(profit#36954)])
[info]                         +- ReusedExchange [channel#36962, id#36963, sum#37263, sum#37264, sum#37265], Exchange hashpartitioning(channel#36962, id#36963, 4), true, [id=#112634]
[info] 
[info] 
[info]   Stopped after 1 iterations, 1788 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q80a-v2.7                                          1788           1788           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q86a-v2.7
[info] == Physical Plan ==
[info] TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#37417 DESC NULLS LAST,CASE WHEN (lochierarchy#37417 = 0) THEN i_category#508 END ASC NULLS FIRST,rank_within_parent#37413 ASC NULLS FIRST], output=[total_sum#37436,i_category#508,i_class#506,lochierarchy#37417,rank_within_parent#37413])
[info] +- *(20) Project [total_sum#37436, i_category#508, i_class#506, lochierarchy#37417, rank_within_parent#37413]
[info]    +- Window [rank(total_sum#37436) windowspecdefinition(lochierarchy#37417, _w0#37449, total_sum#37436 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#37413], [lochierarchy#37417, _w0#37449], [total_sum#37436 DESC NULLS LAST]
[info]       +- *(19) Sort [lochierarchy#37417 ASC NULLS FIRST, _w0#37449 ASC NULLS FIRST, total_sum#37436 DESC NULLS LAST], false, 0
[info]          +- Exchange hashpartitioning(lochierarchy#37417, _w0#37449, 4), true, [id=#114312]
[info]             +- *(18) HashAggregate(keys=[total_sum#37436, i_category#508, i_class#506, g_category#37415, g_class#37416, lochierarchy#37417], functions=[])
[info]                +- Exchange hashpartitioning(total_sum#37436, i_category#508, i_class#506, g_category#37415, g_class#37416, lochierarchy#37417, 4), true, [id=#114263]
[info]                   +- *(17) HashAggregate(keys=[total_sum#37436, i_category#508, i_class#506, g_category#37415, g_class#37416, lochierarchy#37417], functions=[])
[info]                      +- Union
[info]                         :- *(11) HashAggregate(keys=[total_sum#37436, i_category#508, i_class#506, g_category#37415, g_class#37416, lochierarchy#37417], functions=[])
[info]                         :  +- Exchange hashpartitioning(total_sum#37436, i_category#508, i_class#506, g_category#37415, g_class#37416, lochierarchy#37417, 4), true, [id=#114198]
[info]                         :     +- *(10) HashAggregate(keys=[total_sum#37436, i_category#508, i_class#506, g_category#37415, g_class#37416, lochierarchy#37417], functions=[])
[info]                         :        +- Union
[info]                         :           :- *(4) HashAggregate(keys=[i_category#508, i_class#506], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]                         :           :  +- Exchange hashpartitioning(i_category#508, i_class#506, 4), true, [id=#114005]
[info]                         :           :     +- *(3) HashAggregate(keys=[i_category#508, i_class#506], functions=[partial_sum(UnscaledValue(ws_net_paid#1049))])
[info]                         :           :        +- *(3) Project [ws_net_paid#1049, i_class#506, i_category#508]
[info]                         :           :           +- *(3) BroadcastHashJoin [ws_item_sk#1023], [i_item_sk#496], Inner, BuildRight
[info]                         :           :              :- *(3) Project [ws_item_sk#1023, ws_net_paid#1049]
[info]                         :           :              :  +- *(3) BroadcastHashJoin [ws_sold_date_sk#1054], [d_date_sk#331], Inner, BuildRight
[info]                         :           :              :     :- *(3) Project [ws_item_sk#1023, ws_net_paid#1049, ws_sold_date_sk#1054]
[info]                         :           :              :     :  +- *(3) Filter (isnotnull(ws_sold_date_sk#1054) AND isnotnull(ws_item_sk#1023))
[info]                         :           :              :     :     +- *(3) ColumnarToRow
[info]                         :           :              :     :        +- BatchScan[ws_item_sk#1023, ws_net_paid#1049, ws_sold_date_sk#1054] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/web_sales], ReadSchema: struct<ws_item_sk:int,ws_net_paid:decimal(7,2)>
[info]                         :           :              :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#113990]
[info]                         :           :              :        +- *(1) Project [d_date_sk#331]
[info]                         :           :              :           +- *(1) Filter (((isnotnull(d_month_seq#334) AND (d_month_seq#334 >= 1212)) AND (d_month_seq#334 <= 1223)) AND isnotnull(d_date_sk#331))
[info]                         :           :              :              +- *(1) ColumnarToRow
[info]                         :           :              :                 +- BatchScan[d_date_sk#331, d_month_seq#334] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_month_seq:int>
[info]                         :           :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#113999]
[info]                         :           :                 +- *(2) Project [i_item_sk#496, i_class#506, i_category#508]
[info]                         :           :                    +- *(2) Filter isnotnull(i_item_sk#496)
[info]                         :           :                       +- *(2) ColumnarToRow
[info]                         :           :                          +- BatchScan[i_item_sk#496, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
[info]                         :           +- *(9) HashAggregate(keys=[i_category#508], functions=[sum(total_sum#37414)])
[info]                         :              +- Exchange hashpartitioning(i_category#508, 4), true, [id=#114190]
[info]                         :                 +- *(8) HashAggregate(keys=[i_category#508], functions=[partial_sum(total_sum#37414)])
[info]                         :                    +- *(8) HashAggregate(keys=[i_category#508, i_class#506], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]                         :                       +- ReusedExchange [i_category#508, i_class#506, sum#37490L], Exchange hashpartitioning(i_category#508, i_class#506, 4), true, [id=#114005]
[info]                         +- *(16) HashAggregate(keys=[], functions=[sum(total_sum#37414)])
[info]                            +- Exchange SinglePartition, true, [id=#114255]
[info]                               +- *(15) HashAggregate(keys=[], functions=[partial_sum(total_sum#37414)])
[info]                                  +- *(15) HashAggregate(keys=[i_category#508, i_class#506], functions=[sum(UnscaledValue(ws_net_paid#1049))])
[info]                                     +- ReusedExchange [i_category#508, i_class#506, sum#37494L], Exchange hashpartitioning(i_category#508, i_class#506, 4), true, [id=#114005]
[info] 
[info] 
[info]   Stopped after 1 iterations, 286 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q86a-v2.7                                           287            287           0          0.0      Infinity       1.0X
[info] 
[info] Running benchmark: TPCDS Snappy
[info]   Running case: q98-v2.7
[info] == Physical Plan ==
[info] *(7) Sort [i_category#508 ASC NULLS FIRST, i_class#506 ASC NULLS FIRST, i_item_id#497 ASC NULLS FIRST, i_item_desc#500 ASC NULLS FIRST, revenueratio#37525 ASC NULLS FIRST], true, 0
[info] +- Exchange rangepartitioning(i_category#508 ASC NULLS FIRST, i_class#506 ASC NULLS FIRST, i_item_id#497 ASC NULLS FIRST, i_item_desc#500 ASC NULLS FIRST, revenueratio#37525 ASC NULLS FIRST, 4), true, [id=#114458]
[info]    +- *(6) Project [i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, itemrevenue#37524, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#37530) * 100.00), DecimalType(21,2), true) as decimal(27,2))) / promote_precision(_we0#37532)), DecimalType(38,17), true) AS revenueratio#37525]
[info]       +- Window [sum(_w1#37531) windowspecdefinition(i_class#506, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#37532], [i_class#506]
[info]          +- *(5) Sort [i_class#506 ASC NULLS FIRST], false, 0
[info]             +- Exchange hashpartitioning(i_class#506, 4), true, [id=#114450]
[info]                +- *(4) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                   +- Exchange hashpartitioning(i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501, 4), true, [id=#114446]
[info]                      +- *(3) HashAggregate(keys=[i_item_id#497, i_item_desc#500, i_category#508, i_class#506, i_current_price#501], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#1178))])
[info]                         +- *(3) Project [ss_ext_sales_price#1178, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                            +- *(3) BroadcastHashJoin [ss_sold_date_sk#1186], [d_date_sk#331], Inner, BuildRight
[info]                               :- *(3) Project [ss_ext_sales_price#1178, ss_sold_date_sk#1186, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                               :  +- *(3) BroadcastHashJoin [ss_item_sk#1165], [i_item_sk#496], Inner, BuildRight
[info]                               :     :- *(3) Project [ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186]
[info]                               :     :  +- *(3) Filter (isnotnull(ss_item_sk#1165) AND isnotnull(ss_sold_date_sk#1186))
[info]                               :     :     +- *(3) ColumnarToRow
[info]                               :     :        +- BatchScan[ss_item_sk#1165, ss_ext_sales_price#1178, ss_sold_date_sk#1186] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/store_sales], ReadSchema: struct<ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
[info]                               :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#114431]
[info]                               :        +- *(1) Project [i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508]
[info]                               :           +- *(1) Filter (i_category#508 IN (Sports,Books,Home) AND isnotnull(i_item_sk#496))
[info]                               :              +- *(1) ColumnarToRow
[info]                               :                 +- BatchScan[i_item_sk#496, i_item_id#497, i_item_desc#500, i_current_price#501, i_class#506, i_category#508] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/item], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
[info]                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#114440]
[info]                                  +- *(2) Project [d_date_sk#331]
[info]                                     +- *(2) Filter (((isnotnull(d_date#333) AND (d_date#333 >= 10644)) AND (d_date#333 <= 10674)) AND isnotnull(d_date_sk#331))
[info]                                        +- *(2) ColumnarToRow
[info]                                           +- BatchScan[d_date_sk#331, d_date#333] ParquetScan Location: InMemoryFileIndex[file:/Users/petertoth/git/apache/spark-sql-perf/data5/date_dim], ReadSchema: struct<d_date_sk:int,d_date:date>
[info] 
[info] 
[info]   Stopped after 1 iterations, 104 ms
[info] 
[info] OpenJDK 64-Bit Server VM 1.8.0_212-b04 on Mac OS X 10.14.6
[info] Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
[info] TPCDS Snappy:                             Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative
[info] ------------------------------------------------------------------------------------------------------------------------
[info] q98-v2.7                                            104            104           0          0.0      Infinity       1.0X
[info] 
[success] Total time: 458 s, completed Nov 18, 2019 9:33:46 AM
